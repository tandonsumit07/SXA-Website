---
ID: "c99856e5-2797-4071-b55b-8f66d2c84683"
Parent: "6ce5b4f5-1498-4b16-8233-af8569eaefce"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: /sitecore/media library/Themes/SitecoreShades/StandBlog/Site theme name/Scripts/accordions
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/C99856E527974071B55B8F66D2C84683.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "ba0b7b33-a537-401e-a5f6-e40bb2d75831"
  Value: LyohIGpRdWVyeSBVSSAtIHYxLjExLjIgLSAyMDE0LTEwLTE2DQoqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiogSW5jbHVkZXM6IGNvcmUuanMsIHdpZGdldC5qcywgbW91c2UuanMsIHBvc2l0aW9uLmpzLCBhY2NvcmRpb24uanMsIGF1dG9jb21wbGV0ZS5qcywgYnV0dG9uLmpzLCBkYXRlcGlja2VyLmpzLCBkaWFsb2cuanMsIGRyYWdnYWJsZS5qcywgZHJvcHBhYmxlLmpzLCBlZmZlY3QuanMsIGVmZmVjdC1ibGluZC5qcywgZWZmZWN0LWJvdW5jZS5qcywgZWZmZWN0LWNsaXAuanMsIGVmZmVjdC1kcm9wLmpzLCBlZmZlY3QtZXhwbG9kZS5qcywgZWZmZWN0LWZhZGUuanMsIGVmZmVjdC1mb2xkLmpzLCBlZmZlY3QtaGlnaGxpZ2h0LmpzLCBlZmZlY3QtcHVmZi5qcywgZWZmZWN0LXB1bHNhdGUuanMsIGVmZmVjdC1zY2FsZS5qcywgZWZmZWN0LXNoYWtlLmpzLCBlZmZlY3Qtc2l6ZS5qcywgZWZmZWN0LXNsaWRlLmpzLCBlZmZlY3QtdHJhbnNmZXIuanMsIG1lbnUuanMsIHByb2dyZXNzYmFyLmpzLCByZXNpemFibGUuanMsIHNlbGVjdGFibGUuanMsIHNlbGVjdG1lbnUuanMsIHNsaWRlci5qcywgc29ydGFibGUuanMsIHNwaW5uZXIuanMsIHRhYnMuanMsIHRvb2x0aXAuanMNCiogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yczsgTGljZW5zZWQgTUlUICovDQoNCihmdW5jdGlvbiggZmFjdG9yeSApIHsNCglpZiAoIHR5cGVvZiBkZWZpbmUgPT09ICJmdW5jdGlvbiIgJiYgZGVmaW5lLmFtZCApIHsNCg0KCQkvLyBBTUQuIFJlZ2lzdGVyIGFzIGFuIGFub255bW91cyBtb2R1bGUuDQoJCWRlZmluZShbICJqcXVlcnkiIF0sIGZhY3RvcnkgKTsNCgl9IGVsc2Ugew0KDQoJCS8vIEJyb3dzZXIgZ2xvYmFscw0KCQlmYWN0b3J5KCBqUXVlcnkgKTsNCgl9DQp9KGZ1bmN0aW9uKCAkICkgew0KLyohDQogKiBqUXVlcnkgVUkgQ29yZSAxLjExLjINCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgMjAxNCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKg0KICogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vY2F0ZWdvcnkvdWktY29yZS8NCiAqLw0KDQoNCi8vICQudWkgbWlnaHQgZXhpc3QgZnJvbSBjb21wb25lbnRzIHdpdGggbm8gZGVwZW5kZW5jaWVzLCBlLmcuLCAkLnVpLnBvc2l0aW9uDQokLnVpID0gJC51aSB8fCB7fTsNCg0KJC5leHRlbmQoICQudWksIHsNCgl2ZXJzaW9uOiAiMS4xMS4yIiwNCg0KCWtleUNvZGU6IHsNCgkJQkFDS1NQQUNFOiA4LA0KCQlDT01NQTogMTg4LA0KCQlERUxFVEU6IDQ2LA0KCQlET1dOOiA0MCwNCgkJRU5EOiAzNSwNCgkJRU5URVI6IDEzLA0KCQlFU0NBUEU6IDI3LA0KCQlIT01FOiAzNiwNCgkJTEVGVDogMzcsDQoJCVBBR0VfRE9XTjogMzQsDQoJCVBBR0VfVVA6IDMzLA0KCQlQRVJJT0Q6IDE5MCwNCgkJUklHSFQ6IDM5LA0KCQlTUEFDRTogMzIsDQoJCVRBQjogOSwNCgkJVVA6IDM4DQoJfQ0KfSk7DQoNCi8vIHBsdWdpbnMNCiQuZm4uZXh0ZW5kKHsNCglzY3JvbGxQYXJlbnQ6IGZ1bmN0aW9uKCBpbmNsdWRlSGlkZGVuICkgew0KCQl2YXIgcG9zaXRpb24gPSB0aGlzLmNzcyggInBvc2l0aW9uIiApLA0KCQkJZXhjbHVkZVN0YXRpY1BhcmVudCA9IHBvc2l0aW9uID09PSAiYWJzb2x1dGUiLA0KCQkJb3ZlcmZsb3dSZWdleCA9IGluY2x1ZGVIaWRkZW4gPyAvKGF1dG98c2Nyb2xsfGhpZGRlbikvIDogLyhhdXRvfHNjcm9sbCkvLA0KCQkJc2Nyb2xsUGFyZW50ID0gdGhpcy5wYXJlbnRzKCkuZmlsdGVyKCBmdW5jdGlvbigpIHsNCgkJCQl2YXIgcGFyZW50ID0gJCggdGhpcyApOw0KCQkJCWlmICggZXhjbHVkZVN0YXRpY1BhcmVudCAmJiBwYXJlbnQuY3NzKCAicG9zaXRpb24iICkgPT09ICJzdGF0aWMiICkgew0KCQkJCQlyZXR1cm4gZmFsc2U7DQoJCQkJfQ0KCQkJCXJldHVybiBvdmVyZmxvd1JlZ2V4LnRlc3QoIHBhcmVudC5jc3MoICJvdmVyZmxvdyIgKSArIHBhcmVudC5jc3MoICJvdmVyZmxvdy15IiApICsgcGFyZW50LmNzcyggIm92ZXJmbG93LXgiICkgKTsNCgkJCX0pLmVxKCAwICk7DQoNCgkJcmV0dXJuIHBvc2l0aW9uID09PSAiZml4ZWQiIHx8ICFzY3JvbGxQYXJlbnQubGVuZ3RoID8gJCggdGhpc1sgMCBdLm93bmVyRG9jdW1lbnQgfHwgZG9jdW1lbnQgKSA6IHNjcm9sbFBhcmVudDsNCgl9LA0KDQoJdW5pcXVlSWQ6IChmdW5jdGlvbigpIHsNCgkJdmFyIHV1aWQgPSAwOw0KDQoJCXJldHVybiBmdW5jdGlvbigpIHsNCgkJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJaWYgKCAhdGhpcy5pZCApIHsNCgkJCQkJdGhpcy5pZCA9ICJ1aS1pZC0iICsgKCArK3V1aWQgKTsNCgkJCQl9DQoJCQl9KTsNCgkJfTsNCgl9KSgpLA0KDQoJcmVtb3ZlVW5pcXVlSWQ6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJaWYgKCAvXnVpLWlkLVxkKyQvLnRlc3QoIHRoaXMuaWQgKSApIHsNCgkJCQkkKCB0aGlzICkucmVtb3ZlQXR0ciggImlkIiApOw0KCQkJfQ0KCQl9KTsNCgl9DQp9KTsNCg0KLy8gc2VsZWN0b3JzDQpmdW5jdGlvbiBmb2N1c2FibGUoIGVsZW1lbnQsIGlzVGFiSW5kZXhOb3ROYU4gKSB7DQoJdmFyIG1hcCwgbWFwTmFtZSwgaW1nLA0KCQlub2RlTmFtZSA9IGVsZW1lbnQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsNCglpZiAoICJhcmVhIiA9PT0gbm9kZU5hbWUgKSB7DQoJCW1hcCA9IGVsZW1lbnQucGFyZW50Tm9kZTsNCgkJbWFwTmFtZSA9IG1hcC5uYW1lOw0KCQlpZiAoICFlbGVtZW50LmhyZWYgfHwgIW1hcE5hbWUgfHwgbWFwLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICJtYXAiICkgew0KCQkJcmV0dXJuIGZhbHNlOw0KCQl9DQoJCWltZyA9ICQoICJpbWdbdXNlbWFwPScjIiArIG1hcE5hbWUgKyAiJ10iIClbIDAgXTsNCgkJcmV0dXJuICEhaW1nICYmIHZpc2libGUoIGltZyApOw0KCX0NCglyZXR1cm4gKCAvaW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbnxvYmplY3QvLnRlc3QoIG5vZGVOYW1lICkgPw0KCQkhZWxlbWVudC5kaXNhYmxlZCA6DQoJCSJhIiA9PT0gbm9kZU5hbWUgPw0KCQkJZWxlbWVudC5ocmVmIHx8IGlzVGFiSW5kZXhOb3ROYU4gOg0KCQkJaXNUYWJJbmRleE5vdE5hTikgJiYNCgkJLy8gdGhlIGVsZW1lbnQgYW5kIGFsbCBvZiBpdHMgYW5jZXN0b3JzIG11c3QgYmUgdmlzaWJsZQ0KCQl2aXNpYmxlKCBlbGVtZW50ICk7DQp9DQoNCmZ1bmN0aW9uIHZpc2libGUoIGVsZW1lbnQgKSB7DQoJcmV0dXJuICQuZXhwci5maWx0ZXJzLnZpc2libGUoIGVsZW1lbnQgKSAmJg0KCQkhJCggZWxlbWVudCApLnBhcmVudHMoKS5hZGRCYWNrKCkuZmlsdGVyKGZ1bmN0aW9uKCkgew0KCQkJcmV0dXJuICQuY3NzKCB0aGlzLCAidmlzaWJpbGl0eSIgKSA9PT0gImhpZGRlbiI7DQoJCX0pLmxlbmd0aDsNCn0NCg0KJC5leHRlbmQoICQuZXhwclsgIjoiIF0sIHsNCglkYXRhOiAkLmV4cHIuY3JlYXRlUHNldWRvID8NCgkJJC5leHByLmNyZWF0ZVBzZXVkbyhmdW5jdGlvbiggZGF0YU5hbWUgKSB7DQoJCQlyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7DQoJCQkJcmV0dXJuICEhJC5kYXRhKCBlbGVtLCBkYXRhTmFtZSApOw0KCQkJfTsNCgkJfSkgOg0KCQkvLyBzdXBwb3J0OiBqUXVlcnkgPDEuOA0KCQlmdW5jdGlvbiggZWxlbSwgaSwgbWF0Y2ggKSB7DQoJCQlyZXR1cm4gISEkLmRhdGEoIGVsZW0sIG1hdGNoWyAzIF0gKTsNCgkJfSwNCg0KCWZvY3VzYWJsZTogZnVuY3Rpb24oIGVsZW1lbnQgKSB7DQoJCXJldHVybiBmb2N1c2FibGUoIGVsZW1lbnQsICFpc05hTiggJC5hdHRyKCBlbGVtZW50LCAidGFiaW5kZXgiICkgKSApOw0KCX0sDQoNCgl0YWJiYWJsZTogZnVuY3Rpb24oIGVsZW1lbnQgKSB7DQoJCXZhciB0YWJJbmRleCA9ICQuYXR0ciggZWxlbWVudCwgInRhYmluZGV4IiApLA0KCQkJaXNUYWJJbmRleE5hTiA9IGlzTmFOKCB0YWJJbmRleCApOw0KCQlyZXR1cm4gKCBpc1RhYkluZGV4TmFOIHx8IHRhYkluZGV4ID49IDAgKSAmJiBmb2N1c2FibGUoIGVsZW1lbnQsICFpc1RhYkluZGV4TmFOICk7DQoJfQ0KfSk7DQoNCi8vIHN1cHBvcnQ6IGpRdWVyeSA8MS44DQppZiAoICEkKCAiPGE+IiApLm91dGVyV2lkdGgoIDEgKS5qcXVlcnkgKSB7DQoJJC5lYWNoKCBbICJXaWR0aCIsICJIZWlnaHQiIF0sIGZ1bmN0aW9uKCBpLCBuYW1lICkgew0KCQl2YXIgc2lkZSA9IG5hbWUgPT09ICJXaWR0aCIgPyBbICJMZWZ0IiwgIlJpZ2h0IiBdIDogWyAiVG9wIiwgIkJvdHRvbSIgXSwNCgkJCXR5cGUgPSBuYW1lLnRvTG93ZXJDYXNlKCksDQoJCQlvcmlnID0gew0KCQkJCWlubmVyV2lkdGg6ICQuZm4uaW5uZXJXaWR0aCwNCgkJCQlpbm5lckhlaWdodDogJC5mbi5pbm5lckhlaWdodCwNCgkJCQlvdXRlcldpZHRoOiAkLmZuLm91dGVyV2lkdGgsDQoJCQkJb3V0ZXJIZWlnaHQ6ICQuZm4ub3V0ZXJIZWlnaHQNCgkJCX07DQoNCgkJZnVuY3Rpb24gcmVkdWNlKCBlbGVtLCBzaXplLCBib3JkZXIsIG1hcmdpbiApIHsNCgkJCSQuZWFjaCggc2lkZSwgZnVuY3Rpb24oKSB7DQoJCQkJc2l6ZSAtPSBwYXJzZUZsb2F0KCAkLmNzcyggZWxlbSwgInBhZGRpbmciICsgdGhpcyApICkgfHwgMDsNCgkJCQlpZiAoIGJvcmRlciApIHsNCgkJCQkJc2l6ZSAtPSBwYXJzZUZsb2F0KCAkLmNzcyggZWxlbSwgImJvcmRlciIgKyB0aGlzICsgIldpZHRoIiApICkgfHwgMDsNCgkJCQl9DQoJCQkJaWYgKCBtYXJnaW4gKSB7DQoJCQkJCXNpemUgLT0gcGFyc2VGbG9hdCggJC5jc3MoIGVsZW0sICJtYXJnaW4iICsgdGhpcyApICkgfHwgMDsNCgkJCQl9DQoJCQl9KTsNCgkJCXJldHVybiBzaXplOw0KCQl9DQoNCgkJJC5mblsgImlubmVyIiArIG5hbWUgXSA9IGZ1bmN0aW9uKCBzaXplICkgew0KCQkJaWYgKCBzaXplID09PSB1bmRlZmluZWQgKSB7DQoJCQkJcmV0dXJuIG9yaWdbICJpbm5lciIgKyBuYW1lIF0uY2FsbCggdGhpcyApOw0KCQkJfQ0KDQoJCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJCSQoIHRoaXMgKS5jc3MoIHR5cGUsIHJlZHVjZSggdGhpcywgc2l6ZSApICsgInB4IiApOw0KCQkJfSk7DQoJCX07DQoNCgkJJC5mblsgIm91dGVyIiArIG5hbWVdID0gZnVuY3Rpb24oIHNpemUsIG1hcmdpbiApIHsNCgkJCWlmICggdHlwZW9mIHNpemUgIT09ICJudW1iZXIiICkgew0KCQkJCXJldHVybiBvcmlnWyAib3V0ZXIiICsgbmFtZSBdLmNhbGwoIHRoaXMsIHNpemUgKTsNCgkJCX0NCg0KCQkJcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHsNCgkJCQkkKCB0aGlzKS5jc3MoIHR5cGUsIHJlZHVjZSggdGhpcywgc2l6ZSwgdHJ1ZSwgbWFyZ2luICkgKyAicHgiICk7DQoJCQl9KTsNCgkJfTsNCgl9KTsNCn0NCg0KLy8gc3VwcG9ydDogalF1ZXJ5IDwxLjgNCmlmICggISQuZm4uYWRkQmFjayApIHsNCgkkLmZuLmFkZEJhY2sgPSBmdW5jdGlvbiggc2VsZWN0b3IgKSB7DQoJCXJldHVybiB0aGlzLmFkZCggc2VsZWN0b3IgPT0gbnVsbCA/DQoJCQl0aGlzLnByZXZPYmplY3QgOiB0aGlzLnByZXZPYmplY3QuZmlsdGVyKCBzZWxlY3RvciApDQoJCSk7DQoJfTsNCn0NCg0KLy8gc3VwcG9ydDogalF1ZXJ5IDEuNi4xLCAxLjYuMiAoaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvOTQxMykNCmlmICggJCggIjxhPiIgKS5kYXRhKCAiYS1iIiwgImEiICkucmVtb3ZlRGF0YSggImEtYiIgKS5kYXRhKCAiYS1iIiApICkgew0KCSQuZm4ucmVtb3ZlRGF0YSA9IChmdW5jdGlvbiggcmVtb3ZlRGF0YSApIHsNCgkJcmV0dXJuIGZ1bmN0aW9uKCBrZXkgKSB7DQoJCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7DQoJCQkJcmV0dXJuIHJlbW92ZURhdGEuY2FsbCggdGhpcywgJC5jYW1lbENhc2UoIGtleSApICk7DQoJCQl9IGVsc2Ugew0KCQkJCXJldHVybiByZW1vdmVEYXRhLmNhbGwoIHRoaXMgKTsNCgkJCX0NCgkJfTsNCgl9KSggJC5mbi5yZW1vdmVEYXRhICk7DQp9DQoNCi8vIGRlcHJlY2F0ZWQNCiQudWkuaWUgPSAhIS9tc2llIFtcdy5dKy8uZXhlYyggbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpICk7DQoNCiQuZm4uZXh0ZW5kKHsNCglmb2N1czogKGZ1bmN0aW9uKCBvcmlnICkgew0KCQlyZXR1cm4gZnVuY3Rpb24oIGRlbGF5LCBmbiApIHsNCgkJCXJldHVybiB0eXBlb2YgZGVsYXkgPT09ICJudW1iZXIiID8NCgkJCQl0aGlzLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJCXZhciBlbGVtID0gdGhpczsNCgkJCQkJc2V0VGltZW91dChmdW5jdGlvbigpIHsNCgkJCQkJCSQoIGVsZW0gKS5mb2N1cygpOw0KCQkJCQkJaWYgKCBmbiApIHsNCgkJCQkJCQlmbi5jYWxsKCBlbGVtICk7DQoJCQkJCQl9DQoJCQkJCX0sIGRlbGF5ICk7DQoJCQkJfSkgOg0KCQkJCW9yaWcuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOw0KCQl9Ow0KCX0pKCAkLmZuLmZvY3VzICksDQoNCglkaXNhYmxlU2VsZWN0aW9uOiAoZnVuY3Rpb24oKSB7DQoJCXZhciBldmVudFR5cGUgPSAib25zZWxlY3RzdGFydCIgaW4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImRpdiIgKSA/DQoJCQkic2VsZWN0c3RhcnQiIDoNCgkJCSJtb3VzZWRvd24iOw0KDQoJCXJldHVybiBmdW5jdGlvbigpIHsNCgkJCXJldHVybiB0aGlzLmJpbmQoIGV2ZW50VHlwZSArICIudWktZGlzYWJsZVNlbGVjdGlvbiIsIGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQkJfSk7DQoJCX07DQoJfSkoKSwNCg0KCWVuYWJsZVNlbGVjdGlvbjogZnVuY3Rpb24oKSB7DQoJCXJldHVybiB0aGlzLnVuYmluZCggIi51aS1kaXNhYmxlU2VsZWN0aW9uIiApOw0KCX0sDQoNCgl6SW5kZXg6IGZ1bmN0aW9uKCB6SW5kZXggKSB7DQoJCWlmICggekluZGV4ICE9PSB1bmRlZmluZWQgKSB7DQoJCQlyZXR1cm4gdGhpcy5jc3MoICJ6SW5kZXgiLCB6SW5kZXggKTsNCgkJfQ0KDQoJCWlmICggdGhpcy5sZW5ndGggKSB7DQoJCQl2YXIgZWxlbSA9ICQoIHRoaXNbIDAgXSApLCBwb3NpdGlvbiwgdmFsdWU7DQoJCQl3aGlsZSAoIGVsZW0ubGVuZ3RoICYmIGVsZW1bIDAgXSAhPT0gZG9jdW1lbnQgKSB7DQoJCQkJLy8gSWdub3JlIHotaW5kZXggaWYgcG9zaXRpb24gaXMgc2V0IHRvIGEgdmFsdWUgd2hlcmUgei1pbmRleCBpcyBpZ25vcmVkIGJ5IHRoZSBicm93c2VyDQoJCQkJLy8gVGhpcyBtYWtlcyBiZWhhdmlvciBvZiB0aGlzIGZ1bmN0aW9uIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzDQoJCQkJLy8gV2ViS2l0IGFsd2F5cyByZXR1cm5zIGF1dG8gaWYgdGhlIGVsZW1lbnQgaXMgcG9zaXRpb25lZA0KCQkJCXBvc2l0aW9uID0gZWxlbS5jc3MoICJwb3NpdGlvbiIgKTsNCgkJCQlpZiAoIHBvc2l0aW9uID09PSAiYWJzb2x1dGUiIHx8IHBvc2l0aW9uID09PSAicmVsYXRpdmUiIHx8IHBvc2l0aW9uID09PSAiZml4ZWQiICkgew0KCQkJCQkvLyBJRSByZXR1cm5zIDAgd2hlbiB6SW5kZXggaXMgbm90IHNwZWNpZmllZA0KCQkJCQkvLyBvdGhlciBicm93c2VycyByZXR1cm4gYSBzdHJpbmcNCgkJCQkJLy8gd2UgaWdub3JlIHRoZSBjYXNlIG9mIG5lc3RlZCBlbGVtZW50cyB3aXRoIGFuIGV4cGxpY2l0IHZhbHVlIG9mIDANCgkJCQkJLy8gPGRpdiBzdHlsZT0iei1pbmRleDogLTEwOyI+PGRpdiBzdHlsZT0iei1pbmRleDogMDsiPjwvZGl2PjwvZGl2Pg0KCQkJCQl2YWx1ZSA9IHBhcnNlSW50KCBlbGVtLmNzcyggInpJbmRleCIgKSwgMTAgKTsNCgkJCQkJaWYgKCAhaXNOYU4oIHZhbHVlICkgJiYgdmFsdWUgIT09IDAgKSB7DQoJCQkJCQlyZXR1cm4gdmFsdWU7DQoJCQkJCX0NCgkJCQl9DQoJCQkJZWxlbSA9IGVsZW0ucGFyZW50KCk7DQoJCQl9DQoJCX0NCg0KCQlyZXR1cm4gMDsNCgl9DQp9KTsNCg0KLy8gJC51aS5wbHVnaW4gaXMgZGVwcmVjYXRlZC4gVXNlICQud2lkZ2V0KCkgZXh0ZW5zaW9ucyBpbnN0ZWFkLg0KJC51aS5wbHVnaW4gPSB7DQoJYWRkOiBmdW5jdGlvbiggbW9kdWxlLCBvcHRpb24sIHNldCApIHsNCgkJdmFyIGksDQoJCQlwcm90byA9ICQudWlbIG1vZHVsZSBdLnByb3RvdHlwZTsNCgkJZm9yICggaSBpbiBzZXQgKSB7DQoJCQlwcm90by5wbHVnaW5zWyBpIF0gPSBwcm90by5wbHVnaW5zWyBpIF0gfHwgW107DQoJCQlwcm90by5wbHVnaW5zWyBpIF0ucHVzaCggWyBvcHRpb24sIHNldFsgaSBdIF0gKTsNCgkJfQ0KCX0sDQoJY2FsbDogZnVuY3Rpb24oIGluc3RhbmNlLCBuYW1lLCBhcmdzLCBhbGxvd0Rpc2Nvbm5lY3RlZCApIHsNCgkJdmFyIGksDQoJCQlzZXQgPSBpbnN0YW5jZS5wbHVnaW5zWyBuYW1lIF07DQoNCgkJaWYgKCAhc2V0ICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJaWYgKCAhYWxsb3dEaXNjb25uZWN0ZWQgJiYgKCAhaW5zdGFuY2UuZWxlbWVudFsgMCBdLnBhcmVudE5vZGUgfHwgaW5zdGFuY2UuZWxlbWVudFsgMCBdLnBhcmVudE5vZGUubm9kZVR5cGUgPT09IDExICkgKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQlmb3IgKCBpID0gMDsgaSA8IHNldC5sZW5ndGg7IGkrKyApIHsNCgkJCWlmICggaW5zdGFuY2Uub3B0aW9uc1sgc2V0WyBpIF1bIDAgXSBdICkgew0KCQkJCXNldFsgaSBdWyAxIF0uYXBwbHkoIGluc3RhbmNlLmVsZW1lbnQsIGFyZ3MgKTsNCgkJCX0NCgkJfQ0KCX0NCn07DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgV2lkZ2V0IDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9qUXVlcnkud2lkZ2V0Lw0KICovDQoNCg0KdmFyIHdpZGdldF91dWlkID0gMCwNCgl3aWRnZXRfc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7DQoNCiQuY2xlYW5EYXRhID0gKGZ1bmN0aW9uKCBvcmlnICkgew0KCXJldHVybiBmdW5jdGlvbiggZWxlbXMgKSB7DQoJCXZhciBldmVudHMsIGVsZW0sIGk7DQoJCWZvciAoIGkgPSAwOyAoZWxlbSA9IGVsZW1zW2ldKSAhPSBudWxsOyBpKysgKSB7DQoJCQl0cnkgew0KDQoJCQkJLy8gT25seSB0cmlnZ2VyIHJlbW92ZSB3aGVuIG5lY2Vzc2FyeSB0byBzYXZlIHRpbWUNCgkJCQlldmVudHMgPSAkLl9kYXRhKCBlbGVtLCAiZXZlbnRzIiApOw0KCQkJCWlmICggZXZlbnRzICYmIGV2ZW50cy5yZW1vdmUgKSB7DQoJCQkJCSQoIGVsZW0gKS50cmlnZ2VySGFuZGxlciggInJlbW92ZSIgKTsNCgkJCQl9DQoNCgkJCS8vIGh0dHA6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzgyMzUNCgkJCX0gY2F0Y2ggKCBlICkge30NCgkJfQ0KCQlvcmlnKCBlbGVtcyApOw0KCX07DQp9KSggJC5jbGVhbkRhdGEgKTsNCg0KJC53aWRnZXQgPSBmdW5jdGlvbiggbmFtZSwgYmFzZSwgcHJvdG90eXBlICkgew0KCXZhciBmdWxsTmFtZSwgZXhpc3RpbmdDb25zdHJ1Y3RvciwgY29uc3RydWN0b3IsIGJhc2VQcm90b3R5cGUsDQoJCS8vIHByb3hpZWRQcm90b3R5cGUgYWxsb3dzIHRoZSBwcm92aWRlZCBwcm90b3R5cGUgdG8gcmVtYWluIHVubW9kaWZpZWQNCgkJLy8gc28gdGhhdCBpdCBjYW4gYmUgdXNlZCBhcyBhIG1peGluIGZvciBtdWx0aXBsZSB3aWRnZXRzICgjODg3NikNCgkJcHJveGllZFByb3RvdHlwZSA9IHt9LA0KCQluYW1lc3BhY2UgPSBuYW1lLnNwbGl0KCAiLiIgKVsgMCBdOw0KDQoJbmFtZSA9IG5hbWUuc3BsaXQoICIuIiApWyAxIF07DQoJZnVsbE5hbWUgPSBuYW1lc3BhY2UgKyAiLSIgKyBuYW1lOw0KDQoJaWYgKCAhcHJvdG90eXBlICkgew0KCQlwcm90b3R5cGUgPSBiYXNlOw0KCQliYXNlID0gJC5XaWRnZXQ7DQoJfQ0KDQoJLy8gY3JlYXRlIHNlbGVjdG9yIGZvciBwbHVnaW4NCgkkLmV4cHJbICI6IiBdWyBmdWxsTmFtZS50b0xvd2VyQ2FzZSgpIF0gPSBmdW5jdGlvbiggZWxlbSApIHsNCgkJcmV0dXJuICEhJC5kYXRhKCBlbGVtLCBmdWxsTmFtZSApOw0KCX07DQoNCgkkWyBuYW1lc3BhY2UgXSA9ICRbIG5hbWVzcGFjZSBdIHx8IHt9Ow0KCWV4aXN0aW5nQ29uc3RydWN0b3IgPSAkWyBuYW1lc3BhY2UgXVsgbmFtZSBdOw0KCWNvbnN0cnVjdG9yID0gJFsgbmFtZXNwYWNlIF1bIG5hbWUgXSA9IGZ1bmN0aW9uKCBvcHRpb25zLCBlbGVtZW50ICkgew0KCQkvLyBhbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgIm5ldyIga2V5d29yZA0KCQlpZiAoICF0aGlzLl9jcmVhdGVXaWRnZXQgKSB7DQoJCQlyZXR1cm4gbmV3IGNvbnN0cnVjdG9yKCBvcHRpb25zLCBlbGVtZW50ICk7DQoJCX0NCg0KCQkvLyBhbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgaW5pdGlhbGl6aW5nIGZvciBzaW1wbGUgaW5oZXJpdGFuY2UNCgkJLy8gbXVzdCB1c2UgIm5ldyIga2V5d29yZCAodGhlIGNvZGUgYWJvdmUgYWx3YXlzIHBhc3NlcyBhcmdzKQ0KCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7DQoJCQl0aGlzLl9jcmVhdGVXaWRnZXQoIG9wdGlvbnMsIGVsZW1lbnQgKTsNCgkJfQ0KCX07DQoJLy8gZXh0ZW5kIHdpdGggdGhlIGV4aXN0aW5nIGNvbnN0cnVjdG9yIHRvIGNhcnJ5IG92ZXIgYW55IHN0YXRpYyBwcm9wZXJ0aWVzDQoJJC5leHRlbmQoIGNvbnN0cnVjdG9yLCBleGlzdGluZ0NvbnN0cnVjdG9yLCB7DQoJCXZlcnNpb246IHByb3RvdHlwZS52ZXJzaW9uLA0KCQkvLyBjb3B5IHRoZSBvYmplY3QgdXNlZCB0byBjcmVhdGUgdGhlIHByb3RvdHlwZSBpbiBjYXNlIHdlIG5lZWQgdG8NCgkJLy8gcmVkZWZpbmUgdGhlIHdpZGdldCBsYXRlcg0KCQlfcHJvdG86ICQuZXh0ZW5kKCB7fSwgcHJvdG90eXBlICksDQoJCS8vIHRyYWNrIHdpZGdldHMgdGhhdCBpbmhlcml0IGZyb20gdGhpcyB3aWRnZXQgaW4gY2FzZSB0aGlzIHdpZGdldCBpcw0KCQkvLyByZWRlZmluZWQgYWZ0ZXIgYSB3aWRnZXQgaW5oZXJpdHMgZnJvbSBpdA0KCQlfY2hpbGRDb25zdHJ1Y3RvcnM6IFtdDQoJfSk7DQoNCgliYXNlUHJvdG90eXBlID0gbmV3IGJhc2UoKTsNCgkvLyB3ZSBuZWVkIHRvIG1ha2UgdGhlIG9wdGlvbnMgaGFzaCBhIHByb3BlcnR5IGRpcmVjdGx5IG9uIHRoZSBuZXcgaW5zdGFuY2UNCgkvLyBvdGhlcndpc2Ugd2UnbGwgbW9kaWZ5IHRoZSBvcHRpb25zIGhhc2ggb24gdGhlIHByb3RvdHlwZSB0aGF0IHdlJ3JlDQoJLy8gaW5oZXJpdGluZyBmcm9tDQoJYmFzZVByb3RvdHlwZS5vcHRpb25zID0gJC53aWRnZXQuZXh0ZW5kKCB7fSwgYmFzZVByb3RvdHlwZS5vcHRpb25zICk7DQoJJC5lYWNoKCBwcm90b3R5cGUsIGZ1bmN0aW9uKCBwcm9wLCB2YWx1ZSApIHsNCgkJaWYgKCAhJC5pc0Z1bmN0aW9uKCB2YWx1ZSApICkgew0KCQkJcHJveGllZFByb3RvdHlwZVsgcHJvcCBdID0gdmFsdWU7DQoJCQlyZXR1cm47DQoJCX0NCgkJcHJveGllZFByb3RvdHlwZVsgcHJvcCBdID0gKGZ1bmN0aW9uKCkgew0KCQkJdmFyIF9zdXBlciA9IGZ1bmN0aW9uKCkgew0KCQkJCQlyZXR1cm4gYmFzZS5wcm90b3R5cGVbIHByb3AgXS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7DQoJCQkJfSwNCgkJCQlfc3VwZXJBcHBseSA9IGZ1bmN0aW9uKCBhcmdzICkgew0KCQkJCQlyZXR1cm4gYmFzZS5wcm90b3R5cGVbIHByb3AgXS5hcHBseSggdGhpcywgYXJncyApOw0KCQkJCX07DQoJCQlyZXR1cm4gZnVuY3Rpb24oKSB7DQoJCQkJdmFyIF9fc3VwZXIgPSB0aGlzLl9zdXBlciwNCgkJCQkJX19zdXBlckFwcGx5ID0gdGhpcy5fc3VwZXJBcHBseSwNCgkJCQkJcmV0dXJuVmFsdWU7DQoNCgkJCQl0aGlzLl9zdXBlciA9IF9zdXBlcjsNCgkJCQl0aGlzLl9zdXBlckFwcGx5ID0gX3N1cGVyQXBwbHk7DQoNCgkJCQlyZXR1cm5WYWx1ZSA9IHZhbHVlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsNCg0KCQkJCXRoaXMuX3N1cGVyID0gX19zdXBlcjsNCgkJCQl0aGlzLl9zdXBlckFwcGx5ID0gX19zdXBlckFwcGx5Ow0KDQoJCQkJcmV0dXJuIHJldHVyblZhbHVlOw0KCQkJfTsNCgkJfSkoKTsNCgl9KTsNCgljb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSAkLndpZGdldC5leHRlbmQoIGJhc2VQcm90b3R5cGUsIHsNCgkJLy8gVE9ETzogcmVtb3ZlIHN1cHBvcnQgZm9yIHdpZGdldEV2ZW50UHJlZml4DQoJCS8vIGFsd2F5cyB1c2UgdGhlIG5hbWUgKyBhIGNvbG9uIGFzIHRoZSBwcmVmaXgsIGUuZy4sIGRyYWdnYWJsZTpzdGFydA0KCQkvLyBkb24ndCBwcmVmaXggZm9yIHdpZGdldHMgdGhhdCBhcmVuJ3QgRE9NLWJhc2VkDQoJCXdpZGdldEV2ZW50UHJlZml4OiBleGlzdGluZ0NvbnN0cnVjdG9yID8gKGJhc2VQcm90b3R5cGUud2lkZ2V0RXZlbnRQcmVmaXggfHwgbmFtZSkgOiBuYW1lDQoJfSwgcHJveGllZFByb3RvdHlwZSwgew0KCQljb25zdHJ1Y3RvcjogY29uc3RydWN0b3IsDQoJCW5hbWVzcGFjZTogbmFtZXNwYWNlLA0KCQl3aWRnZXROYW1lOiBuYW1lLA0KCQl3aWRnZXRGdWxsTmFtZTogZnVsbE5hbWUNCgl9KTsNCg0KCS8vIElmIHRoaXMgd2lkZ2V0IGlzIGJlaW5nIHJlZGVmaW5lZCB0aGVuIHdlIG5lZWQgdG8gZmluZCBhbGwgd2lkZ2V0cyB0aGF0DQoJLy8gYXJlIGluaGVyaXRpbmcgZnJvbSBpdCBhbmQgcmVkZWZpbmUgYWxsIG9mIHRoZW0gc28gdGhhdCB0aGV5IGluaGVyaXQgZnJvbQ0KCS8vIHRoZSBuZXcgdmVyc2lvbiBvZiB0aGlzIHdpZGdldC4gV2UncmUgZXNzZW50aWFsbHkgdHJ5aW5nIHRvIHJlcGxhY2Ugb25lDQoJLy8gbGV2ZWwgaW4gdGhlIHByb3RvdHlwZSBjaGFpbi4NCglpZiAoIGV4aXN0aW5nQ29uc3RydWN0b3IgKSB7DQoJCSQuZWFjaCggZXhpc3RpbmdDb25zdHJ1Y3Rvci5fY2hpbGRDb25zdHJ1Y3RvcnMsIGZ1bmN0aW9uKCBpLCBjaGlsZCApIHsNCgkJCXZhciBjaGlsZFByb3RvdHlwZSA9IGNoaWxkLnByb3RvdHlwZTsNCg0KCQkJLy8gcmVkZWZpbmUgdGhlIGNoaWxkIHdpZGdldCB1c2luZyB0aGUgc2FtZSBwcm90b3R5cGUgdGhhdCB3YXMNCgkJCS8vIG9yaWdpbmFsbHkgdXNlZCwgYnV0IGluaGVyaXQgZnJvbSB0aGUgbmV3IHZlcnNpb24gb2YgdGhlIGJhc2UNCgkJCSQud2lkZ2V0KCBjaGlsZFByb3RvdHlwZS5uYW1lc3BhY2UgKyAiLiIgKyBjaGlsZFByb3RvdHlwZS53aWRnZXROYW1lLCBjb25zdHJ1Y3RvciwgY2hpbGQuX3Byb3RvICk7DQoJCX0pOw0KCQkvLyByZW1vdmUgdGhlIGxpc3Qgb2YgZXhpc3RpbmcgY2hpbGQgY29uc3RydWN0b3JzIGZyb20gdGhlIG9sZCBjb25zdHJ1Y3Rvcg0KCQkvLyBzbyB0aGUgb2xkIGNoaWxkIGNvbnN0cnVjdG9ycyBjYW4gYmUgZ2FyYmFnZSBjb2xsZWN0ZWQNCgkJZGVsZXRlIGV4aXN0aW5nQ29uc3RydWN0b3IuX2NoaWxkQ29uc3RydWN0b3JzOw0KCX0gZWxzZSB7DQoJCWJhc2UuX2NoaWxkQ29uc3RydWN0b3JzLnB1c2goIGNvbnN0cnVjdG9yICk7DQoJfQ0KDQoJJC53aWRnZXQuYnJpZGdlKCBuYW1lLCBjb25zdHJ1Y3RvciApOw0KDQoJcmV0dXJuIGNvbnN0cnVjdG9yOw0KfTsNCg0KJC53aWRnZXQuZXh0ZW5kID0gZnVuY3Rpb24oIHRhcmdldCApIHsNCgl2YXIgaW5wdXQgPSB3aWRnZXRfc2xpY2UuY2FsbCggYXJndW1lbnRzLCAxICksDQoJCWlucHV0SW5kZXggPSAwLA0KCQlpbnB1dExlbmd0aCA9IGlucHV0Lmxlbmd0aCwNCgkJa2V5LA0KCQl2YWx1ZTsNCglmb3IgKCA7IGlucHV0SW5kZXggPCBpbnB1dExlbmd0aDsgaW5wdXRJbmRleCsrICkgew0KCQlmb3IgKCBrZXkgaW4gaW5wdXRbIGlucHV0SW5kZXggXSApIHsNCgkJCXZhbHVlID0gaW5wdXRbIGlucHV0SW5kZXggXVsga2V5IF07DQoJCQlpZiAoIGlucHV0WyBpbnB1dEluZGV4IF0uaGFzT3duUHJvcGVydHkoIGtleSApICYmIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7DQoJCQkJLy8gQ2xvbmUgb2JqZWN0cw0KCQkJCWlmICggJC5pc1BsYWluT2JqZWN0KCB2YWx1ZSApICkgew0KCQkJCQl0YXJnZXRbIGtleSBdID0gJC5pc1BsYWluT2JqZWN0KCB0YXJnZXRbIGtleSBdICkgPw0KCQkJCQkJJC53aWRnZXQuZXh0ZW5kKCB7fSwgdGFyZ2V0WyBrZXkgXSwgdmFsdWUgKSA6DQoJCQkJCQkvLyBEb24ndCBleHRlbmQgc3RyaW5ncywgYXJyYXlzLCBldGMuIHdpdGggb2JqZWN0cw0KCQkJCQkJJC53aWRnZXQuZXh0ZW5kKCB7fSwgdmFsdWUgKTsNCgkJCQkvLyBDb3B5IGV2ZXJ5dGhpbmcgZWxzZSBieSByZWZlcmVuY2UNCgkJCQl9IGVsc2Ugew0KCQkJCQl0YXJnZXRbIGtleSBdID0gdmFsdWU7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJfQ0KCXJldHVybiB0YXJnZXQ7DQp9Ow0KDQokLndpZGdldC5icmlkZ2UgPSBmdW5jdGlvbiggbmFtZSwgb2JqZWN0ICkgew0KCXZhciBmdWxsTmFtZSA9IG9iamVjdC5wcm90b3R5cGUud2lkZ2V0RnVsbE5hbWUgfHwgbmFtZTsNCgkkLmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggb3B0aW9ucyApIHsNCgkJdmFyIGlzTWV0aG9kQ2FsbCA9IHR5cGVvZiBvcHRpb25zID09PSAic3RyaW5nIiwNCgkJCWFyZ3MgPSB3aWRnZXRfc2xpY2UuY2FsbCggYXJndW1lbnRzLCAxICksDQoJCQlyZXR1cm5WYWx1ZSA9IHRoaXM7DQoNCgkJLy8gYWxsb3cgbXVsdGlwbGUgaGFzaGVzIHRvIGJlIHBhc3NlZCBvbiBpbml0DQoJCW9wdGlvbnMgPSAhaXNNZXRob2RDYWxsICYmIGFyZ3MubGVuZ3RoID8NCgkJCSQud2lkZ2V0LmV4dGVuZC5hcHBseSggbnVsbCwgWyBvcHRpb25zIF0uY29uY2F0KGFyZ3MpICkgOg0KCQkJb3B0aW9uczsNCg0KCQlpZiAoIGlzTWV0aG9kQ2FsbCApIHsNCgkJCXRoaXMuZWFjaChmdW5jdGlvbigpIHsNCgkJCQl2YXIgbWV0aG9kVmFsdWUsDQoJCQkJCWluc3RhbmNlID0gJC5kYXRhKCB0aGlzLCBmdWxsTmFtZSApOw0KCQkJCWlmICggb3B0aW9ucyA9PT0gImluc3RhbmNlIiApIHsNCgkJCQkJcmV0dXJuVmFsdWUgPSBpbnN0YW5jZTsNCgkJCQkJcmV0dXJuIGZhbHNlOw0KCQkJCX0NCgkJCQlpZiAoICFpbnN0YW5jZSApIHsNCgkJCQkJcmV0dXJuICQuZXJyb3IoICJjYW5ub3QgY2FsbCBtZXRob2RzIG9uICIgKyBuYW1lICsgIiBwcmlvciB0byBpbml0aWFsaXphdGlvbjsgIiArDQoJCQkJCQkiYXR0ZW1wdGVkIHRvIGNhbGwgbWV0aG9kICciICsgb3B0aW9ucyArICInIiApOw0KCQkJCX0NCgkJCQlpZiAoICEkLmlzRnVuY3Rpb24oIGluc3RhbmNlW29wdGlvbnNdICkgfHwgb3B0aW9ucy5jaGFyQXQoIDAgKSA9PT0gIl8iICkgew0KCQkJCQlyZXR1cm4gJC5lcnJvciggIm5vIHN1Y2ggbWV0aG9kICciICsgb3B0aW9ucyArICInIGZvciAiICsgbmFtZSArICIgd2lkZ2V0IGluc3RhbmNlIiApOw0KCQkJCX0NCgkJCQltZXRob2RWYWx1ZSA9IGluc3RhbmNlWyBvcHRpb25zIF0uYXBwbHkoIGluc3RhbmNlLCBhcmdzICk7DQoJCQkJaWYgKCBtZXRob2RWYWx1ZSAhPT0gaW5zdGFuY2UgJiYgbWV0aG9kVmFsdWUgIT09IHVuZGVmaW5lZCApIHsNCgkJCQkJcmV0dXJuVmFsdWUgPSBtZXRob2RWYWx1ZSAmJiBtZXRob2RWYWx1ZS5qcXVlcnkgPw0KCQkJCQkJcmV0dXJuVmFsdWUucHVzaFN0YWNrKCBtZXRob2RWYWx1ZS5nZXQoKSApIDoNCgkJCQkJCW1ldGhvZFZhbHVlOw0KCQkJCQlyZXR1cm4gZmFsc2U7DQoJCQkJfQ0KCQkJfSk7DQoJCX0gZWxzZSB7DQoJCQl0aGlzLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJdmFyIGluc3RhbmNlID0gJC5kYXRhKCB0aGlzLCBmdWxsTmFtZSApOw0KCQkJCWlmICggaW5zdGFuY2UgKSB7DQoJCQkJCWluc3RhbmNlLm9wdGlvbiggb3B0aW9ucyB8fCB7fSApOw0KCQkJCQlpZiAoIGluc3RhbmNlLl9pbml0ICkgew0KCQkJCQkJaW5zdGFuY2UuX2luaXQoKTsNCgkJCQkJfQ0KCQkJCX0gZWxzZSB7DQoJCQkJCSQuZGF0YSggdGhpcywgZnVsbE5hbWUsIG5ldyBvYmplY3QoIG9wdGlvbnMsIHRoaXMgKSApOw0KCQkJCX0NCgkJCX0pOw0KCQl9DQoNCgkJcmV0dXJuIHJldHVyblZhbHVlOw0KCX07DQp9Ow0KDQokLldpZGdldCA9IGZ1bmN0aW9uKCAvKiBvcHRpb25zLCBlbGVtZW50ICovICkge307DQokLldpZGdldC5fY2hpbGRDb25zdHJ1Y3RvcnMgPSBbXTsNCg0KJC5XaWRnZXQucHJvdG90eXBlID0gew0KCXdpZGdldE5hbWU6ICJ3aWRnZXQiLA0KCXdpZGdldEV2ZW50UHJlZml4OiAiIiwNCglkZWZhdWx0RWxlbWVudDogIjxkaXY+IiwNCglvcHRpb25zOiB7DQoJCWRpc2FibGVkOiBmYWxzZSwNCg0KCQkvLyBjYWxsYmFja3MNCgkJY3JlYXRlOiBudWxsDQoJfSwNCglfY3JlYXRlV2lkZ2V0OiBmdW5jdGlvbiggb3B0aW9ucywgZWxlbWVudCApIHsNCgkJZWxlbWVudCA9ICQoIGVsZW1lbnQgfHwgdGhpcy5kZWZhdWx0RWxlbWVudCB8fCB0aGlzIClbIDAgXTsNCgkJdGhpcy5lbGVtZW50ID0gJCggZWxlbWVudCApOw0KCQl0aGlzLnV1aWQgPSB3aWRnZXRfdXVpZCsrOw0KCQl0aGlzLmV2ZW50TmFtZXNwYWNlID0gIi4iICsgdGhpcy53aWRnZXROYW1lICsgdGhpcy51dWlkOw0KDQoJCXRoaXMuYmluZGluZ3MgPSAkKCk7DQoJCXRoaXMuaG92ZXJhYmxlID0gJCgpOw0KCQl0aGlzLmZvY3VzYWJsZSA9ICQoKTsNCg0KCQlpZiAoIGVsZW1lbnQgIT09IHRoaXMgKSB7DQoJCQkkLmRhdGEoIGVsZW1lbnQsIHRoaXMud2lkZ2V0RnVsbE5hbWUsIHRoaXMgKTsNCgkJCXRoaXMuX29uKCB0cnVlLCB0aGlzLmVsZW1lbnQsIHsNCgkJCQlyZW1vdmU6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQkJaWYgKCBldmVudC50YXJnZXQgPT09IGVsZW1lbnQgKSB7DQoJCQkJCQl0aGlzLmRlc3Ryb3koKTsNCgkJCQkJfQ0KCQkJCX0NCgkJCX0pOw0KCQkJdGhpcy5kb2N1bWVudCA9ICQoIGVsZW1lbnQuc3R5bGUgPw0KCQkJCS8vIGVsZW1lbnQgd2l0aGluIHRoZSBkb2N1bWVudA0KCQkJCWVsZW1lbnQub3duZXJEb2N1bWVudCA6DQoJCQkJLy8gZWxlbWVudCBpcyB3aW5kb3cgb3IgZG9jdW1lbnQNCgkJCQllbGVtZW50LmRvY3VtZW50IHx8IGVsZW1lbnQgKTsNCgkJCXRoaXMud2luZG93ID0gJCggdGhpcy5kb2N1bWVudFswXS5kZWZhdWx0VmlldyB8fCB0aGlzLmRvY3VtZW50WzBdLnBhcmVudFdpbmRvdyApOw0KCQl9DQoNCgkJdGhpcy5vcHRpb25zID0gJC53aWRnZXQuZXh0ZW5kKCB7fSwNCgkJCXRoaXMub3B0aW9ucywNCgkJCXRoaXMuX2dldENyZWF0ZU9wdGlvbnMoKSwNCgkJCW9wdGlvbnMgKTsNCg0KCQl0aGlzLl9jcmVhdGUoKTsNCgkJdGhpcy5fdHJpZ2dlciggImNyZWF0ZSIsIG51bGwsIHRoaXMuX2dldENyZWF0ZUV2ZW50RGF0YSgpICk7DQoJCXRoaXMuX2luaXQoKTsNCgl9LA0KCV9nZXRDcmVhdGVPcHRpb25zOiAkLm5vb3AsDQoJX2dldENyZWF0ZUV2ZW50RGF0YTogJC5ub29wLA0KCV9jcmVhdGU6ICQubm9vcCwNCglfaW5pdDogJC5ub29wLA0KDQoJZGVzdHJveTogZnVuY3Rpb24oKSB7DQoJCXRoaXMuX2Rlc3Ryb3koKTsNCgkJLy8gd2UgY2FuIHByb2JhYmx5IHJlbW92ZSB0aGUgdW5iaW5kIGNhbGxzIGluIDIuMA0KCQkvLyBhbGwgZXZlbnQgYmluZGluZ3Mgc2hvdWxkIGdvIHRocm91Z2ggdGhpcy5fb24oKQ0KCQl0aGlzLmVsZW1lbnQNCgkJCS51bmJpbmQoIHRoaXMuZXZlbnROYW1lc3BhY2UgKQ0KCQkJLnJlbW92ZURhdGEoIHRoaXMud2lkZ2V0RnVsbE5hbWUgKQ0KCQkJLy8gc3VwcG9ydDoganF1ZXJ5IDwxLjYuMw0KCQkJLy8gaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvOTQxMw0KCQkJLnJlbW92ZURhdGEoICQuY2FtZWxDYXNlKCB0aGlzLndpZGdldEZ1bGxOYW1lICkgKTsNCgkJdGhpcy53aWRnZXQoKQ0KCQkJLnVuYmluZCggdGhpcy5ldmVudE5hbWVzcGFjZSApDQoJCQkucmVtb3ZlQXR0ciggImFyaWEtZGlzYWJsZWQiICkNCgkJCS5yZW1vdmVDbGFzcygNCgkJCQl0aGlzLndpZGdldEZ1bGxOYW1lICsgIi1kaXNhYmxlZCAiICsNCgkJCQkidWktc3RhdGUtZGlzYWJsZWQiICk7DQoNCgkJLy8gY2xlYW4gdXAgZXZlbnRzIGFuZCBzdGF0ZXMNCgkJdGhpcy5iaW5kaW5ncy51bmJpbmQoIHRoaXMuZXZlbnROYW1lc3BhY2UgKTsNCgkJdGhpcy5ob3ZlcmFibGUucmVtb3ZlQ2xhc3MoICJ1aS1zdGF0ZS1ob3ZlciIgKTsNCgkJdGhpcy5mb2N1c2FibGUucmVtb3ZlQ2xhc3MoICJ1aS1zdGF0ZS1mb2N1cyIgKTsNCgl9LA0KCV9kZXN0cm95OiAkLm5vb3AsDQoNCgl3aWRnZXQ6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy5lbGVtZW50Ow0KCX0sDQoNCglvcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgew0KCQl2YXIgb3B0aW9ucyA9IGtleSwNCgkJCXBhcnRzLA0KCQkJY3VyT3B0aW9uLA0KCQkJaTsNCg0KCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggPT09IDAgKSB7DQoJCQkvLyBkb24ndCByZXR1cm4gYSByZWZlcmVuY2UgdG8gdGhlIGludGVybmFsIGhhc2gNCgkJCXJldHVybiAkLndpZGdldC5leHRlbmQoIHt9LCB0aGlzLm9wdGlvbnMgKTsNCgkJfQ0KDQoJCWlmICggdHlwZW9mIGtleSA9PT0gInN0cmluZyIgKSB7DQoJCQkvLyBoYW5kbGUgbmVzdGVkIGtleXMsIGUuZy4sICJmb28uYmFyIiA9PiB7IGZvbzogeyBiYXI6IF9fXyB9IH0NCgkJCW9wdGlvbnMgPSB7fTsNCgkJCXBhcnRzID0ga2V5LnNwbGl0KCAiLiIgKTsNCgkJCWtleSA9IHBhcnRzLnNoaWZ0KCk7DQoJCQlpZiAoIHBhcnRzLmxlbmd0aCApIHsNCgkJCQljdXJPcHRpb24gPSBvcHRpb25zWyBrZXkgXSA9ICQud2lkZ2V0LmV4dGVuZCgge30sIHRoaXMub3B0aW9uc1sga2V5IF0gKTsNCgkJCQlmb3IgKCBpID0gMDsgaSA8IHBhcnRzLmxlbmd0aCAtIDE7IGkrKyApIHsNCgkJCQkJY3VyT3B0aW9uWyBwYXJ0c1sgaSBdIF0gPSBjdXJPcHRpb25bIHBhcnRzWyBpIF0gXSB8fCB7fTsNCgkJCQkJY3VyT3B0aW9uID0gY3VyT3B0aW9uWyBwYXJ0c1sgaSBdIF07DQoJCQkJfQ0KCQkJCWtleSA9IHBhcnRzLnBvcCgpOw0KCQkJCWlmICggYXJndW1lbnRzLmxlbmd0aCA9PT0gMSApIHsNCgkJCQkJcmV0dXJuIGN1ck9wdGlvblsga2V5IF0gPT09IHVuZGVmaW5lZCA/IG51bGwgOiBjdXJPcHRpb25bIGtleSBdOw0KCQkJCX0NCgkJCQljdXJPcHRpb25bIGtleSBdID0gdmFsdWU7DQoJCQl9IGVsc2Ugew0KCQkJCWlmICggYXJndW1lbnRzLmxlbmd0aCA9PT0gMSApIHsNCgkJCQkJcmV0dXJuIHRoaXMub3B0aW9uc1sga2V5IF0gPT09IHVuZGVmaW5lZCA/IG51bGwgOiB0aGlzLm9wdGlvbnNbIGtleSBdOw0KCQkJCX0NCgkJCQlvcHRpb25zWyBrZXkgXSA9IHZhbHVlOw0KCQkJfQ0KCQl9DQoNCgkJdGhpcy5fc2V0T3B0aW9ucyggb3B0aW9ucyApOw0KDQoJCXJldHVybiB0aGlzOw0KCX0sDQoJX3NldE9wdGlvbnM6IGZ1bmN0aW9uKCBvcHRpb25zICkgew0KCQl2YXIga2V5Ow0KDQoJCWZvciAoIGtleSBpbiBvcHRpb25zICkgew0KCQkJdGhpcy5fc2V0T3B0aW9uKCBrZXksIG9wdGlvbnNbIGtleSBdICk7DQoJCX0NCg0KCQlyZXR1cm4gdGhpczsNCgl9LA0KCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgew0KCQl0aGlzLm9wdGlvbnNbIGtleSBdID0gdmFsdWU7DQoNCgkJaWYgKCBrZXkgPT09ICJkaXNhYmxlZCIgKSB7DQoJCQl0aGlzLndpZGdldCgpDQoJCQkJLnRvZ2dsZUNsYXNzKCB0aGlzLndpZGdldEZ1bGxOYW1lICsgIi1kaXNhYmxlZCIsICEhdmFsdWUgKTsNCg0KCQkJLy8gSWYgdGhlIHdpZGdldCBpcyBiZWNvbWluZyBkaXNhYmxlZCwgdGhlbiBub3RoaW5nIGlzIGludGVyYWN0aXZlDQoJCQlpZiAoIHZhbHVlICkgew0KCQkJCXRoaXMuaG92ZXJhYmxlLnJlbW92ZUNsYXNzKCAidWktc3RhdGUtaG92ZXIiICk7DQoJCQkJdGhpcy5mb2N1c2FibGUucmVtb3ZlQ2xhc3MoICJ1aS1zdGF0ZS1mb2N1cyIgKTsNCgkJCX0NCgkJfQ0KDQoJCXJldHVybiB0aGlzOw0KCX0sDQoNCgllbmFibGU6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy5fc2V0T3B0aW9ucyh7IGRpc2FibGVkOiBmYWxzZSB9KTsNCgl9LA0KCWRpc2FibGU6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy5fc2V0T3B0aW9ucyh7IGRpc2FibGVkOiB0cnVlIH0pOw0KCX0sDQoNCglfb246IGZ1bmN0aW9uKCBzdXBwcmVzc0Rpc2FibGVkQ2hlY2ssIGVsZW1lbnQsIGhhbmRsZXJzICkgew0KCQl2YXIgZGVsZWdhdGVFbGVtZW50LA0KCQkJaW5zdGFuY2UgPSB0aGlzOw0KDQoJCS8vIG5vIHN1cHByZXNzRGlzYWJsZWRDaGVjayBmbGFnLCBzaHVmZmxlIGFyZ3VtZW50cw0KCQlpZiAoIHR5cGVvZiBzdXBwcmVzc0Rpc2FibGVkQ2hlY2sgIT09ICJib29sZWFuIiApIHsNCgkJCWhhbmRsZXJzID0gZWxlbWVudDsNCgkJCWVsZW1lbnQgPSBzdXBwcmVzc0Rpc2FibGVkQ2hlY2s7DQoJCQlzdXBwcmVzc0Rpc2FibGVkQ2hlY2sgPSBmYWxzZTsNCgkJfQ0KDQoJCS8vIG5vIGVsZW1lbnQgYXJndW1lbnQsIHNodWZmbGUgYW5kIHVzZSB0aGlzLmVsZW1lbnQNCgkJaWYgKCAhaGFuZGxlcnMgKSB7DQoJCQloYW5kbGVycyA9IGVsZW1lbnQ7DQoJCQllbGVtZW50ID0gdGhpcy5lbGVtZW50Ow0KCQkJZGVsZWdhdGVFbGVtZW50ID0gdGhpcy53aWRnZXQoKTsNCgkJfSBlbHNlIHsNCgkJCWVsZW1lbnQgPSBkZWxlZ2F0ZUVsZW1lbnQgPSAkKCBlbGVtZW50ICk7DQoJCQl0aGlzLmJpbmRpbmdzID0gdGhpcy5iaW5kaW5ncy5hZGQoIGVsZW1lbnQgKTsNCgkJfQ0KDQoJCSQuZWFjaCggaGFuZGxlcnMsIGZ1bmN0aW9uKCBldmVudCwgaGFuZGxlciApIHsNCgkJCWZ1bmN0aW9uIGhhbmRsZXJQcm94eSgpIHsNCgkJCQkvLyBhbGxvdyB3aWRnZXRzIHRvIGN1c3RvbWl6ZSB0aGUgZGlzYWJsZWQgaGFuZGxpbmcNCgkJCQkvLyAtIGRpc2FibGVkIGFzIGFuIGFycmF5IGluc3RlYWQgb2YgYm9vbGVhbg0KCQkJCS8vIC0gZGlzYWJsZWQgY2xhc3MgYXMgbWV0aG9kIGZvciBkaXNhYmxpbmcgaW5kaXZpZHVhbCBwYXJ0cw0KCQkJCWlmICggIXN1cHByZXNzRGlzYWJsZWRDaGVjayAmJg0KCQkJCQkJKCBpbnN0YW5jZS5vcHRpb25zLmRpc2FibGVkID09PSB0cnVlIHx8DQoJCQkJCQkJJCggdGhpcyApLmhhc0NsYXNzKCAidWktc3RhdGUtZGlzYWJsZWQiICkgKSApIHsNCgkJCQkJcmV0dXJuOw0KCQkJCX0NCgkJCQlyZXR1cm4gKCB0eXBlb2YgaGFuZGxlciA9PT0gInN0cmluZyIgPyBpbnN0YW5jZVsgaGFuZGxlciBdIDogaGFuZGxlciApDQoJCQkJCS5hcHBseSggaW5zdGFuY2UsIGFyZ3VtZW50cyApOw0KCQkJfQ0KDQoJCQkvLyBjb3B5IHRoZSBndWlkIHNvIGRpcmVjdCB1bmJpbmRpbmcgd29ya3MNCgkJCWlmICggdHlwZW9mIGhhbmRsZXIgIT09ICJzdHJpbmciICkgew0KCQkJCWhhbmRsZXJQcm94eS5ndWlkID0gaGFuZGxlci5ndWlkID0NCgkJCQkJaGFuZGxlci5ndWlkIHx8IGhhbmRsZXJQcm94eS5ndWlkIHx8ICQuZ3VpZCsrOw0KCQkJfQ0KDQoJCQl2YXIgbWF0Y2ggPSBldmVudC5tYXRjaCggL14oW1x3Oi1dKilccyooLiopJC8gKSwNCgkJCQlldmVudE5hbWUgPSBtYXRjaFsxXSArIGluc3RhbmNlLmV2ZW50TmFtZXNwYWNlLA0KCQkJCXNlbGVjdG9yID0gbWF0Y2hbMl07DQoJCQlpZiAoIHNlbGVjdG9yICkgew0KCQkJCWRlbGVnYXRlRWxlbWVudC5kZWxlZ2F0ZSggc2VsZWN0b3IsIGV2ZW50TmFtZSwgaGFuZGxlclByb3h5ICk7DQoJCQl9IGVsc2Ugew0KCQkJCWVsZW1lbnQuYmluZCggZXZlbnROYW1lLCBoYW5kbGVyUHJveHkgKTsNCgkJCX0NCgkJfSk7DQoJfSwNCg0KCV9vZmY6IGZ1bmN0aW9uKCBlbGVtZW50LCBldmVudE5hbWUgKSB7DQoJCWV2ZW50TmFtZSA9IChldmVudE5hbWUgfHwgIiIpLnNwbGl0KCAiICIgKS5qb2luKCB0aGlzLmV2ZW50TmFtZXNwYWNlICsgIiAiICkgKw0KCQkJdGhpcy5ldmVudE5hbWVzcGFjZTsNCgkJZWxlbWVudC51bmJpbmQoIGV2ZW50TmFtZSApLnVuZGVsZWdhdGUoIGV2ZW50TmFtZSApOw0KDQoJCS8vIENsZWFyIHRoZSBzdGFjayB0byBhdm9pZCBtZW1vcnkgbGVha3MgKCMxMDA1NikNCgkJdGhpcy5iaW5kaW5ncyA9ICQoIHRoaXMuYmluZGluZ3Mubm90KCBlbGVtZW50ICkuZ2V0KCkgKTsNCgkJdGhpcy5mb2N1c2FibGUgPSAkKCB0aGlzLmZvY3VzYWJsZS5ub3QoIGVsZW1lbnQgKS5nZXQoKSApOw0KCQl0aGlzLmhvdmVyYWJsZSA9ICQoIHRoaXMuaG92ZXJhYmxlLm5vdCggZWxlbWVudCApLmdldCgpICk7DQoJfSwNCg0KCV9kZWxheTogZnVuY3Rpb24oIGhhbmRsZXIsIGRlbGF5ICkgew0KCQlmdW5jdGlvbiBoYW5kbGVyUHJveHkoKSB7DQoJCQlyZXR1cm4gKCB0eXBlb2YgaGFuZGxlciA9PT0gInN0cmluZyIgPyBpbnN0YW5jZVsgaGFuZGxlciBdIDogaGFuZGxlciApDQoJCQkJLmFwcGx5KCBpbnN0YW5jZSwgYXJndW1lbnRzICk7DQoJCX0NCgkJdmFyIGluc3RhbmNlID0gdGhpczsNCgkJcmV0dXJuIHNldFRpbWVvdXQoIGhhbmRsZXJQcm94eSwgZGVsYXkgfHwgMCApOw0KCX0sDQoNCglfaG92ZXJhYmxlOiBmdW5jdGlvbiggZWxlbWVudCApIHsNCgkJdGhpcy5ob3ZlcmFibGUgPSB0aGlzLmhvdmVyYWJsZS5hZGQoIGVsZW1lbnQgKTsNCgkJdGhpcy5fb24oIGVsZW1lbnQsIHsNCgkJCW1vdXNlZW50ZXI6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQkkKCBldmVudC5jdXJyZW50VGFyZ2V0ICkuYWRkQ2xhc3MoICJ1aS1zdGF0ZS1ob3ZlciIgKTsNCgkJCX0sDQoJCQltb3VzZWxlYXZlOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQkJJCggZXZlbnQuY3VycmVudFRhcmdldCApLnJlbW92ZUNsYXNzKCAidWktc3RhdGUtaG92ZXIiICk7DQoJCQl9DQoJCX0pOw0KCX0sDQoNCglfZm9jdXNhYmxlOiBmdW5jdGlvbiggZWxlbWVudCApIHsNCgkJdGhpcy5mb2N1c2FibGUgPSB0aGlzLmZvY3VzYWJsZS5hZGQoIGVsZW1lbnQgKTsNCgkJdGhpcy5fb24oIGVsZW1lbnQsIHsNCgkJCWZvY3VzaW46IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQkkKCBldmVudC5jdXJyZW50VGFyZ2V0ICkuYWRkQ2xhc3MoICJ1aS1zdGF0ZS1mb2N1cyIgKTsNCgkJCX0sDQoJCQlmb2N1c291dDogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCSQoIGV2ZW50LmN1cnJlbnRUYXJnZXQgKS5yZW1vdmVDbGFzcyggInVpLXN0YXRlLWZvY3VzIiApOw0KCQkJfQ0KCQl9KTsNCgl9LA0KDQoJX3RyaWdnZXI6IGZ1bmN0aW9uKCB0eXBlLCBldmVudCwgZGF0YSApIHsNCgkJdmFyIHByb3AsIG9yaWcsDQoJCQljYWxsYmFjayA9IHRoaXMub3B0aW9uc1sgdHlwZSBdOw0KDQoJCWRhdGEgPSBkYXRhIHx8IHt9Ow0KCQlldmVudCA9ICQuRXZlbnQoIGV2ZW50ICk7DQoJCWV2ZW50LnR5cGUgPSAoIHR5cGUgPT09IHRoaXMud2lkZ2V0RXZlbnRQcmVmaXggPw0KCQkJdHlwZSA6DQoJCQl0aGlzLndpZGdldEV2ZW50UHJlZml4ICsgdHlwZSApLnRvTG93ZXJDYXNlKCk7DQoJCS8vIHRoZSBvcmlnaW5hbCBldmVudCBtYXkgY29tZSBmcm9tIGFueSBlbGVtZW50DQoJCS8vIHNvIHdlIG5lZWQgdG8gcmVzZXQgdGhlIHRhcmdldCBvbiB0aGUgbmV3IGV2ZW50DQoJCWV2ZW50LnRhcmdldCA9IHRoaXMuZWxlbWVudFsgMCBdOw0KDQoJCS8vIGNvcHkgb3JpZ2luYWwgZXZlbnQgcHJvcGVydGllcyBvdmVyIHRvIHRoZSBuZXcgZXZlbnQNCgkJb3JpZyA9IGV2ZW50Lm9yaWdpbmFsRXZlbnQ7DQoJCWlmICggb3JpZyApIHsNCgkJCWZvciAoIHByb3AgaW4gb3JpZyApIHsNCgkJCQlpZiAoICEoIHByb3AgaW4gZXZlbnQgKSApIHsNCgkJCQkJZXZlbnRbIHByb3AgXSA9IG9yaWdbIHByb3AgXTsNCgkJCQl9DQoJCQl9DQoJCX0NCg0KCQl0aGlzLmVsZW1lbnQudHJpZ2dlciggZXZlbnQsIGRhdGEgKTsNCgkJcmV0dXJuICEoICQuaXNGdW5jdGlvbiggY2FsbGJhY2sgKSAmJg0KCQkJY2FsbGJhY2suYXBwbHkoIHRoaXMuZWxlbWVudFswXSwgWyBldmVudCBdLmNvbmNhdCggZGF0YSApICkgPT09IGZhbHNlIHx8DQoJCQlldmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSApOw0KCX0NCn07DQoNCiQuZWFjaCggeyBzaG93OiAiZmFkZUluIiwgaGlkZTogImZhZGVPdXQiIH0sIGZ1bmN0aW9uKCBtZXRob2QsIGRlZmF1bHRFZmZlY3QgKSB7DQoJJC5XaWRnZXQucHJvdG90eXBlWyAiXyIgKyBtZXRob2QgXSA9IGZ1bmN0aW9uKCBlbGVtZW50LCBvcHRpb25zLCBjYWxsYmFjayApIHsNCgkJaWYgKCB0eXBlb2Ygb3B0aW9ucyA9PT0gInN0cmluZyIgKSB7DQoJCQlvcHRpb25zID0geyBlZmZlY3Q6IG9wdGlvbnMgfTsNCgkJfQ0KCQl2YXIgaGFzT3B0aW9ucywNCgkJCWVmZmVjdE5hbWUgPSAhb3B0aW9ucyA/DQoJCQkJbWV0aG9kIDoNCgkJCQlvcHRpb25zID09PSB0cnVlIHx8IHR5cGVvZiBvcHRpb25zID09PSAibnVtYmVyIiA/DQoJCQkJCWRlZmF1bHRFZmZlY3QgOg0KCQkJCQlvcHRpb25zLmVmZmVjdCB8fCBkZWZhdWx0RWZmZWN0Ow0KCQlvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsNCgkJaWYgKCB0eXBlb2Ygb3B0aW9ucyA9PT0gIm51bWJlciIgKSB7DQoJCQlvcHRpb25zID0geyBkdXJhdGlvbjogb3B0aW9ucyB9Ow0KCQl9DQoJCWhhc09wdGlvbnMgPSAhJC5pc0VtcHR5T2JqZWN0KCBvcHRpb25zICk7DQoJCW9wdGlvbnMuY29tcGxldGUgPSBjYWxsYmFjazsNCgkJaWYgKCBvcHRpb25zLmRlbGF5ICkgew0KCQkJZWxlbWVudC5kZWxheSggb3B0aW9ucy5kZWxheSApOw0KCQl9DQoJCWlmICggaGFzT3B0aW9ucyAmJiAkLmVmZmVjdHMgJiYgJC5lZmZlY3RzLmVmZmVjdFsgZWZmZWN0TmFtZSBdICkgew0KCQkJZWxlbWVudFsgbWV0aG9kIF0oIG9wdGlvbnMgKTsNCgkJfSBlbHNlIGlmICggZWZmZWN0TmFtZSAhPT0gbWV0aG9kICYmIGVsZW1lbnRbIGVmZmVjdE5hbWUgXSApIHsNCgkJCWVsZW1lbnRbIGVmZmVjdE5hbWUgXSggb3B0aW9ucy5kdXJhdGlvbiwgb3B0aW9ucy5lYXNpbmcsIGNhbGxiYWNrICk7DQoJCX0gZWxzZSB7DQoJCQllbGVtZW50LnF1ZXVlKGZ1bmN0aW9uKCBuZXh0ICkgew0KCQkJCSQoIHRoaXMgKVsgbWV0aG9kIF0oKTsNCgkJCQlpZiAoIGNhbGxiYWNrICkgew0KCQkJCQljYWxsYmFjay5jYWxsKCBlbGVtZW50WyAwIF0gKTsNCgkJCQl9DQoJCQkJbmV4dCgpOw0KCQkJfSk7DQoJCX0NCgl9Ow0KfSk7DQoNCnZhciB3aWRnZXQgPSAkLndpZGdldDsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBNb3VzZSAxLjExLjINCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgMjAxNCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKg0KICogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vbW91c2UvDQogKi8NCg0KDQp2YXIgbW91c2VIYW5kbGVkID0gZmFsc2U7DQokKCBkb2N1bWVudCApLm1vdXNldXAoIGZ1bmN0aW9uKCkgew0KCW1vdXNlSGFuZGxlZCA9IGZhbHNlOw0KfSk7DQoNCnZhciBtb3VzZSA9ICQud2lkZ2V0KCJ1aS5tb3VzZSIsIHsNCgl2ZXJzaW9uOiAiMS4xMS4yIiwNCglvcHRpb25zOiB7DQoJCWNhbmNlbDogImlucHV0LHRleHRhcmVhLGJ1dHRvbixzZWxlY3Qsb3B0aW9uIiwNCgkJZGlzdGFuY2U6IDEsDQoJCWRlbGF5OiAwDQoJfSwNCglfbW91c2VJbml0OiBmdW5jdGlvbigpIHsNCgkJdmFyIHRoYXQgPSB0aGlzOw0KDQoJCXRoaXMuZWxlbWVudA0KCQkJLmJpbmQoIm1vdXNlZG93bi4iICsgdGhpcy53aWRnZXROYW1lLCBmdW5jdGlvbihldmVudCkgew0KCQkJCXJldHVybiB0aGF0Ll9tb3VzZURvd24oZXZlbnQpOw0KCQkJfSkNCgkJCS5iaW5kKCJjbGljay4iICsgdGhpcy53aWRnZXROYW1lLCBmdW5jdGlvbihldmVudCkgew0KCQkJCWlmICh0cnVlID09PSAkLmRhdGEoZXZlbnQudGFyZ2V0LCB0aGF0LndpZGdldE5hbWUgKyAiLnByZXZlbnRDbGlja0V2ZW50IikpIHsNCgkJCQkJJC5yZW1vdmVEYXRhKGV2ZW50LnRhcmdldCwgdGhhdC53aWRnZXROYW1lICsgIi5wcmV2ZW50Q2xpY2tFdmVudCIpOw0KCQkJCQlldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTsNCgkJCQkJcmV0dXJuIGZhbHNlOw0KCQkJCX0NCgkJCX0pOw0KDQoJCXRoaXMuc3RhcnRlZCA9IGZhbHNlOw0KCX0sDQoNCgkvLyBUT0RPOiBtYWtlIHN1cmUgZGVzdHJveWluZyBvbmUgaW5zdGFuY2Ugb2YgbW91c2UgZG9lc24ndCBtZXNzIHdpdGgNCgkvLyBvdGhlciBpbnN0YW5jZXMgb2YgbW91c2UNCglfbW91c2VEZXN0cm95OiBmdW5jdGlvbigpIHsNCgkJdGhpcy5lbGVtZW50LnVuYmluZCgiLiIgKyB0aGlzLndpZGdldE5hbWUpOw0KCQlpZiAoIHRoaXMuX21vdXNlTW92ZURlbGVnYXRlICkgew0KCQkJdGhpcy5kb2N1bWVudA0KCQkJCS51bmJpbmQoIm1vdXNlbW92ZS4iICsgdGhpcy53aWRnZXROYW1lLCB0aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZSkNCgkJCQkudW5iaW5kKCJtb3VzZXVwLiIgKyB0aGlzLndpZGdldE5hbWUsIHRoaXMuX21vdXNlVXBEZWxlZ2F0ZSk7DQoJCX0NCgl9LA0KDQoJX21vdXNlRG93bjogZnVuY3Rpb24oZXZlbnQpIHsNCgkJLy8gZG9uJ3QgbGV0IG1vcmUgdGhhbiBvbmUgd2lkZ2V0IGhhbmRsZSBtb3VzZVN0YXJ0DQoJCWlmICggbW91c2VIYW5kbGVkICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJdGhpcy5fbW91c2VNb3ZlZCA9IGZhbHNlOw0KDQoJCS8vIHdlIG1heSBoYXZlIG1pc3NlZCBtb3VzZXVwIChvdXQgb2Ygd2luZG93KQ0KCQkodGhpcy5fbW91c2VTdGFydGVkICYmIHRoaXMuX21vdXNlVXAoZXZlbnQpKTsNCg0KCQl0aGlzLl9tb3VzZURvd25FdmVudCA9IGV2ZW50Ow0KDQoJCXZhciB0aGF0ID0gdGhpcywNCgkJCWJ0bklzTGVmdCA9IChldmVudC53aGljaCA9PT0gMSksDQoJCQkvLyBldmVudC50YXJnZXQubm9kZU5hbWUgd29ya3MgYXJvdW5kIGEgYnVnIGluIElFIDggd2l0aA0KCQkJLy8gZGlzYWJsZWQgaW5wdXRzICgjNzYyMCkNCgkJCWVsSXNDYW5jZWwgPSAodHlwZW9mIHRoaXMub3B0aW9ucy5jYW5jZWwgPT09ICJzdHJpbmciICYmIGV2ZW50LnRhcmdldC5ub2RlTmFtZSA/ICQoZXZlbnQudGFyZ2V0KS5jbG9zZXN0KHRoaXMub3B0aW9ucy5jYW5jZWwpLmxlbmd0aCA6IGZhbHNlKTsNCgkJaWYgKCFidG5Jc0xlZnQgfHwgZWxJc0NhbmNlbCB8fCAhdGhpcy5fbW91c2VDYXB0dXJlKGV2ZW50KSkgew0KCQkJcmV0dXJuIHRydWU7DQoJCX0NCg0KCQl0aGlzLm1vdXNlRGVsYXlNZXQgPSAhdGhpcy5vcHRpb25zLmRlbGF5Ow0KCQlpZiAoIXRoaXMubW91c2VEZWxheU1ldCkgew0KCQkJdGhpcy5fbW91c2VEZWxheVRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbigpIHsNCgkJCQl0aGF0Lm1vdXNlRGVsYXlNZXQgPSB0cnVlOw0KCQkJfSwgdGhpcy5vcHRpb25zLmRlbGF5KTsNCgkJfQ0KDQoJCWlmICh0aGlzLl9tb3VzZURpc3RhbmNlTWV0KGV2ZW50KSAmJiB0aGlzLl9tb3VzZURlbGF5TWV0KGV2ZW50KSkgew0KCQkJdGhpcy5fbW91c2VTdGFydGVkID0gKHRoaXMuX21vdXNlU3RhcnQoZXZlbnQpICE9PSBmYWxzZSk7DQoJCQlpZiAoIXRoaXMuX21vdXNlU3RhcnRlZCkgew0KCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQoJCQkJcmV0dXJuIHRydWU7DQoJCQl9DQoJCX0NCg0KCQkvLyBDbGljayBldmVudCBtYXkgbmV2ZXIgaGF2ZSBmaXJlZCAoR2Vja28gJiBPcGVyYSkNCgkJaWYgKHRydWUgPT09ICQuZGF0YShldmVudC50YXJnZXQsIHRoaXMud2lkZ2V0TmFtZSArICIucHJldmVudENsaWNrRXZlbnQiKSkgew0KCQkJJC5yZW1vdmVEYXRhKGV2ZW50LnRhcmdldCwgdGhpcy53aWRnZXROYW1lICsgIi5wcmV2ZW50Q2xpY2tFdmVudCIpOw0KCQl9DQoNCgkJLy8gdGhlc2UgZGVsZWdhdGVzIGFyZSByZXF1aXJlZCB0byBrZWVwIGNvbnRleHQNCgkJdGhpcy5fbW91c2VNb3ZlRGVsZWdhdGUgPSBmdW5jdGlvbihldmVudCkgew0KCQkJcmV0dXJuIHRoYXQuX21vdXNlTW92ZShldmVudCk7DQoJCX07DQoJCXRoaXMuX21vdXNlVXBEZWxlZ2F0ZSA9IGZ1bmN0aW9uKGV2ZW50KSB7DQoJCQlyZXR1cm4gdGhhdC5fbW91c2VVcChldmVudCk7DQoJCX07DQoNCgkJdGhpcy5kb2N1bWVudA0KCQkJLmJpbmQoICJtb3VzZW1vdmUuIiArIHRoaXMud2lkZ2V0TmFtZSwgdGhpcy5fbW91c2VNb3ZlRGVsZWdhdGUgKQ0KCQkJLmJpbmQoICJtb3VzZXVwLiIgKyB0aGlzLndpZGdldE5hbWUsIHRoaXMuX21vdXNlVXBEZWxlZ2F0ZSApOw0KDQoJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQoNCgkJbW91c2VIYW5kbGVkID0gdHJ1ZTsNCgkJcmV0dXJuIHRydWU7DQoJfSwNCg0KCV9tb3VzZU1vdmU6IGZ1bmN0aW9uKGV2ZW50KSB7DQoJCS8vIE9ubHkgY2hlY2sgZm9yIG1vdXNldXBzIG91dHNpZGUgdGhlIGRvY3VtZW50IGlmIHlvdSd2ZSBtb3ZlZCBpbnNpZGUgdGhlIGRvY3VtZW50DQoJCS8vIGF0IGxlYXN0IG9uY2UuIFRoaXMgcHJldmVudHMgdGhlIGZpcmluZyBvZiBtb3VzZXVwIGluIHRoZSBjYXNlIG9mIElFPDksIHdoaWNoIHdpbGwNCgkJLy8gZmlyZSBhIG1vdXNlbW92ZSBldmVudCBpZiBjb250ZW50IGlzIHBsYWNlZCB1bmRlciB0aGUgY3Vyc29yLiBTZWUgIzc3NzgNCgkJLy8gU3VwcG9ydDogSUUgPDkNCgkJaWYgKCB0aGlzLl9tb3VzZU1vdmVkICkgew0KCQkJLy8gSUUgbW91c2V1cCBjaGVjayAtIG1vdXNldXAgaGFwcGVuZWQgd2hlbiBtb3VzZSB3YXMgb3V0IG9mIHdpbmRvdw0KCQkJaWYgKCQudWkuaWUgJiYgKCAhZG9jdW1lbnQuZG9jdW1lbnRNb2RlIHx8IGRvY3VtZW50LmRvY3VtZW50TW9kZSA8IDkgKSAmJiAhZXZlbnQuYnV0dG9uKSB7DQoJCQkJcmV0dXJuIHRoaXMuX21vdXNlVXAoZXZlbnQpOw0KDQoJCQkvLyBJZnJhbWUgbW91c2V1cCBjaGVjayAtIG1vdXNldXAgb2NjdXJyZWQgaW4gYW5vdGhlciBkb2N1bWVudA0KCQkJfSBlbHNlIGlmICggIWV2ZW50LndoaWNoICkgew0KCQkJCXJldHVybiB0aGlzLl9tb3VzZVVwKCBldmVudCApOw0KCQkJfQ0KCQl9DQoNCgkJaWYgKCBldmVudC53aGljaCB8fCBldmVudC5idXR0b24gKSB7DQoJCQl0aGlzLl9tb3VzZU1vdmVkID0gdHJ1ZTsNCgkJfQ0KDQoJCWlmICh0aGlzLl9tb3VzZVN0YXJ0ZWQpIHsNCgkJCXRoaXMuX21vdXNlRHJhZyhldmVudCk7DQoJCQlyZXR1cm4gZXZlbnQucHJldmVudERlZmF1bHQoKTsNCgkJfQ0KDQoJCWlmICh0aGlzLl9tb3VzZURpc3RhbmNlTWV0KGV2ZW50KSAmJiB0aGlzLl9tb3VzZURlbGF5TWV0KGV2ZW50KSkgew0KCQkJdGhpcy5fbW91c2VTdGFydGVkID0NCgkJCQkodGhpcy5fbW91c2VTdGFydCh0aGlzLl9tb3VzZURvd25FdmVudCwgZXZlbnQpICE9PSBmYWxzZSk7DQoJCQkodGhpcy5fbW91c2VTdGFydGVkID8gdGhpcy5fbW91c2VEcmFnKGV2ZW50KSA6IHRoaXMuX21vdXNlVXAoZXZlbnQpKTsNCgkJfQ0KDQoJCXJldHVybiAhdGhpcy5fbW91c2VTdGFydGVkOw0KCX0sDQoNCglfbW91c2VVcDogZnVuY3Rpb24oZXZlbnQpIHsNCgkJdGhpcy5kb2N1bWVudA0KCQkJLnVuYmluZCggIm1vdXNlbW92ZS4iICsgdGhpcy53aWRnZXROYW1lLCB0aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZSApDQoJCQkudW5iaW5kKCAibW91c2V1cC4iICsgdGhpcy53aWRnZXROYW1lLCB0aGlzLl9tb3VzZVVwRGVsZWdhdGUgKTsNCg0KCQlpZiAodGhpcy5fbW91c2VTdGFydGVkKSB7DQoJCQl0aGlzLl9tb3VzZVN0YXJ0ZWQgPSBmYWxzZTsNCg0KCQkJaWYgKGV2ZW50LnRhcmdldCA9PT0gdGhpcy5fbW91c2VEb3duRXZlbnQudGFyZ2V0KSB7DQoJCQkJJC5kYXRhKGV2ZW50LnRhcmdldCwgdGhpcy53aWRnZXROYW1lICsgIi5wcmV2ZW50Q2xpY2tFdmVudCIsIHRydWUpOw0KCQkJfQ0KDQoJCQl0aGlzLl9tb3VzZVN0b3AoZXZlbnQpOw0KCQl9DQoNCgkJbW91c2VIYW5kbGVkID0gZmFsc2U7DQoJCXJldHVybiBmYWxzZTsNCgl9LA0KDQoJX21vdXNlRGlzdGFuY2VNZXQ6IGZ1bmN0aW9uKGV2ZW50KSB7DQoJCXJldHVybiAoTWF0aC5tYXgoDQoJCQkJTWF0aC5hYnModGhpcy5fbW91c2VEb3duRXZlbnQucGFnZVggLSBldmVudC5wYWdlWCksDQoJCQkJTWF0aC5hYnModGhpcy5fbW91c2VEb3duRXZlbnQucGFnZVkgLSBldmVudC5wYWdlWSkNCgkJCSkgPj0gdGhpcy5vcHRpb25zLmRpc3RhbmNlDQoJCSk7DQoJfSwNCg0KCV9tb3VzZURlbGF5TWV0OiBmdW5jdGlvbigvKiBldmVudCAqLykgew0KCQlyZXR1cm4gdGhpcy5tb3VzZURlbGF5TWV0Ow0KCX0sDQoNCgkvLyBUaGVzZSBhcmUgcGxhY2Vob2xkZXIgbWV0aG9kcywgdG8gYmUgb3ZlcnJpZGVuIGJ5IGV4dGVuZGluZyBwbHVnaW4NCglfbW91c2VTdGFydDogZnVuY3Rpb24oLyogZXZlbnQgKi8pIHt9LA0KCV9tb3VzZURyYWc6IGZ1bmN0aW9uKC8qIGV2ZW50ICovKSB7fSwNCglfbW91c2VTdG9wOiBmdW5jdGlvbigvKiBldmVudCAqLykge30sDQoJX21vdXNlQ2FwdHVyZTogZnVuY3Rpb24oLyogZXZlbnQgKi8pIHsgcmV0dXJuIHRydWU7IH0NCn0pOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIFBvc2l0aW9uIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9wb3NpdGlvbi8NCiAqLw0KDQooZnVuY3Rpb24oKSB7DQoNCiQudWkgPSAkLnVpIHx8IHt9Ow0KDQp2YXIgY2FjaGVkU2Nyb2xsYmFyV2lkdGgsIHN1cHBvcnRzT2Zmc2V0RnJhY3Rpb25zLA0KCW1heCA9IE1hdGgubWF4LA0KCWFicyA9IE1hdGguYWJzLA0KCXJvdW5kID0gTWF0aC5yb3VuZCwNCglyaG9yaXpvbnRhbCA9IC9sZWZ0fGNlbnRlcnxyaWdodC8sDQoJcnZlcnRpY2FsID0gL3RvcHxjZW50ZXJ8Ym90dG9tLywNCglyb2Zmc2V0ID0gL1tcK1wtXVxkKyhcLltcZF0rKT8lPy8sDQoJcnBvc2l0aW9uID0gL15cdysvLA0KCXJwZXJjZW50ID0gLyUkLywNCglfcG9zaXRpb24gPSAkLmZuLnBvc2l0aW9uOw0KDQpmdW5jdGlvbiBnZXRPZmZzZXRzKCBvZmZzZXRzLCB3aWR0aCwgaGVpZ2h0ICkgew0KCXJldHVybiBbDQoJCXBhcnNlRmxvYXQoIG9mZnNldHNbIDAgXSApICogKCBycGVyY2VudC50ZXN0KCBvZmZzZXRzWyAwIF0gKSA/IHdpZHRoIC8gMTAwIDogMSApLA0KCQlwYXJzZUZsb2F0KCBvZmZzZXRzWyAxIF0gKSAqICggcnBlcmNlbnQudGVzdCggb2Zmc2V0c1sgMSBdICkgPyBoZWlnaHQgLyAxMDAgOiAxICkNCgldOw0KfQ0KDQpmdW5jdGlvbiBwYXJzZUNzcyggZWxlbWVudCwgcHJvcGVydHkgKSB7DQoJcmV0dXJuIHBhcnNlSW50KCAkLmNzcyggZWxlbWVudCwgcHJvcGVydHkgKSwgMTAgKSB8fCAwOw0KfQ0KDQpmdW5jdGlvbiBnZXREaW1lbnNpb25zKCBlbGVtICkgew0KCXZhciByYXcgPSBlbGVtWzBdOw0KCWlmICggcmF3Lm5vZGVUeXBlID09PSA5ICkgew0KCQlyZXR1cm4gew0KCQkJd2lkdGg6IGVsZW0ud2lkdGgoKSwNCgkJCWhlaWdodDogZWxlbS5oZWlnaHQoKSwNCgkJCW9mZnNldDogeyB0b3A6IDAsIGxlZnQ6IDAgfQ0KCQl9Ow0KCX0NCglpZiAoICQuaXNXaW5kb3coIHJhdyApICkgew0KCQlyZXR1cm4gew0KCQkJd2lkdGg6IGVsZW0ud2lkdGgoKSwNCgkJCWhlaWdodDogZWxlbS5oZWlnaHQoKSwNCgkJCW9mZnNldDogeyB0b3A6IGVsZW0uc2Nyb2xsVG9wKCksIGxlZnQ6IGVsZW0uc2Nyb2xsTGVmdCgpIH0NCgkJfTsNCgl9DQoJaWYgKCByYXcucHJldmVudERlZmF1bHQgKSB7DQoJCXJldHVybiB7DQoJCQl3aWR0aDogMCwNCgkJCWhlaWdodDogMCwNCgkJCW9mZnNldDogeyB0b3A6IHJhdy5wYWdlWSwgbGVmdDogcmF3LnBhZ2VYIH0NCgkJfTsNCgl9DQoJcmV0dXJuIHsNCgkJd2lkdGg6IGVsZW0ub3V0ZXJXaWR0aCgpLA0KCQloZWlnaHQ6IGVsZW0ub3V0ZXJIZWlnaHQoKSwNCgkJb2Zmc2V0OiBlbGVtLm9mZnNldCgpDQoJfTsNCn0NCg0KJC5wb3NpdGlvbiA9IHsNCglzY3JvbGxiYXJXaWR0aDogZnVuY3Rpb24oKSB7DQoJCWlmICggY2FjaGVkU2Nyb2xsYmFyV2lkdGggIT09IHVuZGVmaW5lZCApIHsNCgkJCXJldHVybiBjYWNoZWRTY3JvbGxiYXJXaWR0aDsNCgkJfQ0KCQl2YXIgdzEsIHcyLA0KCQkJZGl2ID0gJCggIjxkaXYgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6NTBweDtoZWlnaHQ6NTBweDtvdmVyZmxvdzpoaWRkZW47Jz48ZGl2IHN0eWxlPSdoZWlnaHQ6MTAwcHg7d2lkdGg6YXV0bzsnPjwvZGl2PjwvZGl2PiIgKSwNCgkJCWlubmVyRGl2ID0gZGl2LmNoaWxkcmVuKClbMF07DQoNCgkJJCggImJvZHkiICkuYXBwZW5kKCBkaXYgKTsNCgkJdzEgPSBpbm5lckRpdi5vZmZzZXRXaWR0aDsNCgkJZGl2LmNzcyggIm92ZXJmbG93IiwgInNjcm9sbCIgKTsNCg0KCQl3MiA9IGlubmVyRGl2Lm9mZnNldFdpZHRoOw0KDQoJCWlmICggdzEgPT09IHcyICkgew0KCQkJdzIgPSBkaXZbMF0uY2xpZW50V2lkdGg7DQoJCX0NCg0KCQlkaXYucmVtb3ZlKCk7DQoNCgkJcmV0dXJuIChjYWNoZWRTY3JvbGxiYXJXaWR0aCA9IHcxIC0gdzIpOw0KCX0sDQoJZ2V0U2Nyb2xsSW5mbzogZnVuY3Rpb24oIHdpdGhpbiApIHsNCgkJdmFyIG92ZXJmbG93WCA9IHdpdGhpbi5pc1dpbmRvdyB8fCB3aXRoaW4uaXNEb2N1bWVudCA/ICIiIDoNCgkJCQl3aXRoaW4uZWxlbWVudC5jc3MoICJvdmVyZmxvdy14IiApLA0KCQkJb3ZlcmZsb3dZID0gd2l0aGluLmlzV2luZG93IHx8IHdpdGhpbi5pc0RvY3VtZW50ID8gIiIgOg0KCQkJCXdpdGhpbi5lbGVtZW50LmNzcyggIm92ZXJmbG93LXkiICksDQoJCQloYXNPdmVyZmxvd1ggPSBvdmVyZmxvd1ggPT09ICJzY3JvbGwiIHx8DQoJCQkJKCBvdmVyZmxvd1ggPT09ICJhdXRvIiAmJiB3aXRoaW4ud2lkdGggPCB3aXRoaW4uZWxlbWVudFswXS5zY3JvbGxXaWR0aCApLA0KCQkJaGFzT3ZlcmZsb3dZID0gb3ZlcmZsb3dZID09PSAic2Nyb2xsIiB8fA0KCQkJCSggb3ZlcmZsb3dZID09PSAiYXV0byIgJiYgd2l0aGluLmhlaWdodCA8IHdpdGhpbi5lbGVtZW50WzBdLnNjcm9sbEhlaWdodCApOw0KCQlyZXR1cm4gew0KCQkJd2lkdGg6IGhhc092ZXJmbG93WSA/ICQucG9zaXRpb24uc2Nyb2xsYmFyV2lkdGgoKSA6IDAsDQoJCQloZWlnaHQ6IGhhc092ZXJmbG93WCA/ICQucG9zaXRpb24uc2Nyb2xsYmFyV2lkdGgoKSA6IDANCgkJfTsNCgl9LA0KCWdldFdpdGhpbkluZm86IGZ1bmN0aW9uKCBlbGVtZW50ICkgew0KCQl2YXIgd2l0aGluRWxlbWVudCA9ICQoIGVsZW1lbnQgfHwgd2luZG93ICksDQoJCQlpc1dpbmRvdyA9ICQuaXNXaW5kb3coIHdpdGhpbkVsZW1lbnRbMF0gKSwNCgkJCWlzRG9jdW1lbnQgPSAhIXdpdGhpbkVsZW1lbnRbIDAgXSAmJiB3aXRoaW5FbGVtZW50WyAwIF0ubm9kZVR5cGUgPT09IDk7DQoJCXJldHVybiB7DQoJCQllbGVtZW50OiB3aXRoaW5FbGVtZW50LA0KCQkJaXNXaW5kb3c6IGlzV2luZG93LA0KCQkJaXNEb2N1bWVudDogaXNEb2N1bWVudCwNCgkJCW9mZnNldDogd2l0aGluRWxlbWVudC5vZmZzZXQoKSB8fCB7IGxlZnQ6IDAsIHRvcDogMCB9LA0KCQkJc2Nyb2xsTGVmdDogd2l0aGluRWxlbWVudC5zY3JvbGxMZWZ0KCksDQoJCQlzY3JvbGxUb3A6IHdpdGhpbkVsZW1lbnQuc2Nyb2xsVG9wKCksDQoNCgkJCS8vIHN1cHBvcnQ6IGpRdWVyeSAxLjYueA0KCQkJLy8galF1ZXJ5IDEuNiBkb2Vzbid0IHN1cHBvcnQgLm91dGVyV2lkdGgvSGVpZ2h0KCkgb24gZG9jdW1lbnRzIG9yIHdpbmRvd3MNCgkJCXdpZHRoOiBpc1dpbmRvdyB8fCBpc0RvY3VtZW50ID8gd2l0aGluRWxlbWVudC53aWR0aCgpIDogd2l0aGluRWxlbWVudC5vdXRlcldpZHRoKCksDQoJCQloZWlnaHQ6IGlzV2luZG93IHx8IGlzRG9jdW1lbnQgPyB3aXRoaW5FbGVtZW50LmhlaWdodCgpIDogd2l0aGluRWxlbWVudC5vdXRlckhlaWdodCgpDQoJCX07DQoJfQ0KfTsNCg0KJC5mbi5wb3NpdGlvbiA9IGZ1bmN0aW9uKCBvcHRpb25zICkgew0KCWlmICggIW9wdGlvbnMgfHwgIW9wdGlvbnMub2YgKSB7DQoJCXJldHVybiBfcG9zaXRpb24uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOw0KCX0NCg0KCS8vIG1ha2UgYSBjb3B5LCB3ZSBkb24ndCB3YW50IHRvIG1vZGlmeSBhcmd1bWVudHMNCglvcHRpb25zID0gJC5leHRlbmQoIHt9LCBvcHRpb25zICk7DQoNCgl2YXIgYXRPZmZzZXQsIHRhcmdldFdpZHRoLCB0YXJnZXRIZWlnaHQsIHRhcmdldE9mZnNldCwgYmFzZVBvc2l0aW9uLCBkaW1lbnNpb25zLA0KCQl0YXJnZXQgPSAkKCBvcHRpb25zLm9mICksDQoJCXdpdGhpbiA9ICQucG9zaXRpb24uZ2V0V2l0aGluSW5mbyggb3B0aW9ucy53aXRoaW4gKSwNCgkJc2Nyb2xsSW5mbyA9ICQucG9zaXRpb24uZ2V0U2Nyb2xsSW5mbyggd2l0aGluICksDQoJCWNvbGxpc2lvbiA9ICggb3B0aW9ucy5jb2xsaXNpb24gfHwgImZsaXAiICkuc3BsaXQoICIgIiApLA0KCQlvZmZzZXRzID0ge307DQoNCglkaW1lbnNpb25zID0gZ2V0RGltZW5zaW9ucyggdGFyZ2V0ICk7DQoJaWYgKCB0YXJnZXRbMF0ucHJldmVudERlZmF1bHQgKSB7DQoJCS8vIGZvcmNlIGxlZnQgdG9wIHRvIGFsbG93IGZsaXBwaW5nDQoJCW9wdGlvbnMuYXQgPSAibGVmdCB0b3AiOw0KCX0NCgl0YXJnZXRXaWR0aCA9IGRpbWVuc2lvbnMud2lkdGg7DQoJdGFyZ2V0SGVpZ2h0ID0gZGltZW5zaW9ucy5oZWlnaHQ7DQoJdGFyZ2V0T2Zmc2V0ID0gZGltZW5zaW9ucy5vZmZzZXQ7DQoJLy8gY2xvbmUgdG8gcmV1c2Ugb3JpZ2luYWwgdGFyZ2V0T2Zmc2V0IGxhdGVyDQoJYmFzZVBvc2l0aW9uID0gJC5leHRlbmQoIHt9LCB0YXJnZXRPZmZzZXQgKTsNCg0KCS8vIGZvcmNlIG15IGFuZCBhdCB0byBoYXZlIHZhbGlkIGhvcml6b250YWwgYW5kIHZlcnRpY2FsIHBvc2l0aW9ucw0KCS8vIGlmIGEgdmFsdWUgaXMgbWlzc2luZyBvciBpbnZhbGlkLCBpdCB3aWxsIGJlIGNvbnZlcnRlZCB0byBjZW50ZXINCgkkLmVhY2goIFsgIm15IiwgImF0IiBdLCBmdW5jdGlvbigpIHsNCgkJdmFyIHBvcyA9ICggb3B0aW9uc1sgdGhpcyBdIHx8ICIiICkuc3BsaXQoICIgIiApLA0KCQkJaG9yaXpvbnRhbE9mZnNldCwNCgkJCXZlcnRpY2FsT2Zmc2V0Ow0KDQoJCWlmICggcG9zLmxlbmd0aCA9PT0gMSkgew0KCQkJcG9zID0gcmhvcml6b250YWwudGVzdCggcG9zWyAwIF0gKSA/DQoJCQkJcG9zLmNvbmNhdCggWyAiY2VudGVyIiBdICkgOg0KCQkJCXJ2ZXJ0aWNhbC50ZXN0KCBwb3NbIDAgXSApID8NCgkJCQkJWyAiY2VudGVyIiBdLmNvbmNhdCggcG9zICkgOg0KCQkJCQlbICJjZW50ZXIiLCAiY2VudGVyIiBdOw0KCQl9DQoJCXBvc1sgMCBdID0gcmhvcml6b250YWwudGVzdCggcG9zWyAwIF0gKSA/IHBvc1sgMCBdIDogImNlbnRlciI7DQoJCXBvc1sgMSBdID0gcnZlcnRpY2FsLnRlc3QoIHBvc1sgMSBdICkgPyBwb3NbIDEgXSA6ICJjZW50ZXIiOw0KDQoJCS8vIGNhbGN1bGF0ZSBvZmZzZXRzDQoJCWhvcml6b250YWxPZmZzZXQgPSByb2Zmc2V0LmV4ZWMoIHBvc1sgMCBdICk7DQoJCXZlcnRpY2FsT2Zmc2V0ID0gcm9mZnNldC5leGVjKCBwb3NbIDEgXSApOw0KCQlvZmZzZXRzWyB0aGlzIF0gPSBbDQoJCQlob3Jpem9udGFsT2Zmc2V0ID8gaG9yaXpvbnRhbE9mZnNldFsgMCBdIDogMCwNCgkJCXZlcnRpY2FsT2Zmc2V0ID8gdmVydGljYWxPZmZzZXRbIDAgXSA6IDANCgkJXTsNCg0KCQkvLyByZWR1Y2UgdG8ganVzdCB0aGUgcG9zaXRpb25zIHdpdGhvdXQgdGhlIG9mZnNldHMNCgkJb3B0aW9uc1sgdGhpcyBdID0gWw0KCQkJcnBvc2l0aW9uLmV4ZWMoIHBvc1sgMCBdIClbIDAgXSwNCgkJCXJwb3NpdGlvbi5leGVjKCBwb3NbIDEgXSApWyAwIF0NCgkJXTsNCgl9KTsNCg0KCS8vIG5vcm1hbGl6ZSBjb2xsaXNpb24gb3B0aW9uDQoJaWYgKCBjb2xsaXNpb24ubGVuZ3RoID09PSAxICkgew0KCQljb2xsaXNpb25bIDEgXSA9IGNvbGxpc2lvblsgMCBdOw0KCX0NCg0KCWlmICggb3B0aW9ucy5hdFsgMCBdID09PSAicmlnaHQiICkgew0KCQliYXNlUG9zaXRpb24ubGVmdCArPSB0YXJnZXRXaWR0aDsNCgl9IGVsc2UgaWYgKCBvcHRpb25zLmF0WyAwIF0gPT09ICJjZW50ZXIiICkgew0KCQliYXNlUG9zaXRpb24ubGVmdCArPSB0YXJnZXRXaWR0aCAvIDI7DQoJfQ0KDQoJaWYgKCBvcHRpb25zLmF0WyAxIF0gPT09ICJib3R0b20iICkgew0KCQliYXNlUG9zaXRpb24udG9wICs9IHRhcmdldEhlaWdodDsNCgl9IGVsc2UgaWYgKCBvcHRpb25zLmF0WyAxIF0gPT09ICJjZW50ZXIiICkgew0KCQliYXNlUG9zaXRpb24udG9wICs9IHRhcmdldEhlaWdodCAvIDI7DQoJfQ0KDQoJYXRPZmZzZXQgPSBnZXRPZmZzZXRzKCBvZmZzZXRzLmF0LCB0YXJnZXRXaWR0aCwgdGFyZ2V0SGVpZ2h0ICk7DQoJYmFzZVBvc2l0aW9uLmxlZnQgKz0gYXRPZmZzZXRbIDAgXTsNCgliYXNlUG9zaXRpb24udG9wICs9IGF0T2Zmc2V0WyAxIF07DQoNCglyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkgew0KCQl2YXIgY29sbGlzaW9uUG9zaXRpb24sIHVzaW5nLA0KCQkJZWxlbSA9ICQoIHRoaXMgKSwNCgkJCWVsZW1XaWR0aCA9IGVsZW0ub3V0ZXJXaWR0aCgpLA0KCQkJZWxlbUhlaWdodCA9IGVsZW0ub3V0ZXJIZWlnaHQoKSwNCgkJCW1hcmdpbkxlZnQgPSBwYXJzZUNzcyggdGhpcywgIm1hcmdpbkxlZnQiICksDQoJCQltYXJnaW5Ub3AgPSBwYXJzZUNzcyggdGhpcywgIm1hcmdpblRvcCIgKSwNCgkJCWNvbGxpc2lvbldpZHRoID0gZWxlbVdpZHRoICsgbWFyZ2luTGVmdCArIHBhcnNlQ3NzKCB0aGlzLCAibWFyZ2luUmlnaHQiICkgKyBzY3JvbGxJbmZvLndpZHRoLA0KCQkJY29sbGlzaW9uSGVpZ2h0ID0gZWxlbUhlaWdodCArIG1hcmdpblRvcCArIHBhcnNlQ3NzKCB0aGlzLCAibWFyZ2luQm90dG9tIiApICsgc2Nyb2xsSW5mby5oZWlnaHQsDQoJCQlwb3NpdGlvbiA9ICQuZXh0ZW5kKCB7fSwgYmFzZVBvc2l0aW9uICksDQoJCQlteU9mZnNldCA9IGdldE9mZnNldHMoIG9mZnNldHMubXksIGVsZW0ub3V0ZXJXaWR0aCgpLCBlbGVtLm91dGVySGVpZ2h0KCkgKTsNCg0KCQlpZiAoIG9wdGlvbnMubXlbIDAgXSA9PT0gInJpZ2h0IiApIHsNCgkJCXBvc2l0aW9uLmxlZnQgLT0gZWxlbVdpZHRoOw0KCQl9IGVsc2UgaWYgKCBvcHRpb25zLm15WyAwIF0gPT09ICJjZW50ZXIiICkgew0KCQkJcG9zaXRpb24ubGVmdCAtPSBlbGVtV2lkdGggLyAyOw0KCQl9DQoNCgkJaWYgKCBvcHRpb25zLm15WyAxIF0gPT09ICJib3R0b20iICkgew0KCQkJcG9zaXRpb24udG9wIC09IGVsZW1IZWlnaHQ7DQoJCX0gZWxzZSBpZiAoIG9wdGlvbnMubXlbIDEgXSA9PT0gImNlbnRlciIgKSB7DQoJCQlwb3NpdGlvbi50b3AgLT0gZWxlbUhlaWdodCAvIDI7DQoJCX0NCg0KCQlwb3NpdGlvbi5sZWZ0ICs9IG15T2Zmc2V0WyAwIF07DQoJCXBvc2l0aW9uLnRvcCArPSBteU9mZnNldFsgMSBdOw0KDQoJCS8vIGlmIHRoZSBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBmcmFjdGlvbnMsIHRoZW4gcm91bmQgZm9yIGNvbnNpc3RlbnQgcmVzdWx0cw0KCQlpZiAoICFzdXBwb3J0c09mZnNldEZyYWN0aW9ucyApIHsNCgkJCXBvc2l0aW9uLmxlZnQgPSByb3VuZCggcG9zaXRpb24ubGVmdCApOw0KCQkJcG9zaXRpb24udG9wID0gcm91bmQoIHBvc2l0aW9uLnRvcCApOw0KCQl9DQoNCgkJY29sbGlzaW9uUG9zaXRpb24gPSB7DQoJCQltYXJnaW5MZWZ0OiBtYXJnaW5MZWZ0LA0KCQkJbWFyZ2luVG9wOiBtYXJnaW5Ub3ANCgkJfTsNCg0KCQkkLmVhY2goIFsgImxlZnQiLCAidG9wIiBdLCBmdW5jdGlvbiggaSwgZGlyICkgew0KCQkJaWYgKCAkLnVpLnBvc2l0aW9uWyBjb2xsaXNpb25bIGkgXSBdICkgew0KCQkJCSQudWkucG9zaXRpb25bIGNvbGxpc2lvblsgaSBdIF1bIGRpciBdKCBwb3NpdGlvbiwgew0KCQkJCQl0YXJnZXRXaWR0aDogdGFyZ2V0V2lkdGgsDQoJCQkJCXRhcmdldEhlaWdodDogdGFyZ2V0SGVpZ2h0LA0KCQkJCQllbGVtV2lkdGg6IGVsZW1XaWR0aCwNCgkJCQkJZWxlbUhlaWdodDogZWxlbUhlaWdodCwNCgkJCQkJY29sbGlzaW9uUG9zaXRpb246IGNvbGxpc2lvblBvc2l0aW9uLA0KCQkJCQljb2xsaXNpb25XaWR0aDogY29sbGlzaW9uV2lkdGgsDQoJCQkJCWNvbGxpc2lvbkhlaWdodDogY29sbGlzaW9uSGVpZ2h0LA0KCQkJCQlvZmZzZXQ6IFsgYXRPZmZzZXRbIDAgXSArIG15T2Zmc2V0WyAwIF0sIGF0T2Zmc2V0IFsgMSBdICsgbXlPZmZzZXRbIDEgXSBdLA0KCQkJCQlteTogb3B0aW9ucy5teSwNCgkJCQkJYXQ6IG9wdGlvbnMuYXQsDQoJCQkJCXdpdGhpbjogd2l0aGluLA0KCQkJCQllbGVtOiBlbGVtDQoJCQkJfSk7DQoJCQl9DQoJCX0pOw0KDQoJCWlmICggb3B0aW9ucy51c2luZyApIHsNCgkJCS8vIGFkZHMgZmVlZGJhY2sgYXMgc2Vjb25kIGFyZ3VtZW50IHRvIHVzaW5nIGNhbGxiYWNrLCBpZiBwcmVzZW50DQoJCQl1c2luZyA9IGZ1bmN0aW9uKCBwcm9wcyApIHsNCgkJCQl2YXIgbGVmdCA9IHRhcmdldE9mZnNldC5sZWZ0IC0gcG9zaXRpb24ubGVmdCwNCgkJCQkJcmlnaHQgPSBsZWZ0ICsgdGFyZ2V0V2lkdGggLSBlbGVtV2lkdGgsDQoJCQkJCXRvcCA9IHRhcmdldE9mZnNldC50b3AgLSBwb3NpdGlvbi50b3AsDQoJCQkJCWJvdHRvbSA9IHRvcCArIHRhcmdldEhlaWdodCAtIGVsZW1IZWlnaHQsDQoJCQkJCWZlZWRiYWNrID0gew0KCQkJCQkJdGFyZ2V0OiB7DQoJCQkJCQkJZWxlbWVudDogdGFyZ2V0LA0KCQkJCQkJCWxlZnQ6IHRhcmdldE9mZnNldC5sZWZ0LA0KCQkJCQkJCXRvcDogdGFyZ2V0T2Zmc2V0LnRvcCwNCgkJCQkJCQl3aWR0aDogdGFyZ2V0V2lkdGgsDQoJCQkJCQkJaGVpZ2h0OiB0YXJnZXRIZWlnaHQNCgkJCQkJCX0sDQoJCQkJCQllbGVtZW50OiB7DQoJCQkJCQkJZWxlbWVudDogZWxlbSwNCgkJCQkJCQlsZWZ0OiBwb3NpdGlvbi5sZWZ0LA0KCQkJCQkJCXRvcDogcG9zaXRpb24udG9wLA0KCQkJCQkJCXdpZHRoOiBlbGVtV2lkdGgsDQoJCQkJCQkJaGVpZ2h0OiBlbGVtSGVpZ2h0DQoJCQkJCQl9LA0KCQkJCQkJaG9yaXpvbnRhbDogcmlnaHQgPCAwID8gImxlZnQiIDogbGVmdCA+IDAgPyAicmlnaHQiIDogImNlbnRlciIsDQoJCQkJCQl2ZXJ0aWNhbDogYm90dG9tIDwgMCA/ICJ0b3AiIDogdG9wID4gMCA/ICJib3R0b20iIDogIm1pZGRsZSINCgkJCQkJfTsNCgkJCQlpZiAoIHRhcmdldFdpZHRoIDwgZWxlbVdpZHRoICYmIGFicyggbGVmdCArIHJpZ2h0ICkgPCB0YXJnZXRXaWR0aCApIHsNCgkJCQkJZmVlZGJhY2suaG9yaXpvbnRhbCA9ICJjZW50ZXIiOw0KCQkJCX0NCgkJCQlpZiAoIHRhcmdldEhlaWdodCA8IGVsZW1IZWlnaHQgJiYgYWJzKCB0b3AgKyBib3R0b20gKSA8IHRhcmdldEhlaWdodCApIHsNCgkJCQkJZmVlZGJhY2sudmVydGljYWwgPSAibWlkZGxlIjsNCgkJCQl9DQoJCQkJaWYgKCBtYXgoIGFicyggbGVmdCApLCBhYnMoIHJpZ2h0ICkgKSA+IG1heCggYWJzKCB0b3AgKSwgYWJzKCBib3R0b20gKSApICkgew0KCQkJCQlmZWVkYmFjay5pbXBvcnRhbnQgPSAiaG9yaXpvbnRhbCI7DQoJCQkJfSBlbHNlIHsNCgkJCQkJZmVlZGJhY2suaW1wb3J0YW50ID0gInZlcnRpY2FsIjsNCgkJCQl9DQoJCQkJb3B0aW9ucy51c2luZy5jYWxsKCB0aGlzLCBwcm9wcywgZmVlZGJhY2sgKTsNCgkJCX07DQoJCX0NCg0KCQllbGVtLm9mZnNldCggJC5leHRlbmQoIHBvc2l0aW9uLCB7IHVzaW5nOiB1c2luZyB9ICkgKTsNCgl9KTsNCn07DQoNCiQudWkucG9zaXRpb24gPSB7DQoJZml0OiB7DQoJCWxlZnQ6IGZ1bmN0aW9uKCBwb3NpdGlvbiwgZGF0YSApIHsNCgkJCXZhciB3aXRoaW4gPSBkYXRhLndpdGhpbiwNCgkJCQl3aXRoaW5PZmZzZXQgPSB3aXRoaW4uaXNXaW5kb3cgPyB3aXRoaW4uc2Nyb2xsTGVmdCA6IHdpdGhpbi5vZmZzZXQubGVmdCwNCgkJCQlvdXRlcldpZHRoID0gd2l0aGluLndpZHRoLA0KCQkJCWNvbGxpc2lvblBvc0xlZnQgPSBwb3NpdGlvbi5sZWZ0IC0gZGF0YS5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5MZWZ0LA0KCQkJCW92ZXJMZWZ0ID0gd2l0aGluT2Zmc2V0IC0gY29sbGlzaW9uUG9zTGVmdCwNCgkJCQlvdmVyUmlnaHQgPSBjb2xsaXNpb25Qb3NMZWZ0ICsgZGF0YS5jb2xsaXNpb25XaWR0aCAtIG91dGVyV2lkdGggLSB3aXRoaW5PZmZzZXQsDQoJCQkJbmV3T3ZlclJpZ2h0Ow0KDQoJCQkvLyBlbGVtZW50IGlzIHdpZGVyIHRoYW4gd2l0aGluDQoJCQlpZiAoIGRhdGEuY29sbGlzaW9uV2lkdGggPiBvdXRlcldpZHRoICkgew0KCQkJCS8vIGVsZW1lbnQgaXMgaW5pdGlhbGx5IG92ZXIgdGhlIGxlZnQgc2lkZSBvZiB3aXRoaW4NCgkJCQlpZiAoIG92ZXJMZWZ0ID4gMCAmJiBvdmVyUmlnaHQgPD0gMCApIHsNCgkJCQkJbmV3T3ZlclJpZ2h0ID0gcG9zaXRpb24ubGVmdCArIG92ZXJMZWZ0ICsgZGF0YS5jb2xsaXNpb25XaWR0aCAtIG91dGVyV2lkdGggLSB3aXRoaW5PZmZzZXQ7DQoJCQkJCXBvc2l0aW9uLmxlZnQgKz0gb3ZlckxlZnQgLSBuZXdPdmVyUmlnaHQ7DQoJCQkJLy8gZWxlbWVudCBpcyBpbml0aWFsbHkgb3ZlciByaWdodCBzaWRlIG9mIHdpdGhpbg0KCQkJCX0gZWxzZSBpZiAoIG92ZXJSaWdodCA+IDAgJiYgb3ZlckxlZnQgPD0gMCApIHsNCgkJCQkJcG9zaXRpb24ubGVmdCA9IHdpdGhpbk9mZnNldDsNCgkJCQkvLyBlbGVtZW50IGlzIGluaXRpYWxseSBvdmVyIGJvdGggbGVmdCBhbmQgcmlnaHQgc2lkZXMgb2Ygd2l0aGluDQoJCQkJfSBlbHNlIHsNCgkJCQkJaWYgKCBvdmVyTGVmdCA+IG92ZXJSaWdodCApIHsNCgkJCQkJCXBvc2l0aW9uLmxlZnQgPSB3aXRoaW5PZmZzZXQgKyBvdXRlcldpZHRoIC0gZGF0YS5jb2xsaXNpb25XaWR0aDsNCgkJCQkJfSBlbHNlIHsNCgkJCQkJCXBvc2l0aW9uLmxlZnQgPSB3aXRoaW5PZmZzZXQ7DQoJCQkJCX0NCgkJCQl9DQoJCQkvLyB0b28gZmFyIGxlZnQgLT4gYWxpZ24gd2l0aCBsZWZ0IGVkZ2UNCgkJCX0gZWxzZSBpZiAoIG92ZXJMZWZ0ID4gMCApIHsNCgkJCQlwb3NpdGlvbi5sZWZ0ICs9IG92ZXJMZWZ0Ow0KCQkJLy8gdG9vIGZhciByaWdodCAtPiBhbGlnbiB3aXRoIHJpZ2h0IGVkZ2UNCgkJCX0gZWxzZSBpZiAoIG92ZXJSaWdodCA+IDAgKSB7DQoJCQkJcG9zaXRpb24ubGVmdCAtPSBvdmVyUmlnaHQ7DQoJCQkvLyBhZGp1c3QgYmFzZWQgb24gcG9zaXRpb24gYW5kIG1hcmdpbg0KCQkJfSBlbHNlIHsNCgkJCQlwb3NpdGlvbi5sZWZ0ID0gbWF4KCBwb3NpdGlvbi5sZWZ0IC0gY29sbGlzaW9uUG9zTGVmdCwgcG9zaXRpb24ubGVmdCApOw0KCQkJfQ0KCQl9LA0KCQl0b3A6IGZ1bmN0aW9uKCBwb3NpdGlvbiwgZGF0YSApIHsNCgkJCXZhciB3aXRoaW4gPSBkYXRhLndpdGhpbiwNCgkJCQl3aXRoaW5PZmZzZXQgPSB3aXRoaW4uaXNXaW5kb3cgPyB3aXRoaW4uc2Nyb2xsVG9wIDogd2l0aGluLm9mZnNldC50b3AsDQoJCQkJb3V0ZXJIZWlnaHQgPSBkYXRhLndpdGhpbi5oZWlnaHQsDQoJCQkJY29sbGlzaW9uUG9zVG9wID0gcG9zaXRpb24udG9wIC0gZGF0YS5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5Ub3AsDQoJCQkJb3ZlclRvcCA9IHdpdGhpbk9mZnNldCAtIGNvbGxpc2lvblBvc1RvcCwNCgkJCQlvdmVyQm90dG9tID0gY29sbGlzaW9uUG9zVG9wICsgZGF0YS5jb2xsaXNpb25IZWlnaHQgLSBvdXRlckhlaWdodCAtIHdpdGhpbk9mZnNldCwNCgkJCQluZXdPdmVyQm90dG9tOw0KDQoJCQkvLyBlbGVtZW50IGlzIHRhbGxlciB0aGFuIHdpdGhpbg0KCQkJaWYgKCBkYXRhLmNvbGxpc2lvbkhlaWdodCA+IG91dGVySGVpZ2h0ICkgew0KCQkJCS8vIGVsZW1lbnQgaXMgaW5pdGlhbGx5IG92ZXIgdGhlIHRvcCBvZiB3aXRoaW4NCgkJCQlpZiAoIG92ZXJUb3AgPiAwICYmIG92ZXJCb3R0b20gPD0gMCApIHsNCgkJCQkJbmV3T3ZlckJvdHRvbSA9IHBvc2l0aW9uLnRvcCArIG92ZXJUb3AgKyBkYXRhLmNvbGxpc2lvbkhlaWdodCAtIG91dGVySGVpZ2h0IC0gd2l0aGluT2Zmc2V0Ow0KCQkJCQlwb3NpdGlvbi50b3AgKz0gb3ZlclRvcCAtIG5ld092ZXJCb3R0b207DQoJCQkJLy8gZWxlbWVudCBpcyBpbml0aWFsbHkgb3ZlciBib3R0b20gb2Ygd2l0aGluDQoJCQkJfSBlbHNlIGlmICggb3ZlckJvdHRvbSA+IDAgJiYgb3ZlclRvcCA8PSAwICkgew0KCQkJCQlwb3NpdGlvbi50b3AgPSB3aXRoaW5PZmZzZXQ7DQoJCQkJLy8gZWxlbWVudCBpcyBpbml0aWFsbHkgb3ZlciBib3RoIHRvcCBhbmQgYm90dG9tIG9mIHdpdGhpbg0KCQkJCX0gZWxzZSB7DQoJCQkJCWlmICggb3ZlclRvcCA+IG92ZXJCb3R0b20gKSB7DQoJCQkJCQlwb3NpdGlvbi50b3AgPSB3aXRoaW5PZmZzZXQgKyBvdXRlckhlaWdodCAtIGRhdGEuY29sbGlzaW9uSGVpZ2h0Ow0KCQkJCQl9IGVsc2Ugew0KCQkJCQkJcG9zaXRpb24udG9wID0gd2l0aGluT2Zmc2V0Ow0KCQkJCQl9DQoJCQkJfQ0KCQkJLy8gdG9vIGZhciB1cCAtPiBhbGlnbiB3aXRoIHRvcA0KCQkJfSBlbHNlIGlmICggb3ZlclRvcCA+IDAgKSB7DQoJCQkJcG9zaXRpb24udG9wICs9IG92ZXJUb3A7DQoJCQkvLyB0b28gZmFyIGRvd24gLT4gYWxpZ24gd2l0aCBib3R0b20gZWRnZQ0KCQkJfSBlbHNlIGlmICggb3ZlckJvdHRvbSA+IDAgKSB7DQoJCQkJcG9zaXRpb24udG9wIC09IG92ZXJCb3R0b207DQoJCQkvLyBhZGp1c3QgYmFzZWQgb24gcG9zaXRpb24gYW5kIG1hcmdpbg0KCQkJfSBlbHNlIHsNCgkJCQlwb3NpdGlvbi50b3AgPSBtYXgoIHBvc2l0aW9uLnRvcCAtIGNvbGxpc2lvblBvc1RvcCwgcG9zaXRpb24udG9wICk7DQoJCQl9DQoJCX0NCgl9LA0KCWZsaXA6IHsNCgkJbGVmdDogZnVuY3Rpb24oIHBvc2l0aW9uLCBkYXRhICkgew0KCQkJdmFyIHdpdGhpbiA9IGRhdGEud2l0aGluLA0KCQkJCXdpdGhpbk9mZnNldCA9IHdpdGhpbi5vZmZzZXQubGVmdCArIHdpdGhpbi5zY3JvbGxMZWZ0LA0KCQkJCW91dGVyV2lkdGggPSB3aXRoaW4ud2lkdGgsDQoJCQkJb2Zmc2V0TGVmdCA9IHdpdGhpbi5pc1dpbmRvdyA/IHdpdGhpbi5zY3JvbGxMZWZ0IDogd2l0aGluLm9mZnNldC5sZWZ0LA0KCQkJCWNvbGxpc2lvblBvc0xlZnQgPSBwb3NpdGlvbi5sZWZ0IC0gZGF0YS5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5MZWZ0LA0KCQkJCW92ZXJMZWZ0ID0gY29sbGlzaW9uUG9zTGVmdCAtIG9mZnNldExlZnQsDQoJCQkJb3ZlclJpZ2h0ID0gY29sbGlzaW9uUG9zTGVmdCArIGRhdGEuY29sbGlzaW9uV2lkdGggLSBvdXRlcldpZHRoIC0gb2Zmc2V0TGVmdCwNCgkJCQlteU9mZnNldCA9IGRhdGEubXlbIDAgXSA9PT0gImxlZnQiID8NCgkJCQkJLWRhdGEuZWxlbVdpZHRoIDoNCgkJCQkJZGF0YS5teVsgMCBdID09PSAicmlnaHQiID8NCgkJCQkJCWRhdGEuZWxlbVdpZHRoIDoNCgkJCQkJCTAsDQoJCQkJYXRPZmZzZXQgPSBkYXRhLmF0WyAwIF0gPT09ICJsZWZ0IiA/DQoJCQkJCWRhdGEudGFyZ2V0V2lkdGggOg0KCQkJCQlkYXRhLmF0WyAwIF0gPT09ICJyaWdodCIgPw0KCQkJCQkJLWRhdGEudGFyZ2V0V2lkdGggOg0KCQkJCQkJMCwNCgkJCQlvZmZzZXQgPSAtMiAqIGRhdGEub2Zmc2V0WyAwIF0sDQoJCQkJbmV3T3ZlclJpZ2h0LA0KCQkJCW5ld092ZXJMZWZ0Ow0KDQoJCQlpZiAoIG92ZXJMZWZ0IDwgMCApIHsNCgkJCQluZXdPdmVyUmlnaHQgPSBwb3NpdGlvbi5sZWZ0ICsgbXlPZmZzZXQgKyBhdE9mZnNldCArIG9mZnNldCArIGRhdGEuY29sbGlzaW9uV2lkdGggLSBvdXRlcldpZHRoIC0gd2l0aGluT2Zmc2V0Ow0KCQkJCWlmICggbmV3T3ZlclJpZ2h0IDwgMCB8fCBuZXdPdmVyUmlnaHQgPCBhYnMoIG92ZXJMZWZ0ICkgKSB7DQoJCQkJCXBvc2l0aW9uLmxlZnQgKz0gbXlPZmZzZXQgKyBhdE9mZnNldCArIG9mZnNldDsNCgkJCQl9DQoJCQl9IGVsc2UgaWYgKCBvdmVyUmlnaHQgPiAwICkgew0KCQkJCW5ld092ZXJMZWZ0ID0gcG9zaXRpb24ubGVmdCAtIGRhdGEuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luTGVmdCArIG15T2Zmc2V0ICsgYXRPZmZzZXQgKyBvZmZzZXQgLSBvZmZzZXRMZWZ0Ow0KCQkJCWlmICggbmV3T3ZlckxlZnQgPiAwIHx8IGFicyggbmV3T3ZlckxlZnQgKSA8IG92ZXJSaWdodCApIHsNCgkJCQkJcG9zaXRpb24ubGVmdCArPSBteU9mZnNldCArIGF0T2Zmc2V0ICsgb2Zmc2V0Ow0KCQkJCX0NCgkJCX0NCgkJfSwNCgkJdG9wOiBmdW5jdGlvbiggcG9zaXRpb24sIGRhdGEgKSB7DQoJCQl2YXIgd2l0aGluID0gZGF0YS53aXRoaW4sDQoJCQkJd2l0aGluT2Zmc2V0ID0gd2l0aGluLm9mZnNldC50b3AgKyB3aXRoaW4uc2Nyb2xsVG9wLA0KCQkJCW91dGVySGVpZ2h0ID0gd2l0aGluLmhlaWdodCwNCgkJCQlvZmZzZXRUb3AgPSB3aXRoaW4uaXNXaW5kb3cgPyB3aXRoaW4uc2Nyb2xsVG9wIDogd2l0aGluLm9mZnNldC50b3AsDQoJCQkJY29sbGlzaW9uUG9zVG9wID0gcG9zaXRpb24udG9wIC0gZGF0YS5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5Ub3AsDQoJCQkJb3ZlclRvcCA9IGNvbGxpc2lvblBvc1RvcCAtIG9mZnNldFRvcCwNCgkJCQlvdmVyQm90dG9tID0gY29sbGlzaW9uUG9zVG9wICsgZGF0YS5jb2xsaXNpb25IZWlnaHQgLSBvdXRlckhlaWdodCAtIG9mZnNldFRvcCwNCgkJCQl0b3AgPSBkYXRhLm15WyAxIF0gPT09ICJ0b3AiLA0KCQkJCW15T2Zmc2V0ID0gdG9wID8NCgkJCQkJLWRhdGEuZWxlbUhlaWdodCA6DQoJCQkJCWRhdGEubXlbIDEgXSA9PT0gImJvdHRvbSIgPw0KCQkJCQkJZGF0YS5lbGVtSGVpZ2h0IDoNCgkJCQkJCTAsDQoJCQkJYXRPZmZzZXQgPSBkYXRhLmF0WyAxIF0gPT09ICJ0b3AiID8NCgkJCQkJZGF0YS50YXJnZXRIZWlnaHQgOg0KCQkJCQlkYXRhLmF0WyAxIF0gPT09ICJib3R0b20iID8NCgkJCQkJCS1kYXRhLnRhcmdldEhlaWdodCA6DQoJCQkJCQkwLA0KCQkJCW9mZnNldCA9IC0yICogZGF0YS5vZmZzZXRbIDEgXSwNCgkJCQluZXdPdmVyVG9wLA0KCQkJCW5ld092ZXJCb3R0b207DQoJCQlpZiAoIG92ZXJUb3AgPCAwICkgew0KCQkJCW5ld092ZXJCb3R0b20gPSBwb3NpdGlvbi50b3AgKyBteU9mZnNldCArIGF0T2Zmc2V0ICsgb2Zmc2V0ICsgZGF0YS5jb2xsaXNpb25IZWlnaHQgLSBvdXRlckhlaWdodCAtIHdpdGhpbk9mZnNldDsNCgkJCQlpZiAoICggcG9zaXRpb24udG9wICsgbXlPZmZzZXQgKyBhdE9mZnNldCArIG9mZnNldCkgPiBvdmVyVG9wICYmICggbmV3T3ZlckJvdHRvbSA8IDAgfHwgbmV3T3ZlckJvdHRvbSA8IGFicyggb3ZlclRvcCApICkgKSB7DQoJCQkJCXBvc2l0aW9uLnRvcCArPSBteU9mZnNldCArIGF0T2Zmc2V0ICsgb2Zmc2V0Ow0KCQkJCX0NCgkJCX0gZWxzZSBpZiAoIG92ZXJCb3R0b20gPiAwICkgew0KCQkJCW5ld092ZXJUb3AgPSBwb3NpdGlvbi50b3AgLSBkYXRhLmNvbGxpc2lvblBvc2l0aW9uLm1hcmdpblRvcCArIG15T2Zmc2V0ICsgYXRPZmZzZXQgKyBvZmZzZXQgLSBvZmZzZXRUb3A7DQoJCQkJaWYgKCAoIHBvc2l0aW9uLnRvcCArIG15T2Zmc2V0ICsgYXRPZmZzZXQgKyBvZmZzZXQpID4gb3ZlckJvdHRvbSAmJiAoIG5ld092ZXJUb3AgPiAwIHx8IGFicyggbmV3T3ZlclRvcCApIDwgb3ZlckJvdHRvbSApICkgew0KCQkJCQlwb3NpdGlvbi50b3AgKz0gbXlPZmZzZXQgKyBhdE9mZnNldCArIG9mZnNldDsNCgkJCQl9DQoJCQl9DQoJCX0NCgl9LA0KCWZsaXBmaXQ6IHsNCgkJbGVmdDogZnVuY3Rpb24oKSB7DQoJCQkkLnVpLnBvc2l0aW9uLmZsaXAubGVmdC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7DQoJCQkkLnVpLnBvc2l0aW9uLmZpdC5sZWZ0LmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsNCgkJfSwNCgkJdG9wOiBmdW5jdGlvbigpIHsNCgkJCSQudWkucG9zaXRpb24uZmxpcC50b3AuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOw0KCQkJJC51aS5wb3NpdGlvbi5maXQudG9wLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsNCgkJfQ0KCX0NCn07DQoNCi8vIGZyYWN0aW9uIHN1cHBvcnQgdGVzdA0KKGZ1bmN0aW9uKCkgew0KCXZhciB0ZXN0RWxlbWVudCwgdGVzdEVsZW1lbnRQYXJlbnQsIHRlc3RFbGVtZW50U3R5bGUsIG9mZnNldExlZnQsIGksDQoJCWJvZHkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSggImJvZHkiIClbIDAgXSwNCgkJZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImRpdiIgKTsNCg0KCS8vQ3JlYXRlIGEgImZha2UgYm9keSIgZm9yIHRlc3RpbmcgYmFzZWQgb24gbWV0aG9kIHVzZWQgaW4galF1ZXJ5LnN1cHBvcnQNCgl0ZXN0RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIGJvZHkgPyAiZGl2IiA6ICJib2R5IiApOw0KCXRlc3RFbGVtZW50U3R5bGUgPSB7DQoJCXZpc2liaWxpdHk6ICJoaWRkZW4iLA0KCQl3aWR0aDogMCwNCgkJaGVpZ2h0OiAwLA0KCQlib3JkZXI6IDAsDQoJCW1hcmdpbjogMCwNCgkJYmFja2dyb3VuZDogIm5vbmUiDQoJfTsNCglpZiAoIGJvZHkgKSB7DQoJCSQuZXh0ZW5kKCB0ZXN0RWxlbWVudFN0eWxlLCB7DQoJCQlwb3NpdGlvbjogImFic29sdXRlIiwNCgkJCWxlZnQ6ICItMTAwMHB4IiwNCgkJCXRvcDogIi0xMDAwcHgiDQoJCX0pOw0KCX0NCglmb3IgKCBpIGluIHRlc3RFbGVtZW50U3R5bGUgKSB7DQoJCXRlc3RFbGVtZW50LnN0eWxlWyBpIF0gPSB0ZXN0RWxlbWVudFN0eWxlWyBpIF07DQoJfQ0KCXRlc3RFbGVtZW50LmFwcGVuZENoaWxkKCBkaXYgKTsNCgl0ZXN0RWxlbWVudFBhcmVudCA9IGJvZHkgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Ow0KCXRlc3RFbGVtZW50UGFyZW50Lmluc2VydEJlZm9yZSggdGVzdEVsZW1lbnQsIHRlc3RFbGVtZW50UGFyZW50LmZpcnN0Q2hpbGQgKTsNCg0KCWRpdi5zdHlsZS5jc3NUZXh0ID0gInBvc2l0aW9uOiBhYnNvbHV0ZTsgbGVmdDogMTAuNzQzMjIyMnB4OyI7DQoNCglvZmZzZXRMZWZ0ID0gJCggZGl2ICkub2Zmc2V0KCkubGVmdDsNCglzdXBwb3J0c09mZnNldEZyYWN0aW9ucyA9IG9mZnNldExlZnQgPiAxMCAmJiBvZmZzZXRMZWZ0IDwgMTE7DQoNCgl0ZXN0RWxlbWVudC5pbm5lckhUTUwgPSAiIjsNCgl0ZXN0RWxlbWVudFBhcmVudC5yZW1vdmVDaGlsZCggdGVzdEVsZW1lbnQgKTsNCn0pKCk7DQoNCn0pKCk7DQoNCnZhciBwb3NpdGlvbiA9ICQudWkucG9zaXRpb247DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgQWNjb3JkaW9uIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9hY2NvcmRpb24vDQogKi8NCg0KDQp2YXIgYWNjb3JkaW9uID0gJC53aWRnZXQoICJ1aS5hY2NvcmRpb24iLCB7DQoJdmVyc2lvbjogIjEuMTEuMiIsDQoJb3B0aW9uczogew0KCQlhY3RpdmU6IDAsDQoJCWFuaW1hdGU6IHt9LA0KCQljb2xsYXBzaWJsZTogZmFsc2UsDQoJCWV2ZW50OiAiY2xpY2siLA0KCQloZWFkZXI6ICI+IGxpID4gOmZpcnN0LWNoaWxkLD4gOm5vdChsaSk6ZXZlbiIsDQoJCWhlaWdodFN0eWxlOiAiYXV0byIsDQoJCWljb25zOiB7DQoJCQlhY3RpdmVIZWFkZXI6ICJ1aS1pY29uLXRyaWFuZ2xlLTEtcyIsDQoJCQloZWFkZXI6ICJ1aS1pY29uLXRyaWFuZ2xlLTEtZSINCgkJfSwNCg0KCQkvLyBjYWxsYmFja3MNCgkJYWN0aXZhdGU6IG51bGwsDQoJCWJlZm9yZUFjdGl2YXRlOiBudWxsDQoJfSwNCg0KCWhpZGVQcm9wczogew0KCQlib3JkZXJUb3BXaWR0aDogImhpZGUiLA0KCQlib3JkZXJCb3R0b21XaWR0aDogImhpZGUiLA0KCQlwYWRkaW5nVG9wOiAiaGlkZSIsDQoJCXBhZGRpbmdCb3R0b206ICJoaWRlIiwNCgkJaGVpZ2h0OiAiaGlkZSINCgl9LA0KDQoJc2hvd1Byb3BzOiB7DQoJCWJvcmRlclRvcFdpZHRoOiAic2hvdyIsDQoJCWJvcmRlckJvdHRvbVdpZHRoOiAic2hvdyIsDQoJCXBhZGRpbmdUb3A6ICJzaG93IiwNCgkJcGFkZGluZ0JvdHRvbTogInNob3ciLA0KCQloZWlnaHQ6ICJzaG93Ig0KCX0sDQoNCglfY3JlYXRlOiBmdW5jdGlvbigpIHsNCgkJdmFyIG9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7DQoJCXRoaXMucHJldlNob3cgPSB0aGlzLnByZXZIaWRlID0gJCgpOw0KCQl0aGlzLmVsZW1lbnQuYWRkQ2xhc3MoICJ1aS1hY2NvcmRpb24gdWktd2lkZ2V0IHVpLWhlbHBlci1yZXNldCIgKQ0KCQkJLy8gQVJJQQ0KCQkJLmF0dHIoICJyb2xlIiwgInRhYmxpc3QiICk7DQoNCgkJLy8gZG9uJ3QgYWxsb3cgY29sbGFwc2libGU6IGZhbHNlIGFuZCBhY3RpdmU6IGZhbHNlIC8gbnVsbA0KCQlpZiAoICFvcHRpb25zLmNvbGxhcHNpYmxlICYmIChvcHRpb25zLmFjdGl2ZSA9PT0gZmFsc2UgfHwgb3B0aW9ucy5hY3RpdmUgPT0gbnVsbCkgKSB7DQoJCQlvcHRpb25zLmFjdGl2ZSA9IDA7DQoJCX0NCg0KCQl0aGlzLl9wcm9jZXNzUGFuZWxzKCk7DQoJCS8vIGhhbmRsZSBuZWdhdGl2ZSB2YWx1ZXMNCgkJaWYgKCBvcHRpb25zLmFjdGl2ZSA8IDAgKSB7DQoJCQlvcHRpb25zLmFjdGl2ZSArPSB0aGlzLmhlYWRlcnMubGVuZ3RoOw0KCQl9DQoJCXRoaXMuX3JlZnJlc2goKTsNCgl9LA0KDQoJX2dldENyZWF0ZUV2ZW50RGF0YTogZnVuY3Rpb24oKSB7DQoJCXJldHVybiB7DQoJCQloZWFkZXI6IHRoaXMuYWN0aXZlLA0KCQkJcGFuZWw6ICF0aGlzLmFjdGl2ZS5sZW5ndGggPyAkKCkgOiB0aGlzLmFjdGl2ZS5uZXh0KCkNCgkJfTsNCgl9LA0KDQoJX2NyZWF0ZUljb25zOiBmdW5jdGlvbigpIHsNCgkJdmFyIGljb25zID0gdGhpcy5vcHRpb25zLmljb25zOw0KCQlpZiAoIGljb25zICkgew0KCQkJJCggIjxzcGFuPiIgKQ0KCQkJCS5hZGRDbGFzcyggInVpLWFjY29yZGlvbi1oZWFkZXItaWNvbiB1aS1pY29uICIgKyBpY29ucy5oZWFkZXIgKQ0KCQkJCS5wcmVwZW5kVG8oIHRoaXMuaGVhZGVycyApOw0KCQkJdGhpcy5hY3RpdmUuY2hpbGRyZW4oICIudWktYWNjb3JkaW9uLWhlYWRlci1pY29uIiApDQoJCQkJLnJlbW92ZUNsYXNzKCBpY29ucy5oZWFkZXIgKQ0KCQkJCS5hZGRDbGFzcyggaWNvbnMuYWN0aXZlSGVhZGVyICk7DQoJCQl0aGlzLmhlYWRlcnMuYWRkQ2xhc3MoICJ1aS1hY2NvcmRpb24taWNvbnMiICk7DQoJCX0NCgl9LA0KDQoJX2Rlc3Ryb3lJY29uczogZnVuY3Rpb24oKSB7DQoJCXRoaXMuaGVhZGVycw0KCQkJLnJlbW92ZUNsYXNzKCAidWktYWNjb3JkaW9uLWljb25zIiApDQoJCQkuY2hpbGRyZW4oICIudWktYWNjb3JkaW9uLWhlYWRlci1pY29uIiApDQoJCQkJLnJlbW92ZSgpOw0KCX0sDQoNCglfZGVzdHJveTogZnVuY3Rpb24oKSB7DQoJCXZhciBjb250ZW50czsNCg0KCQkvLyBjbGVhbiB1cCBtYWluIGVsZW1lbnQNCgkJdGhpcy5lbGVtZW50DQoJCQkucmVtb3ZlQ2xhc3MoICJ1aS1hY2NvcmRpb24gdWktd2lkZ2V0IHVpLWhlbHBlci1yZXNldCIgKQ0KCQkJLnJlbW92ZUF0dHIoICJyb2xlIiApOw0KDQoJCS8vIGNsZWFuIHVwIGhlYWRlcnMNCgkJdGhpcy5oZWFkZXJzDQoJCQkucmVtb3ZlQ2xhc3MoICJ1aS1hY2NvcmRpb24taGVhZGVyIHVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIHVpLXN0YXRlLWRlZmF1bHQgIiArDQoJCQkJInVpLWNvcm5lci1hbGwgdWktc3RhdGUtYWN0aXZlIHVpLXN0YXRlLWRpc2FibGVkIHVpLWNvcm5lci10b3AiICkNCgkJCS5yZW1vdmVBdHRyKCAicm9sZSIgKQ0KCQkJLnJlbW92ZUF0dHIoICJhcmlhLWV4cGFuZGVkIiApDQoJCQkucmVtb3ZlQXR0ciggImFyaWEtc2VsZWN0ZWQiICkNCgkJCS5yZW1vdmVBdHRyKCAiYXJpYS1jb250cm9scyIgKQ0KCQkJLnJlbW92ZUF0dHIoICJ0YWJJbmRleCIgKQ0KCQkJLnJlbW92ZVVuaXF1ZUlkKCk7DQoNCgkJdGhpcy5fZGVzdHJveUljb25zKCk7DQoNCgkJLy8gY2xlYW4gdXAgY29udGVudCBwYW5lbHMNCgkJY29udGVudHMgPSB0aGlzLmhlYWRlcnMubmV4dCgpDQoJCQkucmVtb3ZlQ2xhc3MoICJ1aS1oZWxwZXItcmVzZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktY29ybmVyLWJvdHRvbSAiICsNCgkJCQkidWktYWNjb3JkaW9uLWNvbnRlbnQgdWktYWNjb3JkaW9uLWNvbnRlbnQtYWN0aXZlIHVpLXN0YXRlLWRpc2FibGVkIiApDQoJCQkuY3NzKCAiZGlzcGxheSIsICIiICkNCgkJCS5yZW1vdmVBdHRyKCAicm9sZSIgKQ0KCQkJLnJlbW92ZUF0dHIoICJhcmlhLWhpZGRlbiIgKQ0KCQkJLnJlbW92ZUF0dHIoICJhcmlhLWxhYmVsbGVkYnkiICkNCgkJCS5yZW1vdmVVbmlxdWVJZCgpOw0KDQoJCWlmICggdGhpcy5vcHRpb25zLmhlaWdodFN0eWxlICE9PSAiY29udGVudCIgKSB7DQoJCQljb250ZW50cy5jc3MoICJoZWlnaHQiLCAiIiApOw0KCQl9DQoJfSwNCg0KCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgew0KCQlpZiAoIGtleSA9PT0gImFjdGl2ZSIgKSB7DQoJCQkvLyBfYWN0aXZhdGUoKSB3aWxsIGhhbmRsZSBpbnZhbGlkIHZhbHVlcyBhbmQgdXBkYXRlIHRoaXMub3B0aW9ucw0KCQkJdGhpcy5fYWN0aXZhdGUoIHZhbHVlICk7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQlpZiAoIGtleSA9PT0gImV2ZW50IiApIHsNCgkJCWlmICggdGhpcy5vcHRpb25zLmV2ZW50ICkgew0KCQkJCXRoaXMuX29mZiggdGhpcy5oZWFkZXJzLCB0aGlzLm9wdGlvbnMuZXZlbnQgKTsNCgkJCX0NCgkJCXRoaXMuX3NldHVwRXZlbnRzKCB2YWx1ZSApOw0KCQl9DQoNCgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsNCg0KCQkvLyBzZXR0aW5nIGNvbGxhcHNpYmxlOiBmYWxzZSB3aGlsZSBjb2xsYXBzZWQ7IG9wZW4gZmlyc3QgcGFuZWwNCgkJaWYgKCBrZXkgPT09ICJjb2xsYXBzaWJsZSIgJiYgIXZhbHVlICYmIHRoaXMub3B0aW9ucy5hY3RpdmUgPT09IGZhbHNlICkgew0KCQkJdGhpcy5fYWN0aXZhdGUoIDAgKTsNCgkJfQ0KDQoJCWlmICgga2V5ID09PSAiaWNvbnMiICkgew0KCQkJdGhpcy5fZGVzdHJveUljb25zKCk7DQoJCQlpZiAoIHZhbHVlICkgew0KCQkJCXRoaXMuX2NyZWF0ZUljb25zKCk7DQoJCQl9DQoJCX0NCg0KCQkvLyAjNTMzMiAtIG9wYWNpdHkgZG9lc24ndCBjYXNjYWRlIHRvIHBvc2l0aW9uZWQgZWxlbWVudHMgaW4gSUUNCgkJLy8gc28gd2UgbmVlZCB0byBhZGQgdGhlIGRpc2FibGVkIGNsYXNzIHRvIHRoZSBoZWFkZXJzIGFuZCBwYW5lbHMNCgkJaWYgKCBrZXkgPT09ICJkaXNhYmxlZCIgKSB7DQoJCQl0aGlzLmVsZW1lbnQNCgkJCQkudG9nZ2xlQ2xhc3MoICJ1aS1zdGF0ZS1kaXNhYmxlZCIsICEhdmFsdWUgKQ0KCQkJCS5hdHRyKCAiYXJpYS1kaXNhYmxlZCIsIHZhbHVlICk7DQoJCQl0aGlzLmhlYWRlcnMuYWRkKCB0aGlzLmhlYWRlcnMubmV4dCgpICkNCgkJCQkudG9nZ2xlQ2xhc3MoICJ1aS1zdGF0ZS1kaXNhYmxlZCIsICEhdmFsdWUgKTsNCgkJfQ0KCX0sDQoNCglfa2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQlpZiAoIGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5ICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJdmFyIGtleUNvZGUgPSAkLnVpLmtleUNvZGUsDQoJCQlsZW5ndGggPSB0aGlzLmhlYWRlcnMubGVuZ3RoLA0KCQkJY3VycmVudEluZGV4ID0gdGhpcy5oZWFkZXJzLmluZGV4KCBldmVudC50YXJnZXQgKSwNCgkJCXRvRm9jdXMgPSBmYWxzZTsNCg0KCQlzd2l0Y2ggKCBldmVudC5rZXlDb2RlICkgew0KCQkJY2FzZSBrZXlDb2RlLlJJR0hUOg0KCQkJY2FzZSBrZXlDb2RlLkRPV046DQoJCQkJdG9Gb2N1cyA9IHRoaXMuaGVhZGVyc1sgKCBjdXJyZW50SW5kZXggKyAxICkgJSBsZW5ndGggXTsNCgkJCQlicmVhazsNCgkJCWNhc2Uga2V5Q29kZS5MRUZUOg0KCQkJY2FzZSBrZXlDb2RlLlVQOg0KCQkJCXRvRm9jdXMgPSB0aGlzLmhlYWRlcnNbICggY3VycmVudEluZGV4IC0gMSArIGxlbmd0aCApICUgbGVuZ3RoIF07DQoJCQkJYnJlYWs7DQoJCQljYXNlIGtleUNvZGUuU1BBQ0U6DQoJCQljYXNlIGtleUNvZGUuRU5URVI6DQoJCQkJdGhpcy5fZXZlbnRIYW5kbGVyKCBldmVudCApOw0KCQkJCWJyZWFrOw0KCQkJY2FzZSBrZXlDb2RlLkhPTUU6DQoJCQkJdG9Gb2N1cyA9IHRoaXMuaGVhZGVyc1sgMCBdOw0KCQkJCWJyZWFrOw0KCQkJY2FzZSBrZXlDb2RlLkVORDoNCgkJCQl0b0ZvY3VzID0gdGhpcy5oZWFkZXJzWyBsZW5ndGggLSAxIF07DQoJCQkJYnJlYWs7DQoJCX0NCg0KCQlpZiAoIHRvRm9jdXMgKSB7DQoJCQkkKCBldmVudC50YXJnZXQgKS5hdHRyKCAidGFiSW5kZXgiLCAtMSApOw0KCQkJJCggdG9Gb2N1cyApLmF0dHIoICJ0YWJJbmRleCIsIDAgKTsNCgkJCXRvRm9jdXMuZm9jdXMoKTsNCgkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQoJCX0NCgl9LA0KDQoJX3BhbmVsS2V5RG93bjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQlpZiAoIGV2ZW50LmtleUNvZGUgPT09ICQudWkua2V5Q29kZS5VUCAmJiBldmVudC5jdHJsS2V5ICkgew0KCQkJJCggZXZlbnQuY3VycmVudFRhcmdldCApLnByZXYoKS5mb2N1cygpOw0KCQl9DQoJfSwNCg0KCXJlZnJlc2g6IGZ1bmN0aW9uKCkgew0KCQl2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9uczsNCgkJdGhpcy5fcHJvY2Vzc1BhbmVscygpOw0KDQoJCS8vIHdhcyBjb2xsYXBzZWQgb3Igbm8gcGFuZWwNCgkJaWYgKCAoIG9wdGlvbnMuYWN0aXZlID09PSBmYWxzZSAmJiBvcHRpb25zLmNvbGxhcHNpYmxlID09PSB0cnVlICkgfHwgIXRoaXMuaGVhZGVycy5sZW5ndGggKSB7DQoJCQlvcHRpb25zLmFjdGl2ZSA9IGZhbHNlOw0KCQkJdGhpcy5hY3RpdmUgPSAkKCk7DQoJCS8vIGFjdGl2ZSBmYWxzZSBvbmx5IHdoZW4gY29sbGFwc2libGUgaXMgdHJ1ZQ0KCQl9IGVsc2UgaWYgKCBvcHRpb25zLmFjdGl2ZSA9PT0gZmFsc2UgKSB7DQoJCQl0aGlzLl9hY3RpdmF0ZSggMCApOw0KCQkvLyB3YXMgYWN0aXZlLCBidXQgYWN0aXZlIHBhbmVsIGlzIGdvbmUNCgkJfSBlbHNlIGlmICggdGhpcy5hY3RpdmUubGVuZ3RoICYmICEkLmNvbnRhaW5zKCB0aGlzLmVsZW1lbnRbIDAgXSwgdGhpcy5hY3RpdmVbIDAgXSApICkgew0KCQkJLy8gYWxsIHJlbWFpbmluZyBwYW5lbCBhcmUgZGlzYWJsZWQNCgkJCWlmICggdGhpcy5oZWFkZXJzLmxlbmd0aCA9PT0gdGhpcy5oZWFkZXJzLmZpbmQoIi51aS1zdGF0ZS1kaXNhYmxlZCIpLmxlbmd0aCApIHsNCgkJCQlvcHRpb25zLmFjdGl2ZSA9IGZhbHNlOw0KCQkJCXRoaXMuYWN0aXZlID0gJCgpOw0KCQkJLy8gYWN0aXZhdGUgcHJldmlvdXMgcGFuZWwNCgkJCX0gZWxzZSB7DQoJCQkJdGhpcy5fYWN0aXZhdGUoIE1hdGgubWF4KCAwLCBvcHRpb25zLmFjdGl2ZSAtIDEgKSApOw0KCQkJfQ0KCQkvLyB3YXMgYWN0aXZlLCBhY3RpdmUgcGFuZWwgc3RpbGwgZXhpc3RzDQoJCX0gZWxzZSB7DQoJCQkvLyBtYWtlIHN1cmUgYWN0aXZlIGluZGV4IGlzIGNvcnJlY3QNCgkJCW9wdGlvbnMuYWN0aXZlID0gdGhpcy5oZWFkZXJzLmluZGV4KCB0aGlzLmFjdGl2ZSApOw0KCQl9DQoNCgkJdGhpcy5fZGVzdHJveUljb25zKCk7DQoNCgkJdGhpcy5fcmVmcmVzaCgpOw0KCX0sDQoNCglfcHJvY2Vzc1BhbmVsczogZnVuY3Rpb24oKSB7DQoJCXZhciBwcmV2SGVhZGVycyA9IHRoaXMuaGVhZGVycywNCgkJCXByZXZQYW5lbHMgPSB0aGlzLnBhbmVsczsNCg0KCQl0aGlzLmhlYWRlcnMgPSB0aGlzLmVsZW1lbnQuZmluZCggdGhpcy5vcHRpb25zLmhlYWRlciApDQoJCQkuYWRkQ2xhc3MoICJ1aS1hY2NvcmRpb24taGVhZGVyIHVpLXN0YXRlLWRlZmF1bHQgdWktY29ybmVyLWFsbCIgKTsNCg0KCQl0aGlzLnBhbmVscyA9IHRoaXMuaGVhZGVycy5uZXh0KCkNCgkJCS5hZGRDbGFzcyggInVpLWFjY29yZGlvbi1jb250ZW50IHVpLWhlbHBlci1yZXNldCB1aS13aWRnZXQtY29udGVudCB1aS1jb3JuZXItYm90dG9tIiApDQoJCQkuZmlsdGVyKCAiOm5vdCgudWktYWNjb3JkaW9uLWNvbnRlbnQtYWN0aXZlKSIgKQ0KCQkJLmhpZGUoKTsNCg0KCQkvLyBBdm9pZCBtZW1vcnkgbGVha3MgKCMxMDA1NikNCgkJaWYgKCBwcmV2UGFuZWxzICkgew0KCQkJdGhpcy5fb2ZmKCBwcmV2SGVhZGVycy5ub3QoIHRoaXMuaGVhZGVycyApICk7DQoJCQl0aGlzLl9vZmYoIHByZXZQYW5lbHMubm90KCB0aGlzLnBhbmVscyApICk7DQoJCX0NCgl9LA0KDQoJX3JlZnJlc2g6IGZ1bmN0aW9uKCkgew0KCQl2YXIgbWF4SGVpZ2h0LA0KCQkJb3B0aW9ucyA9IHRoaXMub3B0aW9ucywNCgkJCWhlaWdodFN0eWxlID0gb3B0aW9ucy5oZWlnaHRTdHlsZSwNCgkJCXBhcmVudCA9IHRoaXMuZWxlbWVudC5wYXJlbnQoKTsNCg0KCQl0aGlzLmFjdGl2ZSA9IHRoaXMuX2ZpbmRBY3RpdmUoIG9wdGlvbnMuYWN0aXZlICkNCgkJCS5hZGRDbGFzcyggInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIHVpLXN0YXRlLWFjdGl2ZSB1aS1jb3JuZXItdG9wIiApDQoJCQkucmVtb3ZlQ2xhc3MoICJ1aS1jb3JuZXItYWxsIiApOw0KCQl0aGlzLmFjdGl2ZS5uZXh0KCkNCgkJCS5hZGRDbGFzcyggInVpLWFjY29yZGlvbi1jb250ZW50LWFjdGl2ZSIgKQ0KCQkJLnNob3coKTsNCg0KCQl0aGlzLmhlYWRlcnMNCgkJCS5hdHRyKCAicm9sZSIsICJ0YWIiICkNCgkJCS5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJCXZhciBoZWFkZXIgPSAkKCB0aGlzICksDQoJCQkJCWhlYWRlcklkID0gaGVhZGVyLnVuaXF1ZUlkKCkuYXR0ciggImlkIiApLA0KCQkJCQlwYW5lbCA9IGhlYWRlci5uZXh0KCksDQoJCQkJCXBhbmVsSWQgPSBwYW5lbC51bmlxdWVJZCgpLmF0dHIoICJpZCIgKTsNCgkJCQloZWFkZXIuYXR0ciggImFyaWEtY29udHJvbHMiLCBwYW5lbElkICk7DQoJCQkJcGFuZWwuYXR0ciggImFyaWEtbGFiZWxsZWRieSIsIGhlYWRlcklkICk7DQoJCQl9KQ0KCQkJLm5leHQoKQ0KCQkJCS5hdHRyKCAicm9sZSIsICJ0YWJwYW5lbCIgKTsNCg0KCQl0aGlzLmhlYWRlcnMNCgkJCS5ub3QoIHRoaXMuYWN0aXZlICkNCgkJCS5hdHRyKHsNCgkJCQkiYXJpYS1zZWxlY3RlZCI6ICJmYWxzZSIsDQoJCQkJImFyaWEtZXhwYW5kZWQiOiAiZmFsc2UiLA0KCQkJCXRhYkluZGV4OiAtMQ0KCQkJfSkNCgkJCS5uZXh0KCkNCgkJCQkuYXR0cih7DQoJCQkJCSJhcmlhLWhpZGRlbiI6ICJ0cnVlIg0KCQkJCX0pDQoJCQkJLmhpZGUoKTsNCg0KCQkvLyBtYWtlIHN1cmUgYXQgbGVhc3Qgb25lIGhlYWRlciBpcyBpbiB0aGUgdGFiIG9yZGVyDQoJCWlmICggIXRoaXMuYWN0aXZlLmxlbmd0aCApIHsNCgkJCXRoaXMuaGVhZGVycy5lcSggMCApLmF0dHIoICJ0YWJJbmRleCIsIDAgKTsNCgkJfSBlbHNlIHsNCgkJCXRoaXMuYWN0aXZlLmF0dHIoew0KCQkJCSJhcmlhLXNlbGVjdGVkIjogInRydWUiLA0KCQkJCSJhcmlhLWV4cGFuZGVkIjogInRydWUiLA0KCQkJCXRhYkluZGV4OiAwDQoJCQl9KQ0KCQkJLm5leHQoKQ0KCQkJCS5hdHRyKHsNCgkJCQkJImFyaWEtaGlkZGVuIjogImZhbHNlIg0KCQkJCX0pOw0KCQl9DQoNCgkJdGhpcy5fY3JlYXRlSWNvbnMoKTsNCg0KCQl0aGlzLl9zZXR1cEV2ZW50cyggb3B0aW9ucy5ldmVudCApOw0KDQoJCWlmICggaGVpZ2h0U3R5bGUgPT09ICJmaWxsIiApIHsNCgkJCW1heEhlaWdodCA9IHBhcmVudC5oZWlnaHQoKTsNCgkJCXRoaXMuZWxlbWVudC5zaWJsaW5ncyggIjp2aXNpYmxlIiApLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJdmFyIGVsZW0gPSAkKCB0aGlzICksDQoJCQkJCXBvc2l0aW9uID0gZWxlbS5jc3MoICJwb3NpdGlvbiIgKTsNCg0KCQkJCWlmICggcG9zaXRpb24gPT09ICJhYnNvbHV0ZSIgfHwgcG9zaXRpb24gPT09ICJmaXhlZCIgKSB7DQoJCQkJCXJldHVybjsNCgkJCQl9DQoJCQkJbWF4SGVpZ2h0IC09IGVsZW0ub3V0ZXJIZWlnaHQoIHRydWUgKTsNCgkJCX0pOw0KDQoJCQl0aGlzLmhlYWRlcnMuZWFjaChmdW5jdGlvbigpIHsNCgkJCQltYXhIZWlnaHQgLT0gJCggdGhpcyApLm91dGVySGVpZ2h0KCB0cnVlICk7DQoJCQl9KTsNCg0KCQkJdGhpcy5oZWFkZXJzLm5leHQoKQ0KCQkJCS5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJCQkkKCB0aGlzICkuaGVpZ2h0KCBNYXRoLm1heCggMCwgbWF4SGVpZ2h0IC0NCgkJCQkJCSQoIHRoaXMgKS5pbm5lckhlaWdodCgpICsgJCggdGhpcyApLmhlaWdodCgpICkgKTsNCgkJCQl9KQ0KCQkJCS5jc3MoICJvdmVyZmxvdyIsICJhdXRvIiApOw0KCQl9IGVsc2UgaWYgKCBoZWlnaHRTdHlsZSA9PT0gImF1dG8iICkgew0KCQkJbWF4SGVpZ2h0ID0gMDsNCgkJCXRoaXMuaGVhZGVycy5uZXh0KCkNCgkJCQkuZWFjaChmdW5jdGlvbigpIHsNCgkJCQkJbWF4SGVpZ2h0ID0gTWF0aC5tYXgoIG1heEhlaWdodCwgJCggdGhpcyApLmNzcyggImhlaWdodCIsICIiICkuaGVpZ2h0KCkgKTsNCgkJCQl9KQ0KCQkJCS5oZWlnaHQoIG1heEhlaWdodCApOw0KCQl9DQoJfSwNCg0KCV9hY3RpdmF0ZTogZnVuY3Rpb24oIGluZGV4ICkgew0KCQl2YXIgYWN0aXZlID0gdGhpcy5fZmluZEFjdGl2ZSggaW5kZXggKVsgMCBdOw0KDQoJCS8vIHRyeWluZyB0byBhY3RpdmF0ZSB0aGUgYWxyZWFkeSBhY3RpdmUgcGFuZWwNCgkJaWYgKCBhY3RpdmUgPT09IHRoaXMuYWN0aXZlWyAwIF0gKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQkvLyB0cnlpbmcgdG8gY29sbGFwc2UsIHNpbXVsYXRlIGEgY2xpY2sgb24gdGhlIGN1cnJlbnRseSBhY3RpdmUgaGVhZGVyDQoJCWFjdGl2ZSA9IGFjdGl2ZSB8fCB0aGlzLmFjdGl2ZVsgMCBdOw0KDQoJCXRoaXMuX2V2ZW50SGFuZGxlcih7DQoJCQl0YXJnZXQ6IGFjdGl2ZSwNCgkJCWN1cnJlbnRUYXJnZXQ6IGFjdGl2ZSwNCgkJCXByZXZlbnREZWZhdWx0OiAkLm5vb3ANCgkJfSk7DQoJfSwNCg0KCV9maW5kQWN0aXZlOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7DQoJCXJldHVybiB0eXBlb2Ygc2VsZWN0b3IgPT09ICJudW1iZXIiID8gdGhpcy5oZWFkZXJzLmVxKCBzZWxlY3RvciApIDogJCgpOw0KCX0sDQoNCglfc2V0dXBFdmVudHM6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdmFyIGV2ZW50cyA9IHsNCgkJCWtleWRvd246ICJfa2V5ZG93biINCgkJfTsNCgkJaWYgKCBldmVudCApIHsNCgkJCSQuZWFjaCggZXZlbnQuc3BsaXQoICIgIiApLCBmdW5jdGlvbiggaW5kZXgsIGV2ZW50TmFtZSApIHsNCgkJCQlldmVudHNbIGV2ZW50TmFtZSBdID0gIl9ldmVudEhhbmRsZXIiOw0KCQkJfSk7DQoJCX0NCg0KCQl0aGlzLl9vZmYoIHRoaXMuaGVhZGVycy5hZGQoIHRoaXMuaGVhZGVycy5uZXh0KCkgKSApOw0KCQl0aGlzLl9vbiggdGhpcy5oZWFkZXJzLCBldmVudHMgKTsNCgkJdGhpcy5fb24oIHRoaXMuaGVhZGVycy5uZXh0KCksIHsga2V5ZG93bjogIl9wYW5lbEtleURvd24iIH0pOw0KCQl0aGlzLl9ob3ZlcmFibGUoIHRoaXMuaGVhZGVycyApOw0KCQl0aGlzLl9mb2N1c2FibGUoIHRoaXMuaGVhZGVycyApOw0KCX0sDQoNCglfZXZlbnRIYW5kbGVyOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zLA0KCQkJYWN0aXZlID0gdGhpcy5hY3RpdmUsDQoJCQljbGlja2VkID0gJCggZXZlbnQuY3VycmVudFRhcmdldCApLA0KCQkJY2xpY2tlZElzQWN0aXZlID0gY2xpY2tlZFsgMCBdID09PSBhY3RpdmVbIDAgXSwNCgkJCWNvbGxhcHNpbmcgPSBjbGlja2VkSXNBY3RpdmUgJiYgb3B0aW9ucy5jb2xsYXBzaWJsZSwNCgkJCXRvU2hvdyA9IGNvbGxhcHNpbmcgPyAkKCkgOiBjbGlja2VkLm5leHQoKSwNCgkJCXRvSGlkZSA9IGFjdGl2ZS5uZXh0KCksDQoJCQlldmVudERhdGEgPSB7DQoJCQkJb2xkSGVhZGVyOiBhY3RpdmUsDQoJCQkJb2xkUGFuZWw6IHRvSGlkZSwNCgkJCQluZXdIZWFkZXI6IGNvbGxhcHNpbmcgPyAkKCkgOiBjbGlja2VkLA0KCQkJCW5ld1BhbmVsOiB0b1Nob3cNCgkJCX07DQoNCgkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCg0KCQlpZiAoDQoJCQkJLy8gY2xpY2sgb24gYWN0aXZlIGhlYWRlciwgYnV0IG5vdCBjb2xsYXBzaWJsZQ0KCQkJCSggY2xpY2tlZElzQWN0aXZlICYmICFvcHRpb25zLmNvbGxhcHNpYmxlICkgfHwNCgkJCQkvLyBhbGxvdyBjYW5jZWxpbmcgYWN0aXZhdGlvbg0KCQkJCSggdGhpcy5fdHJpZ2dlciggImJlZm9yZUFjdGl2YXRlIiwgZXZlbnQsIGV2ZW50RGF0YSApID09PSBmYWxzZSApICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJb3B0aW9ucy5hY3RpdmUgPSBjb2xsYXBzaW5nID8gZmFsc2UgOiB0aGlzLmhlYWRlcnMuaW5kZXgoIGNsaWNrZWQgKTsNCg0KCQkvLyB3aGVuIHRoZSBjYWxsIHRvIC5fdG9nZ2xlKCkgY29tZXMgYWZ0ZXIgdGhlIGNsYXNzIGNoYW5nZXMNCgkJLy8gaXQgY2F1c2VzIGEgdmVyeSBvZGQgYnVnIGluIElFIDggKHNlZSAjNjcyMCkNCgkJdGhpcy5hY3RpdmUgPSBjbGlja2VkSXNBY3RpdmUgPyAkKCkgOiBjbGlja2VkOw0KCQl0aGlzLl90b2dnbGUoIGV2ZW50RGF0YSApOw0KDQoJCS8vIHN3aXRjaCBjbGFzc2VzDQoJCS8vIGNvcm5lciBjbGFzc2VzIG9uIHRoZSBwcmV2aW91c2x5IGFjdGl2ZSBoZWFkZXIgc3RheSBhZnRlciB0aGUgYW5pbWF0aW9uDQoJCWFjdGl2ZS5yZW1vdmVDbGFzcyggInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIHVpLXN0YXRlLWFjdGl2ZSIgKTsNCgkJaWYgKCBvcHRpb25zLmljb25zICkgew0KCQkJYWN0aXZlLmNoaWxkcmVuKCAiLnVpLWFjY29yZGlvbi1oZWFkZXItaWNvbiIgKQ0KCQkJCS5yZW1vdmVDbGFzcyggb3B0aW9ucy5pY29ucy5hY3RpdmVIZWFkZXIgKQ0KCQkJCS5hZGRDbGFzcyggb3B0aW9ucy5pY29ucy5oZWFkZXIgKTsNCgkJfQ0KDQoJCWlmICggIWNsaWNrZWRJc0FjdGl2ZSApIHsNCgkJCWNsaWNrZWQNCgkJCQkucmVtb3ZlQ2xhc3MoICJ1aS1jb3JuZXItYWxsIiApDQoJCQkJLmFkZENsYXNzKCAidWktYWNjb3JkaW9uLWhlYWRlci1hY3RpdmUgdWktc3RhdGUtYWN0aXZlIHVpLWNvcm5lci10b3AiICk7DQoJCQlpZiAoIG9wdGlvbnMuaWNvbnMgKSB7DQoJCQkJY2xpY2tlZC5jaGlsZHJlbiggIi51aS1hY2NvcmRpb24taGVhZGVyLWljb24iICkNCgkJCQkJLnJlbW92ZUNsYXNzKCBvcHRpb25zLmljb25zLmhlYWRlciApDQoJCQkJCS5hZGRDbGFzcyggb3B0aW9ucy5pY29ucy5hY3RpdmVIZWFkZXIgKTsNCgkJCX0NCg0KCQkJY2xpY2tlZA0KCQkJCS5uZXh0KCkNCgkJCQkuYWRkQ2xhc3MoICJ1aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmUiICk7DQoJCX0NCgl9LA0KDQoJX3RvZ2dsZTogZnVuY3Rpb24oIGRhdGEgKSB7DQoJCXZhciB0b1Nob3cgPSBkYXRhLm5ld1BhbmVsLA0KCQkJdG9IaWRlID0gdGhpcy5wcmV2U2hvdy5sZW5ndGggPyB0aGlzLnByZXZTaG93IDogZGF0YS5vbGRQYW5lbDsNCg0KCQkvLyBoYW5kbGUgYWN0aXZhdGluZyBhIHBhbmVsIGR1cmluZyB0aGUgYW5pbWF0aW9uIGZvciBhbm90aGVyIGFjdGl2YXRpb24NCgkJdGhpcy5wcmV2U2hvdy5hZGQoIHRoaXMucHJldkhpZGUgKS5zdG9wKCB0cnVlLCB0cnVlICk7DQoJCXRoaXMucHJldlNob3cgPSB0b1Nob3c7DQoJCXRoaXMucHJldkhpZGUgPSB0b0hpZGU7DQoNCgkJaWYgKCB0aGlzLm9wdGlvbnMuYW5pbWF0ZSApIHsNCgkJCXRoaXMuX2FuaW1hdGUoIHRvU2hvdywgdG9IaWRlLCBkYXRhICk7DQoJCX0gZWxzZSB7DQoJCQl0b0hpZGUuaGlkZSgpOw0KCQkJdG9TaG93LnNob3coKTsNCgkJCXRoaXMuX3RvZ2dsZUNvbXBsZXRlKCBkYXRhICk7DQoJCX0NCg0KCQl0b0hpZGUuYXR0cih7DQoJCQkiYXJpYS1oaWRkZW4iOiAidHJ1ZSINCgkJfSk7DQoJCXRvSGlkZS5wcmV2KCkuYXR0ciggImFyaWEtc2VsZWN0ZWQiLCAiZmFsc2UiICk7DQoJCS8vIGlmIHdlJ3JlIHN3aXRjaGluZyBwYW5lbHMsIHJlbW92ZSB0aGUgb2xkIGhlYWRlciBmcm9tIHRoZSB0YWIgb3JkZXINCgkJLy8gaWYgd2UncmUgb3BlbmluZyBmcm9tIGNvbGxhcHNlZCBzdGF0ZSwgcmVtb3ZlIHRoZSBwcmV2aW91cyBoZWFkZXIgZnJvbSB0aGUgdGFiIG9yZGVyDQoJCS8vIGlmIHdlJ3JlIGNvbGxhcHNpbmcsIHRoZW4ga2VlcCB0aGUgY29sbGFwc2luZyBoZWFkZXIgaW4gdGhlIHRhYiBvcmRlcg0KCQlpZiAoIHRvU2hvdy5sZW5ndGggJiYgdG9IaWRlLmxlbmd0aCApIHsNCgkJCXRvSGlkZS5wcmV2KCkuYXR0cih7DQoJCQkJInRhYkluZGV4IjogLTEsDQoJCQkJImFyaWEtZXhwYW5kZWQiOiAiZmFsc2UiDQoJCQl9KTsNCgkJfSBlbHNlIGlmICggdG9TaG93Lmxlbmd0aCApIHsNCgkJCXRoaXMuaGVhZGVycy5maWx0ZXIoZnVuY3Rpb24oKSB7DQoJCQkJcmV0dXJuICQoIHRoaXMgKS5hdHRyKCAidGFiSW5kZXgiICkgPT09IDA7DQoJCQl9KQ0KCQkJLmF0dHIoICJ0YWJJbmRleCIsIC0xICk7DQoJCX0NCg0KCQl0b1Nob3cNCgkJCS5hdHRyKCAiYXJpYS1oaWRkZW4iLCAiZmFsc2UiICkNCgkJCS5wcmV2KCkNCgkJCQkuYXR0cih7DQoJCQkJCSJhcmlhLXNlbGVjdGVkIjogInRydWUiLA0KCQkJCQl0YWJJbmRleDogMCwNCgkJCQkJImFyaWEtZXhwYW5kZWQiOiAidHJ1ZSINCgkJCQl9KTsNCgl9LA0KDQoJX2FuaW1hdGU6IGZ1bmN0aW9uKCB0b1Nob3csIHRvSGlkZSwgZGF0YSApIHsNCgkJdmFyIHRvdGFsLCBlYXNpbmcsIGR1cmF0aW9uLA0KCQkJdGhhdCA9IHRoaXMsDQoJCQlhZGp1c3QgPSAwLA0KCQkJZG93biA9IHRvU2hvdy5sZW5ndGggJiYNCgkJCQkoICF0b0hpZGUubGVuZ3RoIHx8ICggdG9TaG93LmluZGV4KCkgPCB0b0hpZGUuaW5kZXgoKSApICksDQoJCQlhbmltYXRlID0gdGhpcy5vcHRpb25zLmFuaW1hdGUgfHwge30sDQoJCQlvcHRpb25zID0gZG93biAmJiBhbmltYXRlLmRvd24gfHwgYW5pbWF0ZSwNCgkJCWNvbXBsZXRlID0gZnVuY3Rpb24oKSB7DQoJCQkJdGhhdC5fdG9nZ2xlQ29tcGxldGUoIGRhdGEgKTsNCgkJCX07DQoNCgkJaWYgKCB0eXBlb2Ygb3B0aW9ucyA9PT0gIm51bWJlciIgKSB7DQoJCQlkdXJhdGlvbiA9IG9wdGlvbnM7DQoJCX0NCgkJaWYgKCB0eXBlb2Ygb3B0aW9ucyA9PT0gInN0cmluZyIgKSB7DQoJCQllYXNpbmcgPSBvcHRpb25zOw0KCQl9DQoJCS8vIGZhbGwgYmFjayBmcm9tIG9wdGlvbnMgdG8gYW5pbWF0aW9uIGluIGNhc2Ugb2YgcGFydGlhbCBkb3duIHNldHRpbmdzDQoJCWVhc2luZyA9IGVhc2luZyB8fCBvcHRpb25zLmVhc2luZyB8fCBhbmltYXRlLmVhc2luZzsNCgkJZHVyYXRpb24gPSBkdXJhdGlvbiB8fCBvcHRpb25zLmR1cmF0aW9uIHx8IGFuaW1hdGUuZHVyYXRpb247DQoNCgkJaWYgKCAhdG9IaWRlLmxlbmd0aCApIHsNCgkJCXJldHVybiB0b1Nob3cuYW5pbWF0ZSggdGhpcy5zaG93UHJvcHMsIGR1cmF0aW9uLCBlYXNpbmcsIGNvbXBsZXRlICk7DQoJCX0NCgkJaWYgKCAhdG9TaG93Lmxlbmd0aCApIHsNCgkJCXJldHVybiB0b0hpZGUuYW5pbWF0ZSggdGhpcy5oaWRlUHJvcHMsIGR1cmF0aW9uLCBlYXNpbmcsIGNvbXBsZXRlICk7DQoJCX0NCg0KCQl0b3RhbCA9IHRvU2hvdy5zaG93KCkub3V0ZXJIZWlnaHQoKTsNCgkJdG9IaWRlLmFuaW1hdGUoIHRoaXMuaGlkZVByb3BzLCB7DQoJCQlkdXJhdGlvbjogZHVyYXRpb24sDQoJCQllYXNpbmc6IGVhc2luZywNCgkJCXN0ZXA6IGZ1bmN0aW9uKCBub3csIGZ4ICkgew0KCQkJCWZ4Lm5vdyA9IE1hdGgucm91bmQoIG5vdyApOw0KCQkJfQ0KCQl9KTsNCgkJdG9TaG93DQoJCQkuaGlkZSgpDQoJCQkuYW5pbWF0ZSggdGhpcy5zaG93UHJvcHMsIHsNCgkJCQlkdXJhdGlvbjogZHVyYXRpb24sDQoJCQkJZWFzaW5nOiBlYXNpbmcsDQoJCQkJY29tcGxldGU6IGNvbXBsZXRlLA0KCQkJCXN0ZXA6IGZ1bmN0aW9uKCBub3csIGZ4ICkgew0KCQkJCQlmeC5ub3cgPSBNYXRoLnJvdW5kKCBub3cgKTsNCgkJCQkJaWYgKCBmeC5wcm9wICE9PSAiaGVpZ2h0IiApIHsNCgkJCQkJCWFkanVzdCArPSBmeC5ub3c7DQoJCQkJCX0gZWxzZSBpZiAoIHRoYXQub3B0aW9ucy5oZWlnaHRTdHlsZSAhPT0gImNvbnRlbnQiICkgew0KCQkJCQkJZngubm93ID0gTWF0aC5yb3VuZCggdG90YWwgLSB0b0hpZGUub3V0ZXJIZWlnaHQoKSAtIGFkanVzdCApOw0KCQkJCQkJYWRqdXN0ID0gMDsNCgkJCQkJfQ0KCQkJCX0NCgkJCX0pOw0KCX0sDQoNCglfdG9nZ2xlQ29tcGxldGU6IGZ1bmN0aW9uKCBkYXRhICkgew0KCQl2YXIgdG9IaWRlID0gZGF0YS5vbGRQYW5lbDsNCg0KCQl0b0hpZGUNCgkJCS5yZW1vdmVDbGFzcyggInVpLWFjY29yZGlvbi1jb250ZW50LWFjdGl2ZSIgKQ0KCQkJLnByZXYoKQ0KCQkJCS5yZW1vdmVDbGFzcyggInVpLWNvcm5lci10b3AiICkNCgkJCQkuYWRkQ2xhc3MoICJ1aS1jb3JuZXItYWxsIiApOw0KDQoJCS8vIFdvcmsgYXJvdW5kIGZvciByZW5kZXJpbmcgYnVnIGluIElFICgjNTQyMSkNCgkJaWYgKCB0b0hpZGUubGVuZ3RoICkgew0KCQkJdG9IaWRlLnBhcmVudCgpWyAwIF0uY2xhc3NOYW1lID0gdG9IaWRlLnBhcmVudCgpWyAwIF0uY2xhc3NOYW1lOw0KCQl9DQoJCXRoaXMuX3RyaWdnZXIoICJhY3RpdmF0ZSIsIG51bGwsIGRhdGEgKTsNCgl9DQp9KTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBNZW51IDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9tZW51Lw0KICovDQoNCg0KdmFyIG1lbnUgPSAkLndpZGdldCggInVpLm1lbnUiLCB7DQoJdmVyc2lvbjogIjEuMTEuMiIsDQoJZGVmYXVsdEVsZW1lbnQ6ICI8dWw+IiwNCglkZWxheTogMzAwLA0KCW9wdGlvbnM6IHsNCgkJaWNvbnM6IHsNCgkJCXN1Ym1lbnU6ICJ1aS1pY29uLWNhcmF0LTEtZSINCgkJfSwNCgkJaXRlbXM6ICI+ICoiLA0KCQltZW51czogInVsIiwNCgkJcG9zaXRpb246IHsNCgkJCW15OiAibGVmdC0xIHRvcCIsDQoJCQlhdDogInJpZ2h0IHRvcCINCgkJfSwNCgkJcm9sZTogIm1lbnUiLA0KDQoJCS8vIGNhbGxiYWNrcw0KCQlibHVyOiBudWxsLA0KCQlmb2N1czogbnVsbCwNCgkJc2VsZWN0OiBudWxsDQoJfSwNCg0KCV9jcmVhdGU6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLmFjdGl2ZU1lbnUgPSB0aGlzLmVsZW1lbnQ7DQoNCgkJLy8gRmxhZyB1c2VkIHRvIHByZXZlbnQgZmlyaW5nIG9mIHRoZSBjbGljayBoYW5kbGVyDQoJCS8vIGFzIHRoZSBldmVudCBidWJibGVzIHVwIHRocm91Z2ggbmVzdGVkIG1lbnVzDQoJCXRoaXMubW91c2VIYW5kbGVkID0gZmFsc2U7DQoJCXRoaXMuZWxlbWVudA0KCQkJLnVuaXF1ZUlkKCkNCgkJCS5hZGRDbGFzcyggInVpLW1lbnUgdWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IiApDQoJCQkudG9nZ2xlQ2xhc3MoICJ1aS1tZW51LWljb25zIiwgISF0aGlzLmVsZW1lbnQuZmluZCggIi51aS1pY29uIiApLmxlbmd0aCApDQoJCQkuYXR0cih7DQoJCQkJcm9sZTogdGhpcy5vcHRpb25zLnJvbGUsDQoJCQkJdGFiSW5kZXg6IDANCgkJCX0pOw0KDQoJCWlmICggdGhpcy5vcHRpb25zLmRpc2FibGVkICkgew0KCQkJdGhpcy5lbGVtZW50DQoJCQkJLmFkZENsYXNzKCAidWktc3RhdGUtZGlzYWJsZWQiICkNCgkJCQkuYXR0ciggImFyaWEtZGlzYWJsZWQiLCAidHJ1ZSIgKTsNCgkJfQ0KDQoJCXRoaXMuX29uKHsNCgkJCS8vIFByZXZlbnQgZm9jdXMgZnJvbSBzdGlja2luZyB0byBsaW5rcyBpbnNpZGUgbWVudSBhZnRlciBjbGlja2luZw0KCQkJLy8gdGhlbSAoZm9jdXMgc2hvdWxkIGFsd2F5cyBzdGF5IG9uIFVMIGR1cmluZyBuYXZpZ2F0aW9uKS4NCgkJCSJtb3VzZWRvd24gLnVpLW1lbnUtaXRlbSI6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQkJfSwNCgkJCSJjbGljayAudWktbWVudS1pdGVtIjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCXZhciB0YXJnZXQgPSAkKCBldmVudC50YXJnZXQgKTsNCgkJCQlpZiAoICF0aGlzLm1vdXNlSGFuZGxlZCAmJiB0YXJnZXQubm90KCAiLnVpLXN0YXRlLWRpc2FibGVkIiApLmxlbmd0aCApIHsNCgkJCQkJdGhpcy5zZWxlY3QoIGV2ZW50ICk7DQoNCgkJCQkJLy8gT25seSBzZXQgdGhlIG1vdXNlSGFuZGxlZCBmbGFnIGlmIHRoZSBldmVudCB3aWxsIGJ1YmJsZSwgc2VlICM5NDY5Lg0KCQkJCQlpZiAoICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkgew0KCQkJCQkJdGhpcy5tb3VzZUhhbmRsZWQgPSB0cnVlOw0KCQkJCQl9DQoNCgkJCQkJLy8gT3BlbiBzdWJtZW51IG9uIGNsaWNrDQoJCQkJCWlmICggdGFyZ2V0LmhhcyggIi51aS1tZW51IiApLmxlbmd0aCApIHsNCgkJCQkJCXRoaXMuZXhwYW5kKCBldmVudCApOw0KCQkJCQl9IGVsc2UgaWYgKCAhdGhpcy5lbGVtZW50LmlzKCAiOmZvY3VzIiApICYmICQoIHRoaXMuZG9jdW1lbnRbIDAgXS5hY3RpdmVFbGVtZW50ICkuY2xvc2VzdCggIi51aS1tZW51IiApLmxlbmd0aCApIHsNCg0KCQkJCQkJLy8gUmVkaXJlY3QgZm9jdXMgdG8gdGhlIG1lbnUNCgkJCQkJCXRoaXMuZWxlbWVudC50cmlnZ2VyKCAiZm9jdXMiLCBbIHRydWUgXSApOw0KDQoJCQkJCQkvLyBJZiB0aGUgYWN0aXZlIGl0ZW0gaXMgb24gdGhlIHRvcCBsZXZlbCwgbGV0IGl0IHN0YXkgYWN0aXZlLg0KCQkJCQkJLy8gT3RoZXJ3aXNlLCBibHVyIHRoZSBhY3RpdmUgaXRlbSBzaW5jZSBpdCBpcyBubyBsb25nZXIgdmlzaWJsZS4NCgkJCQkJCWlmICggdGhpcy5hY3RpdmUgJiYgdGhpcy5hY3RpdmUucGFyZW50cyggIi51aS1tZW51IiApLmxlbmd0aCA9PT0gMSApIHsNCgkJCQkJCQljbGVhclRpbWVvdXQoIHRoaXMudGltZXIgKTsNCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCX0NCgkJCX0sDQoJCQkibW91c2VlbnRlciAudWktbWVudS1pdGVtIjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCS8vIElnbm9yZSBtb3VzZSBldmVudHMgd2hpbGUgdHlwZWFoZWFkIGlzIGFjdGl2ZSwgc2VlICMxMDQ1OC4NCgkJCQkvLyBQcmV2ZW50cyBmb2N1c2luZyB0aGUgd3JvbmcgaXRlbSB3aGVuIHR5cGVhaGVhZCBjYXVzZXMgYSBzY3JvbGwgd2hpbGUgdGhlIG1vdXNlDQoJCQkJLy8gaXMgb3ZlciBhbiBpdGVtIGluIHRoZSBtZW51DQoJCQkJaWYgKCB0aGlzLnByZXZpb3VzRmlsdGVyICkgew0KCQkJCQlyZXR1cm47DQoJCQkJfQ0KCQkJCXZhciB0YXJnZXQgPSAkKCBldmVudC5jdXJyZW50VGFyZ2V0ICk7DQoJCQkJLy8gUmVtb3ZlIHVpLXN0YXRlLWFjdGl2ZSBjbGFzcyBmcm9tIHNpYmxpbmdzIG9mIHRoZSBuZXdseSBmb2N1c2VkIG1lbnUgaXRlbQ0KCQkJCS8vIHRvIGF2b2lkIGEganVtcCBjYXVzZWQgYnkgYWRqYWNlbnQgZWxlbWVudHMgYm90aCBoYXZpbmcgYSBjbGFzcyB3aXRoIGEgYm9yZGVyDQoJCQkJdGFyZ2V0LnNpYmxpbmdzKCAiLnVpLXN0YXRlLWFjdGl2ZSIgKS5yZW1vdmVDbGFzcyggInVpLXN0YXRlLWFjdGl2ZSIgKTsNCgkJCQl0aGlzLmZvY3VzKCBldmVudCwgdGFyZ2V0ICk7DQoJCQl9LA0KCQkJbW91c2VsZWF2ZTogImNvbGxhcHNlQWxsIiwNCgkJCSJtb3VzZWxlYXZlIC51aS1tZW51IjogImNvbGxhcHNlQWxsIiwNCgkJCWZvY3VzOiBmdW5jdGlvbiggZXZlbnQsIGtlZXBBY3RpdmVJdGVtICkgew0KCQkJCS8vIElmIHRoZXJlJ3MgYWxyZWFkeSBhbiBhY3RpdmUgaXRlbSwga2VlcCBpdCBhY3RpdmUNCgkJCQkvLyBJZiBub3QsIGFjdGl2YXRlIHRoZSBmaXJzdCBpdGVtDQoJCQkJdmFyIGl0ZW0gPSB0aGlzLmFjdGl2ZSB8fCB0aGlzLmVsZW1lbnQuZmluZCggdGhpcy5vcHRpb25zLml0ZW1zICkuZXEoIDAgKTsNCg0KCQkJCWlmICggIWtlZXBBY3RpdmVJdGVtICkgew0KCQkJCQl0aGlzLmZvY3VzKCBldmVudCwgaXRlbSApOw0KCQkJCX0NCgkJCX0sDQoJCQlibHVyOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQkJdGhpcy5fZGVsYXkoZnVuY3Rpb24oKSB7DQoJCQkJCWlmICggISQuY29udGFpbnMoIHRoaXMuZWxlbWVudFswXSwgdGhpcy5kb2N1bWVudFswXS5hY3RpdmVFbGVtZW50ICkgKSB7DQoJCQkJCQl0aGlzLmNvbGxhcHNlQWxsKCBldmVudCApOw0KCQkJCQl9DQoJCQkJfSk7DQoJCQl9LA0KCQkJa2V5ZG93bjogIl9rZXlkb3duIg0KCQl9KTsNCg0KCQl0aGlzLnJlZnJlc2goKTsNCg0KCQkvLyBDbGlja3Mgb3V0c2lkZSBvZiBhIG1lbnUgY29sbGFwc2UgYW55IG9wZW4gbWVudXMNCgkJdGhpcy5fb24oIHRoaXMuZG9jdW1lbnQsIHsNCgkJCWNsaWNrOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQkJaWYgKCB0aGlzLl9jbG9zZU9uRG9jdW1lbnRDbGljayggZXZlbnQgKSApIHsNCgkJCQkJdGhpcy5jb2xsYXBzZUFsbCggZXZlbnQgKTsNCgkJCQl9DQoNCgkJCQkvLyBSZXNldCB0aGUgbW91c2VIYW5kbGVkIGZsYWcNCgkJCQl0aGlzLm1vdXNlSGFuZGxlZCA9IGZhbHNlOw0KCQkJfQ0KCQl9KTsNCgl9LA0KDQoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgew0KCQkvLyBEZXN0cm95IChzdWIpbWVudXMNCgkJdGhpcy5lbGVtZW50DQoJCQkucmVtb3ZlQXR0ciggImFyaWEtYWN0aXZlZGVzY2VuZGFudCIgKQ0KCQkJLmZpbmQoICIudWktbWVudSIgKS5hZGRCYWNrKCkNCgkJCQkucmVtb3ZlQ2xhc3MoICJ1aS1tZW51IHVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCB1aS1tZW51LWljb25zIHVpLWZyb250IiApDQoJCQkJLnJlbW92ZUF0dHIoICJyb2xlIiApDQoJCQkJLnJlbW92ZUF0dHIoICJ0YWJJbmRleCIgKQ0KCQkJCS5yZW1vdmVBdHRyKCAiYXJpYS1sYWJlbGxlZGJ5IiApDQoJCQkJLnJlbW92ZUF0dHIoICJhcmlhLWV4cGFuZGVkIiApDQoJCQkJLnJlbW92ZUF0dHIoICJhcmlhLWhpZGRlbiIgKQ0KCQkJCS5yZW1vdmVBdHRyKCAiYXJpYS1kaXNhYmxlZCIgKQ0KCQkJCS5yZW1vdmVVbmlxdWVJZCgpDQoJCQkJLnNob3coKTsNCg0KCQkvLyBEZXN0cm95IG1lbnUgaXRlbXMNCgkJdGhpcy5lbGVtZW50LmZpbmQoICIudWktbWVudS1pdGVtIiApDQoJCQkucmVtb3ZlQ2xhc3MoICJ1aS1tZW51LWl0ZW0iICkNCgkJCS5yZW1vdmVBdHRyKCAicm9sZSIgKQ0KCQkJLnJlbW92ZUF0dHIoICJhcmlhLWRpc2FibGVkIiApDQoJCQkucmVtb3ZlVW5pcXVlSWQoKQ0KCQkJLnJlbW92ZUNsYXNzKCAidWktc3RhdGUtaG92ZXIiICkNCgkJCS5yZW1vdmVBdHRyKCAidGFiSW5kZXgiICkNCgkJCS5yZW1vdmVBdHRyKCAicm9sZSIgKQ0KCQkJLnJlbW92ZUF0dHIoICJhcmlhLWhhc3BvcHVwIiApDQoJCQkuY2hpbGRyZW4oKS5lYWNoKCBmdW5jdGlvbigpIHsNCgkJCQl2YXIgZWxlbSA9ICQoIHRoaXMgKTsNCgkJCQlpZiAoIGVsZW0uZGF0YSggInVpLW1lbnUtc3VibWVudS1jYXJhdCIgKSApIHsNCgkJCQkJZWxlbS5yZW1vdmUoKTsNCgkJCQl9DQoJCQl9KTsNCg0KCQkvLyBEZXN0cm95IG1lbnUgZGl2aWRlcnMNCgkJdGhpcy5lbGVtZW50LmZpbmQoICIudWktbWVudS1kaXZpZGVyIiApLnJlbW92ZUNsYXNzKCAidWktbWVudS1kaXZpZGVyIHVpLXdpZGdldC1jb250ZW50IiApOw0KCX0sDQoNCglfa2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl2YXIgbWF0Y2gsIHByZXYsIGNoYXJhY3Rlciwgc2tpcCwNCgkJCXByZXZlbnREZWZhdWx0ID0gdHJ1ZTsNCg0KCQlzd2l0Y2ggKCBldmVudC5rZXlDb2RlICkgew0KCQljYXNlICQudWkua2V5Q29kZS5QQUdFX1VQOg0KCQkJdGhpcy5wcmV2aW91c1BhZ2UoIGV2ZW50ICk7DQoJCQlicmVhazsNCgkJY2FzZSAkLnVpLmtleUNvZGUuUEFHRV9ET1dOOg0KCQkJdGhpcy5uZXh0UGFnZSggZXZlbnQgKTsNCgkJCWJyZWFrOw0KCQljYXNlICQudWkua2V5Q29kZS5IT01FOg0KCQkJdGhpcy5fbW92ZSggImZpcnN0IiwgImZpcnN0IiwgZXZlbnQgKTsNCgkJCWJyZWFrOw0KCQljYXNlICQudWkua2V5Q29kZS5FTkQ6DQoJCQl0aGlzLl9tb3ZlKCAibGFzdCIsICJsYXN0IiwgZXZlbnQgKTsNCgkJCWJyZWFrOw0KCQljYXNlICQudWkua2V5Q29kZS5VUDoNCgkJCXRoaXMucHJldmlvdXMoIGV2ZW50ICk7DQoJCQlicmVhazsNCgkJY2FzZSAkLnVpLmtleUNvZGUuRE9XTjoNCgkJCXRoaXMubmV4dCggZXZlbnQgKTsNCgkJCWJyZWFrOw0KCQljYXNlICQudWkua2V5Q29kZS5MRUZUOg0KCQkJdGhpcy5jb2xsYXBzZSggZXZlbnQgKTsNCgkJCWJyZWFrOw0KCQljYXNlICQudWkua2V5Q29kZS5SSUdIVDoNCgkJCWlmICggdGhpcy5hY3RpdmUgJiYgIXRoaXMuYWN0aXZlLmlzKCAiLnVpLXN0YXRlLWRpc2FibGVkIiApICkgew0KCQkJCXRoaXMuZXhwYW5kKCBldmVudCApOw0KCQkJfQ0KCQkJYnJlYWs7DQoJCWNhc2UgJC51aS5rZXlDb2RlLkVOVEVSOg0KCQljYXNlICQudWkua2V5Q29kZS5TUEFDRToNCgkJCXRoaXMuX2FjdGl2YXRlKCBldmVudCApOw0KCQkJYnJlYWs7DQoJCWNhc2UgJC51aS5rZXlDb2RlLkVTQ0FQRToNCgkJCXRoaXMuY29sbGFwc2UoIGV2ZW50ICk7DQoJCQlicmVhazsNCgkJZGVmYXVsdDoNCgkJCXByZXZlbnREZWZhdWx0ID0gZmFsc2U7DQoJCQlwcmV2ID0gdGhpcy5wcmV2aW91c0ZpbHRlciB8fCAiIjsNCgkJCWNoYXJhY3RlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoIGV2ZW50LmtleUNvZGUgKTsNCgkJCXNraXAgPSBmYWxzZTsNCg0KCQkJY2xlYXJUaW1lb3V0KCB0aGlzLmZpbHRlclRpbWVyICk7DQoNCgkJCWlmICggY2hhcmFjdGVyID09PSBwcmV2ICkgew0KCQkJCXNraXAgPSB0cnVlOw0KCQkJfSBlbHNlIHsNCgkJCQljaGFyYWN0ZXIgPSBwcmV2ICsgY2hhcmFjdGVyOw0KCQkJfQ0KDQoJCQltYXRjaCA9IHRoaXMuX2ZpbHRlck1lbnVJdGVtcyggY2hhcmFjdGVyICk7DQoJCQltYXRjaCA9IHNraXAgJiYgbWF0Y2guaW5kZXgoIHRoaXMuYWN0aXZlLm5leHQoKSApICE9PSAtMSA/DQoJCQkJdGhpcy5hY3RpdmUubmV4dEFsbCggIi51aS1tZW51LWl0ZW0iICkgOg0KCQkJCW1hdGNoOw0KDQoJCQkvLyBJZiBubyBtYXRjaGVzIG9uIHRoZSBjdXJyZW50IGZpbHRlciwgcmVzZXQgdG8gdGhlIGxhc3QgY2hhcmFjdGVyIHByZXNzZWQNCgkJCS8vIHRvIG1vdmUgZG93biB0aGUgbWVudSB0byB0aGUgZmlyc3QgaXRlbSB0aGF0IHN0YXJ0cyB3aXRoIHRoYXQgY2hhcmFjdGVyDQoJCQlpZiAoICFtYXRjaC5sZW5ndGggKSB7DQoJCQkJY2hhcmFjdGVyID0gU3RyaW5nLmZyb21DaGFyQ29kZSggZXZlbnQua2V5Q29kZSApOw0KCQkJCW1hdGNoID0gdGhpcy5fZmlsdGVyTWVudUl0ZW1zKCBjaGFyYWN0ZXIgKTsNCgkJCX0NCg0KCQkJaWYgKCBtYXRjaC5sZW5ndGggKSB7DQoJCQkJdGhpcy5mb2N1cyggZXZlbnQsIG1hdGNoICk7DQoJCQkJdGhpcy5wcmV2aW91c0ZpbHRlciA9IGNoYXJhY3RlcjsNCgkJCQl0aGlzLmZpbHRlclRpbWVyID0gdGhpcy5fZGVsYXkoZnVuY3Rpb24oKSB7DQoJCQkJCWRlbGV0ZSB0aGlzLnByZXZpb3VzRmlsdGVyOw0KCQkJCX0sIDEwMDAgKTsNCgkJCX0gZWxzZSB7DQoJCQkJZGVsZXRlIHRoaXMucHJldmlvdXNGaWx0ZXI7DQoJCQl9DQoJCX0NCg0KCQlpZiAoIHByZXZlbnREZWZhdWx0ICkgew0KCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCgkJfQ0KCX0sDQoNCglfYWN0aXZhdGU6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJaWYgKCAhdGhpcy5hY3RpdmUuaXMoICIudWktc3RhdGUtZGlzYWJsZWQiICkgKSB7DQoJCQlpZiAoIHRoaXMuYWN0aXZlLmlzKCAiW2FyaWEtaGFzcG9wdXA9J3RydWUnXSIgKSApIHsNCgkJCQl0aGlzLmV4cGFuZCggZXZlbnQgKTsNCgkJCX0gZWxzZSB7DQoJCQkJdGhpcy5zZWxlY3QoIGV2ZW50ICk7DQoJCQl9DQoJCX0NCgl9LA0KDQoJcmVmcmVzaDogZnVuY3Rpb24oKSB7DQoJCXZhciBtZW51cywgaXRlbXMsDQoJCQl0aGF0ID0gdGhpcywNCgkJCWljb24gPSB0aGlzLm9wdGlvbnMuaWNvbnMuc3VibWVudSwNCgkJCXN1Ym1lbnVzID0gdGhpcy5lbGVtZW50LmZpbmQoIHRoaXMub3B0aW9ucy5tZW51cyApOw0KDQoJCXRoaXMuZWxlbWVudC50b2dnbGVDbGFzcyggInVpLW1lbnUtaWNvbnMiLCAhIXRoaXMuZWxlbWVudC5maW5kKCAiLnVpLWljb24iICkubGVuZ3RoICk7DQoNCgkJLy8gSW5pdGlhbGl6ZSBuZXN0ZWQgbWVudXMNCgkJc3VibWVudXMuZmlsdGVyKCAiOm5vdCgudWktbWVudSkiICkNCgkJCS5hZGRDbGFzcyggInVpLW1lbnUgdWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWZyb250IiApDQoJCQkuaGlkZSgpDQoJCQkuYXR0cih7DQoJCQkJcm9sZTogdGhpcy5vcHRpb25zLnJvbGUsDQoJCQkJImFyaWEtaGlkZGVuIjogInRydWUiLA0KCQkJCSJhcmlhLWV4cGFuZGVkIjogImZhbHNlIg0KCQkJfSkNCgkJCS5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJCXZhciBtZW51ID0gJCggdGhpcyApLA0KCQkJCQlpdGVtID0gbWVudS5wYXJlbnQoKSwNCgkJCQkJc3VibWVudUNhcmF0ID0gJCggIjxzcGFuPiIgKQ0KCQkJCQkJLmFkZENsYXNzKCAidWktbWVudS1pY29uIHVpLWljb24gIiArIGljb24gKQ0KCQkJCQkJLmRhdGEoICJ1aS1tZW51LXN1Ym1lbnUtY2FyYXQiLCB0cnVlICk7DQoNCgkJCQlpdGVtDQoJCQkJCS5hdHRyKCAiYXJpYS1oYXNwb3B1cCIsICJ0cnVlIiApDQoJCQkJCS5wcmVwZW5kKCBzdWJtZW51Q2FyYXQgKTsNCgkJCQltZW51LmF0dHIoICJhcmlhLWxhYmVsbGVkYnkiLCBpdGVtLmF0dHIoICJpZCIgKSApOw0KCQkJfSk7DQoNCgkJbWVudXMgPSBzdWJtZW51cy5hZGQoIHRoaXMuZWxlbWVudCApOw0KCQlpdGVtcyA9IG1lbnVzLmZpbmQoIHRoaXMub3B0aW9ucy5pdGVtcyApOw0KDQoJCS8vIEluaXRpYWxpemUgbWVudS1pdGVtcyBjb250YWluaW5nIHNwYWNlcyBhbmQvb3IgZGFzaGVzIG9ubHkgYXMgZGl2aWRlcnMNCgkJaXRlbXMubm90KCAiLnVpLW1lbnUtaXRlbSIgKS5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJdmFyIGl0ZW0gPSAkKCB0aGlzICk7DQoJCQlpZiAoIHRoYXQuX2lzRGl2aWRlciggaXRlbSApICkgew0KCQkJCWl0ZW0uYWRkQ2xhc3MoICJ1aS13aWRnZXQtY29udGVudCB1aS1tZW51LWRpdmlkZXIiICk7DQoJCQl9DQoJCX0pOw0KDQoJCS8vIERvbid0IHJlZnJlc2ggbGlzdCBpdGVtcyB0aGF0IGFyZSBhbHJlYWR5IGFkYXB0ZWQNCgkJaXRlbXMubm90KCAiLnVpLW1lbnUtaXRlbSwgLnVpLW1lbnUtZGl2aWRlciIgKQ0KCQkJLmFkZENsYXNzKCAidWktbWVudS1pdGVtIiApDQoJCQkudW5pcXVlSWQoKQ0KCQkJLmF0dHIoew0KCQkJCXRhYkluZGV4OiAtMSwNCgkJCQlyb2xlOiB0aGlzLl9pdGVtUm9sZSgpDQoJCQl9KTsNCg0KCQkvLyBBZGQgYXJpYS1kaXNhYmxlZCBhdHRyaWJ1dGUgdG8gYW55IGRpc2FibGVkIG1lbnUgaXRlbQ0KCQlpdGVtcy5maWx0ZXIoICIudWktc3RhdGUtZGlzYWJsZWQiICkuYXR0ciggImFyaWEtZGlzYWJsZWQiLCAidHJ1ZSIgKTsNCg0KCQkvLyBJZiB0aGUgYWN0aXZlIGl0ZW0gaGFzIGJlZW4gcmVtb3ZlZCwgYmx1ciB0aGUgbWVudQ0KCQlpZiAoIHRoaXMuYWN0aXZlICYmICEkLmNvbnRhaW5zKCB0aGlzLmVsZW1lbnRbIDAgXSwgdGhpcy5hY3RpdmVbIDAgXSApICkgew0KCQkJdGhpcy5ibHVyKCk7DQoJCX0NCgl9LA0KDQoJX2l0ZW1Sb2xlOiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuIHsNCgkJCW1lbnU6ICJtZW51aXRlbSIsDQoJCQlsaXN0Ym94OiAib3B0aW9uIg0KCQl9WyB0aGlzLm9wdGlvbnMucm9sZSBdOw0KCX0sDQoNCglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsNCgkJaWYgKCBrZXkgPT09ICJpY29ucyIgKSB7DQoJCQl0aGlzLmVsZW1lbnQuZmluZCggIi51aS1tZW51LWljb24iICkNCgkJCQkucmVtb3ZlQ2xhc3MoIHRoaXMub3B0aW9ucy5pY29ucy5zdWJtZW51ICkNCgkJCQkuYWRkQ2xhc3MoIHZhbHVlLnN1Ym1lbnUgKTsNCgkJfQ0KCQlpZiAoIGtleSA9PT0gImRpc2FibGVkIiApIHsNCgkJCXRoaXMuZWxlbWVudA0KCQkJCS50b2dnbGVDbGFzcyggInVpLXN0YXRlLWRpc2FibGVkIiwgISF2YWx1ZSApDQoJCQkJLmF0dHIoICJhcmlhLWRpc2FibGVkIiwgdmFsdWUgKTsNCgkJfQ0KCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOw0KCX0sDQoNCglmb2N1czogZnVuY3Rpb24oIGV2ZW50LCBpdGVtICkgew0KCQl2YXIgbmVzdGVkLCBmb2N1c2VkOw0KCQl0aGlzLmJsdXIoIGV2ZW50LCBldmVudCAmJiBldmVudC50eXBlID09PSAiZm9jdXMiICk7DQoNCgkJdGhpcy5fc2Nyb2xsSW50b1ZpZXcoIGl0ZW0gKTsNCg0KCQl0aGlzLmFjdGl2ZSA9IGl0ZW0uZmlyc3QoKTsNCgkJZm9jdXNlZCA9IHRoaXMuYWN0aXZlLmFkZENsYXNzKCAidWktc3RhdGUtZm9jdXMiICkucmVtb3ZlQ2xhc3MoICJ1aS1zdGF0ZS1hY3RpdmUiICk7DQoJCS8vIE9ubHkgdXBkYXRlIGFyaWEtYWN0aXZlZGVzY2VuZGFudCBpZiB0aGVyZSdzIGEgcm9sZQ0KCQkvLyBvdGhlcndpc2Ugd2UgYXNzdW1lIGZvY3VzIGlzIG1hbmFnZWQgZWxzZXdoZXJlDQoJCWlmICggdGhpcy5vcHRpb25zLnJvbGUgKSB7DQoJCQl0aGlzLmVsZW1lbnQuYXR0ciggImFyaWEtYWN0aXZlZGVzY2VuZGFudCIsIGZvY3VzZWQuYXR0ciggImlkIiApICk7DQoJCX0NCg0KCQkvLyBIaWdobGlnaHQgYWN0aXZlIHBhcmVudCBtZW51IGl0ZW0sIGlmIGFueQ0KCQl0aGlzLmFjdGl2ZQ0KCQkJLnBhcmVudCgpDQoJCQkuY2xvc2VzdCggIi51aS1tZW51LWl0ZW0iICkNCgkJCS5hZGRDbGFzcyggInVpLXN0YXRlLWFjdGl2ZSIgKTsNCg0KCQlpZiAoIGV2ZW50ICYmIGV2ZW50LnR5cGUgPT09ICJrZXlkb3duIiApIHsNCgkJCXRoaXMuX2Nsb3NlKCk7DQoJCX0gZWxzZSB7DQoJCQl0aGlzLnRpbWVyID0gdGhpcy5fZGVsYXkoZnVuY3Rpb24oKSB7DQoJCQkJdGhpcy5fY2xvc2UoKTsNCgkJCX0sIHRoaXMuZGVsYXkgKTsNCgkJfQ0KDQoJCW5lc3RlZCA9IGl0ZW0uY2hpbGRyZW4oICIudWktbWVudSIgKTsNCgkJaWYgKCBuZXN0ZWQubGVuZ3RoICYmIGV2ZW50ICYmICggL15tb3VzZS8udGVzdCggZXZlbnQudHlwZSApICkgKSB7DQoJCQl0aGlzLl9zdGFydE9wZW5pbmcobmVzdGVkKTsNCgkJfQ0KCQl0aGlzLmFjdGl2ZU1lbnUgPSBpdGVtLnBhcmVudCgpOw0KDQoJCXRoaXMuX3RyaWdnZXIoICJmb2N1cyIsIGV2ZW50LCB7IGl0ZW06IGl0ZW0gfSApOw0KCX0sDQoNCglfc2Nyb2xsSW50b1ZpZXc6IGZ1bmN0aW9uKCBpdGVtICkgew0KCQl2YXIgYm9yZGVyVG9wLCBwYWRkaW5nVG9wLCBvZmZzZXQsIHNjcm9sbCwgZWxlbWVudEhlaWdodCwgaXRlbUhlaWdodDsNCgkJaWYgKCB0aGlzLl9oYXNTY3JvbGwoKSApIHsNCgkJCWJvcmRlclRvcCA9IHBhcnNlRmxvYXQoICQuY3NzKCB0aGlzLmFjdGl2ZU1lbnVbMF0sICJib3JkZXJUb3BXaWR0aCIgKSApIHx8IDA7DQoJCQlwYWRkaW5nVG9wID0gcGFyc2VGbG9hdCggJC5jc3MoIHRoaXMuYWN0aXZlTWVudVswXSwgInBhZGRpbmdUb3AiICkgKSB8fCAwOw0KCQkJb2Zmc2V0ID0gaXRlbS5vZmZzZXQoKS50b3AgLSB0aGlzLmFjdGl2ZU1lbnUub2Zmc2V0KCkudG9wIC0gYm9yZGVyVG9wIC0gcGFkZGluZ1RvcDsNCgkJCXNjcm9sbCA9IHRoaXMuYWN0aXZlTWVudS5zY3JvbGxUb3AoKTsNCgkJCWVsZW1lbnRIZWlnaHQgPSB0aGlzLmFjdGl2ZU1lbnUuaGVpZ2h0KCk7DQoJCQlpdGVtSGVpZ2h0ID0gaXRlbS5vdXRlckhlaWdodCgpOw0KDQoJCQlpZiAoIG9mZnNldCA8IDAgKSB7DQoJCQkJdGhpcy5hY3RpdmVNZW51LnNjcm9sbFRvcCggc2Nyb2xsICsgb2Zmc2V0ICk7DQoJCQl9IGVsc2UgaWYgKCBvZmZzZXQgKyBpdGVtSGVpZ2h0ID4gZWxlbWVudEhlaWdodCApIHsNCgkJCQl0aGlzLmFjdGl2ZU1lbnUuc2Nyb2xsVG9wKCBzY3JvbGwgKyBvZmZzZXQgLSBlbGVtZW50SGVpZ2h0ICsgaXRlbUhlaWdodCApOw0KCQkJfQ0KCQl9DQoJfSwNCg0KCWJsdXI6IGZ1bmN0aW9uKCBldmVudCwgZnJvbUZvY3VzICkgew0KCQlpZiAoICFmcm9tRm9jdXMgKSB7DQoJCQljbGVhclRpbWVvdXQoIHRoaXMudGltZXIgKTsNCgkJfQ0KDQoJCWlmICggIXRoaXMuYWN0aXZlICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJdGhpcy5hY3RpdmUucmVtb3ZlQ2xhc3MoICJ1aS1zdGF0ZS1mb2N1cyIgKTsNCgkJdGhpcy5hY3RpdmUgPSBudWxsOw0KDQoJCXRoaXMuX3RyaWdnZXIoICJibHVyIiwgZXZlbnQsIHsgaXRlbTogdGhpcy5hY3RpdmUgfSApOw0KCX0sDQoNCglfc3RhcnRPcGVuaW5nOiBmdW5jdGlvbiggc3VibWVudSApIHsNCgkJY2xlYXJUaW1lb3V0KCB0aGlzLnRpbWVyICk7DQoNCgkJLy8gRG9uJ3Qgb3BlbiBpZiBhbHJlYWR5IG9wZW4gZml4ZXMgYSBGaXJlZm94IGJ1ZyB0aGF0IGNhdXNlZCBhIC41IHBpeGVsDQoJCS8vIHNoaWZ0IGluIHRoZSBzdWJtZW51IHBvc2l0aW9uIHdoZW4gbW91c2luZyBvdmVyIHRoZSBjYXJhdCBpY29uDQoJCWlmICggc3VibWVudS5hdHRyKCAiYXJpYS1oaWRkZW4iICkgIT09ICJ0cnVlIiApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCXRoaXMudGltZXIgPSB0aGlzLl9kZWxheShmdW5jdGlvbigpIHsNCgkJCXRoaXMuX2Nsb3NlKCk7DQoJCQl0aGlzLl9vcGVuKCBzdWJtZW51ICk7DQoJCX0sIHRoaXMuZGVsYXkgKTsNCgl9LA0KDQoJX29wZW46IGZ1bmN0aW9uKCBzdWJtZW51ICkgew0KCQl2YXIgcG9zaXRpb24gPSAkLmV4dGVuZCh7DQoJCQlvZjogdGhpcy5hY3RpdmUNCgkJfSwgdGhpcy5vcHRpb25zLnBvc2l0aW9uICk7DQoNCgkJY2xlYXJUaW1lb3V0KCB0aGlzLnRpbWVyICk7DQoJCXRoaXMuZWxlbWVudC5maW5kKCAiLnVpLW1lbnUiICkubm90KCBzdWJtZW51LnBhcmVudHMoICIudWktbWVudSIgKSApDQoJCQkuaGlkZSgpDQoJCQkuYXR0ciggImFyaWEtaGlkZGVuIiwgInRydWUiICk7DQoNCgkJc3VibWVudQ0KCQkJLnNob3coKQ0KCQkJLnJlbW92ZUF0dHIoICJhcmlhLWhpZGRlbiIgKQ0KCQkJLmF0dHIoICJhcmlhLWV4cGFuZGVkIiwgInRydWUiICkNCgkJCS5wb3NpdGlvbiggcG9zaXRpb24gKTsNCgl9LA0KDQoJY29sbGFwc2VBbGw6IGZ1bmN0aW9uKCBldmVudCwgYWxsICkgew0KCQljbGVhclRpbWVvdXQoIHRoaXMudGltZXIgKTsNCgkJdGhpcy50aW1lciA9IHRoaXMuX2RlbGF5KGZ1bmN0aW9uKCkgew0KCQkJLy8gSWYgd2Ugd2VyZSBwYXNzZWQgYW4gZXZlbnQsIGxvb2sgZm9yIHRoZSBzdWJtZW51IHRoYXQgY29udGFpbnMgdGhlIGV2ZW50DQoJCQl2YXIgY3VycmVudE1lbnUgPSBhbGwgPyB0aGlzLmVsZW1lbnQgOg0KCQkJCSQoIGV2ZW50ICYmIGV2ZW50LnRhcmdldCApLmNsb3Nlc3QoIHRoaXMuZWxlbWVudC5maW5kKCAiLnVpLW1lbnUiICkgKTsNCg0KCQkJLy8gSWYgd2UgZm91bmQgbm8gdmFsaWQgc3VibWVudSBhbmNlc3RvciwgdXNlIHRoZSBtYWluIG1lbnUgdG8gY2xvc2UgYWxsIHN1YiBtZW51cyBhbnl3YXkNCgkJCWlmICggIWN1cnJlbnRNZW51Lmxlbmd0aCApIHsNCgkJCQljdXJyZW50TWVudSA9IHRoaXMuZWxlbWVudDsNCgkJCX0NCg0KCQkJdGhpcy5fY2xvc2UoIGN1cnJlbnRNZW51ICk7DQoNCgkJCXRoaXMuYmx1ciggZXZlbnQgKTsNCgkJCXRoaXMuYWN0aXZlTWVudSA9IGN1cnJlbnRNZW51Ow0KCQl9LCB0aGlzLmRlbGF5ICk7DQoJfSwNCg0KCS8vIFdpdGggbm8gYXJndW1lbnRzLCBjbG9zZXMgdGhlIGN1cnJlbnRseSBhY3RpdmUgbWVudSAtIGlmIG5vdGhpbmcgaXMgYWN0aXZlDQoJLy8gaXQgY2xvc2VzIGFsbCBtZW51cy4gIElmIHBhc3NlZCBhbiBhcmd1bWVudCwgaXQgd2lsbCBzZWFyY2ggZm9yIG1lbnVzIEJFTE9XDQoJX2Nsb3NlOiBmdW5jdGlvbiggc3RhcnRNZW51ICkgew0KCQlpZiAoICFzdGFydE1lbnUgKSB7DQoJCQlzdGFydE1lbnUgPSB0aGlzLmFjdGl2ZSA/IHRoaXMuYWN0aXZlLnBhcmVudCgpIDogdGhpcy5lbGVtZW50Ow0KCQl9DQoNCgkJc3RhcnRNZW51DQoJCQkuZmluZCggIi51aS1tZW51IiApDQoJCQkJLmhpZGUoKQ0KCQkJCS5hdHRyKCAiYXJpYS1oaWRkZW4iLCAidHJ1ZSIgKQ0KCQkJCS5hdHRyKCAiYXJpYS1leHBhbmRlZCIsICJmYWxzZSIgKQ0KCQkJLmVuZCgpDQoJCQkuZmluZCggIi51aS1zdGF0ZS1hY3RpdmUiICkubm90KCAiLnVpLXN0YXRlLWZvY3VzIiApDQoJCQkJLnJlbW92ZUNsYXNzKCAidWktc3RhdGUtYWN0aXZlIiApOw0KCX0sDQoNCglfY2xvc2VPbkRvY3VtZW50Q2xpY2s6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJcmV0dXJuICEkKCBldmVudC50YXJnZXQgKS5jbG9zZXN0KCAiLnVpLW1lbnUiICkubGVuZ3RoOw0KCX0sDQoNCglfaXNEaXZpZGVyOiBmdW5jdGlvbiggaXRlbSApIHsNCg0KCQkvLyBNYXRjaCBoeXBoZW4sIGVtIGRhc2gsIGVuIGRhc2gNCgkJcmV0dXJuICEvW15cLVx1MjAxNFx1MjAxM1xzXS8udGVzdCggaXRlbS50ZXh0KCkgKTsNCgl9LA0KDQoJY29sbGFwc2U6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdmFyIG5ld0l0ZW0gPSB0aGlzLmFjdGl2ZSAmJg0KCQkJdGhpcy5hY3RpdmUucGFyZW50KCkuY2xvc2VzdCggIi51aS1tZW51LWl0ZW0iLCB0aGlzLmVsZW1lbnQgKTsNCgkJaWYgKCBuZXdJdGVtICYmIG5ld0l0ZW0ubGVuZ3RoICkgew0KCQkJdGhpcy5fY2xvc2UoKTsNCgkJCXRoaXMuZm9jdXMoIGV2ZW50LCBuZXdJdGVtICk7DQoJCX0NCgl9LA0KDQoJZXhwYW5kOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXZhciBuZXdJdGVtID0gdGhpcy5hY3RpdmUgJiYNCgkJCXRoaXMuYWN0aXZlDQoJCQkJLmNoaWxkcmVuKCAiLnVpLW1lbnUgIiApDQoJCQkJLmZpbmQoIHRoaXMub3B0aW9ucy5pdGVtcyApDQoJCQkJLmZpcnN0KCk7DQoNCgkJaWYgKCBuZXdJdGVtICYmIG5ld0l0ZW0ubGVuZ3RoICkgew0KCQkJdGhpcy5fb3BlbiggbmV3SXRlbS5wYXJlbnQoKSApOw0KDQoJCQkvLyBEZWxheSBzbyBGaXJlZm94IHdpbGwgbm90IGhpZGUgYWN0aXZlZGVzY2VuZGFudCBjaGFuZ2UgaW4gZXhwYW5kaW5nIHN1Ym1lbnUgZnJvbSBBVA0KCQkJdGhpcy5fZGVsYXkoZnVuY3Rpb24oKSB7DQoJCQkJdGhpcy5mb2N1cyggZXZlbnQsIG5ld0l0ZW0gKTsNCgkJCX0pOw0KCQl9DQoJfSwNCg0KCW5leHQ6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdGhpcy5fbW92ZSggIm5leHQiLCAiZmlyc3QiLCBldmVudCApOw0KCX0sDQoNCglwcmV2aW91czogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl0aGlzLl9tb3ZlKCAicHJldiIsICJsYXN0IiwgZXZlbnQgKTsNCgl9LA0KDQoJaXNGaXJzdEl0ZW06IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy5hY3RpdmUgJiYgIXRoaXMuYWN0aXZlLnByZXZBbGwoICIudWktbWVudS1pdGVtIiApLmxlbmd0aDsNCgl9LA0KDQoJaXNMYXN0SXRlbTogZnVuY3Rpb24oKSB7DQoJCXJldHVybiB0aGlzLmFjdGl2ZSAmJiAhdGhpcy5hY3RpdmUubmV4dEFsbCggIi51aS1tZW51LWl0ZW0iICkubGVuZ3RoOw0KCX0sDQoNCglfbW92ZTogZnVuY3Rpb24oIGRpcmVjdGlvbiwgZmlsdGVyLCBldmVudCApIHsNCgkJdmFyIG5leHQ7DQoJCWlmICggdGhpcy5hY3RpdmUgKSB7DQoJCQlpZiAoIGRpcmVjdGlvbiA9PT0gImZpcnN0IiB8fCBkaXJlY3Rpb24gPT09ICJsYXN0IiApIHsNCgkJCQluZXh0ID0gdGhpcy5hY3RpdmUNCgkJCQkJWyBkaXJlY3Rpb24gPT09ICJmaXJzdCIgPyAicHJldkFsbCIgOiAibmV4dEFsbCIgXSggIi51aS1tZW51LWl0ZW0iICkNCgkJCQkJLmVxKCAtMSApOw0KCQkJfSBlbHNlIHsNCgkJCQluZXh0ID0gdGhpcy5hY3RpdmUNCgkJCQkJWyBkaXJlY3Rpb24gKyAiQWxsIiBdKCAiLnVpLW1lbnUtaXRlbSIgKQ0KCQkJCQkuZXEoIDAgKTsNCgkJCX0NCgkJfQ0KCQlpZiAoICFuZXh0IHx8ICFuZXh0Lmxlbmd0aCB8fCAhdGhpcy5hY3RpdmUgKSB7DQoJCQluZXh0ID0gdGhpcy5hY3RpdmVNZW51LmZpbmQoIHRoaXMub3B0aW9ucy5pdGVtcyApWyBmaWx0ZXIgXSgpOw0KCQl9DQoNCgkJdGhpcy5mb2N1cyggZXZlbnQsIG5leHQgKTsNCgl9LA0KDQoJbmV4dFBhZ2U6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdmFyIGl0ZW0sIGJhc2UsIGhlaWdodDsNCg0KCQlpZiAoICF0aGlzLmFjdGl2ZSApIHsNCgkJCXRoaXMubmV4dCggZXZlbnQgKTsNCgkJCXJldHVybjsNCgkJfQ0KCQlpZiAoIHRoaXMuaXNMYXN0SXRlbSgpICkgew0KCQkJcmV0dXJuOw0KCQl9DQoJCWlmICggdGhpcy5faGFzU2Nyb2xsKCkgKSB7DQoJCQliYXNlID0gdGhpcy5hY3RpdmUub2Zmc2V0KCkudG9wOw0KCQkJaGVpZ2h0ID0gdGhpcy5lbGVtZW50LmhlaWdodCgpOw0KCQkJdGhpcy5hY3RpdmUubmV4dEFsbCggIi51aS1tZW51LWl0ZW0iICkuZWFjaChmdW5jdGlvbigpIHsNCgkJCQlpdGVtID0gJCggdGhpcyApOw0KCQkJCXJldHVybiBpdGVtLm9mZnNldCgpLnRvcCAtIGJhc2UgLSBoZWlnaHQgPCAwOw0KCQkJfSk7DQoNCgkJCXRoaXMuZm9jdXMoIGV2ZW50LCBpdGVtICk7DQoJCX0gZWxzZSB7DQoJCQl0aGlzLmZvY3VzKCBldmVudCwgdGhpcy5hY3RpdmVNZW51LmZpbmQoIHRoaXMub3B0aW9ucy5pdGVtcyApDQoJCQkJWyAhdGhpcy5hY3RpdmUgPyAiZmlyc3QiIDogImxhc3QiIF0oKSApOw0KCQl9DQoJfSwNCg0KCXByZXZpb3VzUGFnZTogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl2YXIgaXRlbSwgYmFzZSwgaGVpZ2h0Ow0KCQlpZiAoICF0aGlzLmFjdGl2ZSApIHsNCgkJCXRoaXMubmV4dCggZXZlbnQgKTsNCgkJCXJldHVybjsNCgkJfQ0KCQlpZiAoIHRoaXMuaXNGaXJzdEl0ZW0oKSApIHsNCgkJCXJldHVybjsNCgkJfQ0KCQlpZiAoIHRoaXMuX2hhc1Njcm9sbCgpICkgew0KCQkJYmFzZSA9IHRoaXMuYWN0aXZlLm9mZnNldCgpLnRvcDsNCgkJCWhlaWdodCA9IHRoaXMuZWxlbWVudC5oZWlnaHQoKTsNCgkJCXRoaXMuYWN0aXZlLnByZXZBbGwoICIudWktbWVudS1pdGVtIiApLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJaXRlbSA9ICQoIHRoaXMgKTsNCgkJCQlyZXR1cm4gaXRlbS5vZmZzZXQoKS50b3AgLSBiYXNlICsgaGVpZ2h0ID4gMDsNCgkJCX0pOw0KDQoJCQl0aGlzLmZvY3VzKCBldmVudCwgaXRlbSApOw0KCQl9IGVsc2Ugew0KCQkJdGhpcy5mb2N1cyggZXZlbnQsIHRoaXMuYWN0aXZlTWVudS5maW5kKCB0aGlzLm9wdGlvbnMuaXRlbXMgKS5maXJzdCgpICk7DQoJCX0NCgl9LA0KDQoJX2hhc1Njcm9sbDogZnVuY3Rpb24oKSB7DQoJCXJldHVybiB0aGlzLmVsZW1lbnQub3V0ZXJIZWlnaHQoKSA8IHRoaXMuZWxlbWVudC5wcm9wKCAic2Nyb2xsSGVpZ2h0IiApOw0KCX0sDQoNCglzZWxlY3Q6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJLy8gVE9ETzogSXQgc2hvdWxkIG5ldmVyIGJlIHBvc3NpYmxlIHRvIG5vdCBoYXZlIGFuIGFjdGl2ZSBpdGVtIGF0IHRoaXMNCgkJLy8gcG9pbnQsIGJ1dCB0aGUgdGVzdHMgZG9uJ3QgdHJpZ2dlciBtb3VzZWVudGVyIGJlZm9yZSBjbGljay4NCgkJdGhpcy5hY3RpdmUgPSB0aGlzLmFjdGl2ZSB8fCAkKCBldmVudC50YXJnZXQgKS5jbG9zZXN0KCAiLnVpLW1lbnUtaXRlbSIgKTsNCgkJdmFyIHVpID0geyBpdGVtOiB0aGlzLmFjdGl2ZSB9Ow0KCQlpZiAoICF0aGlzLmFjdGl2ZS5oYXMoICIudWktbWVudSIgKS5sZW5ndGggKSB7DQoJCQl0aGlzLmNvbGxhcHNlQWxsKCBldmVudCwgdHJ1ZSApOw0KCQl9DQoJCXRoaXMuX3RyaWdnZXIoICJzZWxlY3QiLCBldmVudCwgdWkgKTsNCgl9LA0KDQoJX2ZpbHRlck1lbnVJdGVtczogZnVuY3Rpb24oY2hhcmFjdGVyKSB7DQoJCXZhciBlc2NhcGVkQ2hhcmFjdGVyID0gY2hhcmFjdGVyLnJlcGxhY2UoIC9bXC1cW1xde30oKSorPy4sXFxcXiR8I1xzXS9nLCAiXFwkJiIgKSwNCgkJCXJlZ2V4ID0gbmV3IFJlZ0V4cCggIl4iICsgZXNjYXBlZENoYXJhY3RlciwgImkiICk7DQoNCgkJcmV0dXJuIHRoaXMuYWN0aXZlTWVudQ0KCQkJLmZpbmQoIHRoaXMub3B0aW9ucy5pdGVtcyApDQoNCgkJCS8vIE9ubHkgbWF0Y2ggb24gaXRlbXMsIG5vdCBkaXZpZGVycyBvciBvdGhlciBjb250ZW50ICgjMTA1NzEpDQoJCQkuZmlsdGVyKCAiLnVpLW1lbnUtaXRlbSIgKQ0KCQkJLmZpbHRlcihmdW5jdGlvbigpIHsNCgkJCQlyZXR1cm4gcmVnZXgudGVzdCggJC50cmltKCAkKCB0aGlzICkudGV4dCgpICkgKTsNCgkJCX0pOw0KCX0NCn0pOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIEF1dG9jb21wbGV0ZSAxLjExLjINCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgMjAxNCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKg0KICogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vYXV0b2NvbXBsZXRlLw0KICovDQoNCg0KJC53aWRnZXQoICJ1aS5hdXRvY29tcGxldGUiLCB7DQoJdmVyc2lvbjogIjEuMTEuMiIsDQoJZGVmYXVsdEVsZW1lbnQ6ICI8aW5wdXQ+IiwNCglvcHRpb25zOiB7DQoJCWFwcGVuZFRvOiBudWxsLA0KCQlhdXRvRm9jdXM6IGZhbHNlLA0KCQlkZWxheTogMzAwLA0KCQltaW5MZW5ndGg6IDEsDQoJCXBvc2l0aW9uOiB7DQoJCQlteTogImxlZnQgdG9wIiwNCgkJCWF0OiAibGVmdCBib3R0b20iLA0KCQkJY29sbGlzaW9uOiAibm9uZSINCgkJfSwNCgkJc291cmNlOiBudWxsLA0KDQoJCS8vIGNhbGxiYWNrcw0KCQljaGFuZ2U6IG51bGwsDQoJCWNsb3NlOiBudWxsLA0KCQlmb2N1czogbnVsbCwNCgkJb3BlbjogbnVsbCwNCgkJcmVzcG9uc2U6IG51bGwsDQoJCXNlYXJjaDogbnVsbCwNCgkJc2VsZWN0OiBudWxsDQoJfSwNCg0KCXJlcXVlc3RJbmRleDogMCwNCglwZW5kaW5nOiAwLA0KDQoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7DQoJCS8vIFNvbWUgYnJvd3NlcnMgb25seSByZXBlYXQga2V5ZG93biBldmVudHMsIG5vdCBrZXlwcmVzcyBldmVudHMsDQoJCS8vIHNvIHdlIHVzZSB0aGUgc3VwcHJlc3NLZXlQcmVzcyBmbGFnIHRvIGRldGVybWluZSBpZiB3ZSd2ZSBhbHJlYWR5DQoJCS8vIGhhbmRsZWQgdGhlIGtleWRvd24gZXZlbnQuICM3MjY5DQoJCS8vIFVuZm9ydHVuYXRlbHkgdGhlIGNvZGUgZm9yICYgaW4ga2V5cHJlc3MgaXMgdGhlIHNhbWUgYXMgdGhlIHVwIGFycm93LA0KCQkvLyBzbyB3ZSB1c2UgdGhlIHN1cHByZXNzS2V5UHJlc3NSZXBlYXQgZmxhZyB0byBhdm9pZCBoYW5kbGluZyBrZXlwcmVzcw0KCQkvLyBldmVudHMgd2hlbiB3ZSBrbm93IHRoZSBrZXlkb3duIGV2ZW50IHdhcyB1c2VkIHRvIG1vZGlmeSB0aGUNCgkJLy8gc2VhcmNoIHRlcm0uICM3Nzk5DQoJCXZhciBzdXBwcmVzc0tleVByZXNzLCBzdXBwcmVzc0tleVByZXNzUmVwZWF0LCBzdXBwcmVzc0lucHV0LA0KCQkJbm9kZU5hbWUgPSB0aGlzLmVsZW1lbnRbIDAgXS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLA0KCQkJaXNUZXh0YXJlYSA9IG5vZGVOYW1lID09PSAidGV4dGFyZWEiLA0KCQkJaXNJbnB1dCA9IG5vZGVOYW1lID09PSAiaW5wdXQiOw0KDQoJCXRoaXMuaXNNdWx0aUxpbmUgPQ0KCQkJLy8gVGV4dGFyZWFzIGFyZSBhbHdheXMgbXVsdGktbGluZQ0KCQkJaXNUZXh0YXJlYSA/IHRydWUgOg0KCQkJLy8gSW5wdXRzIGFyZSBhbHdheXMgc2luZ2xlLWxpbmUsIGV2ZW4gaWYgaW5zaWRlIGEgY29udGVudEVkaXRhYmxlIGVsZW1lbnQNCgkJCS8vIElFIGFsc28gdHJlYXRzIGlucHV0cyBhcyBjb250ZW50RWRpdGFibGUNCgkJCWlzSW5wdXQgPyBmYWxzZSA6DQoJCQkvLyBBbGwgb3RoZXIgZWxlbWVudCB0eXBlcyBhcmUgZGV0ZXJtaW5lZCBieSB3aGV0aGVyIG9yIG5vdCB0aGV5J3JlIGNvbnRlbnRFZGl0YWJsZQ0KCQkJdGhpcy5lbGVtZW50LnByb3AoICJpc0NvbnRlbnRFZGl0YWJsZSIgKTsNCg0KCQl0aGlzLnZhbHVlTWV0aG9kID0gdGhpcy5lbGVtZW50WyBpc1RleHRhcmVhIHx8IGlzSW5wdXQgPyAidmFsIiA6ICJ0ZXh0IiBdOw0KCQl0aGlzLmlzTmV3TWVudSA9IHRydWU7DQoNCgkJdGhpcy5lbGVtZW50DQoJCQkuYWRkQ2xhc3MoICJ1aS1hdXRvY29tcGxldGUtaW5wdXQiICkNCgkJCS5hdHRyKCAiYXV0b2NvbXBsZXRlIiwgIm9mZiIgKTsNCg0KCQl0aGlzLl9vbiggdGhpcy5lbGVtZW50LCB7DQoJCQlrZXlkb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQkJaWYgKCB0aGlzLmVsZW1lbnQucHJvcCggInJlYWRPbmx5IiApICkgew0KCQkJCQlzdXBwcmVzc0tleVByZXNzID0gdHJ1ZTsNCgkJCQkJc3VwcHJlc3NJbnB1dCA9IHRydWU7DQoJCQkJCXN1cHByZXNzS2V5UHJlc3NSZXBlYXQgPSB0cnVlOw0KCQkJCQlyZXR1cm47DQoJCQkJfQ0KDQoJCQkJc3VwcHJlc3NLZXlQcmVzcyA9IGZhbHNlOw0KCQkJCXN1cHByZXNzSW5wdXQgPSBmYWxzZTsNCgkJCQlzdXBwcmVzc0tleVByZXNzUmVwZWF0ID0gZmFsc2U7DQoJCQkJdmFyIGtleUNvZGUgPSAkLnVpLmtleUNvZGU7DQoJCQkJc3dpdGNoICggZXZlbnQua2V5Q29kZSApIHsNCgkJCQljYXNlIGtleUNvZGUuUEFHRV9VUDoNCgkJCQkJc3VwcHJlc3NLZXlQcmVzcyA9IHRydWU7DQoJCQkJCXRoaXMuX21vdmUoICJwcmV2aW91c1BhZ2UiLCBldmVudCApOw0KCQkJCQlicmVhazsNCgkJCQljYXNlIGtleUNvZGUuUEFHRV9ET1dOOg0KCQkJCQlzdXBwcmVzc0tleVByZXNzID0gdHJ1ZTsNCgkJCQkJdGhpcy5fbW92ZSggIm5leHRQYWdlIiwgZXZlbnQgKTsNCgkJCQkJYnJlYWs7DQoJCQkJY2FzZSBrZXlDb2RlLlVQOg0KCQkJCQlzdXBwcmVzc0tleVByZXNzID0gdHJ1ZTsNCgkJCQkJdGhpcy5fa2V5RXZlbnQoICJwcmV2aW91cyIsIGV2ZW50ICk7DQoJCQkJCWJyZWFrOw0KCQkJCWNhc2Uga2V5Q29kZS5ET1dOOg0KCQkJCQlzdXBwcmVzc0tleVByZXNzID0gdHJ1ZTsNCgkJCQkJdGhpcy5fa2V5RXZlbnQoICJuZXh0IiwgZXZlbnQgKTsNCgkJCQkJYnJlYWs7DQoJCQkJY2FzZSBrZXlDb2RlLkVOVEVSOg0KCQkJCQkvLyB3aGVuIG1lbnUgaXMgb3BlbiBhbmQgaGFzIGZvY3VzDQoJCQkJCWlmICggdGhpcy5tZW51LmFjdGl2ZSApIHsNCgkJCQkJCS8vICM2MDU1IC0gT3BlcmEgc3RpbGwgYWxsb3dzIHRoZSBrZXlwcmVzcyB0byBvY2N1cg0KCQkJCQkJLy8gd2hpY2ggY2F1c2VzIGZvcm1zIHRvIHN1Ym1pdA0KCQkJCQkJc3VwcHJlc3NLZXlQcmVzcyA9IHRydWU7DQoJCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQkJCQkJdGhpcy5tZW51LnNlbGVjdCggZXZlbnQgKTsNCgkJCQkJfQ0KCQkJCQlicmVhazsNCgkJCQljYXNlIGtleUNvZGUuVEFCOg0KCQkJCQlpZiAoIHRoaXMubWVudS5hY3RpdmUgKSB7DQoJCQkJCQl0aGlzLm1lbnUuc2VsZWN0KCBldmVudCApOw0KCQkJCQl9DQoJCQkJCWJyZWFrOw0KCQkJCWNhc2Uga2V5Q29kZS5FU0NBUEU6DQoJCQkJCWlmICggdGhpcy5tZW51LmVsZW1lbnQuaXMoICI6dmlzaWJsZSIgKSApIHsNCgkJCQkJCWlmICggIXRoaXMuaXNNdWx0aUxpbmUgKSB7DQoJCQkJCQkJdGhpcy5fdmFsdWUoIHRoaXMudGVybSApOw0KCQkJCQkJfQ0KCQkJCQkJdGhpcy5jbG9zZSggZXZlbnQgKTsNCgkJCQkJCS8vIERpZmZlcmVudCBicm93c2VycyBoYXZlIGRpZmZlcmVudCBkZWZhdWx0IGJlaGF2aW9yIGZvciBlc2NhcGUNCgkJCQkJCS8vIFNpbmdsZSBwcmVzcyBjYW4gbWVhbiB1bmRvIG9yIGNsZWFyDQoJCQkJCQkvLyBEb3VibGUgcHJlc3MgaW4gSUUgbWVhbnMgY2xlYXIgdGhlIHdob2xlIGZvcm0NCgkJCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQoJCQkJCX0NCgkJCQkJYnJlYWs7DQoJCQkJZGVmYXVsdDoNCgkJCQkJc3VwcHJlc3NLZXlQcmVzc1JlcGVhdCA9IHRydWU7DQoJCQkJCS8vIHNlYXJjaCB0aW1lb3V0IHNob3VsZCBiZSB0cmlnZ2VyZWQgYmVmb3JlIHRoZSBpbnB1dCB2YWx1ZSBpcyBjaGFuZ2VkDQoJCQkJCXRoaXMuX3NlYXJjaFRpbWVvdXQoIGV2ZW50ICk7DQoJCQkJCWJyZWFrOw0KCQkJCX0NCgkJCX0sDQoJCQlrZXlwcmVzczogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCWlmICggc3VwcHJlc3NLZXlQcmVzcyApIHsNCgkJCQkJc3VwcHJlc3NLZXlQcmVzcyA9IGZhbHNlOw0KCQkJCQlpZiAoICF0aGlzLmlzTXVsdGlMaW5lIHx8IHRoaXMubWVudS5lbGVtZW50LmlzKCAiOnZpc2libGUiICkgKSB7DQoJCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQkJCQl9DQoJCQkJCXJldHVybjsNCgkJCQl9DQoJCQkJaWYgKCBzdXBwcmVzc0tleVByZXNzUmVwZWF0ICkgew0KCQkJCQlyZXR1cm47DQoJCQkJfQ0KDQoJCQkJLy8gcmVwbGljYXRlIHNvbWUga2V5IGhhbmRsZXJzIHRvIGFsbG93IHRoZW0gdG8gcmVwZWF0IGluIEZpcmVmb3ggYW5kIE9wZXJhDQoJCQkJdmFyIGtleUNvZGUgPSAkLnVpLmtleUNvZGU7DQoJCQkJc3dpdGNoICggZXZlbnQua2V5Q29kZSApIHsNCgkJCQljYXNlIGtleUNvZGUuUEFHRV9VUDoNCgkJCQkJdGhpcy5fbW92ZSggInByZXZpb3VzUGFnZSIsIGV2ZW50ICk7DQoJCQkJCWJyZWFrOw0KCQkJCWNhc2Uga2V5Q29kZS5QQUdFX0RPV046DQoJCQkJCXRoaXMuX21vdmUoICJuZXh0UGFnZSIsIGV2ZW50ICk7DQoJCQkJCWJyZWFrOw0KCQkJCWNhc2Uga2V5Q29kZS5VUDoNCgkJCQkJdGhpcy5fa2V5RXZlbnQoICJwcmV2aW91cyIsIGV2ZW50ICk7DQoJCQkJCWJyZWFrOw0KCQkJCWNhc2Uga2V5Q29kZS5ET1dOOg0KCQkJCQl0aGlzLl9rZXlFdmVudCggIm5leHQiLCBldmVudCApOw0KCQkJCQlicmVhazsNCgkJCQl9DQoJCQl9LA0KCQkJaW5wdXQ6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQlpZiAoIHN1cHByZXNzSW5wdXQgKSB7DQoJCQkJCXN1cHByZXNzSW5wdXQgPSBmYWxzZTsNCgkJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCgkJCQkJcmV0dXJuOw0KCQkJCX0NCgkJCQl0aGlzLl9zZWFyY2hUaW1lb3V0KCBldmVudCApOw0KCQkJfSwNCgkJCWZvY3VzOiBmdW5jdGlvbigpIHsNCgkJCQl0aGlzLnNlbGVjdGVkSXRlbSA9IG51bGw7DQoJCQkJdGhpcy5wcmV2aW91cyA9IHRoaXMuX3ZhbHVlKCk7DQoJCQl9LA0KCQkJYmx1cjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCWlmICggdGhpcy5jYW5jZWxCbHVyICkgew0KCQkJCQlkZWxldGUgdGhpcy5jYW5jZWxCbHVyOw0KCQkJCQlyZXR1cm47DQoJCQkJfQ0KDQoJCQkJY2xlYXJUaW1lb3V0KCB0aGlzLnNlYXJjaGluZyApOw0KCQkJCXRoaXMuY2xvc2UoIGV2ZW50ICk7DQoJCQkJdGhpcy5fY2hhbmdlKCBldmVudCApOw0KCQkJfQ0KCQl9KTsNCg0KCQl0aGlzLl9pbml0U291cmNlKCk7DQoJCXRoaXMubWVudSA9ICQoICI8dWw+IiApDQoJCQkuYWRkQ2xhc3MoICJ1aS1hdXRvY29tcGxldGUgdWktZnJvbnQiICkNCgkJCS5hcHBlbmRUbyggdGhpcy5fYXBwZW5kVG8oKSApDQoJCQkubWVudSh7DQoJCQkJLy8gZGlzYWJsZSBBUklBIHN1cHBvcnQsIHRoZSBsaXZlIHJlZ2lvbiB0YWtlcyBjYXJlIG9mIHRoYXQNCgkJCQlyb2xlOiBudWxsDQoJCQl9KQ0KCQkJLmhpZGUoKQ0KCQkJLm1lbnUoICJpbnN0YW5jZSIgKTsNCg0KCQl0aGlzLl9vbiggdGhpcy5tZW51LmVsZW1lbnQsIHsNCgkJCW1vdXNlZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCS8vIHByZXZlbnQgbW92aW5nIGZvY3VzIG91dCBvZiB0aGUgdGV4dCBmaWVsZA0KCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQoNCgkJCQkvLyBJRSBkb2Vzbid0IHByZXZlbnQgbW92aW5nIGZvY3VzIGV2ZW4gd2l0aCBldmVudC5wcmV2ZW50RGVmYXVsdCgpDQoJCQkJLy8gc28gd2Ugc2V0IGEgZmxhZyB0byBrbm93IHdoZW4gd2Ugc2hvdWxkIGlnbm9yZSB0aGUgYmx1ciBldmVudA0KCQkJCXRoaXMuY2FuY2VsQmx1ciA9IHRydWU7DQoJCQkJdGhpcy5fZGVsYXkoZnVuY3Rpb24oKSB7DQoJCQkJCWRlbGV0ZSB0aGlzLmNhbmNlbEJsdXI7DQoJCQkJfSk7DQoNCgkJCQkvLyBjbGlja2luZyBvbiB0aGUgc2Nyb2xsYmFyIGNhdXNlcyBmb2N1cyB0byBzaGlmdCB0byB0aGUgYm9keQ0KCQkJCS8vIGJ1dCB3ZSBjYW4ndCBkZXRlY3QgYSBtb3VzZXVwIG9yIGEgY2xpY2sgaW1tZWRpYXRlbHkgYWZ0ZXJ3YXJkDQoJCQkJLy8gc28gd2UgaGF2ZSB0byB0cmFjayB0aGUgbmV4dCBtb3VzZWRvd24gYW5kIGNsb3NlIHRoZSBtZW51IGlmDQoJCQkJLy8gdGhlIHVzZXIgY2xpY2tzIHNvbWV3aGVyZSBvdXRzaWRlIG9mIHRoZSBhdXRvY29tcGxldGUNCgkJCQl2YXIgbWVudUVsZW1lbnQgPSB0aGlzLm1lbnUuZWxlbWVudFsgMCBdOw0KCQkJCWlmICggISQoIGV2ZW50LnRhcmdldCApLmNsb3Nlc3QoICIudWktbWVudS1pdGVtIiApLmxlbmd0aCApIHsNCgkJCQkJdGhpcy5fZGVsYXkoZnVuY3Rpb24oKSB7DQoJCQkJCQl2YXIgdGhhdCA9IHRoaXM7DQoJCQkJCQl0aGlzLmRvY3VtZW50Lm9uZSggIm1vdXNlZG93biIsIGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQkJCQlpZiAoIGV2ZW50LnRhcmdldCAhPT0gdGhhdC5lbGVtZW50WyAwIF0gJiYNCgkJCQkJCQkJCWV2ZW50LnRhcmdldCAhPT0gbWVudUVsZW1lbnQgJiYNCgkJCQkJCQkJCSEkLmNvbnRhaW5zKCBtZW51RWxlbWVudCwgZXZlbnQudGFyZ2V0ICkgKSB7DQoJCQkJCQkJCXRoYXQuY2xvc2UoKTsNCgkJCQkJCQl9DQoJCQkJCQl9KTsNCgkJCQkJfSk7DQoJCQkJfQ0KCQkJfSwNCgkJCW1lbnVmb2N1czogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsNCgkJCQl2YXIgbGFiZWwsIGl0ZW07DQoJCQkJLy8gc3VwcG9ydDogRmlyZWZveA0KCQkJCS8vIFByZXZlbnQgYWNjaWRlbnRhbCBhY3RpdmF0aW9uIG9mIG1lbnUgaXRlbXMgaW4gRmlyZWZveCAoIzcwMjQgIzkxMTgpDQoJCQkJaWYgKCB0aGlzLmlzTmV3TWVudSApIHsNCgkJCQkJdGhpcy5pc05ld01lbnUgPSBmYWxzZTsNCgkJCQkJaWYgKCBldmVudC5vcmlnaW5hbEV2ZW50ICYmIC9ebW91c2UvLnRlc3QoIGV2ZW50Lm9yaWdpbmFsRXZlbnQudHlwZSApICkgew0KCQkJCQkJdGhpcy5tZW51LmJsdXIoKTsNCg0KCQkJCQkJdGhpcy5kb2N1bWVudC5vbmUoICJtb3VzZW1vdmUiLCBmdW5jdGlvbigpIHsNCgkJCQkJCQkkKCBldmVudC50YXJnZXQgKS50cmlnZ2VyKCBldmVudC5vcmlnaW5hbEV2ZW50ICk7DQoJCQkJCQl9KTsNCg0KCQkJCQkJcmV0dXJuOw0KCQkJCQl9DQoJCQkJfQ0KDQoJCQkJaXRlbSA9IHVpLml0ZW0uZGF0YSggInVpLWF1dG9jb21wbGV0ZS1pdGVtIiApOw0KCQkJCWlmICggZmFsc2UgIT09IHRoaXMuX3RyaWdnZXIoICJmb2N1cyIsIGV2ZW50LCB7IGl0ZW06IGl0ZW0gfSApICkgew0KCQkJCQkvLyB1c2UgdmFsdWUgdG8gbWF0Y2ggd2hhdCB3aWxsIGVuZCB1cCBpbiB0aGUgaW5wdXQsIGlmIGl0IHdhcyBhIGtleSBldmVudA0KCQkJCQlpZiAoIGV2ZW50Lm9yaWdpbmFsRXZlbnQgJiYgL15rZXkvLnRlc3QoIGV2ZW50Lm9yaWdpbmFsRXZlbnQudHlwZSApICkgew0KCQkJCQkJdGhpcy5fdmFsdWUoIGl0ZW0udmFsdWUgKTsNCgkJCQkJfQ0KCQkJCX0NCg0KCQkJCS8vIEFubm91bmNlIHRoZSB2YWx1ZSBpbiB0aGUgbGl2ZVJlZ2lvbg0KCQkJCWxhYmVsID0gdWkuaXRlbS5hdHRyKCAiYXJpYS1sYWJlbCIgKSB8fCBpdGVtLnZhbHVlOw0KCQkJCWlmICggbGFiZWwgJiYgJC50cmltKCBsYWJlbCApLmxlbmd0aCApIHsNCgkJCQkJdGhpcy5saXZlUmVnaW9uLmNoaWxkcmVuKCkuaGlkZSgpOw0KCQkJCQkkKCAiPGRpdj4iICkudGV4dCggbGFiZWwgKS5hcHBlbmRUbyggdGhpcy5saXZlUmVnaW9uICk7DQoJCQkJfQ0KCQkJfSwNCgkJCW1lbnVzZWxlY3Q6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7DQoJCQkJdmFyIGl0ZW0gPSB1aS5pdGVtLmRhdGEoICJ1aS1hdXRvY29tcGxldGUtaXRlbSIgKSwNCgkJCQkJcHJldmlvdXMgPSB0aGlzLnByZXZpb3VzOw0KDQoJCQkJLy8gb25seSB0cmlnZ2VyIHdoZW4gZm9jdXMgd2FzIGxvc3QgKGNsaWNrIG9uIG1lbnUpDQoJCQkJaWYgKCB0aGlzLmVsZW1lbnRbIDAgXSAhPT0gdGhpcy5kb2N1bWVudFsgMCBdLmFjdGl2ZUVsZW1lbnQgKSB7DQoJCQkJCXRoaXMuZWxlbWVudC5mb2N1cygpOw0KCQkJCQl0aGlzLnByZXZpb3VzID0gcHJldmlvdXM7DQoJCQkJCS8vICM2MTA5IC0gSUUgdHJpZ2dlcnMgdHdvIGZvY3VzIGV2ZW50cyBhbmQgdGhlIHNlY29uZA0KCQkJCQkvLyBpcyBhc3luY2hyb25vdXMsIHNvIHdlIG5lZWQgdG8gcmVzZXQgdGhlIHByZXZpb3VzDQoJCQkJCS8vIHRlcm0gc3luY2hyb25vdXNseSBhbmQgYXN5bmNocm9ub3VzbHkgOi0oDQoJCQkJCXRoaXMuX2RlbGF5KGZ1bmN0aW9uKCkgew0KCQkJCQkJdGhpcy5wcmV2aW91cyA9IHByZXZpb3VzOw0KCQkJCQkJdGhpcy5zZWxlY3RlZEl0ZW0gPSBpdGVtOw0KCQkJCQl9KTsNCgkJCQl9DQoNCgkJCQlpZiAoIGZhbHNlICE9PSB0aGlzLl90cmlnZ2VyKCAic2VsZWN0IiwgZXZlbnQsIHsgaXRlbTogaXRlbSB9ICkgKSB7DQoJCQkJCXRoaXMuX3ZhbHVlKCBpdGVtLnZhbHVlICk7DQoJCQkJfQ0KCQkJCS8vIHJlc2V0IHRoZSB0ZXJtIGFmdGVyIHRoZSBzZWxlY3QgZXZlbnQNCgkJCQkvLyB0aGlzIGFsbG93cyBjdXN0b20gc2VsZWN0IGhhbmRsaW5nIHRvIHdvcmsgcHJvcGVybHkNCgkJCQl0aGlzLnRlcm0gPSB0aGlzLl92YWx1ZSgpOw0KDQoJCQkJdGhpcy5jbG9zZSggZXZlbnQgKTsNCgkJCQl0aGlzLnNlbGVjdGVkSXRlbSA9IGl0ZW07DQoJCQl9DQoJCX0pOw0KDQoJCXRoaXMubGl2ZVJlZ2lvbiA9ICQoICI8c3Bhbj4iLCB7DQoJCQkJcm9sZTogInN0YXR1cyIsDQoJCQkJImFyaWEtbGl2ZSI6ICJhc3NlcnRpdmUiLA0KCQkJCSJhcmlhLXJlbGV2YW50IjogImFkZGl0aW9ucyINCgkJCX0pDQoJCQkuYWRkQ2xhc3MoICJ1aS1oZWxwZXItaGlkZGVuLWFjY2Vzc2libGUiICkNCgkJCS5hcHBlbmRUbyggdGhpcy5kb2N1bWVudFsgMCBdLmJvZHkgKTsNCg0KCQkvLyB0dXJuaW5nIG9mZiBhdXRvY29tcGxldGUgcHJldmVudHMgdGhlIGJyb3dzZXIgZnJvbSByZW1lbWJlcmluZyB0aGUNCgkJLy8gdmFsdWUgd2hlbiBuYXZpZ2F0aW5nIHRocm91Z2ggaGlzdG9yeSwgc28gd2UgcmUtZW5hYmxlIGF1dG9jb21wbGV0ZQ0KCQkvLyBpZiB0aGUgcGFnZSBpcyB1bmxvYWRlZCBiZWZvcmUgdGhlIHdpZGdldCBpcyBkZXN0cm95ZWQuICM3NzkwDQoJCXRoaXMuX29uKCB0aGlzLndpbmRvdywgew0KCQkJYmVmb3JldW5sb2FkOiBmdW5jdGlvbigpIHsNCgkJCQl0aGlzLmVsZW1lbnQucmVtb3ZlQXR0ciggImF1dG9jb21wbGV0ZSIgKTsNCgkJCX0NCgkJfSk7DQoJfSwNCg0KCV9kZXN0cm95OiBmdW5jdGlvbigpIHsNCgkJY2xlYXJUaW1lb3V0KCB0aGlzLnNlYXJjaGluZyApOw0KCQl0aGlzLmVsZW1lbnQNCgkJCS5yZW1vdmVDbGFzcyggInVpLWF1dG9jb21wbGV0ZS1pbnB1dCIgKQ0KCQkJLnJlbW92ZUF0dHIoICJhdXRvY29tcGxldGUiICk7DQoJCXRoaXMubWVudS5lbGVtZW50LnJlbW92ZSgpOw0KCQl0aGlzLmxpdmVSZWdpb24ucmVtb3ZlKCk7DQoJfSwNCg0KCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgew0KCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOw0KCQlpZiAoIGtleSA9PT0gInNvdXJjZSIgKSB7DQoJCQl0aGlzLl9pbml0U291cmNlKCk7DQoJCX0NCgkJaWYgKCBrZXkgPT09ICJhcHBlbmRUbyIgKSB7DQoJCQl0aGlzLm1lbnUuZWxlbWVudC5hcHBlbmRUbyggdGhpcy5fYXBwZW5kVG8oKSApOw0KCQl9DQoJCWlmICgga2V5ID09PSAiZGlzYWJsZWQiICYmIHZhbHVlICYmIHRoaXMueGhyICkgew0KCQkJdGhpcy54aHIuYWJvcnQoKTsNCgkJfQ0KCX0sDQoNCglfYXBwZW5kVG86IGZ1bmN0aW9uKCkgew0KCQl2YXIgZWxlbWVudCA9IHRoaXMub3B0aW9ucy5hcHBlbmRUbzsNCg0KCQlpZiAoIGVsZW1lbnQgKSB7DQoJCQllbGVtZW50ID0gZWxlbWVudC5qcXVlcnkgfHwgZWxlbWVudC5ub2RlVHlwZSA/DQoJCQkJJCggZWxlbWVudCApIDoNCgkJCQl0aGlzLmRvY3VtZW50LmZpbmQoIGVsZW1lbnQgKS5lcSggMCApOw0KCQl9DQoNCgkJaWYgKCAhZWxlbWVudCB8fCAhZWxlbWVudFsgMCBdICkgew0KCQkJZWxlbWVudCA9IHRoaXMuZWxlbWVudC5jbG9zZXN0KCAiLnVpLWZyb250IiApOw0KCQl9DQoNCgkJaWYgKCAhZWxlbWVudC5sZW5ndGggKSB7DQoJCQllbGVtZW50ID0gdGhpcy5kb2N1bWVudFsgMCBdLmJvZHk7DQoJCX0NCg0KCQlyZXR1cm4gZWxlbWVudDsNCgl9LA0KDQoJX2luaXRTb3VyY2U6IGZ1bmN0aW9uKCkgew0KCQl2YXIgYXJyYXksIHVybCwNCgkJCXRoYXQgPSB0aGlzOw0KCQlpZiAoICQuaXNBcnJheSggdGhpcy5vcHRpb25zLnNvdXJjZSApICkgew0KCQkJYXJyYXkgPSB0aGlzLm9wdGlvbnMuc291cmNlOw0KCQkJdGhpcy5zb3VyY2UgPSBmdW5jdGlvbiggcmVxdWVzdCwgcmVzcG9uc2UgKSB7DQoJCQkJcmVzcG9uc2UoICQudWkuYXV0b2NvbXBsZXRlLmZpbHRlciggYXJyYXksIHJlcXVlc3QudGVybSApICk7DQoJCQl9Ow0KCQl9IGVsc2UgaWYgKCB0eXBlb2YgdGhpcy5vcHRpb25zLnNvdXJjZSA9PT0gInN0cmluZyIgKSB7DQoJCQl1cmwgPSB0aGlzLm9wdGlvbnMuc291cmNlOw0KCQkJdGhpcy5zb3VyY2UgPSBmdW5jdGlvbiggcmVxdWVzdCwgcmVzcG9uc2UgKSB7DQoJCQkJaWYgKCB0aGF0LnhociApIHsNCgkJCQkJdGhhdC54aHIuYWJvcnQoKTsNCgkJCQl9DQoJCQkJdGhhdC54aHIgPSAkLmFqYXgoew0KCQkJCQl1cmw6IHVybCwNCgkJCQkJZGF0YTogcmVxdWVzdCwNCgkJCQkJZGF0YVR5cGU6ICJqc29uIiwNCgkJCQkJc3VjY2VzczogZnVuY3Rpb24oIGRhdGEgKSB7DQoJCQkJCQlyZXNwb25zZSggZGF0YSApOw0KCQkJCQl9LA0KCQkJCQllcnJvcjogZnVuY3Rpb24oKSB7DQoJCQkJCQlyZXNwb25zZShbXSk7DQoJCQkJCX0NCgkJCQl9KTsNCgkJCX07DQoJCX0gZWxzZSB7DQoJCQl0aGlzLnNvdXJjZSA9IHRoaXMub3B0aW9ucy5zb3VyY2U7DQoJCX0NCgl9LA0KDQoJX3NlYXJjaFRpbWVvdXQ6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJY2xlYXJUaW1lb3V0KCB0aGlzLnNlYXJjaGluZyApOw0KCQl0aGlzLnNlYXJjaGluZyA9IHRoaXMuX2RlbGF5KGZ1bmN0aW9uKCkgew0KDQoJCQkvLyBTZWFyY2ggaWYgdGhlIHZhbHVlIGhhcyBjaGFuZ2VkLCBvciBpZiB0aGUgdXNlciByZXR5cGVzIHRoZSBzYW1lIHZhbHVlIChzZWUgIzc0MzQpDQoJCQl2YXIgZXF1YWxWYWx1ZXMgPSB0aGlzLnRlcm0gPT09IHRoaXMuX3ZhbHVlKCksDQoJCQkJbWVudVZpc2libGUgPSB0aGlzLm1lbnUuZWxlbWVudC5pcyggIjp2aXNpYmxlIiApLA0KCQkJCW1vZGlmaWVyS2V5ID0gZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSB8fCBldmVudC5zaGlmdEtleTsNCg0KCQkJaWYgKCAhZXF1YWxWYWx1ZXMgfHwgKCBlcXVhbFZhbHVlcyAmJiAhbWVudVZpc2libGUgJiYgIW1vZGlmaWVyS2V5ICkgKSB7DQoJCQkJdGhpcy5zZWxlY3RlZEl0ZW0gPSBudWxsOw0KCQkJCXRoaXMuc2VhcmNoKCBudWxsLCBldmVudCApOw0KCQkJfQ0KCQl9LCB0aGlzLm9wdGlvbnMuZGVsYXkgKTsNCgl9LA0KDQoJc2VhcmNoOiBmdW5jdGlvbiggdmFsdWUsIGV2ZW50ICkgew0KCQl2YWx1ZSA9IHZhbHVlICE9IG51bGwgPyB2YWx1ZSA6IHRoaXMuX3ZhbHVlKCk7DQoNCgkJLy8gYWx3YXlzIHNhdmUgdGhlIGFjdHVhbCB2YWx1ZSwgbm90IHRoZSBvbmUgcGFzc2VkIGFzIGFuIGFyZ3VtZW50DQoJCXRoaXMudGVybSA9IHRoaXMuX3ZhbHVlKCk7DQoNCgkJaWYgKCB2YWx1ZS5sZW5ndGggPCB0aGlzLm9wdGlvbnMubWluTGVuZ3RoICkgew0KCQkJcmV0dXJuIHRoaXMuY2xvc2UoIGV2ZW50ICk7DQoJCX0NCg0KCQlpZiAoIHRoaXMuX3RyaWdnZXIoICJzZWFyY2giLCBldmVudCApID09PSBmYWxzZSApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCXJldHVybiB0aGlzLl9zZWFyY2goIHZhbHVlICk7DQoJfSwNCg0KCV9zZWFyY2g6IGZ1bmN0aW9uKCB2YWx1ZSApIHsNCgkJdGhpcy5wZW5kaW5nKys7DQoJCXRoaXMuZWxlbWVudC5hZGRDbGFzcyggInVpLWF1dG9jb21wbGV0ZS1sb2FkaW5nIiApOw0KCQl0aGlzLmNhbmNlbFNlYXJjaCA9IGZhbHNlOw0KDQoJCXRoaXMuc291cmNlKCB7IHRlcm06IHZhbHVlIH0sIHRoaXMuX3Jlc3BvbnNlKCkgKTsNCgl9LA0KDQoJX3Jlc3BvbnNlOiBmdW5jdGlvbigpIHsNCgkJdmFyIGluZGV4ID0gKyt0aGlzLnJlcXVlc3RJbmRleDsNCg0KCQlyZXR1cm4gJC5wcm94eShmdW5jdGlvbiggY29udGVudCApIHsNCgkJCWlmICggaW5kZXggPT09IHRoaXMucmVxdWVzdEluZGV4ICkgew0KCQkJCXRoaXMuX19yZXNwb25zZSggY29udGVudCApOw0KCQkJfQ0KDQoJCQl0aGlzLnBlbmRpbmctLTsNCgkJCWlmICggIXRoaXMucGVuZGluZyApIHsNCgkJCQl0aGlzLmVsZW1lbnQucmVtb3ZlQ2xhc3MoICJ1aS1hdXRvY29tcGxldGUtbG9hZGluZyIgKTsNCgkJCX0NCgkJfSwgdGhpcyApOw0KCX0sDQoNCglfX3Jlc3BvbnNlOiBmdW5jdGlvbiggY29udGVudCApIHsNCgkJaWYgKCBjb250ZW50ICkgew0KCQkJY29udGVudCA9IHRoaXMuX25vcm1hbGl6ZSggY29udGVudCApOw0KCQl9DQoJCXRoaXMuX3RyaWdnZXIoICJyZXNwb25zZSIsIG51bGwsIHsgY29udGVudDogY29udGVudCB9ICk7DQoJCWlmICggIXRoaXMub3B0aW9ucy5kaXNhYmxlZCAmJiBjb250ZW50ICYmIGNvbnRlbnQubGVuZ3RoICYmICF0aGlzLmNhbmNlbFNlYXJjaCApIHsNCgkJCXRoaXMuX3N1Z2dlc3QoIGNvbnRlbnQgKTsNCgkJCXRoaXMuX3RyaWdnZXIoICJvcGVuIiApOw0KCQl9IGVsc2Ugew0KCQkJLy8gdXNlIC5fY2xvc2UoKSBpbnN0ZWFkIG9mIC5jbG9zZSgpIHNvIHdlIGRvbid0IGNhbmNlbCBmdXR1cmUgc2VhcmNoZXMNCgkJCXRoaXMuX2Nsb3NlKCk7DQoJCX0NCgl9LA0KDQoJY2xvc2U6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdGhpcy5jYW5jZWxTZWFyY2ggPSB0cnVlOw0KCQl0aGlzLl9jbG9zZSggZXZlbnQgKTsNCgl9LA0KDQoJX2Nsb3NlOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCWlmICggdGhpcy5tZW51LmVsZW1lbnQuaXMoICI6dmlzaWJsZSIgKSApIHsNCgkJCXRoaXMubWVudS5lbGVtZW50LmhpZGUoKTsNCgkJCXRoaXMubWVudS5ibHVyKCk7DQoJCQl0aGlzLmlzTmV3TWVudSA9IHRydWU7DQoJCQl0aGlzLl90cmlnZ2VyKCAiY2xvc2UiLCBldmVudCApOw0KCQl9DQoJfSwNCg0KCV9jaGFuZ2U6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJaWYgKCB0aGlzLnByZXZpb3VzICE9PSB0aGlzLl92YWx1ZSgpICkgew0KCQkJdGhpcy5fdHJpZ2dlciggImNoYW5nZSIsIGV2ZW50LCB7IGl0ZW06IHRoaXMuc2VsZWN0ZWRJdGVtIH0gKTsNCgkJfQ0KCX0sDQoNCglfbm9ybWFsaXplOiBmdW5jdGlvbiggaXRlbXMgKSB7DQoJCS8vIGFzc3VtZSBhbGwgaXRlbXMgaGF2ZSB0aGUgcmlnaHQgZm9ybWF0IHdoZW4gdGhlIGZpcnN0IGl0ZW0gaXMgY29tcGxldGUNCgkJaWYgKCBpdGVtcy5sZW5ndGggJiYgaXRlbXNbIDAgXS5sYWJlbCAmJiBpdGVtc1sgMCBdLnZhbHVlICkgew0KCQkJcmV0dXJuIGl0ZW1zOw0KCQl9DQoJCXJldHVybiAkLm1hcCggaXRlbXMsIGZ1bmN0aW9uKCBpdGVtICkgew0KCQkJaWYgKCB0eXBlb2YgaXRlbSA9PT0gInN0cmluZyIgKSB7DQoJCQkJcmV0dXJuIHsNCgkJCQkJbGFiZWw6IGl0ZW0sDQoJCQkJCXZhbHVlOiBpdGVtDQoJCQkJfTsNCgkJCX0NCgkJCXJldHVybiAkLmV4dGVuZCgge30sIGl0ZW0sIHsNCgkJCQlsYWJlbDogaXRlbS5sYWJlbCB8fCBpdGVtLnZhbHVlLA0KCQkJCXZhbHVlOiBpdGVtLnZhbHVlIHx8IGl0ZW0ubGFiZWwNCgkJCX0pOw0KCQl9KTsNCgl9LA0KDQoJX3N1Z2dlc3Q6IGZ1bmN0aW9uKCBpdGVtcyApIHsNCgkJdmFyIHVsID0gdGhpcy5tZW51LmVsZW1lbnQuZW1wdHkoKTsNCgkJdGhpcy5fcmVuZGVyTWVudSggdWwsIGl0ZW1zICk7DQoJCXRoaXMuaXNOZXdNZW51ID0gdHJ1ZTsNCgkJdGhpcy5tZW51LnJlZnJlc2goKTsNCg0KCQkvLyBzaXplIGFuZCBwb3NpdGlvbiBtZW51DQoJCXVsLnNob3coKTsNCgkJdGhpcy5fcmVzaXplTWVudSgpOw0KCQl1bC5wb3NpdGlvbiggJC5leHRlbmQoew0KCQkJb2Y6IHRoaXMuZWxlbWVudA0KCQl9LCB0aGlzLm9wdGlvbnMucG9zaXRpb24gKSApOw0KDQoJCWlmICggdGhpcy5vcHRpb25zLmF1dG9Gb2N1cyApIHsNCgkJCXRoaXMubWVudS5uZXh0KCk7DQoJCX0NCgl9LA0KDQoJX3Jlc2l6ZU1lbnU6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdWwgPSB0aGlzLm1lbnUuZWxlbWVudDsNCgkJdWwub3V0ZXJXaWR0aCggTWF0aC5tYXgoDQoJCQkvLyBGaXJlZm94IHdyYXBzIGxvbmcgdGV4dCAocG9zc2libHkgYSByb3VuZGluZyBidWcpDQoJCQkvLyBzbyB3ZSBhZGQgMXB4IHRvIGF2b2lkIHRoZSB3cmFwcGluZyAoIzc1MTMpDQoJCQl1bC53aWR0aCggIiIgKS5vdXRlcldpZHRoKCkgKyAxLA0KCQkJdGhpcy5lbGVtZW50Lm91dGVyV2lkdGgoKQ0KCQkpICk7DQoJfSwNCg0KCV9yZW5kZXJNZW51OiBmdW5jdGlvbiggdWwsIGl0ZW1zICkgew0KCQl2YXIgdGhhdCA9IHRoaXM7DQoJCSQuZWFjaCggaXRlbXMsIGZ1bmN0aW9uKCBpbmRleCwgaXRlbSApIHsNCgkJCXRoYXQuX3JlbmRlckl0ZW1EYXRhKCB1bCwgaXRlbSApOw0KCQl9KTsNCgl9LA0KDQoJX3JlbmRlckl0ZW1EYXRhOiBmdW5jdGlvbiggdWwsIGl0ZW0gKSB7DQoJCXJldHVybiB0aGlzLl9yZW5kZXJJdGVtKCB1bCwgaXRlbSApLmRhdGEoICJ1aS1hdXRvY29tcGxldGUtaXRlbSIsIGl0ZW0gKTsNCgl9LA0KDQoJX3JlbmRlckl0ZW06IGZ1bmN0aW9uKCB1bCwgaXRlbSApIHsNCgkJcmV0dXJuICQoICI8bGk+IiApLnRleHQoIGl0ZW0ubGFiZWwgKS5hcHBlbmRUbyggdWwgKTsNCgl9LA0KDQoJX21vdmU6IGZ1bmN0aW9uKCBkaXJlY3Rpb24sIGV2ZW50ICkgew0KCQlpZiAoICF0aGlzLm1lbnUuZWxlbWVudC5pcyggIjp2aXNpYmxlIiApICkgew0KCQkJdGhpcy5zZWFyY2goIG51bGwsIGV2ZW50ICk7DQoJCQlyZXR1cm47DQoJCX0NCgkJaWYgKCB0aGlzLm1lbnUuaXNGaXJzdEl0ZW0oKSAmJiAvXnByZXZpb3VzLy50ZXN0KCBkaXJlY3Rpb24gKSB8fA0KCQkJCXRoaXMubWVudS5pc0xhc3RJdGVtKCkgJiYgL15uZXh0Ly50ZXN0KCBkaXJlY3Rpb24gKSApIHsNCg0KCQkJaWYgKCAhdGhpcy5pc011bHRpTGluZSApIHsNCgkJCQl0aGlzLl92YWx1ZSggdGhpcy50ZXJtICk7DQoJCQl9DQoNCgkJCXRoaXMubWVudS5ibHVyKCk7DQoJCQlyZXR1cm47DQoJCX0NCgkJdGhpcy5tZW51WyBkaXJlY3Rpb24gXSggZXZlbnQgKTsNCgl9LA0KDQoJd2lkZ2V0OiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuIHRoaXMubWVudS5lbGVtZW50Ow0KCX0sDQoNCglfdmFsdWU6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy52YWx1ZU1ldGhvZC5hcHBseSggdGhpcy5lbGVtZW50LCBhcmd1bWVudHMgKTsNCgl9LA0KDQoJX2tleUV2ZW50OiBmdW5jdGlvbigga2V5RXZlbnQsIGV2ZW50ICkgew0KCQlpZiAoICF0aGlzLmlzTXVsdGlMaW5lIHx8IHRoaXMubWVudS5lbGVtZW50LmlzKCAiOnZpc2libGUiICkgKSB7DQoJCQl0aGlzLl9tb3ZlKCBrZXlFdmVudCwgZXZlbnQgKTsNCg0KCQkJLy8gcHJldmVudHMgbW92aW5nIGN1cnNvciB0byBiZWdpbm5pbmcvZW5kIG9mIHRoZSB0ZXh0IGZpZWxkIGluIHNvbWUgYnJvd3NlcnMNCgkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQoJCX0NCgl9DQp9KTsNCg0KJC5leHRlbmQoICQudWkuYXV0b2NvbXBsZXRlLCB7DQoJZXNjYXBlUmVnZXg6IGZ1bmN0aW9uKCB2YWx1ZSApIHsNCgkJcmV0dXJuIHZhbHVlLnJlcGxhY2UoIC9bXC1cW1xde30oKSorPy4sXFxcXiR8I1xzXS9nLCAiXFwkJiIgKTsNCgl9LA0KCWZpbHRlcjogZnVuY3Rpb24oIGFycmF5LCB0ZXJtICkgew0KCQl2YXIgbWF0Y2hlciA9IG5ldyBSZWdFeHAoICQudWkuYXV0b2NvbXBsZXRlLmVzY2FwZVJlZ2V4KCB0ZXJtICksICJpIiApOw0KCQlyZXR1cm4gJC5ncmVwKCBhcnJheSwgZnVuY3Rpb24oIHZhbHVlICkgew0KCQkJcmV0dXJuIG1hdGNoZXIudGVzdCggdmFsdWUubGFiZWwgfHwgdmFsdWUudmFsdWUgfHwgdmFsdWUgKTsNCgkJfSk7DQoJfQ0KfSk7DQoNCi8vIGxpdmUgcmVnaW9uIGV4dGVuc2lvbiwgYWRkaW5nIGEgYG1lc3NhZ2VzYCBvcHRpb24NCi8vIE5PVEU6IFRoaXMgaXMgYW4gZXhwZXJpbWVudGFsIEFQSS4gV2UgYXJlIHN0aWxsIGludmVzdGlnYXRpbmcNCi8vIGEgZnVsbCBzb2x1dGlvbiBmb3Igc3RyaW5nIG1hbmlwdWxhdGlvbiBhbmQgaW50ZXJuYXRpb25hbGl6YXRpb24uDQokLndpZGdldCggInVpLmF1dG9jb21wbGV0ZSIsICQudWkuYXV0b2NvbXBsZXRlLCB7DQoJb3B0aW9uczogew0KCQltZXNzYWdlczogew0KCQkJbm9SZXN1bHRzOiAiTm8gc2VhcmNoIHJlc3VsdHMuIiwNCgkJCXJlc3VsdHM6IGZ1bmN0aW9uKCBhbW91bnQgKSB7DQoJCQkJcmV0dXJuIGFtb3VudCArICggYW1vdW50ID4gMSA/ICIgcmVzdWx0cyBhcmUiIDogIiByZXN1bHQgaXMiICkgKw0KCQkJCQkiIGF2YWlsYWJsZSwgdXNlIHVwIGFuZCBkb3duIGFycm93IGtleXMgdG8gbmF2aWdhdGUuIjsNCgkJCX0NCgkJfQ0KCX0sDQoNCglfX3Jlc3BvbnNlOiBmdW5jdGlvbiggY29udGVudCApIHsNCgkJdmFyIG1lc3NhZ2U7DQoJCXRoaXMuX3N1cGVyQXBwbHkoIGFyZ3VtZW50cyApOw0KCQlpZiAoIHRoaXMub3B0aW9ucy5kaXNhYmxlZCB8fCB0aGlzLmNhbmNlbFNlYXJjaCApIHsNCgkJCXJldHVybjsNCgkJfQ0KCQlpZiAoIGNvbnRlbnQgJiYgY29udGVudC5sZW5ndGggKSB7DQoJCQltZXNzYWdlID0gdGhpcy5vcHRpb25zLm1lc3NhZ2VzLnJlc3VsdHMoIGNvbnRlbnQubGVuZ3RoICk7DQoJCX0gZWxzZSB7DQoJCQltZXNzYWdlID0gdGhpcy5vcHRpb25zLm1lc3NhZ2VzLm5vUmVzdWx0czsNCgkJfQ0KCQl0aGlzLmxpdmVSZWdpb24uY2hpbGRyZW4oKS5oaWRlKCk7DQoJCSQoICI8ZGl2PiIgKS50ZXh0KCBtZXNzYWdlICkuYXBwZW5kVG8oIHRoaXMubGl2ZVJlZ2lvbiApOw0KCX0NCn0pOw0KDQp2YXIgYXV0b2NvbXBsZXRlID0gJC51aS5hdXRvY29tcGxldGU7DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgQnV0dG9uIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9idXR0b24vDQogKi8NCg0KDQp2YXIgbGFzdEFjdGl2ZSwNCgliYXNlQ2xhc3NlcyA9ICJ1aS1idXR0b24gdWktd2lkZ2V0IHVpLXN0YXRlLWRlZmF1bHQgdWktY29ybmVyLWFsbCIsDQoJdHlwZUNsYXNzZXMgPSAidWktYnV0dG9uLWljb25zLW9ubHkgdWktYnV0dG9uLWljb24tb25seSB1aS1idXR0b24tdGV4dC1pY29ucyB1aS1idXR0b24tdGV4dC1pY29uLXByaW1hcnkgdWktYnV0dG9uLXRleHQtaWNvbi1zZWNvbmRhcnkgdWktYnV0dG9uLXRleHQtb25seSIsDQoJZm9ybVJlc2V0SGFuZGxlciA9IGZ1bmN0aW9uKCkgew0KCQl2YXIgZm9ybSA9ICQoIHRoaXMgKTsNCgkJc2V0VGltZW91dChmdW5jdGlvbigpIHsNCgkJCWZvcm0uZmluZCggIjp1aS1idXR0b24iICkuYnV0dG9uKCAicmVmcmVzaCIgKTsNCgkJfSwgMSApOw0KCX0sDQoJcmFkaW9Hcm91cCA9IGZ1bmN0aW9uKCByYWRpbyApIHsNCgkJdmFyIG5hbWUgPSByYWRpby5uYW1lLA0KCQkJZm9ybSA9IHJhZGlvLmZvcm0sDQoJCQlyYWRpb3MgPSAkKCBbXSApOw0KCQlpZiAoIG5hbWUgKSB7DQoJCQluYW1lID0gbmFtZS5yZXBsYWNlKCAvJy9nLCAiXFwnIiApOw0KCQkJaWYgKCBmb3JtICkgew0KCQkJCXJhZGlvcyA9ICQoIGZvcm0gKS5maW5kKCAiW25hbWU9JyIgKyBuYW1lICsgIiddW3R5cGU9cmFkaW9dIiApOw0KCQkJfSBlbHNlIHsNCgkJCQlyYWRpb3MgPSAkKCAiW25hbWU9JyIgKyBuYW1lICsgIiddW3R5cGU9cmFkaW9dIiwgcmFkaW8ub3duZXJEb2N1bWVudCApDQoJCQkJCS5maWx0ZXIoZnVuY3Rpb24oKSB7DQoJCQkJCQlyZXR1cm4gIXRoaXMuZm9ybTsNCgkJCQkJfSk7DQoJCQl9DQoJCX0NCgkJcmV0dXJuIHJhZGlvczsNCgl9Ow0KDQokLndpZGdldCggInVpLmJ1dHRvbiIsIHsNCgl2ZXJzaW9uOiAiMS4xMS4yIiwNCglkZWZhdWx0RWxlbWVudDogIjxidXR0b24+IiwNCglvcHRpb25zOiB7DQoJCWRpc2FibGVkOiBudWxsLA0KCQl0ZXh0OiB0cnVlLA0KCQlsYWJlbDogbnVsbCwNCgkJaWNvbnM6IHsNCgkJCXByaW1hcnk6IG51bGwsDQoJCQlzZWNvbmRhcnk6IG51bGwNCgkJfQ0KCX0sDQoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7DQoJCXRoaXMuZWxlbWVudC5jbG9zZXN0KCAiZm9ybSIgKQ0KCQkJLnVuYmluZCggInJlc2V0IiArIHRoaXMuZXZlbnROYW1lc3BhY2UgKQ0KCQkJLmJpbmQoICJyZXNldCIgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCBmb3JtUmVzZXRIYW5kbGVyICk7DQoNCgkJaWYgKCB0eXBlb2YgdGhpcy5vcHRpb25zLmRpc2FibGVkICE9PSAiYm9vbGVhbiIgKSB7DQoJCQl0aGlzLm9wdGlvbnMuZGlzYWJsZWQgPSAhIXRoaXMuZWxlbWVudC5wcm9wKCAiZGlzYWJsZWQiICk7DQoJCX0gZWxzZSB7DQoJCQl0aGlzLmVsZW1lbnQucHJvcCggImRpc2FibGVkIiwgdGhpcy5vcHRpb25zLmRpc2FibGVkICk7DQoJCX0NCg0KCQl0aGlzLl9kZXRlcm1pbmVCdXR0b25UeXBlKCk7DQoJCXRoaXMuaGFzVGl0bGUgPSAhIXRoaXMuYnV0dG9uRWxlbWVudC5hdHRyKCAidGl0bGUiICk7DQoNCgkJdmFyIHRoYXQgPSB0aGlzLA0KCQkJb3B0aW9ucyA9IHRoaXMub3B0aW9ucywNCgkJCXRvZ2dsZUJ1dHRvbiA9IHRoaXMudHlwZSA9PT0gImNoZWNrYm94IiB8fCB0aGlzLnR5cGUgPT09ICJyYWRpbyIsDQoJCQlhY3RpdmVDbGFzcyA9ICF0b2dnbGVCdXR0b24gPyAidWktc3RhdGUtYWN0aXZlIiA6ICIiOw0KDQoJCWlmICggb3B0aW9ucy5sYWJlbCA9PT0gbnVsbCApIHsNCgkJCW9wdGlvbnMubGFiZWwgPSAodGhpcy50eXBlID09PSAiaW5wdXQiID8gdGhpcy5idXR0b25FbGVtZW50LnZhbCgpIDogdGhpcy5idXR0b25FbGVtZW50Lmh0bWwoKSk7DQoJCX0NCg0KCQl0aGlzLl9ob3ZlcmFibGUoIHRoaXMuYnV0dG9uRWxlbWVudCApOw0KDQoJCXRoaXMuYnV0dG9uRWxlbWVudA0KCQkJLmFkZENsYXNzKCBiYXNlQ2xhc3NlcyApDQoJCQkuYXR0ciggInJvbGUiLCAiYnV0dG9uIiApDQoJCQkuYmluZCggIm1vdXNlZW50ZXIiICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgZnVuY3Rpb24oKSB7DQoJCQkJaWYgKCBvcHRpb25zLmRpc2FibGVkICkgew0KCQkJCQlyZXR1cm47DQoJCQkJfQ0KCQkJCWlmICggdGhpcyA9PT0gbGFzdEFjdGl2ZSApIHsNCgkJCQkJJCggdGhpcyApLmFkZENsYXNzKCAidWktc3RhdGUtYWN0aXZlIiApOw0KCQkJCX0NCgkJCX0pDQoJCQkuYmluZCggIm1vdXNlbGVhdmUiICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgZnVuY3Rpb24oKSB7DQoJCQkJaWYgKCBvcHRpb25zLmRpc2FibGVkICkgew0KCQkJCQlyZXR1cm47DQoJCQkJfQ0KCQkJCSQoIHRoaXMgKS5yZW1vdmVDbGFzcyggYWN0aXZlQ2xhc3MgKTsNCgkJCX0pDQoJCQkuYmluZCggImNsaWNrIiArIHRoaXMuZXZlbnROYW1lc3BhY2UsIGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQlpZiAoIG9wdGlvbnMuZGlzYWJsZWQgKSB7DQoJCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQoJCQkJCWV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpOw0KCQkJCX0NCgkJCX0pOw0KDQoJCS8vIENhbid0IHVzZSBfZm9jdXNhYmxlKCkgYmVjYXVzZSB0aGUgZWxlbWVudCB0aGF0IHJlY2VpdmVzIGZvY3VzDQoJCS8vIGFuZCB0aGUgZWxlbWVudCB0aGF0IGdldHMgdGhlIHVpLXN0YXRlLWZvY3VzIGNsYXNzIGFyZSBkaWZmZXJlbnQNCgkJdGhpcy5fb24oew0KCQkJZm9jdXM6IGZ1bmN0aW9uKCkgew0KCQkJCXRoaXMuYnV0dG9uRWxlbWVudC5hZGRDbGFzcyggInVpLXN0YXRlLWZvY3VzIiApOw0KCQkJfSwNCgkJCWJsdXI6IGZ1bmN0aW9uKCkgew0KCQkJCXRoaXMuYnV0dG9uRWxlbWVudC5yZW1vdmVDbGFzcyggInVpLXN0YXRlLWZvY3VzIiApOw0KCQkJfQ0KCQl9KTsNCg0KCQlpZiAoIHRvZ2dsZUJ1dHRvbiApIHsNCgkJCXRoaXMuZWxlbWVudC5iaW5kKCAiY2hhbmdlIiArIHRoaXMuZXZlbnROYW1lc3BhY2UsIGZ1bmN0aW9uKCkgew0KCQkJCXRoYXQucmVmcmVzaCgpOw0KCQkJfSk7DQoJCX0NCg0KCQlpZiAoIHRoaXMudHlwZSA9PT0gImNoZWNrYm94IiApIHsNCgkJCXRoaXMuYnV0dG9uRWxlbWVudC5iaW5kKCAiY2xpY2siICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgZnVuY3Rpb24oKSB7DQoJCQkJaWYgKCBvcHRpb25zLmRpc2FibGVkICkgew0KCQkJCQlyZXR1cm4gZmFsc2U7DQoJCQkJfQ0KCQkJfSk7DQoJCX0gZWxzZSBpZiAoIHRoaXMudHlwZSA9PT0gInJhZGlvIiApIHsNCgkJCXRoaXMuYnV0dG9uRWxlbWVudC5iaW5kKCAiY2xpY2siICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgZnVuY3Rpb24oKSB7DQoJCQkJaWYgKCBvcHRpb25zLmRpc2FibGVkICkgew0KCQkJCQlyZXR1cm4gZmFsc2U7DQoJCQkJfQ0KCQkJCSQoIHRoaXMgKS5hZGRDbGFzcyggInVpLXN0YXRlLWFjdGl2ZSIgKTsNCgkJCQl0aGF0LmJ1dHRvbkVsZW1lbnQuYXR0ciggImFyaWEtcHJlc3NlZCIsICJ0cnVlIiApOw0KDQoJCQkJdmFyIHJhZGlvID0gdGhhdC5lbGVtZW50WyAwIF07DQoJCQkJcmFkaW9Hcm91cCggcmFkaW8gKQ0KCQkJCQkubm90KCByYWRpbyApDQoJCQkJCS5tYXAoZnVuY3Rpb24oKSB7DQoJCQkJCQlyZXR1cm4gJCggdGhpcyApLmJ1dHRvbiggIndpZGdldCIgKVsgMCBdOw0KCQkJCQl9KQ0KCQkJCQkucmVtb3ZlQ2xhc3MoICJ1aS1zdGF0ZS1hY3RpdmUiICkNCgkJCQkJLmF0dHIoICJhcmlhLXByZXNzZWQiLCAiZmFsc2UiICk7DQoJCQl9KTsNCgkJfSBlbHNlIHsNCgkJCXRoaXMuYnV0dG9uRWxlbWVudA0KCQkJCS5iaW5kKCAibW91c2Vkb3duIiArIHRoaXMuZXZlbnROYW1lc3BhY2UsIGZ1bmN0aW9uKCkgew0KCQkJCQlpZiAoIG9wdGlvbnMuZGlzYWJsZWQgKSB7DQoJCQkJCQlyZXR1cm4gZmFsc2U7DQoJCQkJCX0NCgkJCQkJJCggdGhpcyApLmFkZENsYXNzKCAidWktc3RhdGUtYWN0aXZlIiApOw0KCQkJCQlsYXN0QWN0aXZlID0gdGhpczsNCgkJCQkJdGhhdC5kb2N1bWVudC5vbmUoICJtb3VzZXVwIiwgZnVuY3Rpb24oKSB7DQoJCQkJCQlsYXN0QWN0aXZlID0gbnVsbDsNCgkJCQkJfSk7DQoJCQkJfSkNCgkJCQkuYmluZCggIm1vdXNldXAiICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgZnVuY3Rpb24oKSB7DQoJCQkJCWlmICggb3B0aW9ucy5kaXNhYmxlZCApIHsNCgkJCQkJCXJldHVybiBmYWxzZTsNCgkJCQkJfQ0KCQkJCQkkKCB0aGlzICkucmVtb3ZlQ2xhc3MoICJ1aS1zdGF0ZS1hY3RpdmUiICk7DQoJCQkJfSkNCgkJCQkuYmluZCggImtleWRvd24iICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgZnVuY3Rpb24oZXZlbnQpIHsNCgkJCQkJaWYgKCBvcHRpb25zLmRpc2FibGVkICkgew0KCQkJCQkJcmV0dXJuIGZhbHNlOw0KCQkJCQl9DQoJCQkJCWlmICggZXZlbnQua2V5Q29kZSA9PT0gJC51aS5rZXlDb2RlLlNQQUNFIHx8IGV2ZW50LmtleUNvZGUgPT09ICQudWkua2V5Q29kZS5FTlRFUiApIHsNCgkJCQkJCSQoIHRoaXMgKS5hZGRDbGFzcyggInVpLXN0YXRlLWFjdGl2ZSIgKTsNCgkJCQkJfQ0KCQkJCX0pDQoJCQkJLy8gc2VlICM4NTU5LCB3ZSBiaW5kIHRvIGJsdXIgaGVyZSBpbiBjYXNlIHRoZSBidXR0b24gZWxlbWVudCBsb3Nlcw0KCQkJCS8vIGZvY3VzIGJldHdlZW4ga2V5ZG93biBhbmQga2V5dXAsIGl0IHdvdWxkIGJlIGxlZnQgaW4gYW4gImFjdGl2ZSIgc3RhdGUNCgkJCQkuYmluZCggImtleXVwIiArIHRoaXMuZXZlbnROYW1lc3BhY2UgKyAiIGJsdXIiICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgZnVuY3Rpb24oKSB7DQoJCQkJCSQoIHRoaXMgKS5yZW1vdmVDbGFzcyggInVpLXN0YXRlLWFjdGl2ZSIgKTsNCgkJCQl9KTsNCg0KCQkJaWYgKCB0aGlzLmJ1dHRvbkVsZW1lbnQuaXMoImEiKSApIHsNCgkJCQl0aGlzLmJ1dHRvbkVsZW1lbnQua2V5dXAoZnVuY3Rpb24oZXZlbnQpIHsNCgkJCQkJaWYgKCBldmVudC5rZXlDb2RlID09PSAkLnVpLmtleUNvZGUuU1BBQ0UgKSB7DQoJCQkJCQkvLyBUT0RPIHBhc3MgdGhyb3VnaCBvcmlnaW5hbCBldmVudCBjb3JyZWN0bHkgKGp1c3QgYXMgMm5kIGFyZ3VtZW50IGRvZXNuJ3Qgd29yaykNCgkJCQkJCSQoIHRoaXMgKS5jbGljaygpOw0KCQkJCQl9DQoJCQkJfSk7DQoJCQl9DQoJCX0NCg0KCQl0aGlzLl9zZXRPcHRpb24oICJkaXNhYmxlZCIsIG9wdGlvbnMuZGlzYWJsZWQgKTsNCgkJdGhpcy5fcmVzZXRCdXR0b24oKTsNCgl9LA0KDQoJX2RldGVybWluZUJ1dHRvblR5cGU6IGZ1bmN0aW9uKCkgew0KCQl2YXIgYW5jZXN0b3IsIGxhYmVsU2VsZWN0b3IsIGNoZWNrZWQ7DQoNCgkJaWYgKCB0aGlzLmVsZW1lbnQuaXMoIlt0eXBlPWNoZWNrYm94XSIpICkgew0KCQkJdGhpcy50eXBlID0gImNoZWNrYm94IjsNCgkJfSBlbHNlIGlmICggdGhpcy5lbGVtZW50LmlzKCJbdHlwZT1yYWRpb10iKSApIHsNCgkJCXRoaXMudHlwZSA9ICJyYWRpbyI7DQoJCX0gZWxzZSBpZiAoIHRoaXMuZWxlbWVudC5pcygiaW5wdXQiKSApIHsNCgkJCXRoaXMudHlwZSA9ICJpbnB1dCI7DQoJCX0gZWxzZSB7DQoJCQl0aGlzLnR5cGUgPSAiYnV0dG9uIjsNCgkJfQ0KDQoJCWlmICggdGhpcy50eXBlID09PSAiY2hlY2tib3giIHx8IHRoaXMudHlwZSA9PT0gInJhZGlvIiApIHsNCgkJCS8vIHdlIGRvbid0IHNlYXJjaCBhZ2FpbnN0IHRoZSBkb2N1bWVudCBpbiBjYXNlIHRoZSBlbGVtZW50DQoJCQkvLyBpcyBkaXNjb25uZWN0ZWQgZnJvbSB0aGUgRE9NDQoJCQlhbmNlc3RvciA9IHRoaXMuZWxlbWVudC5wYXJlbnRzKCkubGFzdCgpOw0KCQkJbGFiZWxTZWxlY3RvciA9ICJsYWJlbFtmb3I9JyIgKyB0aGlzLmVsZW1lbnQuYXR0cigiaWQiKSArICInXSI7DQoJCQl0aGlzLmJ1dHRvbkVsZW1lbnQgPSBhbmNlc3Rvci5maW5kKCBsYWJlbFNlbGVjdG9yICk7DQoJCQlpZiAoICF0aGlzLmJ1dHRvbkVsZW1lbnQubGVuZ3RoICkgew0KCQkJCWFuY2VzdG9yID0gYW5jZXN0b3IubGVuZ3RoID8gYW5jZXN0b3Iuc2libGluZ3MoKSA6IHRoaXMuZWxlbWVudC5zaWJsaW5ncygpOw0KCQkJCXRoaXMuYnV0dG9uRWxlbWVudCA9IGFuY2VzdG9yLmZpbHRlciggbGFiZWxTZWxlY3RvciApOw0KCQkJCWlmICggIXRoaXMuYnV0dG9uRWxlbWVudC5sZW5ndGggKSB7DQoJCQkJCXRoaXMuYnV0dG9uRWxlbWVudCA9IGFuY2VzdG9yLmZpbmQoIGxhYmVsU2VsZWN0b3IgKTsNCgkJCQl9DQoJCQl9DQoJCQl0aGlzLmVsZW1lbnQuYWRkQ2xhc3MoICJ1aS1oZWxwZXItaGlkZGVuLWFjY2Vzc2libGUiICk7DQoNCgkJCWNoZWNrZWQgPSB0aGlzLmVsZW1lbnQuaXMoICI6Y2hlY2tlZCIgKTsNCgkJCWlmICggY2hlY2tlZCApIHsNCgkJCQl0aGlzLmJ1dHRvbkVsZW1lbnQuYWRkQ2xhc3MoICJ1aS1zdGF0ZS1hY3RpdmUiICk7DQoJCQl9DQoJCQl0aGlzLmJ1dHRvbkVsZW1lbnQucHJvcCggImFyaWEtcHJlc3NlZCIsIGNoZWNrZWQgKTsNCgkJfSBlbHNlIHsNCgkJCXRoaXMuYnV0dG9uRWxlbWVudCA9IHRoaXMuZWxlbWVudDsNCgkJfQ0KCX0sDQoNCgl3aWRnZXQ6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy5idXR0b25FbGVtZW50Ow0KCX0sDQoNCglfZGVzdHJveTogZnVuY3Rpb24oKSB7DQoJCXRoaXMuZWxlbWVudA0KCQkJLnJlbW92ZUNsYXNzKCAidWktaGVscGVyLWhpZGRlbi1hY2Nlc3NpYmxlIiApOw0KCQl0aGlzLmJ1dHRvbkVsZW1lbnQNCgkJCS5yZW1vdmVDbGFzcyggYmFzZUNsYXNzZXMgKyAiIHVpLXN0YXRlLWFjdGl2ZSAiICsgdHlwZUNsYXNzZXMgKQ0KCQkJLnJlbW92ZUF0dHIoICJyb2xlIiApDQoJCQkucmVtb3ZlQXR0ciggImFyaWEtcHJlc3NlZCIgKQ0KCQkJLmh0bWwoIHRoaXMuYnV0dG9uRWxlbWVudC5maW5kKCIudWktYnV0dG9uLXRleHQiKS5odG1sKCkgKTsNCg0KCQlpZiAoICF0aGlzLmhhc1RpdGxlICkgew0KCQkJdGhpcy5idXR0b25FbGVtZW50LnJlbW92ZUF0dHIoICJ0aXRsZSIgKTsNCgkJfQ0KCX0sDQoNCglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsNCgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsNCgkJaWYgKCBrZXkgPT09ICJkaXNhYmxlZCIgKSB7DQoJCQl0aGlzLndpZGdldCgpLnRvZ2dsZUNsYXNzKCAidWktc3RhdGUtZGlzYWJsZWQiLCAhIXZhbHVlICk7DQoJCQl0aGlzLmVsZW1lbnQucHJvcCggImRpc2FibGVkIiwgISF2YWx1ZSApOw0KCQkJaWYgKCB2YWx1ZSApIHsNCgkJCQlpZiAoIHRoaXMudHlwZSA9PT0gImNoZWNrYm94IiB8fCB0aGlzLnR5cGUgPT09ICJyYWRpbyIgKSB7DQoJCQkJCXRoaXMuYnV0dG9uRWxlbWVudC5yZW1vdmVDbGFzcyggInVpLXN0YXRlLWZvY3VzIiApOw0KCQkJCX0gZWxzZSB7DQoJCQkJCXRoaXMuYnV0dG9uRWxlbWVudC5yZW1vdmVDbGFzcyggInVpLXN0YXRlLWZvY3VzIHVpLXN0YXRlLWFjdGl2ZSIgKTsNCgkJCQl9DQoJCQl9DQoJCQlyZXR1cm47DQoJCX0NCgkJdGhpcy5fcmVzZXRCdXR0b24oKTsNCgl9LA0KDQoJcmVmcmVzaDogZnVuY3Rpb24oKSB7DQoJCS8vU2VlICM4MjM3ICYgIzg4MjgNCgkJdmFyIGlzRGlzYWJsZWQgPSB0aGlzLmVsZW1lbnQuaXMoICJpbnB1dCwgYnV0dG9uIiApID8gdGhpcy5lbGVtZW50LmlzKCAiOmRpc2FibGVkIiApIDogdGhpcy5lbGVtZW50Lmhhc0NsYXNzKCAidWktYnV0dG9uLWRpc2FibGVkIiApOw0KDQoJCWlmICggaXNEaXNhYmxlZCAhPT0gdGhpcy5vcHRpb25zLmRpc2FibGVkICkgew0KCQkJdGhpcy5fc2V0T3B0aW9uKCAiZGlzYWJsZWQiLCBpc0Rpc2FibGVkICk7DQoJCX0NCgkJaWYgKCB0aGlzLnR5cGUgPT09ICJyYWRpbyIgKSB7DQoJCQlyYWRpb0dyb3VwKCB0aGlzLmVsZW1lbnRbMF0gKS5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJCWlmICggJCggdGhpcyApLmlzKCAiOmNoZWNrZWQiICkgKSB7DQoJCQkJCSQoIHRoaXMgKS5idXR0b24oICJ3aWRnZXQiICkNCgkJCQkJCS5hZGRDbGFzcyggInVpLXN0YXRlLWFjdGl2ZSIgKQ0KCQkJCQkJLmF0dHIoICJhcmlhLXByZXNzZWQiLCAidHJ1ZSIgKTsNCgkJCQl9IGVsc2Ugew0KCQkJCQkkKCB0aGlzICkuYnV0dG9uKCAid2lkZ2V0IiApDQoJCQkJCQkucmVtb3ZlQ2xhc3MoICJ1aS1zdGF0ZS1hY3RpdmUiICkNCgkJCQkJCS5hdHRyKCAiYXJpYS1wcmVzc2VkIiwgImZhbHNlIiApOw0KCQkJCX0NCgkJCX0pOw0KCQl9IGVsc2UgaWYgKCB0aGlzLnR5cGUgPT09ICJjaGVja2JveCIgKSB7DQoJCQlpZiAoIHRoaXMuZWxlbWVudC5pcyggIjpjaGVja2VkIiApICkgew0KCQkJCXRoaXMuYnV0dG9uRWxlbWVudA0KCQkJCQkuYWRkQ2xhc3MoICJ1aS1zdGF0ZS1hY3RpdmUiICkNCgkJCQkJLmF0dHIoICJhcmlhLXByZXNzZWQiLCAidHJ1ZSIgKTsNCgkJCX0gZWxzZSB7DQoJCQkJdGhpcy5idXR0b25FbGVtZW50DQoJCQkJCS5yZW1vdmVDbGFzcyggInVpLXN0YXRlLWFjdGl2ZSIgKQ0KCQkJCQkuYXR0ciggImFyaWEtcHJlc3NlZCIsICJmYWxzZSIgKTsNCgkJCX0NCgkJfQ0KCX0sDQoNCglfcmVzZXRCdXR0b246IGZ1bmN0aW9uKCkgew0KCQlpZiAoIHRoaXMudHlwZSA9PT0gImlucHV0IiApIHsNCgkJCWlmICggdGhpcy5vcHRpb25zLmxhYmVsICkgew0KCQkJCXRoaXMuZWxlbWVudC52YWwoIHRoaXMub3B0aW9ucy5sYWJlbCApOw0KCQkJfQ0KCQkJcmV0dXJuOw0KCQl9DQoJCXZhciBidXR0b25FbGVtZW50ID0gdGhpcy5idXR0b25FbGVtZW50LnJlbW92ZUNsYXNzKCB0eXBlQ2xhc3NlcyApLA0KCQkJYnV0dG9uVGV4dCA9ICQoICI8c3Bhbj48L3NwYW4+IiwgdGhpcy5kb2N1bWVudFswXSApDQoJCQkJLmFkZENsYXNzKCAidWktYnV0dG9uLXRleHQiICkNCgkJCQkuaHRtbCggdGhpcy5vcHRpb25zLmxhYmVsICkNCgkJCQkuYXBwZW5kVG8oIGJ1dHRvbkVsZW1lbnQuZW1wdHkoKSApDQoJCQkJLnRleHQoKSwNCgkJCWljb25zID0gdGhpcy5vcHRpb25zLmljb25zLA0KCQkJbXVsdGlwbGVJY29ucyA9IGljb25zLnByaW1hcnkgJiYgaWNvbnMuc2Vjb25kYXJ5LA0KCQkJYnV0dG9uQ2xhc3NlcyA9IFtdOw0KDQoJCWlmICggaWNvbnMucHJpbWFyeSB8fCBpY29ucy5zZWNvbmRhcnkgKSB7DQoJCQlpZiAoIHRoaXMub3B0aW9ucy50ZXh0ICkgew0KCQkJCWJ1dHRvbkNsYXNzZXMucHVzaCggInVpLWJ1dHRvbi10ZXh0LWljb24iICsgKCBtdWx0aXBsZUljb25zID8gInMiIDogKCBpY29ucy5wcmltYXJ5ID8gIi1wcmltYXJ5IiA6ICItc2Vjb25kYXJ5IiApICkgKTsNCgkJCX0NCg0KCQkJaWYgKCBpY29ucy5wcmltYXJ5ICkgew0KCQkJCWJ1dHRvbkVsZW1lbnQucHJlcGVuZCggIjxzcGFuIGNsYXNzPSd1aS1idXR0b24taWNvbi1wcmltYXJ5IHVpLWljb24gIiArIGljb25zLnByaW1hcnkgKyAiJz48L3NwYW4+IiApOw0KCQkJfQ0KDQoJCQlpZiAoIGljb25zLnNlY29uZGFyeSApIHsNCgkJCQlidXR0b25FbGVtZW50LmFwcGVuZCggIjxzcGFuIGNsYXNzPSd1aS1idXR0b24taWNvbi1zZWNvbmRhcnkgdWktaWNvbiAiICsgaWNvbnMuc2Vjb25kYXJ5ICsgIic+PC9zcGFuPiIgKTsNCgkJCX0NCg0KCQkJaWYgKCAhdGhpcy5vcHRpb25zLnRleHQgKSB7DQoJCQkJYnV0dG9uQ2xhc3Nlcy5wdXNoKCBtdWx0aXBsZUljb25zID8gInVpLWJ1dHRvbi1pY29ucy1vbmx5IiA6ICJ1aS1idXR0b24taWNvbi1vbmx5IiApOw0KDQoJCQkJaWYgKCAhdGhpcy5oYXNUaXRsZSApIHsNCgkJCQkJYnV0dG9uRWxlbWVudC5hdHRyKCAidGl0bGUiLCAkLnRyaW0oIGJ1dHRvblRleHQgKSApOw0KCQkJCX0NCgkJCX0NCgkJfSBlbHNlIHsNCgkJCWJ1dHRvbkNsYXNzZXMucHVzaCggInVpLWJ1dHRvbi10ZXh0LW9ubHkiICk7DQoJCX0NCgkJYnV0dG9uRWxlbWVudC5hZGRDbGFzcyggYnV0dG9uQ2xhc3Nlcy5qb2luKCAiICIgKSApOw0KCX0NCn0pOw0KDQokLndpZGdldCggInVpLmJ1dHRvbnNldCIsIHsNCgl2ZXJzaW9uOiAiMS4xMS4yIiwNCglvcHRpb25zOiB7DQoJCWl0ZW1zOiAiYnV0dG9uLCBpbnB1dFt0eXBlPWJ1dHRvbl0sIGlucHV0W3R5cGU9c3VibWl0XSwgaW5wdXRbdHlwZT1yZXNldF0sIGlucHV0W3R5cGU9Y2hlY2tib3hdLCBpbnB1dFt0eXBlPXJhZGlvXSwgYSwgOmRhdGEodWktYnV0dG9uKSINCgl9LA0KDQoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7DQoJCXRoaXMuZWxlbWVudC5hZGRDbGFzcyggInVpLWJ1dHRvbnNldCIgKTsNCgl9LA0KDQoJX2luaXQ6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLnJlZnJlc2goKTsNCgl9LA0KDQoJX3NldE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7DQoJCWlmICgga2V5ID09PSAiZGlzYWJsZWQiICkgew0KCQkJdGhpcy5idXR0b25zLmJ1dHRvbiggIm9wdGlvbiIsIGtleSwgdmFsdWUgKTsNCgkJfQ0KDQoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7DQoJfSwNCg0KCXJlZnJlc2g6IGZ1bmN0aW9uKCkgew0KCQl2YXIgcnRsID0gdGhpcy5lbGVtZW50LmNzcyggImRpcmVjdGlvbiIgKSA9PT0gInJ0bCIsDQoJCQlhbGxCdXR0b25zID0gdGhpcy5lbGVtZW50LmZpbmQoIHRoaXMub3B0aW9ucy5pdGVtcyApLA0KCQkJZXhpc3RpbmdCdXR0b25zID0gYWxsQnV0dG9ucy5maWx0ZXIoICI6dWktYnV0dG9uIiApOw0KDQoJCS8vIEluaXRpYWxpemUgbmV3IGJ1dHRvbnMNCgkJYWxsQnV0dG9ucy5ub3QoICI6dWktYnV0dG9uIiApLmJ1dHRvbigpOw0KDQoJCS8vIFJlZnJlc2ggZXhpc3RpbmcgYnV0dG9ucw0KCQlleGlzdGluZ0J1dHRvbnMuYnV0dG9uKCAicmVmcmVzaCIgKTsNCg0KCQl0aGlzLmJ1dHRvbnMgPSBhbGxCdXR0b25zDQoJCQkubWFwKGZ1bmN0aW9uKCkgew0KCQkJCXJldHVybiAkKCB0aGlzICkuYnV0dG9uKCAid2lkZ2V0IiApWyAwIF07DQoJCQl9KQ0KCQkJCS5yZW1vdmVDbGFzcyggInVpLWNvcm5lci1hbGwgdWktY29ybmVyLWxlZnQgdWktY29ybmVyLXJpZ2h0IiApDQoJCQkJLmZpbHRlciggIjpmaXJzdCIgKQ0KCQkJCQkuYWRkQ2xhc3MoIHJ0bCA/ICJ1aS1jb3JuZXItcmlnaHQiIDogInVpLWNvcm5lci1sZWZ0IiApDQoJCQkJLmVuZCgpDQoJCQkJLmZpbHRlciggIjpsYXN0IiApDQoJCQkJCS5hZGRDbGFzcyggcnRsID8gInVpLWNvcm5lci1sZWZ0IiA6ICJ1aS1jb3JuZXItcmlnaHQiICkNCgkJCQkuZW5kKCkNCgkJCS5lbmQoKTsNCgl9LA0KDQoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLmVsZW1lbnQucmVtb3ZlQ2xhc3MoICJ1aS1idXR0b25zZXQiICk7DQoJCXRoaXMuYnV0dG9ucw0KCQkJLm1hcChmdW5jdGlvbigpIHsNCgkJCQlyZXR1cm4gJCggdGhpcyApLmJ1dHRvbiggIndpZGdldCIgKVsgMCBdOw0KCQkJfSkNCgkJCQkucmVtb3ZlQ2xhc3MoICJ1aS1jb3JuZXItbGVmdCB1aS1jb3JuZXItcmlnaHQiICkNCgkJCS5lbmQoKQ0KCQkJLmJ1dHRvbiggImRlc3Ryb3kiICk7DQoJfQ0KfSk7DQoNCnZhciBidXR0b24gPSAkLnVpLmJ1dHRvbjsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBEYXRlcGlja2VyIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9kYXRlcGlja2VyLw0KICovDQoNCg0KJC5leHRlbmQoJC51aSwgeyBkYXRlcGlja2VyOiB7IHZlcnNpb246ICIxLjExLjIiIH0gfSk7DQoNCnZhciBkYXRlcGlja2VyX2luc3RBY3RpdmU7DQoNCmZ1bmN0aW9uIGRhdGVwaWNrZXJfZ2V0WmluZGV4KCBlbGVtICkgew0KCXZhciBwb3NpdGlvbiwgdmFsdWU7DQoJd2hpbGUgKCBlbGVtLmxlbmd0aCAmJiBlbGVtWyAwIF0gIT09IGRvY3VtZW50ICkgew0KCQkvLyBJZ25vcmUgei1pbmRleCBpZiBwb3NpdGlvbiBpcyBzZXQgdG8gYSB2YWx1ZSB3aGVyZSB6LWluZGV4IGlzIGlnbm9yZWQgYnkgdGhlIGJyb3dzZXINCgkJLy8gVGhpcyBtYWtlcyBiZWhhdmlvciBvZiB0aGlzIGZ1bmN0aW9uIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzDQoJCS8vIFdlYktpdCBhbHdheXMgcmV0dXJucyBhdXRvIGlmIHRoZSBlbGVtZW50IGlzIHBvc2l0aW9uZWQNCgkJcG9zaXRpb24gPSBlbGVtLmNzcyggInBvc2l0aW9uIiApOw0KCQlpZiAoIHBvc2l0aW9uID09PSAiYWJzb2x1dGUiIHx8IHBvc2l0aW9uID09PSAicmVsYXRpdmUiIHx8IHBvc2l0aW9uID09PSAiZml4ZWQiICkgew0KCQkJLy8gSUUgcmV0dXJucyAwIHdoZW4gekluZGV4IGlzIG5vdCBzcGVjaWZpZWQNCgkJCS8vIG90aGVyIGJyb3dzZXJzIHJldHVybiBhIHN0cmluZw0KCQkJLy8gd2UgaWdub3JlIHRoZSBjYXNlIG9mIG5lc3RlZCBlbGVtZW50cyB3aXRoIGFuIGV4cGxpY2l0IHZhbHVlIG9mIDANCgkJCS8vIDxkaXYgc3R5bGU9InotaW5kZXg6IC0xMDsiPjxkaXYgc3R5bGU9InotaW5kZXg6IDA7Ij48L2Rpdj48L2Rpdj4NCgkJCXZhbHVlID0gcGFyc2VJbnQoIGVsZW0uY3NzKCAiekluZGV4IiApLCAxMCApOw0KCQkJaWYgKCAhaXNOYU4oIHZhbHVlICkgJiYgdmFsdWUgIT09IDAgKSB7DQoJCQkJcmV0dXJuIHZhbHVlOw0KCQkJfQ0KCQl9DQoJCWVsZW0gPSBlbGVtLnBhcmVudCgpOw0KCX0NCg0KCXJldHVybiAwOw0KfQ0KLyogRGF0ZSBwaWNrZXIgbWFuYWdlci4NCiAgIFVzZSB0aGUgc2luZ2xldG9uIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MsICQuZGF0ZXBpY2tlciwgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgZGF0ZSBwaWNrZXIuDQogICBTZXR0aW5ncyBmb3IgKGdyb3VwcyBvZikgZGF0ZSBwaWNrZXJzIGFyZSBtYWludGFpbmVkIGluIGFuIGluc3RhbmNlIG9iamVjdCwNCiAgIGFsbG93aW5nIG11bHRpcGxlIGRpZmZlcmVudCBzZXR0aW5ncyBvbiB0aGUgc2FtZSBwYWdlLiAqLw0KDQpmdW5jdGlvbiBEYXRlcGlja2VyKCkgew0KCXRoaXMuX2N1ckluc3QgPSBudWxsOyAvLyBUaGUgY3VycmVudCBpbnN0YW5jZSBpbiB1c2UNCgl0aGlzLl9rZXlFdmVudCA9IGZhbHNlOyAvLyBJZiB0aGUgbGFzdCBldmVudCB3YXMgYSBrZXkgZXZlbnQNCgl0aGlzLl9kaXNhYmxlZElucHV0cyA9IFtdOyAvLyBMaXN0IG9mIGRhdGUgcGlja2VyIGlucHV0cyB0aGF0IGhhdmUgYmVlbiBkaXNhYmxlZA0KCXRoaXMuX2RhdGVwaWNrZXJTaG93aW5nID0gZmFsc2U7IC8vIFRydWUgaWYgdGhlIHBvcHVwIHBpY2tlciBpcyBzaG93aW5nICwgZmFsc2UgaWYgbm90DQoJdGhpcy5faW5EaWFsb2cgPSBmYWxzZTsgLy8gVHJ1ZSBpZiBzaG93aW5nIHdpdGhpbiBhICJkaWFsb2ciLCBmYWxzZSBpZiBub3QNCgl0aGlzLl9tYWluRGl2SWQgPSAidWktZGF0ZXBpY2tlci1kaXYiOyAvLyBUaGUgSUQgb2YgdGhlIG1haW4gZGF0ZXBpY2tlciBkaXZpc2lvbg0KCXRoaXMuX2lubGluZUNsYXNzID0gInVpLWRhdGVwaWNrZXItaW5saW5lIjsgLy8gVGhlIG5hbWUgb2YgdGhlIGlubGluZSBtYXJrZXIgY2xhc3MNCgl0aGlzLl9hcHBlbmRDbGFzcyA9ICJ1aS1kYXRlcGlja2VyLWFwcGVuZCI7IC8vIFRoZSBuYW1lIG9mIHRoZSBhcHBlbmQgbWFya2VyIGNsYXNzDQoJdGhpcy5fdHJpZ2dlckNsYXNzID0gInVpLWRhdGVwaWNrZXItdHJpZ2dlciI7IC8vIFRoZSBuYW1lIG9mIHRoZSB0cmlnZ2VyIG1hcmtlciBjbGFzcw0KCXRoaXMuX2RpYWxvZ0NsYXNzID0gInVpLWRhdGVwaWNrZXItZGlhbG9nIjsgLy8gVGhlIG5hbWUgb2YgdGhlIGRpYWxvZyBtYXJrZXIgY2xhc3MNCgl0aGlzLl9kaXNhYmxlQ2xhc3MgPSAidWktZGF0ZXBpY2tlci1kaXNhYmxlZCI7IC8vIFRoZSBuYW1lIG9mIHRoZSBkaXNhYmxlZCBjb3ZlcmluZyBtYXJrZXIgY2xhc3MNCgl0aGlzLl91bnNlbGVjdGFibGVDbGFzcyA9ICJ1aS1kYXRlcGlja2VyLXVuc2VsZWN0YWJsZSI7IC8vIFRoZSBuYW1lIG9mIHRoZSB1bnNlbGVjdGFibGUgY2VsbCBtYXJrZXIgY2xhc3MNCgl0aGlzLl9jdXJyZW50Q2xhc3MgPSAidWktZGF0ZXBpY2tlci1jdXJyZW50LWRheSI7IC8vIFRoZSBuYW1lIG9mIHRoZSBjdXJyZW50IGRheSBtYXJrZXIgY2xhc3MNCgl0aGlzLl9kYXlPdmVyQ2xhc3MgPSAidWktZGF0ZXBpY2tlci1kYXlzLWNlbGwtb3ZlciI7IC8vIFRoZSBuYW1lIG9mIHRoZSBkYXkgaG92ZXIgbWFya2VyIGNsYXNzDQoJdGhpcy5yZWdpb25hbCA9IFtdOyAvLyBBdmFpbGFibGUgcmVnaW9uYWwgc2V0dGluZ3MsIGluZGV4ZWQgYnkgbGFuZ3VhZ2UgY29kZQ0KCXRoaXMucmVnaW9uYWxbIiJdID0geyAvLyBEZWZhdWx0IHJlZ2lvbmFsIHNldHRpbmdzDQoJCWNsb3NlVGV4dDogIkRvbmUiLCAvLyBEaXNwbGF5IHRleHQgZm9yIGNsb3NlIGxpbmsNCgkJcHJldlRleHQ6ICJQcmV2IiwgLy8gRGlzcGxheSB0ZXh0IGZvciBwcmV2aW91cyBtb250aCBsaW5rDQoJCW5leHRUZXh0OiAiTmV4dCIsIC8vIERpc3BsYXkgdGV4dCBmb3IgbmV4dCBtb250aCBsaW5rDQoJCWN1cnJlbnRUZXh0OiAiVG9kYXkiLCAvLyBEaXNwbGF5IHRleHQgZm9yIGN1cnJlbnQgbW9udGggbGluaw0KCQltb250aE5hbWVzOiBbIkphbnVhcnkiLCJGZWJydWFyeSIsIk1hcmNoIiwiQXByaWwiLCJNYXkiLCJKdW5lIiwNCgkJCSJKdWx5IiwiQXVndXN0IiwiU2VwdGVtYmVyIiwiT2N0b2JlciIsIk5vdmVtYmVyIiwiRGVjZW1iZXIiXSwgLy8gTmFtZXMgb2YgbW9udGhzIGZvciBkcm9wLWRvd24gYW5kIGZvcm1hdHRpbmcNCgkJbW9udGhOYW1lc1Nob3J0OiBbIkphbiIsICJGZWIiLCAiTWFyIiwgIkFwciIsICJNYXkiLCAiSnVuIiwgIkp1bCIsICJBdWciLCAiU2VwIiwgIk9jdCIsICJOb3YiLCAiRGVjIl0sIC8vIEZvciBmb3JtYXR0aW5nDQoJCWRheU5hbWVzOiBbIlN1bmRheSIsICJNb25kYXkiLCAiVHVlc2RheSIsICJXZWRuZXNkYXkiLCAiVGh1cnNkYXkiLCAiRnJpZGF5IiwgIlNhdHVyZGF5Il0sIC8vIEZvciBmb3JtYXR0aW5nDQoJCWRheU5hbWVzU2hvcnQ6IFsiU3VuIiwgIk1vbiIsICJUdWUiLCAiV2VkIiwgIlRodSIsICJGcmkiLCAiU2F0Il0sIC8vIEZvciBmb3JtYXR0aW5nDQoJCWRheU5hbWVzTWluOiBbIlN1IiwiTW8iLCJUdSIsIldlIiwiVGgiLCJGciIsIlNhIl0sIC8vIENvbHVtbiBoZWFkaW5ncyBmb3IgZGF5cyBzdGFydGluZyBhdCBTdW5kYXkNCgkJd2Vla0hlYWRlcjogIldrIiwgLy8gQ29sdW1uIGhlYWRlciBmb3Igd2VlayBvZiB0aGUgeWVhcg0KCQlkYXRlRm9ybWF0OiAibW0vZGQveXkiLCAvLyBTZWUgZm9ybWF0IG9wdGlvbnMgb24gcGFyc2VEYXRlDQoJCWZpcnN0RGF5OiAwLCAvLyBUaGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLCBTdW4gPSAwLCBNb24gPSAxLCAuLi4NCgkJaXNSVEw6IGZhbHNlLCAvLyBUcnVlIGlmIHJpZ2h0LXRvLWxlZnQgbGFuZ3VhZ2UsIGZhbHNlIGlmIGxlZnQtdG8tcmlnaHQNCgkJc2hvd01vbnRoQWZ0ZXJZZWFyOiBmYWxzZSwgLy8gVHJ1ZSBpZiB0aGUgeWVhciBzZWxlY3QgcHJlY2VkZXMgbW9udGgsIGZhbHNlIGZvciBtb250aCB0aGVuIHllYXINCgkJeWVhclN1ZmZpeDogIiIgLy8gQWRkaXRpb25hbCB0ZXh0IHRvIGFwcGVuZCB0byB0aGUgeWVhciBpbiB0aGUgbW9udGggaGVhZGVycw0KCX07DQoJdGhpcy5fZGVmYXVsdHMgPSB7IC8vIEdsb2JhbCBkZWZhdWx0cyBmb3IgYWxsIHRoZSBkYXRlIHBpY2tlciBpbnN0YW5jZXMNCgkJc2hvd09uOiAiZm9jdXMiLCAvLyAiZm9jdXMiIGZvciBwb3B1cCBvbiBmb2N1cywNCgkJCS8vICJidXR0b24iIGZvciB0cmlnZ2VyIGJ1dHRvbiwgb3IgImJvdGgiIGZvciBlaXRoZXINCgkJc2hvd0FuaW06ICJmYWRlSW4iLCAvLyBOYW1lIG9mIGpRdWVyeSBhbmltYXRpb24gZm9yIHBvcHVwDQoJCXNob3dPcHRpb25zOiB7fSwgLy8gT3B0aW9ucyBmb3IgZW5oYW5jZWQgYW5pbWF0aW9ucw0KCQlkZWZhdWx0RGF0ZTogbnVsbCwgLy8gVXNlZCB3aGVuIGZpZWxkIGlzIGJsYW5rOiBhY3R1YWwgZGF0ZSwNCgkJCS8vICsvLW51bWJlciBmb3Igb2Zmc2V0IGZyb20gdG9kYXksIG51bGwgZm9yIHRvZGF5DQoJCWFwcGVuZFRleHQ6ICIiLCAvLyBEaXNwbGF5IHRleHQgZm9sbG93aW5nIHRoZSBpbnB1dCBib3gsIGUuZy4gc2hvd2luZyB0aGUgZm9ybWF0DQoJCWJ1dHRvblRleHQ6ICIuLi4iLCAvLyBUZXh0IGZvciB0cmlnZ2VyIGJ1dHRvbg0KCQlidXR0b25JbWFnZTogIiIsIC8vIFVSTCBmb3IgdHJpZ2dlciBidXR0b24gaW1hZ2UNCgkJYnV0dG9uSW1hZ2VPbmx5OiBmYWxzZSwgLy8gVHJ1ZSBpZiB0aGUgaW1hZ2UgYXBwZWFycyBhbG9uZSwgZmFsc2UgaWYgaXQgYXBwZWFycyBvbiBhIGJ1dHRvbg0KCQloaWRlSWZOb1ByZXZOZXh0OiBmYWxzZSwgLy8gVHJ1ZSB0byBoaWRlIG5leHQvcHJldmlvdXMgbW9udGggbGlua3MNCgkJCS8vIGlmIG5vdCBhcHBsaWNhYmxlLCBmYWxzZSB0byBqdXN0IGRpc2FibGUgdGhlbQ0KCQluYXZpZ2F0aW9uQXNEYXRlRm9ybWF0OiBmYWxzZSwgLy8gVHJ1ZSBpZiBkYXRlIGZvcm1hdHRpbmcgYXBwbGllZCB0byBwcmV2L3RvZGF5L25leHQgbGlua3MNCgkJZ290b0N1cnJlbnQ6IGZhbHNlLCAvLyBUcnVlIGlmIHRvZGF5IGxpbmsgZ29lcyBiYWNrIHRvIGN1cnJlbnQgc2VsZWN0aW9uIGluc3RlYWQNCgkJY2hhbmdlTW9udGg6IGZhbHNlLCAvLyBUcnVlIGlmIG1vbnRoIGNhbiBiZSBzZWxlY3RlZCBkaXJlY3RseSwgZmFsc2UgaWYgb25seSBwcmV2L25leHQNCgkJY2hhbmdlWWVhcjogZmFsc2UsIC8vIFRydWUgaWYgeWVhciBjYW4gYmUgc2VsZWN0ZWQgZGlyZWN0bHksIGZhbHNlIGlmIG9ubHkgcHJldi9uZXh0DQoJCXllYXJSYW5nZTogImMtMTA6YysxMCIsIC8vIFJhbmdlIG9mIHllYXJzIHRvIGRpc3BsYXkgaW4gZHJvcC1kb3duLA0KCQkJLy8gZWl0aGVyIHJlbGF0aXZlIHRvIHRvZGF5J3MgeWVhciAoLW5uOitubiksIHJlbGF0aXZlIHRvIGN1cnJlbnRseSBkaXNwbGF5ZWQgeWVhcg0KCQkJLy8gKGMtbm46YytubiksIGFic29sdXRlIChubm5uOm5ubm4pLCBvciBhIGNvbWJpbmF0aW9uIG9mIHRoZSBhYm92ZSAobm5ubjotbikNCgkJc2hvd090aGVyTW9udGhzOiBmYWxzZSwgLy8gVHJ1ZSB0byBzaG93IGRhdGVzIGluIG90aGVyIG1vbnRocywgZmFsc2UgdG8gbGVhdmUgYmxhbmsNCgkJc2VsZWN0T3RoZXJNb250aHM6IGZhbHNlLCAvLyBUcnVlIHRvIGFsbG93IHNlbGVjdGlvbiBvZiBkYXRlcyBpbiBvdGhlciBtb250aHMsIGZhbHNlIGZvciB1bnNlbGVjdGFibGUNCgkJc2hvd1dlZWs6IGZhbHNlLCAvLyBUcnVlIHRvIHNob3cgd2VlayBvZiB0aGUgeWVhciwgZmFsc2UgdG8gbm90IHNob3cgaXQNCgkJY2FsY3VsYXRlV2VlazogdGhpcy5pc284NjAxV2VlaywgLy8gSG93IHRvIGNhbGN1bGF0ZSB0aGUgd2VlayBvZiB0aGUgeWVhciwNCgkJCS8vIHRha2VzIGEgRGF0ZSBhbmQgcmV0dXJucyB0aGUgbnVtYmVyIG9mIHRoZSB3ZWVrIGZvciBpdA0KCQlzaG9ydFllYXJDdXRvZmY6ICIrMTAiLCAvLyBTaG9ydCB5ZWFyIHZhbHVlcyA8IHRoaXMgYXJlIGluIHRoZSBjdXJyZW50IGNlbnR1cnksDQoJCQkvLyA+IHRoaXMgYXJlIGluIHRoZSBwcmV2aW91cyBjZW50dXJ5LA0KCQkJLy8gc3RyaW5nIHZhbHVlIHN0YXJ0aW5nIHdpdGggIisiIGZvciBjdXJyZW50IHllYXIgKyB2YWx1ZQ0KCQltaW5EYXRlOiBudWxsLCAvLyBUaGUgZWFybGllc3Qgc2VsZWN0YWJsZSBkYXRlLCBvciBudWxsIGZvciBubyBsaW1pdA0KCQltYXhEYXRlOiBudWxsLCAvLyBUaGUgbGF0ZXN0IHNlbGVjdGFibGUgZGF0ZSwgb3IgbnVsbCBmb3Igbm8gbGltaXQNCgkJZHVyYXRpb246ICJmYXN0IiwgLy8gRHVyYXRpb24gb2YgZGlzcGxheS9jbG9zdXJlDQoJCWJlZm9yZVNob3dEYXk6IG51bGwsIC8vIEZ1bmN0aW9uIHRoYXQgdGFrZXMgYSBkYXRlIGFuZCByZXR1cm5zIGFuIGFycmF5IHdpdGgNCgkJCS8vIFswXSA9IHRydWUgaWYgc2VsZWN0YWJsZSwgZmFsc2UgaWYgbm90LCBbMV0gPSBjdXN0b20gQ1NTIGNsYXNzIG5hbWUocykgb3IgIiIsDQoJCQkvLyBbMl0gPSBjZWxsIHRpdGxlIChvcHRpb25hbCksIGUuZy4gJC5kYXRlcGlja2VyLm5vV2Vla2VuZHMNCgkJYmVmb3JlU2hvdzogbnVsbCwgLy8gRnVuY3Rpb24gdGhhdCB0YWtlcyBhbiBpbnB1dCBmaWVsZCBhbmQNCgkJCS8vIHJldHVybnMgYSBzZXQgb2YgY3VzdG9tIHNldHRpbmdzIGZvciB0aGUgZGF0ZSBwaWNrZXINCgkJb25TZWxlY3Q6IG51bGwsIC8vIERlZmluZSBhIGNhbGxiYWNrIGZ1bmN0aW9uIHdoZW4gYSBkYXRlIGlzIHNlbGVjdGVkDQoJCW9uQ2hhbmdlTW9udGhZZWFyOiBudWxsLCAvLyBEZWZpbmUgYSBjYWxsYmFjayBmdW5jdGlvbiB3aGVuIHRoZSBtb250aCBvciB5ZWFyIGlzIGNoYW5nZWQNCgkJb25DbG9zZTogbnVsbCwgLy8gRGVmaW5lIGEgY2FsbGJhY2sgZnVuY3Rpb24gd2hlbiB0aGUgZGF0ZXBpY2tlciBpcyBjbG9zZWQNCgkJbnVtYmVyT2ZNb250aHM6IDEsIC8vIE51bWJlciBvZiBtb250aHMgdG8gc2hvdyBhdCBhIHRpbWUNCgkJc2hvd0N1cnJlbnRBdFBvczogMCwgLy8gVGhlIHBvc2l0aW9uIGluIG11bHRpcGUgbW9udGhzIGF0IHdoaWNoIHRvIHNob3cgdGhlIGN1cnJlbnQgbW9udGggKHN0YXJ0aW5nIGF0IDApDQoJCXN0ZXBNb250aHM6IDEsIC8vIE51bWJlciBvZiBtb250aHMgdG8gc3RlcCBiYWNrL2ZvcndhcmQNCgkJc3RlcEJpZ01vbnRoczogMTIsIC8vIE51bWJlciBvZiBtb250aHMgdG8gc3RlcCBiYWNrL2ZvcndhcmQgZm9yIHRoZSBiaWcgbGlua3MNCgkJYWx0RmllbGQ6ICIiLCAvLyBTZWxlY3RvciBmb3IgYW4gYWx0ZXJuYXRlIGZpZWxkIHRvIHN0b3JlIHNlbGVjdGVkIGRhdGVzIGludG8NCgkJYWx0Rm9ybWF0OiAiIiwgLy8gVGhlIGRhdGUgZm9ybWF0IHRvIHVzZSBmb3IgdGhlIGFsdGVybmF0ZSBmaWVsZA0KCQljb25zdHJhaW5JbnB1dDogdHJ1ZSwgLy8gVGhlIGlucHV0IGlzIGNvbnN0cmFpbmVkIGJ5IHRoZSBjdXJyZW50IGRhdGUgZm9ybWF0DQoJCXNob3dCdXR0b25QYW5lbDogZmFsc2UsIC8vIFRydWUgdG8gc2hvdyBidXR0b24gcGFuZWwsIGZhbHNlIHRvIG5vdCBzaG93IGl0DQoJCWF1dG9TaXplOiBmYWxzZSwgLy8gVHJ1ZSB0byBzaXplIHRoZSBpbnB1dCBmb3IgdGhlIGRhdGUgZm9ybWF0LCBmYWxzZSB0byBsZWF2ZSBhcyBpcw0KCQlkaXNhYmxlZDogZmFsc2UgLy8gVGhlIGluaXRpYWwgZGlzYWJsZWQgc3RhdGUNCgl9Ow0KCSQuZXh0ZW5kKHRoaXMuX2RlZmF1bHRzLCB0aGlzLnJlZ2lvbmFsWyIiXSk7DQoJdGhpcy5yZWdpb25hbC5lbiA9ICQuZXh0ZW5kKCB0cnVlLCB7fSwgdGhpcy5yZWdpb25hbFsgIiIgXSk7DQoJdGhpcy5yZWdpb25hbFsgImVuLVVTIiBdID0gJC5leHRlbmQoIHRydWUsIHt9LCB0aGlzLnJlZ2lvbmFsLmVuICk7DQoJdGhpcy5kcERpdiA9IGRhdGVwaWNrZXJfYmluZEhvdmVyKCQoIjxkaXYgaWQ9JyIgKyB0aGlzLl9tYWluRGl2SWQgKyAiJyBjbGFzcz0ndWktZGF0ZXBpY2tlciB1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktaGVscGVyLWNsZWFyZml4IHVpLWNvcm5lci1hbGwnPjwvZGl2PiIpKTsNCn0NCg0KJC5leHRlbmQoRGF0ZXBpY2tlci5wcm90b3R5cGUsIHsNCgkvKiBDbGFzcyBuYW1lIGFkZGVkIHRvIGVsZW1lbnRzIHRvIGluZGljYXRlIGFscmVhZHkgY29uZmlndXJlZCB3aXRoIGEgZGF0ZSBwaWNrZXIuICovDQoJbWFya2VyQ2xhc3NOYW1lOiAiaGFzRGF0ZXBpY2tlciIsDQoNCgkvL0tlZXAgdHJhY2sgb2YgdGhlIG1heGltdW0gbnVtYmVyIG9mIHJvd3MgZGlzcGxheWVkIChzZWUgIzcwNDMpDQoJbWF4Um93czogNCwNCg0KCS8vIFRPRE8gcmVuYW1lIHRvICJ3aWRnZXQiIHdoZW4gc3dpdGNoaW5nIHRvIHdpZGdldCBmYWN0b3J5DQoJX3dpZGdldERhdGVwaWNrZXI6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy5kcERpdjsNCgl9LA0KDQoJLyogT3ZlcnJpZGUgdGhlIGRlZmF1bHQgc2V0dGluZ3MgZm9yIGFsbCBpbnN0YW5jZXMgb2YgdGhlIGRhdGUgcGlja2VyLg0KCSAqIEBwYXJhbSAgc2V0dGluZ3MgIG9iamVjdCAtIHRoZSBuZXcgc2V0dGluZ3MgdG8gdXNlIGFzIGRlZmF1bHRzIChhbm9ueW1vdXMgb2JqZWN0KQ0KCSAqIEByZXR1cm4gdGhlIG1hbmFnZXIgb2JqZWN0DQoJICovDQoJc2V0RGVmYXVsdHM6IGZ1bmN0aW9uKHNldHRpbmdzKSB7DQoJCWRhdGVwaWNrZXJfZXh0ZW5kUmVtb3ZlKHRoaXMuX2RlZmF1bHRzLCBzZXR0aW5ncyB8fCB7fSk7DQoJCXJldHVybiB0aGlzOw0KCX0sDQoNCgkvKiBBdHRhY2ggdGhlIGRhdGUgcGlja2VyIHRvIGEgalF1ZXJ5IHNlbGVjdGlvbi4NCgkgKiBAcGFyYW0gIHRhcmdldAllbGVtZW50IC0gdGhlIHRhcmdldCBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbiBvciBzcGFuDQoJICogQHBhcmFtICBzZXR0aW5ncyAgb2JqZWN0IC0gdGhlIG5ldyBzZXR0aW5ncyB0byB1c2UgZm9yIHRoaXMgZGF0ZSBwaWNrZXIgaW5zdGFuY2UgKGFub255bW91cykNCgkgKi8NCglfYXR0YWNoRGF0ZXBpY2tlcjogZnVuY3Rpb24odGFyZ2V0LCBzZXR0aW5ncykgew0KCQl2YXIgbm9kZU5hbWUsIGlubGluZSwgaW5zdDsNCgkJbm9kZU5hbWUgPSB0YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsNCgkJaW5saW5lID0gKG5vZGVOYW1lID09PSAiZGl2IiB8fCBub2RlTmFtZSA9PT0gInNwYW4iKTsNCgkJaWYgKCF0YXJnZXQuaWQpIHsNCgkJCXRoaXMudXVpZCArPSAxOw0KCQkJdGFyZ2V0LmlkID0gImRwIiArIHRoaXMudXVpZDsNCgkJfQ0KCQlpbnN0ID0gdGhpcy5fbmV3SW5zdCgkKHRhcmdldCksIGlubGluZSk7DQoJCWluc3Quc2V0dGluZ3MgPSAkLmV4dGVuZCh7fSwgc2V0dGluZ3MgfHwge30pOw0KCQlpZiAobm9kZU5hbWUgPT09ICJpbnB1dCIpIHsNCgkJCXRoaXMuX2Nvbm5lY3REYXRlcGlja2VyKHRhcmdldCwgaW5zdCk7DQoJCX0gZWxzZSBpZiAoaW5saW5lKSB7DQoJCQl0aGlzLl9pbmxpbmVEYXRlcGlja2VyKHRhcmdldCwgaW5zdCk7DQoJCX0NCgl9LA0KDQoJLyogQ3JlYXRlIGEgbmV3IGluc3RhbmNlIG9iamVjdC4gKi8NCglfbmV3SW5zdDogZnVuY3Rpb24odGFyZ2V0LCBpbmxpbmUpIHsNCgkJdmFyIGlkID0gdGFyZ2V0WzBdLmlkLnJlcGxhY2UoLyhbXkEtWmEtejAtOV9cLV0pL2csICJcXFxcJDEiKTsgLy8gZXNjYXBlIGpRdWVyeSBtZXRhIGNoYXJzDQoJCXJldHVybiB7aWQ6IGlkLCBpbnB1dDogdGFyZ2V0LCAvLyBhc3NvY2lhdGVkIHRhcmdldA0KCQkJc2VsZWN0ZWREYXk6IDAsIHNlbGVjdGVkTW9udGg6IDAsIHNlbGVjdGVkWWVhcjogMCwgLy8gY3VycmVudCBzZWxlY3Rpb24NCgkJCWRyYXdNb250aDogMCwgZHJhd1llYXI6IDAsIC8vIG1vbnRoIGJlaW5nIGRyYXduDQoJCQlpbmxpbmU6IGlubGluZSwgLy8gaXMgZGF0ZXBpY2tlciBpbmxpbmUgb3Igbm90DQoJCQlkcERpdjogKCFpbmxpbmUgPyB0aGlzLmRwRGl2IDogLy8gcHJlc2VudGF0aW9uIGRpdg0KCQkJZGF0ZXBpY2tlcl9iaW5kSG92ZXIoJCgiPGRpdiBjbGFzcz0nIiArIHRoaXMuX2lubGluZUNsYXNzICsgIiB1aS1kYXRlcGlja2VyIHVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCB1aS1oZWxwZXItY2xlYXJmaXggdWktY29ybmVyLWFsbCc+PC9kaXY+IikpKX07DQoJfSwNCg0KCS8qIEF0dGFjaCB0aGUgZGF0ZSBwaWNrZXIgdG8gYW4gaW5wdXQgZmllbGQuICovDQoJX2Nvbm5lY3REYXRlcGlja2VyOiBmdW5jdGlvbih0YXJnZXQsIGluc3QpIHsNCgkJdmFyIGlucHV0ID0gJCh0YXJnZXQpOw0KCQlpbnN0LmFwcGVuZCA9ICQoW10pOw0KCQlpbnN0LnRyaWdnZXIgPSAkKFtdKTsNCgkJaWYgKGlucHV0Lmhhc0NsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKSkgew0KCQkJcmV0dXJuOw0KCQl9DQoJCXRoaXMuX2F0dGFjaG1lbnRzKGlucHV0LCBpbnN0KTsNCgkJaW5wdXQuYWRkQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpLmtleWRvd24odGhpcy5fZG9LZXlEb3duKS4NCgkJCWtleXByZXNzKHRoaXMuX2RvS2V5UHJlc3MpLmtleXVwKHRoaXMuX2RvS2V5VXApOw0KCQl0aGlzLl9hdXRvU2l6ZShpbnN0KTsNCgkJJC5kYXRhKHRhcmdldCwgImRhdGVwaWNrZXIiLCBpbnN0KTsNCgkJLy9JZiBkaXNhYmxlZCBvcHRpb24gaXMgdHJ1ZSwgZGlzYWJsZSB0aGUgZGF0ZXBpY2tlciBvbmNlIGl0IGhhcyBiZWVuIGF0dGFjaGVkIHRvIHRoZSBpbnB1dCAoc2VlIHRpY2tldCAjNTY2NSkNCgkJaWYoIGluc3Quc2V0dGluZ3MuZGlzYWJsZWQgKSB7DQoJCQl0aGlzLl9kaXNhYmxlRGF0ZXBpY2tlciggdGFyZ2V0ICk7DQoJCX0NCgl9LA0KDQoJLyogTWFrZSBhdHRhY2htZW50cyBiYXNlZCBvbiBzZXR0aW5ncy4gKi8NCglfYXR0YWNobWVudHM6IGZ1bmN0aW9uKGlucHV0LCBpbnN0KSB7DQoJCXZhciBzaG93T24sIGJ1dHRvblRleHQsIGJ1dHRvbkltYWdlLA0KCQkJYXBwZW5kVGV4dCA9IHRoaXMuX2dldChpbnN0LCAiYXBwZW5kVGV4dCIpLA0KCQkJaXNSVEwgPSB0aGlzLl9nZXQoaW5zdCwgImlzUlRMIik7DQoNCgkJaWYgKGluc3QuYXBwZW5kKSB7DQoJCQlpbnN0LmFwcGVuZC5yZW1vdmUoKTsNCgkJfQ0KCQlpZiAoYXBwZW5kVGV4dCkgew0KCQkJaW5zdC5hcHBlbmQgPSAkKCI8c3BhbiBjbGFzcz0nIiArIHRoaXMuX2FwcGVuZENsYXNzICsgIic+IiArIGFwcGVuZFRleHQgKyAiPC9zcGFuPiIpOw0KCQkJaW5wdXRbaXNSVEwgPyAiYmVmb3JlIiA6ICJhZnRlciJdKGluc3QuYXBwZW5kKTsNCgkJfQ0KDQoJCWlucHV0LnVuYmluZCgiZm9jdXMiLCB0aGlzLl9zaG93RGF0ZXBpY2tlcik7DQoNCgkJaWYgKGluc3QudHJpZ2dlcikgew0KCQkJaW5zdC50cmlnZ2VyLnJlbW92ZSgpOw0KCQl9DQoNCgkJc2hvd09uID0gdGhpcy5fZ2V0KGluc3QsICJzaG93T24iKTsNCgkJaWYgKHNob3dPbiA9PT0gImZvY3VzIiB8fCBzaG93T24gPT09ICJib3RoIikgeyAvLyBwb3AtdXAgZGF0ZSBwaWNrZXIgd2hlbiBpbiB0aGUgbWFya2VkIGZpZWxkDQoJCQlpbnB1dC5mb2N1cyh0aGlzLl9zaG93RGF0ZXBpY2tlcik7DQoJCX0NCgkJaWYgKHNob3dPbiA9PT0gImJ1dHRvbiIgfHwgc2hvd09uID09PSAiYm90aCIpIHsgLy8gcG9wLXVwIGRhdGUgcGlja2VyIHdoZW4gYnV0dG9uIGNsaWNrZWQNCgkJCWJ1dHRvblRleHQgPSB0aGlzLl9nZXQoaW5zdCwgImJ1dHRvblRleHQiKTsNCgkJCWJ1dHRvbkltYWdlID0gdGhpcy5fZ2V0KGluc3QsICJidXR0b25JbWFnZSIpOw0KCQkJaW5zdC50cmlnZ2VyID0gJCh0aGlzLl9nZXQoaW5zdCwgImJ1dHRvbkltYWdlT25seSIpID8NCgkJCQkkKCI8aW1nLz4iKS5hZGRDbGFzcyh0aGlzLl90cmlnZ2VyQ2xhc3MpLg0KCQkJCQlhdHRyKHsgc3JjOiBidXR0b25JbWFnZSwgYWx0OiBidXR0b25UZXh0LCB0aXRsZTogYnV0dG9uVGV4dCB9KSA6DQoJCQkJJCgiPGJ1dHRvbiB0eXBlPSdidXR0b24nPjwvYnV0dG9uPiIpLmFkZENsYXNzKHRoaXMuX3RyaWdnZXJDbGFzcykuDQoJCQkJCWh0bWwoIWJ1dHRvbkltYWdlID8gYnV0dG9uVGV4dCA6ICQoIjxpbWcvPiIpLmF0dHIoDQoJCQkJCXsgc3JjOmJ1dHRvbkltYWdlLCBhbHQ6YnV0dG9uVGV4dCwgdGl0bGU6YnV0dG9uVGV4dCB9KSkpOw0KCQkJaW5wdXRbaXNSVEwgPyAiYmVmb3JlIiA6ICJhZnRlciJdKGluc3QudHJpZ2dlcik7DQoJCQlpbnN0LnRyaWdnZXIuY2xpY2soZnVuY3Rpb24oKSB7DQoJCQkJaWYgKCQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcgJiYgJC5kYXRlcGlja2VyLl9sYXN0SW5wdXQgPT09IGlucHV0WzBdKSB7DQoJCQkJCSQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKTsNCgkJCQl9IGVsc2UgaWYgKCQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcgJiYgJC5kYXRlcGlja2VyLl9sYXN0SW5wdXQgIT09IGlucHV0WzBdKSB7DQoJCQkJCSQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKTsNCgkJCQkJJC5kYXRlcGlja2VyLl9zaG93RGF0ZXBpY2tlcihpbnB1dFswXSk7DQoJCQkJfSBlbHNlIHsNCgkJCQkJJC5kYXRlcGlja2VyLl9zaG93RGF0ZXBpY2tlcihpbnB1dFswXSk7DQoJCQkJfQ0KCQkJCXJldHVybiBmYWxzZTsNCgkJCX0pOw0KCQl9DQoJfSwNCg0KCS8qIEFwcGx5IHRoZSBtYXhpbXVtIGxlbmd0aCBmb3IgdGhlIGRhdGUgZm9ybWF0LiAqLw0KCV9hdXRvU2l6ZTogZnVuY3Rpb24oaW5zdCkgew0KCQlpZiAodGhpcy5fZ2V0KGluc3QsICJhdXRvU2l6ZSIpICYmICFpbnN0LmlubGluZSkgew0KCQkJdmFyIGZpbmRNYXgsIG1heCwgbWF4SSwgaSwNCgkJCQlkYXRlID0gbmV3IERhdGUoMjAwOSwgMTIgLSAxLCAyMCksIC8vIEVuc3VyZSBkb3VibGUgZGlnaXRzDQoJCQkJZGF0ZUZvcm1hdCA9IHRoaXMuX2dldChpbnN0LCAiZGF0ZUZvcm1hdCIpOw0KDQoJCQlpZiAoZGF0ZUZvcm1hdC5tYXRjaCgvW0RNXS8pKSB7DQoJCQkJZmluZE1heCA9IGZ1bmN0aW9uKG5hbWVzKSB7DQoJCQkJCW1heCA9IDA7DQoJCQkJCW1heEkgPSAwOw0KCQkJCQlmb3IgKGkgPSAwOyBpIDwgbmFtZXMubGVuZ3RoOyBpKyspIHsNCgkJCQkJCWlmIChuYW1lc1tpXS5sZW5ndGggPiBtYXgpIHsNCgkJCQkJCQltYXggPSBuYW1lc1tpXS5sZW5ndGg7DQoJCQkJCQkJbWF4SSA9IGk7DQoJCQkJCQl9DQoJCQkJCX0NCgkJCQkJcmV0dXJuIG1heEk7DQoJCQkJfTsNCgkJCQlkYXRlLnNldE1vbnRoKGZpbmRNYXgodGhpcy5fZ2V0KGluc3QsIChkYXRlRm9ybWF0Lm1hdGNoKC9NTS8pID8NCgkJCQkJIm1vbnRoTmFtZXMiIDogIm1vbnRoTmFtZXNTaG9ydCIpKSkpOw0KCQkJCWRhdGUuc2V0RGF0ZShmaW5kTWF4KHRoaXMuX2dldChpbnN0LCAoZGF0ZUZvcm1hdC5tYXRjaCgvREQvKSA/DQoJCQkJCSJkYXlOYW1lcyIgOiAiZGF5TmFtZXNTaG9ydCIpKSkgKyAyMCAtIGRhdGUuZ2V0RGF5KCkpOw0KCQkJfQ0KCQkJaW5zdC5pbnB1dC5hdHRyKCJzaXplIiwgdGhpcy5fZm9ybWF0RGF0ZShpbnN0LCBkYXRlKS5sZW5ndGgpOw0KCQl9DQoJfSwNCg0KCS8qIEF0dGFjaCBhbiBpbmxpbmUgZGF0ZSBwaWNrZXIgdG8gYSBkaXYuICovDQoJX2lubGluZURhdGVwaWNrZXI6IGZ1bmN0aW9uKHRhcmdldCwgaW5zdCkgew0KCQl2YXIgZGl2U3BhbiA9ICQodGFyZ2V0KTsNCgkJaWYgKGRpdlNwYW4uaGFzQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpKSB7DQoJCQlyZXR1cm47DQoJCX0NCgkJZGl2U3Bhbi5hZGRDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkuYXBwZW5kKGluc3QuZHBEaXYpOw0KCQkkLmRhdGEodGFyZ2V0LCAiZGF0ZXBpY2tlciIsIGluc3QpOw0KCQl0aGlzLl9zZXREYXRlKGluc3QsIHRoaXMuX2dldERlZmF1bHREYXRlKGluc3QpLCB0cnVlKTsNCgkJdGhpcy5fdXBkYXRlRGF0ZXBpY2tlcihpbnN0KTsNCgkJdGhpcy5fdXBkYXRlQWx0ZXJuYXRlKGluc3QpOw0KCQkvL0lmIGRpc2FibGVkIG9wdGlvbiBpcyB0cnVlLCBkaXNhYmxlIHRoZSBkYXRlcGlja2VyIGJlZm9yZSBzaG93aW5nIGl0IChzZWUgdGlja2V0ICM1NjY1KQ0KCQlpZiggaW5zdC5zZXR0aW5ncy5kaXNhYmxlZCApIHsNCgkJCXRoaXMuX2Rpc2FibGVEYXRlcGlja2VyKCB0YXJnZXQgKTsNCgkJfQ0KCQkvLyBTZXQgZGlzcGxheTpibG9jayBpbiBwbGFjZSBvZiBpbnN0LmRwRGl2LnNob3coKSB3aGljaCB3b24ndCB3b3JrIG9uIGRpc2Nvbm5lY3RlZCBlbGVtZW50cw0KCQkvLyBodHRwOi8vYnVncy5qcXVlcnl1aS5jb20vdGlja2V0Lzc1NTIgLSBBIERhdGVwaWNrZXIgY3JlYXRlZCBvbiBhIGRldGFjaGVkIGRpdiBoYXMgemVybyBoZWlnaHQNCgkJaW5zdC5kcERpdi5jc3MoICJkaXNwbGF5IiwgImJsb2NrIiApOw0KCX0sDQoNCgkvKiBQb3AtdXAgdGhlIGRhdGUgcGlja2VyIGluIGEgImRpYWxvZyIgYm94Lg0KCSAqIEBwYXJhbSAgaW5wdXQgZWxlbWVudCAtIGlnbm9yZWQNCgkgKiBAcGFyYW0gIGRhdGUJc3RyaW5nIG9yIERhdGUgLSB0aGUgaW5pdGlhbCBkYXRlIHRvIGRpc3BsYXkNCgkgKiBAcGFyYW0gIG9uU2VsZWN0ICBmdW5jdGlvbiAtIHRoZSBmdW5jdGlvbiB0byBjYWxsIHdoZW4gYSBkYXRlIGlzIHNlbGVjdGVkDQoJICogQHBhcmFtICBzZXR0aW5ncyAgb2JqZWN0IC0gdXBkYXRlIHRoZSBkaWFsb2cgZGF0ZSBwaWNrZXIgaW5zdGFuY2UncyBzZXR0aW5ncyAoYW5vbnltb3VzIG9iamVjdCkNCgkgKiBAcGFyYW0gIHBvcyBpbnRbMl0gLSBjb29yZGluYXRlcyBmb3IgdGhlIGRpYWxvZydzIHBvc2l0aW9uIHdpdGhpbiB0aGUgc2NyZWVuIG9yDQoJICoJCQkJCWV2ZW50IC0gd2l0aCB4L3kgY29vcmRpbmF0ZXMgb3INCgkgKgkJCQkJbGVhdmUgZW1wdHkgZm9yIGRlZmF1bHQgKHNjcmVlbiBjZW50cmUpDQoJICogQHJldHVybiB0aGUgbWFuYWdlciBvYmplY3QNCgkgKi8NCglfZGlhbG9nRGF0ZXBpY2tlcjogZnVuY3Rpb24oaW5wdXQsIGRhdGUsIG9uU2VsZWN0LCBzZXR0aW5ncywgcG9zKSB7DQoJCXZhciBpZCwgYnJvd3NlcldpZHRoLCBicm93c2VySGVpZ2h0LCBzY3JvbGxYLCBzY3JvbGxZLA0KCQkJaW5zdCA9IHRoaXMuX2RpYWxvZ0luc3Q7IC8vIGludGVybmFsIGluc3RhbmNlDQoNCgkJaWYgKCFpbnN0KSB7DQoJCQl0aGlzLnV1aWQgKz0gMTsNCgkJCWlkID0gImRwIiArIHRoaXMudXVpZDsNCgkJCXRoaXMuX2RpYWxvZ0lucHV0ID0gJCgiPGlucHV0IHR5cGU9J3RleHQnIGlkPSciICsgaWQgKw0KCQkJCSInIHN0eWxlPSdwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogLTEwMHB4OyB3aWR0aDogMHB4OycvPiIpOw0KCQkJdGhpcy5fZGlhbG9nSW5wdXQua2V5ZG93bih0aGlzLl9kb0tleURvd24pOw0KCQkJJCgiYm9keSIpLmFwcGVuZCh0aGlzLl9kaWFsb2dJbnB1dCk7DQoJCQlpbnN0ID0gdGhpcy5fZGlhbG9nSW5zdCA9IHRoaXMuX25ld0luc3QodGhpcy5fZGlhbG9nSW5wdXQsIGZhbHNlKTsNCgkJCWluc3Quc2V0dGluZ3MgPSB7fTsNCgkJCSQuZGF0YSh0aGlzLl9kaWFsb2dJbnB1dFswXSwgImRhdGVwaWNrZXIiLCBpbnN0KTsNCgkJfQ0KCQlkYXRlcGlja2VyX2V4dGVuZFJlbW92ZShpbnN0LnNldHRpbmdzLCBzZXR0aW5ncyB8fCB7fSk7DQoJCWRhdGUgPSAoZGF0ZSAmJiBkYXRlLmNvbnN0cnVjdG9yID09PSBEYXRlID8gdGhpcy5fZm9ybWF0RGF0ZShpbnN0LCBkYXRlKSA6IGRhdGUpOw0KCQl0aGlzLl9kaWFsb2dJbnB1dC52YWwoZGF0ZSk7DQoNCgkJdGhpcy5fcG9zID0gKHBvcyA/IChwb3MubGVuZ3RoID8gcG9zIDogW3Bvcy5wYWdlWCwgcG9zLnBhZ2VZXSkgOiBudWxsKTsNCgkJaWYgKCF0aGlzLl9wb3MpIHsNCgkJCWJyb3dzZXJXaWR0aCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDsNCgkJCWJyb3dzZXJIZWlnaHQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0Ow0KCQkJc2Nyb2xsWCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0IHx8IGRvY3VtZW50LmJvZHkuc2Nyb2xsTGVmdDsNCgkJCXNjcm9sbFkgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wIHx8IGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wOw0KCQkJdGhpcy5fcG9zID0gLy8gc2hvdWxkIHVzZSBhY3R1YWwgd2lkdGgvaGVpZ2h0IGJlbG93DQoJCQkJWyhicm93c2VyV2lkdGggLyAyKSAtIDEwMCArIHNjcm9sbFgsIChicm93c2VySGVpZ2h0IC8gMikgLSAxNTAgKyBzY3JvbGxZXTsNCgkJfQ0KDQoJCS8vIG1vdmUgaW5wdXQgb24gc2NyZWVuIGZvciBmb2N1cywgYnV0IGhpZGRlbiBiZWhpbmQgZGlhbG9nDQoJCXRoaXMuX2RpYWxvZ0lucHV0LmNzcygibGVmdCIsICh0aGlzLl9wb3NbMF0gKyAyMCkgKyAicHgiKS5jc3MoInRvcCIsIHRoaXMuX3Bvc1sxXSArICJweCIpOw0KCQlpbnN0LnNldHRpbmdzLm9uU2VsZWN0ID0gb25TZWxlY3Q7DQoJCXRoaXMuX2luRGlhbG9nID0gdHJ1ZTsNCgkJdGhpcy5kcERpdi5hZGRDbGFzcyh0aGlzLl9kaWFsb2dDbGFzcyk7DQoJCXRoaXMuX3Nob3dEYXRlcGlja2VyKHRoaXMuX2RpYWxvZ0lucHV0WzBdKTsNCgkJaWYgKCQuYmxvY2tVSSkgew0KCQkJJC5ibG9ja1VJKHRoaXMuZHBEaXYpOw0KCQl9DQoJCSQuZGF0YSh0aGlzLl9kaWFsb2dJbnB1dFswXSwgImRhdGVwaWNrZXIiLCBpbnN0KTsNCgkJcmV0dXJuIHRoaXM7DQoJfSwNCg0KCS8qIERldGFjaCBhIGRhdGVwaWNrZXIgZnJvbSBpdHMgY29udHJvbC4NCgkgKiBAcGFyYW0gIHRhcmdldAllbGVtZW50IC0gdGhlIHRhcmdldCBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbiBvciBzcGFuDQoJICovDQoJX2Rlc3Ryb3lEYXRlcGlja2VyOiBmdW5jdGlvbih0YXJnZXQpIHsNCgkJdmFyIG5vZGVOYW1lLA0KCQkJJHRhcmdldCA9ICQodGFyZ2V0KSwNCgkJCWluc3QgPSAkLmRhdGEodGFyZ2V0LCAiZGF0ZXBpY2tlciIpOw0KDQoJCWlmICghJHRhcmdldC5oYXNDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkpIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCW5vZGVOYW1lID0gdGFyZ2V0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7DQoJCSQucmVtb3ZlRGF0YSh0YXJnZXQsICJkYXRlcGlja2VyIik7DQoJCWlmIChub2RlTmFtZSA9PT0gImlucHV0Iikgew0KCQkJaW5zdC5hcHBlbmQucmVtb3ZlKCk7DQoJCQlpbnN0LnRyaWdnZXIucmVtb3ZlKCk7DQoJCQkkdGFyZ2V0LnJlbW92ZUNsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKS4NCgkJCQl1bmJpbmQoImZvY3VzIiwgdGhpcy5fc2hvd0RhdGVwaWNrZXIpLg0KCQkJCXVuYmluZCgia2V5ZG93biIsIHRoaXMuX2RvS2V5RG93bikuDQoJCQkJdW5iaW5kKCJrZXlwcmVzcyIsIHRoaXMuX2RvS2V5UHJlc3MpLg0KCQkJCXVuYmluZCgia2V5dXAiLCB0aGlzLl9kb0tleVVwKTsNCgkJfSBlbHNlIGlmIChub2RlTmFtZSA9PT0gImRpdiIgfHwgbm9kZU5hbWUgPT09ICJzcGFuIikgew0KCQkJJHRhcmdldC5yZW1vdmVDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkuZW1wdHkoKTsNCgkJfQ0KCX0sDQoNCgkvKiBFbmFibGUgdGhlIGRhdGUgcGlja2VyIHRvIGEgalF1ZXJ5IHNlbGVjdGlvbi4NCgkgKiBAcGFyYW0gIHRhcmdldAllbGVtZW50IC0gdGhlIHRhcmdldCBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbiBvciBzcGFuDQoJICovDQoJX2VuYWJsZURhdGVwaWNrZXI6IGZ1bmN0aW9uKHRhcmdldCkgew0KCQl2YXIgbm9kZU5hbWUsIGlubGluZSwNCgkJCSR0YXJnZXQgPSAkKHRhcmdldCksDQoJCQlpbnN0ID0gJC5kYXRhKHRhcmdldCwgImRhdGVwaWNrZXIiKTsNCg0KCQlpZiAoISR0YXJnZXQuaGFzQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQlub2RlTmFtZSA9IHRhcmdldC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpOw0KCQlpZiAobm9kZU5hbWUgPT09ICJpbnB1dCIpIHsNCgkJCXRhcmdldC5kaXNhYmxlZCA9IGZhbHNlOw0KCQkJaW5zdC50cmlnZ2VyLmZpbHRlcigiYnV0dG9uIikuDQoJCQkJZWFjaChmdW5jdGlvbigpIHsgdGhpcy5kaXNhYmxlZCA9IGZhbHNlOyB9KS5lbmQoKS4NCgkJCQlmaWx0ZXIoImltZyIpLmNzcyh7b3BhY2l0eTogIjEuMCIsIGN1cnNvcjogIiJ9KTsNCgkJfSBlbHNlIGlmIChub2RlTmFtZSA9PT0gImRpdiIgfHwgbm9kZU5hbWUgPT09ICJzcGFuIikgew0KCQkJaW5saW5lID0gJHRhcmdldC5jaGlsZHJlbigiLiIgKyB0aGlzLl9pbmxpbmVDbGFzcyk7DQoJCQlpbmxpbmUuY2hpbGRyZW4oKS5yZW1vdmVDbGFzcygidWktc3RhdGUtZGlzYWJsZWQiKTsNCgkJCWlubGluZS5maW5kKCJzZWxlY3QudWktZGF0ZXBpY2tlci1tb250aCwgc2VsZWN0LnVpLWRhdGVwaWNrZXIteWVhciIpLg0KCQkJCXByb3AoImRpc2FibGVkIiwgZmFsc2UpOw0KCQl9DQoJCXRoaXMuX2Rpc2FibGVkSW5wdXRzID0gJC5tYXAodGhpcy5fZGlzYWJsZWRJbnB1dHMsDQoJCQlmdW5jdGlvbih2YWx1ZSkgeyByZXR1cm4gKHZhbHVlID09PSB0YXJnZXQgPyBudWxsIDogdmFsdWUpOyB9KTsgLy8gZGVsZXRlIGVudHJ5DQoJfSwNCg0KCS8qIERpc2FibGUgdGhlIGRhdGUgcGlja2VyIHRvIGEgalF1ZXJ5IHNlbGVjdGlvbi4NCgkgKiBAcGFyYW0gIHRhcmdldAllbGVtZW50IC0gdGhlIHRhcmdldCBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbiBvciBzcGFuDQoJICovDQoJX2Rpc2FibGVEYXRlcGlja2VyOiBmdW5jdGlvbih0YXJnZXQpIHsNCgkJdmFyIG5vZGVOYW1lLCBpbmxpbmUsDQoJCQkkdGFyZ2V0ID0gJCh0YXJnZXQpLA0KCQkJaW5zdCA9ICQuZGF0YSh0YXJnZXQsICJkYXRlcGlja2VyIik7DQoNCgkJaWYgKCEkdGFyZ2V0Lmhhc0NsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKSkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJbm9kZU5hbWUgPSB0YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsNCgkJaWYgKG5vZGVOYW1lID09PSAiaW5wdXQiKSB7DQoJCQl0YXJnZXQuZGlzYWJsZWQgPSB0cnVlOw0KCQkJaW5zdC50cmlnZ2VyLmZpbHRlcigiYnV0dG9uIikuDQoJCQkJZWFjaChmdW5jdGlvbigpIHsgdGhpcy5kaXNhYmxlZCA9IHRydWU7IH0pLmVuZCgpLg0KCQkJCWZpbHRlcigiaW1nIikuY3NzKHtvcGFjaXR5OiAiMC41IiwgY3Vyc29yOiAiZGVmYXVsdCJ9KTsNCgkJfSBlbHNlIGlmIChub2RlTmFtZSA9PT0gImRpdiIgfHwgbm9kZU5hbWUgPT09ICJzcGFuIikgew0KCQkJaW5saW5lID0gJHRhcmdldC5jaGlsZHJlbigiLiIgKyB0aGlzLl9pbmxpbmVDbGFzcyk7DQoJCQlpbmxpbmUuY2hpbGRyZW4oKS5hZGRDbGFzcygidWktc3RhdGUtZGlzYWJsZWQiKTsNCgkJCWlubGluZS5maW5kKCJzZWxlY3QudWktZGF0ZXBpY2tlci1tb250aCwgc2VsZWN0LnVpLWRhdGVwaWNrZXIteWVhciIpLg0KCQkJCXByb3AoImRpc2FibGVkIiwgdHJ1ZSk7DQoJCX0NCgkJdGhpcy5fZGlzYWJsZWRJbnB1dHMgPSAkLm1hcCh0aGlzLl9kaXNhYmxlZElucHV0cywNCgkJCWZ1bmN0aW9uKHZhbHVlKSB7IHJldHVybiAodmFsdWUgPT09IHRhcmdldCA/IG51bGwgOiB2YWx1ZSk7IH0pOyAvLyBkZWxldGUgZW50cnkNCgkJdGhpcy5fZGlzYWJsZWRJbnB1dHNbdGhpcy5fZGlzYWJsZWRJbnB1dHMubGVuZ3RoXSA9IHRhcmdldDsNCgl9LA0KDQoJLyogSXMgdGhlIGZpcnN0IGZpZWxkIGluIGEgalF1ZXJ5IGNvbGxlY3Rpb24gZGlzYWJsZWQgYXMgYSBkYXRlcGlja2VyPw0KCSAqIEBwYXJhbSAgdGFyZ2V0CWVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4NCgkgKiBAcmV0dXJuIGJvb2xlYW4gLSB0cnVlIGlmIGRpc2FibGVkLCBmYWxzZSBpZiBlbmFibGVkDQoJICovDQoJX2lzRGlzYWJsZWREYXRlcGlja2VyOiBmdW5jdGlvbih0YXJnZXQpIHsNCgkJaWYgKCF0YXJnZXQpIHsNCgkJCXJldHVybiBmYWxzZTsNCgkJfQ0KCQlmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX2Rpc2FibGVkSW5wdXRzLmxlbmd0aDsgaSsrKSB7DQoJCQlpZiAodGhpcy5fZGlzYWJsZWRJbnB1dHNbaV0gPT09IHRhcmdldCkgew0KCQkJCXJldHVybiB0cnVlOw0KCQkJfQ0KCQl9DQoJCXJldHVybiBmYWxzZTsNCgl9LA0KDQoJLyogUmV0cmlldmUgdGhlIGluc3RhbmNlIGRhdGEgZm9yIHRoZSB0YXJnZXQgY29udHJvbC4NCgkgKiBAcGFyYW0gIHRhcmdldCAgZWxlbWVudCAtIHRoZSB0YXJnZXQgaW5wdXQgZmllbGQgb3IgZGl2aXNpb24gb3Igc3Bhbg0KCSAqIEByZXR1cm4gIG9iamVjdCAtIHRoZSBhc3NvY2lhdGVkIGluc3RhbmNlIGRhdGENCgkgKiBAdGhyb3dzICBlcnJvciBpZiBhIGpRdWVyeSBwcm9ibGVtIGdldHRpbmcgZGF0YQ0KCSAqLw0KCV9nZXRJbnN0OiBmdW5jdGlvbih0YXJnZXQpIHsNCgkJdHJ5IHsNCgkJCXJldHVybiAkLmRhdGEodGFyZ2V0LCAiZGF0ZXBpY2tlciIpOw0KCQl9DQoJCWNhdGNoIChlcnIpIHsNCgkJCXRocm93ICJNaXNzaW5nIGluc3RhbmNlIGRhdGEgZm9yIHRoaXMgZGF0ZXBpY2tlciI7DQoJCX0NCgl9LA0KDQoJLyogVXBkYXRlIG9yIHJldHJpZXZlIHRoZSBzZXR0aW5ncyBmb3IgYSBkYXRlIHBpY2tlciBhdHRhY2hlZCB0byBhbiBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbi4NCgkgKiBAcGFyYW0gIHRhcmdldCAgZWxlbWVudCAtIHRoZSB0YXJnZXQgaW5wdXQgZmllbGQgb3IgZGl2aXNpb24gb3Igc3Bhbg0KCSAqIEBwYXJhbSAgbmFtZQlvYmplY3QgLSB0aGUgbmV3IHNldHRpbmdzIHRvIHVwZGF0ZSBvcg0KCSAqCQkJCXN0cmluZyAtIHRoZSBuYW1lIG9mIHRoZSBzZXR0aW5nIHRvIGNoYW5nZSBvciByZXRyaWV2ZSwNCgkgKgkJCQl3aGVuIHJldHJpZXZpbmcgYWxzbyAiYWxsIiBmb3IgYWxsIGluc3RhbmNlIHNldHRpbmdzIG9yDQoJICoJCQkJImRlZmF1bHRzIiBmb3IgYWxsIGdsb2JhbCBkZWZhdWx0cw0KCSAqIEBwYXJhbSAgdmFsdWUgICBhbnkgLSB0aGUgbmV3IHZhbHVlIGZvciB0aGUgc2V0dGluZw0KCSAqCQkJCShvbWl0IGlmIGFib3ZlIGlzIGFuIG9iamVjdCBvciB0byByZXRyaWV2ZSBhIHZhbHVlKQ0KCSAqLw0KCV9vcHRpb25EYXRlcGlja2VyOiBmdW5jdGlvbih0YXJnZXQsIG5hbWUsIHZhbHVlKSB7DQoJCXZhciBzZXR0aW5ncywgZGF0ZSwgbWluRGF0ZSwgbWF4RGF0ZSwNCgkJCWluc3QgPSB0aGlzLl9nZXRJbnN0KHRhcmdldCk7DQoNCgkJaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIgJiYgdHlwZW9mIG5hbWUgPT09ICJzdHJpbmciKSB7DQoJCQlyZXR1cm4gKG5hbWUgPT09ICJkZWZhdWx0cyIgPyAkLmV4dGVuZCh7fSwgJC5kYXRlcGlja2VyLl9kZWZhdWx0cykgOg0KCQkJCShpbnN0ID8gKG5hbWUgPT09ICJhbGwiID8gJC5leHRlbmQoe30sIGluc3Quc2V0dGluZ3MpIDoNCgkJCQl0aGlzLl9nZXQoaW5zdCwgbmFtZSkpIDogbnVsbCkpOw0KCQl9DQoNCgkJc2V0dGluZ3MgPSBuYW1lIHx8IHt9Ow0KCQlpZiAodHlwZW9mIG5hbWUgPT09ICJzdHJpbmciKSB7DQoJCQlzZXR0aW5ncyA9IHt9Ow0KCQkJc2V0dGluZ3NbbmFtZV0gPSB2YWx1ZTsNCgkJfQ0KDQoJCWlmIChpbnN0KSB7DQoJCQlpZiAodGhpcy5fY3VySW5zdCA9PT0gaW5zdCkgew0KCQkJCXRoaXMuX2hpZGVEYXRlcGlja2VyKCk7DQoJCQl9DQoNCgkJCWRhdGUgPSB0aGlzLl9nZXREYXRlRGF0ZXBpY2tlcih0YXJnZXQsIHRydWUpOw0KCQkJbWluRGF0ZSA9IHRoaXMuX2dldE1pbk1heERhdGUoaW5zdCwgIm1pbiIpOw0KCQkJbWF4RGF0ZSA9IHRoaXMuX2dldE1pbk1heERhdGUoaW5zdCwgIm1heCIpOw0KCQkJZGF0ZXBpY2tlcl9leHRlbmRSZW1vdmUoaW5zdC5zZXR0aW5ncywgc2V0dGluZ3MpOw0KCQkJLy8gcmVmb3JtYXQgdGhlIG9sZCBtaW5EYXRlL21heERhdGUgdmFsdWVzIGlmIGRhdGVGb3JtYXQgY2hhbmdlcyBhbmQgYSBuZXcgbWluRGF0ZS9tYXhEYXRlIGlzbid0IHByb3ZpZGVkDQoJCQlpZiAobWluRGF0ZSAhPT0gbnVsbCAmJiBzZXR0aW5ncy5kYXRlRm9ybWF0ICE9PSB1bmRlZmluZWQgJiYgc2V0dGluZ3MubWluRGF0ZSA9PT0gdW5kZWZpbmVkKSB7DQoJCQkJaW5zdC5zZXR0aW5ncy5taW5EYXRlID0gdGhpcy5fZm9ybWF0RGF0ZShpbnN0LCBtaW5EYXRlKTsNCgkJCX0NCgkJCWlmIChtYXhEYXRlICE9PSBudWxsICYmIHNldHRpbmdzLmRhdGVGb3JtYXQgIT09IHVuZGVmaW5lZCAmJiBzZXR0aW5ncy5tYXhEYXRlID09PSB1bmRlZmluZWQpIHsNCgkJCQlpbnN0LnNldHRpbmdzLm1heERhdGUgPSB0aGlzLl9mb3JtYXREYXRlKGluc3QsIG1heERhdGUpOw0KCQkJfQ0KCQkJaWYgKCAiZGlzYWJsZWQiIGluIHNldHRpbmdzICkgew0KCQkJCWlmICggc2V0dGluZ3MuZGlzYWJsZWQgKSB7DQoJCQkJCXRoaXMuX2Rpc2FibGVEYXRlcGlja2VyKHRhcmdldCk7DQoJCQkJfSBlbHNlIHsNCgkJCQkJdGhpcy5fZW5hYmxlRGF0ZXBpY2tlcih0YXJnZXQpOw0KCQkJCX0NCgkJCX0NCgkJCXRoaXMuX2F0dGFjaG1lbnRzKCQodGFyZ2V0KSwgaW5zdCk7DQoJCQl0aGlzLl9hdXRvU2l6ZShpbnN0KTsNCgkJCXRoaXMuX3NldERhdGUoaW5zdCwgZGF0ZSk7DQoJCQl0aGlzLl91cGRhdGVBbHRlcm5hdGUoaW5zdCk7DQoJCQl0aGlzLl91cGRhdGVEYXRlcGlja2VyKGluc3QpOw0KCQl9DQoJfSwNCg0KCS8vIGNoYW5nZSBtZXRob2QgZGVwcmVjYXRlZA0KCV9jaGFuZ2VEYXRlcGlja2VyOiBmdW5jdGlvbih0YXJnZXQsIG5hbWUsIHZhbHVlKSB7DQoJCXRoaXMuX29wdGlvbkRhdGVwaWNrZXIodGFyZ2V0LCBuYW1lLCB2YWx1ZSk7DQoJfSwNCg0KCS8qIFJlZHJhdyB0aGUgZGF0ZSBwaWNrZXIgYXR0YWNoZWQgdG8gYW4gaW5wdXQgZmllbGQgb3IgZGl2aXNpb24uDQoJICogQHBhcmFtICB0YXJnZXQgIGVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4NCgkgKi8NCglfcmVmcmVzaERhdGVwaWNrZXI6IGZ1bmN0aW9uKHRhcmdldCkgew0KCQl2YXIgaW5zdCA9IHRoaXMuX2dldEluc3QodGFyZ2V0KTsNCgkJaWYgKGluc3QpIHsNCgkJCXRoaXMuX3VwZGF0ZURhdGVwaWNrZXIoaW5zdCk7DQoJCX0NCgl9LA0KDQoJLyogU2V0IHRoZSBkYXRlcyBmb3IgYSBqUXVlcnkgc2VsZWN0aW9uLg0KCSAqIEBwYXJhbSAgdGFyZ2V0IGVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4NCgkgKiBAcGFyYW0gIGRhdGUJRGF0ZSAtIHRoZSBuZXcgZGF0ZQ0KCSAqLw0KCV9zZXREYXRlRGF0ZXBpY2tlcjogZnVuY3Rpb24odGFyZ2V0LCBkYXRlKSB7DQoJCXZhciBpbnN0ID0gdGhpcy5fZ2V0SW5zdCh0YXJnZXQpOw0KCQlpZiAoaW5zdCkgew0KCQkJdGhpcy5fc2V0RGF0ZShpbnN0LCBkYXRlKTsNCgkJCXRoaXMuX3VwZGF0ZURhdGVwaWNrZXIoaW5zdCk7DQoJCQl0aGlzLl91cGRhdGVBbHRlcm5hdGUoaW5zdCk7DQoJCX0NCgl9LA0KDQoJLyogR2V0IHRoZSBkYXRlKHMpIGZvciB0aGUgZmlyc3QgZW50cnkgaW4gYSBqUXVlcnkgc2VsZWN0aW9uLg0KCSAqIEBwYXJhbSAgdGFyZ2V0IGVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4NCgkgKiBAcGFyYW0gIG5vRGVmYXVsdCBib29sZWFuIC0gdHJ1ZSBpZiBubyBkZWZhdWx0IGRhdGUgaXMgdG8gYmUgdXNlZA0KCSAqIEByZXR1cm4gRGF0ZSAtIHRoZSBjdXJyZW50IGRhdGUNCgkgKi8NCglfZ2V0RGF0ZURhdGVwaWNrZXI6IGZ1bmN0aW9uKHRhcmdldCwgbm9EZWZhdWx0KSB7DQoJCXZhciBpbnN0ID0gdGhpcy5fZ2V0SW5zdCh0YXJnZXQpOw0KCQlpZiAoaW5zdCAmJiAhaW5zdC5pbmxpbmUpIHsNCgkJCXRoaXMuX3NldERhdGVGcm9tRmllbGQoaW5zdCwgbm9EZWZhdWx0KTsNCgkJfQ0KCQlyZXR1cm4gKGluc3QgPyB0aGlzLl9nZXREYXRlKGluc3QpIDogbnVsbCk7DQoJfSwNCg0KCS8qIEhhbmRsZSBrZXlzdHJva2VzLiAqLw0KCV9kb0tleURvd246IGZ1bmN0aW9uKGV2ZW50KSB7DQoJCXZhciBvblNlbGVjdCwgZGF0ZVN0ciwgc2VsLA0KCQkJaW5zdCA9ICQuZGF0ZXBpY2tlci5fZ2V0SW5zdChldmVudC50YXJnZXQpLA0KCQkJaGFuZGxlZCA9IHRydWUsDQoJCQlpc1JUTCA9IGluc3QuZHBEaXYuaXMoIi51aS1kYXRlcGlja2VyLXJ0bCIpOw0KDQoJCWluc3QuX2tleUV2ZW50ID0gdHJ1ZTsNCgkJaWYgKCQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcpIHsNCgkJCXN3aXRjaCAoZXZlbnQua2V5Q29kZSkgew0KCQkJCWNhc2UgOTogJC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpOw0KCQkJCQkJaGFuZGxlZCA9IGZhbHNlOw0KCQkJCQkJYnJlYWs7IC8vIGhpZGUgb24gdGFiIG91dA0KCQkJCWNhc2UgMTM6IHNlbCA9ICQoInRkLiIgKyAkLmRhdGVwaWNrZXIuX2RheU92ZXJDbGFzcyArICI6bm90KC4iICsNCgkJCQkJCQkJCSQuZGF0ZXBpY2tlci5fY3VycmVudENsYXNzICsgIikiLCBpbnN0LmRwRGl2KTsNCgkJCQkJCWlmIChzZWxbMF0pIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX3NlbGVjdERheShldmVudC50YXJnZXQsIGluc3Quc2VsZWN0ZWRNb250aCwgaW5zdC5zZWxlY3RlZFllYXIsIHNlbFswXSk7DQoJCQkJCQl9DQoNCgkJCQkJCW9uU2VsZWN0ID0gJC5kYXRlcGlja2VyLl9nZXQoaW5zdCwgIm9uU2VsZWN0Iik7DQoJCQkJCQlpZiAob25TZWxlY3QpIHsNCgkJCQkJCQlkYXRlU3RyID0gJC5kYXRlcGlja2VyLl9mb3JtYXREYXRlKGluc3QpOw0KDQoJCQkJCQkJLy8gdHJpZ2dlciBjdXN0b20gY2FsbGJhY2sNCgkJCQkJCQlvblNlbGVjdC5hcHBseSgoaW5zdC5pbnB1dCA/IGluc3QuaW5wdXRbMF0gOiBudWxsKSwgW2RhdGVTdHIsIGluc3RdKTsNCgkJCQkJCX0gZWxzZSB7DQoJCQkJCQkJJC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpOw0KCQkJCQkJfQ0KDQoJCQkJCQlyZXR1cm4gZmFsc2U7IC8vIGRvbid0IHN1Ym1pdCB0aGUgZm9ybQ0KCQkJCWNhc2UgMjc6ICQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKTsNCgkJCQkJCWJyZWFrOyAvLyBoaWRlIG9uIGVzY2FwZQ0KCQkJCWNhc2UgMzM6ICQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShldmVudC50YXJnZXQsIChldmVudC5jdHJsS2V5ID8NCgkJCQkJCQktJC5kYXRlcGlja2VyLl9nZXQoaW5zdCwgInN0ZXBCaWdNb250aHMiKSA6DQoJCQkJCQkJLSQuZGF0ZXBpY2tlci5fZ2V0KGluc3QsICJzdGVwTW9udGhzIikpLCAiTSIpOw0KCQkJCQkJYnJlYWs7IC8vIHByZXZpb3VzIG1vbnRoL3llYXIgb24gcGFnZSB1cC8rIGN0cmwNCgkJCQljYXNlIDM0OiAkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZXZlbnQudGFyZ2V0LCAoZXZlbnQuY3RybEtleSA/DQoJCQkJCQkJKyQuZGF0ZXBpY2tlci5fZ2V0KGluc3QsICJzdGVwQmlnTW9udGhzIikgOg0KCQkJCQkJCSskLmRhdGVwaWNrZXIuX2dldChpbnN0LCAic3RlcE1vbnRocyIpKSwgIk0iKTsNCgkJCQkJCWJyZWFrOyAvLyBuZXh0IG1vbnRoL3llYXIgb24gcGFnZSBkb3duLysgY3RybA0KCQkJCWNhc2UgMzU6IGlmIChldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkpIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2NsZWFyRGF0ZShldmVudC50YXJnZXQpOw0KCQkJCQkJfQ0KCQkJCQkJaGFuZGxlZCA9IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleTsNCgkJCQkJCWJyZWFrOyAvLyBjbGVhciBvbiBjdHJsIG9yIGNvbW1hbmQgK2VuZA0KCQkJCWNhc2UgMzY6IGlmIChldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkpIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2dvdG9Ub2RheShldmVudC50YXJnZXQpOw0KCQkJCQkJfQ0KCQkJCQkJaGFuZGxlZCA9IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleTsNCgkJCQkJCWJyZWFrOyAvLyBjdXJyZW50IG9uIGN0cmwgb3IgY29tbWFuZCAraG9tZQ0KCQkJCWNhc2UgMzc6IGlmIChldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkpIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZXZlbnQudGFyZ2V0LCAoaXNSVEwgPyArMSA6IC0xKSwgIkQiKTsNCgkJCQkJCX0NCgkJCQkJCWhhbmRsZWQgPSBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXk7DQoJCQkJCQkvLyAtMSBkYXkgb24gY3RybCBvciBjb21tYW5kICtsZWZ0DQoJCQkJCQlpZiAoZXZlbnQub3JpZ2luYWxFdmVudC5hbHRLZXkpIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZXZlbnQudGFyZ2V0LCAoZXZlbnQuY3RybEtleSA/DQoJCQkJCQkJCS0kLmRhdGVwaWNrZXIuX2dldChpbnN0LCAic3RlcEJpZ01vbnRocyIpIDoNCgkJCQkJCQkJLSQuZGF0ZXBpY2tlci5fZ2V0KGluc3QsICJzdGVwTW9udGhzIikpLCAiTSIpOw0KCQkJCQkJfQ0KCQkJCQkJLy8gbmV4dCBtb250aC95ZWFyIG9uIGFsdCArbGVmdCBvbiBNYWMNCgkJCQkJCWJyZWFrOw0KCQkJCWNhc2UgMzg6IGlmIChldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkpIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZXZlbnQudGFyZ2V0LCAtNywgIkQiKTsNCgkJCQkJCX0NCgkJCQkJCWhhbmRsZWQgPSBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXk7DQoJCQkJCQlicmVhazsgLy8gLTEgd2VlayBvbiBjdHJsIG9yIGNvbW1hbmQgK3VwDQoJCQkJY2FzZSAzOTogaWYgKGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSkgew0KCQkJCQkJCSQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShldmVudC50YXJnZXQsIChpc1JUTCA/IC0xIDogKzEpLCAiRCIpOw0KCQkJCQkJfQ0KCQkJCQkJaGFuZGxlZCA9IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleTsNCgkJCQkJCS8vICsxIGRheSBvbiBjdHJsIG9yIGNvbW1hbmQgK3JpZ2h0DQoJCQkJCQlpZiAoZXZlbnQub3JpZ2luYWxFdmVudC5hbHRLZXkpIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZXZlbnQudGFyZ2V0LCAoZXZlbnQuY3RybEtleSA/DQoJCQkJCQkJCSskLmRhdGVwaWNrZXIuX2dldChpbnN0LCAic3RlcEJpZ01vbnRocyIpIDoNCgkJCQkJCQkJKyQuZGF0ZXBpY2tlci5fZ2V0KGluc3QsICJzdGVwTW9udGhzIikpLCAiTSIpOw0KCQkJCQkJfQ0KCQkJCQkJLy8gbmV4dCBtb250aC95ZWFyIG9uIGFsdCArcmlnaHQNCgkJCQkJCWJyZWFrOw0KCQkJCWNhc2UgNDA6IGlmIChldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkpIHsNCgkJCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZXZlbnQudGFyZ2V0LCArNywgIkQiKTsNCgkJCQkJCX0NCgkJCQkJCWhhbmRsZWQgPSBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXk7DQoJCQkJCQlicmVhazsgLy8gKzEgd2VlayBvbiBjdHJsIG9yIGNvbW1hbmQgK2Rvd24NCgkJCQlkZWZhdWx0OiBoYW5kbGVkID0gZmFsc2U7DQoJCQl9DQoJCX0gZWxzZSBpZiAoZXZlbnQua2V5Q29kZSA9PT0gMzYgJiYgZXZlbnQuY3RybEtleSkgeyAvLyBkaXNwbGF5IHRoZSBkYXRlIHBpY2tlciBvbiBjdHJsK2hvbWUNCgkJCSQuZGF0ZXBpY2tlci5fc2hvd0RhdGVwaWNrZXIodGhpcyk7DQoJCX0gZWxzZSB7DQoJCQloYW5kbGVkID0gZmFsc2U7DQoJCX0NCg0KCQlpZiAoaGFuZGxlZCkgew0KCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCgkJCWV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOw0KCQl9DQoJfSwNCg0KCS8qIEZpbHRlciBlbnRlcmVkIGNoYXJhY3RlcnMgLSBiYXNlZCBvbiBkYXRlIGZvcm1hdC4gKi8NCglfZG9LZXlQcmVzczogZnVuY3Rpb24oZXZlbnQpIHsNCgkJdmFyIGNoYXJzLCBjaHIsDQoJCQlpbnN0ID0gJC5kYXRlcGlja2VyLl9nZXRJbnN0KGV2ZW50LnRhcmdldCk7DQoNCgkJaWYgKCQuZGF0ZXBpY2tlci5fZ2V0KGluc3QsICJjb25zdHJhaW5JbnB1dCIpKSB7DQoJCQljaGFycyA9ICQuZGF0ZXBpY2tlci5fcG9zc2libGVDaGFycygkLmRhdGVwaWNrZXIuX2dldChpbnN0LCAiZGF0ZUZvcm1hdCIpKTsNCgkJCWNociA9IFN0cmluZy5mcm9tQ2hhckNvZGUoZXZlbnQuY2hhckNvZGUgPT0gbnVsbCA/IGV2ZW50LmtleUNvZGUgOiBldmVudC5jaGFyQ29kZSk7DQoJCQlyZXR1cm4gZXZlbnQuY3RybEtleSB8fCBldmVudC5tZXRhS2V5IHx8IChjaHIgPCAiICIgfHwgIWNoYXJzIHx8IGNoYXJzLmluZGV4T2YoY2hyKSA+IC0xKTsNCgkJfQ0KCX0sDQoNCgkvKiBTeW5jaHJvbmlzZSBtYW51YWwgZW50cnkgYW5kIGZpZWxkL2FsdGVybmF0ZSBmaWVsZC4gKi8NCglfZG9LZXlVcDogZnVuY3Rpb24oZXZlbnQpIHsNCgkJdmFyIGRhdGUsDQoJCQlpbnN0ID0gJC5kYXRlcGlja2VyLl9nZXRJbnN0KGV2ZW50LnRhcmdldCk7DQoNCgkJaWYgKGluc3QuaW5wdXQudmFsKCkgIT09IGluc3QubGFzdFZhbCkgew0KCQkJdHJ5IHsNCgkJCQlkYXRlID0gJC5kYXRlcGlja2VyLnBhcnNlRGF0ZSgkLmRhdGVwaWNrZXIuX2dldChpbnN0LCAiZGF0ZUZvcm1hdCIpLA0KCQkJCQkoaW5zdC5pbnB1dCA/IGluc3QuaW5wdXQudmFsKCkgOiBudWxsKSwNCgkJCQkJJC5kYXRlcGlja2VyLl9nZXRGb3JtYXRDb25maWcoaW5zdCkpOw0KDQoJCQkJaWYgKGRhdGUpIHsgLy8gb25seSBpZiB2YWxpZA0KCQkJCQkkLmRhdGVwaWNrZXIuX3NldERhdGVGcm9tRmllbGQoaW5zdCk7DQoJCQkJCSQuZGF0ZXBpY2tlci5fdXBkYXRlQWx0ZXJuYXRlKGluc3QpOw0KCQkJCQkkLmRhdGVwaWNrZXIuX3VwZGF0ZURhdGVwaWNrZXIoaW5zdCk7DQoJCQkJfQ0KCQkJfQ0KCQkJY2F0Y2ggKGVycikgew0KCQkJfQ0KCQl9DQoJCXJldHVybiB0cnVlOw0KCX0sDQoNCgkvKiBQb3AtdXAgdGhlIGRhdGUgcGlja2VyIGZvciBhIGdpdmVuIGlucHV0IGZpZWxkLg0KCSAqIElmIGZhbHNlIHJldHVybmVkIGZyb20gYmVmb3JlU2hvdyBldmVudCBoYW5kbGVyIGRvIG5vdCBzaG93Lg0KCSAqIEBwYXJhbSAgaW5wdXQgIGVsZW1lbnQgLSB0aGUgaW5wdXQgZmllbGQgYXR0YWNoZWQgdG8gdGhlIGRhdGUgcGlja2VyIG9yDQoJICoJCQkJCWV2ZW50IC0gaWYgdHJpZ2dlcmVkIGJ5IGZvY3VzDQoJICovDQoJX3Nob3dEYXRlcGlja2VyOiBmdW5jdGlvbihpbnB1dCkgew0KCQlpbnB1dCA9IGlucHV0LnRhcmdldCB8fCBpbnB1dDsNCgkJaWYgKGlucHV0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICJpbnB1dCIpIHsgLy8gZmluZCBmcm9tIGJ1dHRvbi9pbWFnZSB0cmlnZ2VyDQoJCQlpbnB1dCA9ICQoImlucHV0IiwgaW5wdXQucGFyZW50Tm9kZSlbMF07DQoJCX0NCg0KCQlpZiAoJC5kYXRlcGlja2VyLl9pc0Rpc2FibGVkRGF0ZXBpY2tlcihpbnB1dCkgfHwgJC5kYXRlcGlja2VyLl9sYXN0SW5wdXQgPT09IGlucHV0KSB7IC8vIGFscmVhZHkgaGVyZQ0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJdmFyIGluc3QsIGJlZm9yZVNob3csIGJlZm9yZVNob3dTZXR0aW5ncywgaXNGaXhlZCwNCgkJCW9mZnNldCwgc2hvd0FuaW0sIGR1cmF0aW9uOw0KDQoJCWluc3QgPSAkLmRhdGVwaWNrZXIuX2dldEluc3QoaW5wdXQpOw0KCQlpZiAoJC5kYXRlcGlja2VyLl9jdXJJbnN0ICYmICQuZGF0ZXBpY2tlci5fY3VySW5zdCAhPT0gaW5zdCkgew0KCQkJJC5kYXRlcGlja2VyLl9jdXJJbnN0LmRwRGl2LnN0b3AodHJ1ZSwgdHJ1ZSk7DQoJCQlpZiAoIGluc3QgJiYgJC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyApIHsNCgkJCQkkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCAkLmRhdGVwaWNrZXIuX2N1ckluc3QuaW5wdXRbMF0gKTsNCgkJCX0NCgkJfQ0KDQoJCWJlZm9yZVNob3cgPSAkLmRhdGVwaWNrZXIuX2dldChpbnN0LCAiYmVmb3JlU2hvdyIpOw0KCQliZWZvcmVTaG93U2V0dGluZ3MgPSBiZWZvcmVTaG93ID8gYmVmb3JlU2hvdy5hcHBseShpbnB1dCwgW2lucHV0LCBpbnN0XSkgOiB7fTsNCgkJaWYoYmVmb3JlU2hvd1NldHRpbmdzID09PSBmYWxzZSl7DQoJCQlyZXR1cm47DQoJCX0NCgkJZGF0ZXBpY2tlcl9leHRlbmRSZW1vdmUoaW5zdC5zZXR0aW5ncywgYmVmb3JlU2hvd1NldHRpbmdzKTsNCg0KCQlpbnN0Lmxhc3RWYWwgPSBudWxsOw0KCQkkLmRhdGVwaWNrZXIuX2xhc3RJbnB1dCA9IGlucHV0Ow0KCQkkLmRhdGVwaWNrZXIuX3NldERhdGVGcm9tRmllbGQoaW5zdCk7DQoNCgkJaWYgKCQuZGF0ZXBpY2tlci5faW5EaWFsb2cpIHsgLy8gaGlkZSBjdXJzb3INCgkJCWlucHV0LnZhbHVlID0gIiI7DQoJCX0NCgkJaWYgKCEkLmRhdGVwaWNrZXIuX3BvcykgeyAvLyBwb3NpdGlvbiBiZWxvdyBpbnB1dA0KCQkJJC5kYXRlcGlja2VyLl9wb3MgPSAkLmRhdGVwaWNrZXIuX2ZpbmRQb3MoaW5wdXQpOw0KCQkJJC5kYXRlcGlja2VyLl9wb3NbMV0gKz0gaW5wdXQub2Zmc2V0SGVpZ2h0OyAvLyBhZGQgdGhlIGhlaWdodA0KCQl9DQoNCgkJaXNGaXhlZCA9IGZhbHNlOw0KCQkkKGlucHV0KS5wYXJlbnRzKCkuZWFjaChmdW5jdGlvbigpIHsNCgkJCWlzRml4ZWQgfD0gJCh0aGlzKS5jc3MoInBvc2l0aW9uIikgPT09ICJmaXhlZCI7DQoJCQlyZXR1cm4gIWlzRml4ZWQ7DQoJCX0pOw0KDQoJCW9mZnNldCA9IHtsZWZ0OiAkLmRhdGVwaWNrZXIuX3Bvc1swXSwgdG9wOiAkLmRhdGVwaWNrZXIuX3Bvc1sxXX07DQoJCSQuZGF0ZXBpY2tlci5fcG9zID0gbnVsbDsNCgkJLy90byBhdm9pZCBmbGFzaGVzIG9uIEZpcmVmb3gNCgkJaW5zdC5kcERpdi5lbXB0eSgpOw0KCQkvLyBkZXRlcm1pbmUgc2l6aW5nIG9mZnNjcmVlbg0KCQlpbnN0LmRwRGl2LmNzcyh7cG9zaXRpb246ICJhYnNvbHV0ZSIsIGRpc3BsYXk6ICJibG9jayIsIHRvcDogIi0xMDAwcHgifSk7DQoJCSQuZGF0ZXBpY2tlci5fdXBkYXRlRGF0ZXBpY2tlcihpbnN0KTsNCgkJLy8gZml4IHdpZHRoIGZvciBkeW5hbWljIG51bWJlciBvZiBkYXRlIHBpY2tlcnMNCgkJLy8gYW5kIGFkanVzdCBwb3NpdGlvbiBiZWZvcmUgc2hvd2luZw0KCQlvZmZzZXQgPSAkLmRhdGVwaWNrZXIuX2NoZWNrT2Zmc2V0KGluc3QsIG9mZnNldCwgaXNGaXhlZCk7DQoJCWluc3QuZHBEaXYuY3NzKHtwb3NpdGlvbjogKCQuZGF0ZXBpY2tlci5faW5EaWFsb2cgJiYgJC5ibG9ja1VJID8NCgkJCSJzdGF0aWMiIDogKGlzRml4ZWQgPyAiZml4ZWQiIDogImFic29sdXRlIikpLCBkaXNwbGF5OiAibm9uZSIsDQoJCQlsZWZ0OiBvZmZzZXQubGVmdCArICJweCIsIHRvcDogb2Zmc2V0LnRvcCArICJweCJ9KTsNCg0KCQlpZiAoIWluc3QuaW5saW5lKSB7DQoJCQlzaG93QW5pbSA9ICQuZGF0ZXBpY2tlci5fZ2V0KGluc3QsICJzaG93QW5pbSIpOw0KCQkJZHVyYXRpb24gPSAkLmRhdGVwaWNrZXIuX2dldChpbnN0LCAiZHVyYXRpb24iKTsNCgkJCWluc3QuZHBEaXYuY3NzKCAiei1pbmRleCIsIGRhdGVwaWNrZXJfZ2V0WmluZGV4KCAkKCBpbnB1dCApICkgKyAxICk7DQoJCQkkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nID0gdHJ1ZTsNCg0KCQkJaWYgKCAkLmVmZmVjdHMgJiYgJC5lZmZlY3RzLmVmZmVjdFsgc2hvd0FuaW0gXSApIHsNCgkJCQlpbnN0LmRwRGl2LnNob3coc2hvd0FuaW0sICQuZGF0ZXBpY2tlci5fZ2V0KGluc3QsICJzaG93T3B0aW9ucyIpLCBkdXJhdGlvbik7DQoJCQl9IGVsc2Ugew0KCQkJCWluc3QuZHBEaXZbc2hvd0FuaW0gfHwgInNob3ciXShzaG93QW5pbSA/IGR1cmF0aW9uIDogbnVsbCk7DQoJCQl9DQoNCgkJCWlmICggJC5kYXRlcGlja2VyLl9zaG91bGRGb2N1c0lucHV0KCBpbnN0ICkgKSB7DQoJCQkJaW5zdC5pbnB1dC5mb2N1cygpOw0KCQkJfQ0KDQoJCQkkLmRhdGVwaWNrZXIuX2N1ckluc3QgPSBpbnN0Ow0KCQl9DQoJfSwNCg0KCS8qIEdlbmVyYXRlIHRoZSBkYXRlIHBpY2tlciBjb250ZW50LiAqLw0KCV91cGRhdGVEYXRlcGlja2VyOiBmdW5jdGlvbihpbnN0KSB7DQoJCXRoaXMubWF4Um93cyA9IDQ7IC8vUmVzZXQgdGhlIG1heCBudW1iZXIgb2Ygcm93cyBiZWluZyBkaXNwbGF5ZWQgKHNlZSAjNzA0MykNCgkJZGF0ZXBpY2tlcl9pbnN0QWN0aXZlID0gaW5zdDsgLy8gZm9yIGRlbGVnYXRlIGhvdmVyIGV2ZW50cw0KCQlpbnN0LmRwRGl2LmVtcHR5KCkuYXBwZW5kKHRoaXMuX2dlbmVyYXRlSFRNTChpbnN0KSk7DQoJCXRoaXMuX2F0dGFjaEhhbmRsZXJzKGluc3QpOw0KDQoJCXZhciBvcmlneWVhcnNodG1sLA0KCQkJbnVtTW9udGhzID0gdGhpcy5fZ2V0TnVtYmVyT2ZNb250aHMoaW5zdCksDQoJCQljb2xzID0gbnVtTW9udGhzWzFdLA0KCQkJd2lkdGggPSAxNywNCgkJCWFjdGl2ZUNlbGwgPSBpbnN0LmRwRGl2LmZpbmQoICIuIiArIHRoaXMuX2RheU92ZXJDbGFzcyArICIgYSIgKTsNCg0KCQlpZiAoIGFjdGl2ZUNlbGwubGVuZ3RoID4gMCApIHsNCgkJCWRhdGVwaWNrZXJfaGFuZGxlTW91c2VvdmVyLmFwcGx5KCBhY3RpdmVDZWxsLmdldCggMCApICk7DQoJCX0NCg0KCQlpbnN0LmRwRGl2LnJlbW92ZUNsYXNzKCJ1aS1kYXRlcGlja2VyLW11bHRpLTIgdWktZGF0ZXBpY2tlci1tdWx0aS0zIHVpLWRhdGVwaWNrZXItbXVsdGktNCIpLndpZHRoKCIiKTsNCgkJaWYgKGNvbHMgPiAxKSB7DQoJCQlpbnN0LmRwRGl2LmFkZENsYXNzKCJ1aS1kYXRlcGlja2VyLW11bHRpLSIgKyBjb2xzKS5jc3MoIndpZHRoIiwgKHdpZHRoICogY29scykgKyAiZW0iKTsNCgkJfQ0KCQlpbnN0LmRwRGl2WyhudW1Nb250aHNbMF0gIT09IDEgfHwgbnVtTW9udGhzWzFdICE9PSAxID8gImFkZCIgOiAicmVtb3ZlIikgKw0KCQkJIkNsYXNzIl0oInVpLWRhdGVwaWNrZXItbXVsdGkiKTsNCgkJaW5zdC5kcERpdlsodGhpcy5fZ2V0KGluc3QsICJpc1JUTCIpID8gImFkZCIgOiAicmVtb3ZlIikgKw0KCQkJIkNsYXNzIl0oInVpLWRhdGVwaWNrZXItcnRsIik7DQoNCgkJaWYgKGluc3QgPT09ICQuZGF0ZXBpY2tlci5fY3VySW5zdCAmJiAkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nICYmICQuZGF0ZXBpY2tlci5fc2hvdWxkRm9jdXNJbnB1dCggaW5zdCApICkgew0KCQkJaW5zdC5pbnB1dC5mb2N1cygpOw0KCQl9DQoNCgkJLy8gZGVmZmVyZWQgcmVuZGVyIG9mIHRoZSB5ZWFycyBzZWxlY3QgKHRvIGF2b2lkIGZsYXNoZXMgb24gRmlyZWZveCkNCgkJaWYoIGluc3QueWVhcnNodG1sICl7DQoJCQlvcmlneWVhcnNodG1sID0gaW5zdC55ZWFyc2h0bWw7DQoJCQlzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7DQoJCQkJLy9hc3N1cmUgdGhhdCBpbnN0LnllYXJzaHRtbCBkaWRuJ3QgY2hhbmdlLg0KCQkJCWlmKCBvcmlneWVhcnNodG1sID09PSBpbnN0LnllYXJzaHRtbCAmJiBpbnN0LnllYXJzaHRtbCApew0KCQkJCQlpbnN0LmRwRGl2LmZpbmQoInNlbGVjdC51aS1kYXRlcGlja2VyLXllYXI6Zmlyc3QiKS5yZXBsYWNlV2l0aChpbnN0LnllYXJzaHRtbCk7DQoJCQkJfQ0KCQkJCW9yaWd5ZWFyc2h0bWwgPSBpbnN0LnllYXJzaHRtbCA9IG51bGw7DQoJCQl9LCAwKTsNCgkJfQ0KCX0sDQoNCgkvLyAjNjY5NCAtIGRvbid0IGZvY3VzIHRoZSBpbnB1dCBpZiBpdCdzIGFscmVhZHkgZm9jdXNlZA0KCS8vIHRoaXMgYnJlYWtzIHRoZSBjaGFuZ2UgZXZlbnQgaW4gSUUNCgkvLyBTdXBwb3J0OiBJRSBhbmQgalF1ZXJ5IDwxLjkNCglfc2hvdWxkRm9jdXNJbnB1dDogZnVuY3Rpb24oIGluc3QgKSB7DQoJCXJldHVybiBpbnN0LmlucHV0ICYmIGluc3QuaW5wdXQuaXMoICI6dmlzaWJsZSIgKSAmJiAhaW5zdC5pbnB1dC5pcyggIjpkaXNhYmxlZCIgKSAmJiAhaW5zdC5pbnB1dC5pcyggIjpmb2N1cyIgKTsNCgl9LA0KDQoJLyogQ2hlY2sgcG9zaXRpb25pbmcgdG8gcmVtYWluIG9uIHNjcmVlbi4gKi8NCglfY2hlY2tPZmZzZXQ6IGZ1bmN0aW9uKGluc3QsIG9mZnNldCwgaXNGaXhlZCkgew0KCQl2YXIgZHBXaWR0aCA9IGluc3QuZHBEaXYub3V0ZXJXaWR0aCgpLA0KCQkJZHBIZWlnaHQgPSBpbnN0LmRwRGl2Lm91dGVySGVpZ2h0KCksDQoJCQlpbnB1dFdpZHRoID0gaW5zdC5pbnB1dCA/IGluc3QuaW5wdXQub3V0ZXJXaWR0aCgpIDogMCwNCgkJCWlucHV0SGVpZ2h0ID0gaW5zdC5pbnB1dCA/IGluc3QuaW5wdXQub3V0ZXJIZWlnaHQoKSA6IDAsDQoJCQl2aWV3V2lkdGggPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGggKyAoaXNGaXhlZCA/IDAgOiAkKGRvY3VtZW50KS5zY3JvbGxMZWZ0KCkpLA0KCQkJdmlld0hlaWdodCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQgKyAoaXNGaXhlZCA/IDAgOiAkKGRvY3VtZW50KS5zY3JvbGxUb3AoKSk7DQoNCgkJb2Zmc2V0LmxlZnQgLT0gKHRoaXMuX2dldChpbnN0LCAiaXNSVEwiKSA/IChkcFdpZHRoIC0gaW5wdXRXaWR0aCkgOiAwKTsNCgkJb2Zmc2V0LmxlZnQgLT0gKGlzRml4ZWQgJiYgb2Zmc2V0LmxlZnQgPT09IGluc3QuaW5wdXQub2Zmc2V0KCkubGVmdCkgPyAkKGRvY3VtZW50KS5zY3JvbGxMZWZ0KCkgOiAwOw0KCQlvZmZzZXQudG9wIC09IChpc0ZpeGVkICYmIG9mZnNldC50b3AgPT09IChpbnN0LmlucHV0Lm9mZnNldCgpLnRvcCArIGlucHV0SGVpZ2h0KSkgPyAkKGRvY3VtZW50KS5zY3JvbGxUb3AoKSA6IDA7DQoNCgkJLy8gbm93IGNoZWNrIGlmIGRhdGVwaWNrZXIgaXMgc2hvd2luZyBvdXRzaWRlIHdpbmRvdyB2aWV3cG9ydCAtIG1vdmUgdG8gYSBiZXR0ZXIgcGxhY2UgaWYgc28uDQoJCW9mZnNldC5sZWZ0IC09IE1hdGgubWluKG9mZnNldC5sZWZ0LCAob2Zmc2V0LmxlZnQgKyBkcFdpZHRoID4gdmlld1dpZHRoICYmIHZpZXdXaWR0aCA+IGRwV2lkdGgpID8NCgkJCU1hdGguYWJzKG9mZnNldC5sZWZ0ICsgZHBXaWR0aCAtIHZpZXdXaWR0aCkgOiAwKTsNCgkJb2Zmc2V0LnRvcCAtPSBNYXRoLm1pbihvZmZzZXQudG9wLCAob2Zmc2V0LnRvcCArIGRwSGVpZ2h0ID4gdmlld0hlaWdodCAmJiB2aWV3SGVpZ2h0ID4gZHBIZWlnaHQpID8NCgkJCU1hdGguYWJzKGRwSGVpZ2h0ICsgaW5wdXRIZWlnaHQpIDogMCk7DQoNCgkJcmV0dXJuIG9mZnNldDsNCgl9LA0KDQoJLyogRmluZCBhbiBvYmplY3QncyBwb3NpdGlvbiBvbiB0aGUgc2NyZWVuLiAqLw0KCV9maW5kUG9zOiBmdW5jdGlvbihvYmopIHsNCgkJdmFyIHBvc2l0aW9uLA0KCQkJaW5zdCA9IHRoaXMuX2dldEluc3Qob2JqKSwNCgkJCWlzUlRMID0gdGhpcy5fZ2V0KGluc3QsICJpc1JUTCIpOw0KDQoJCXdoaWxlIChvYmogJiYgKG9iai50eXBlID09PSAiaGlkZGVuIiB8fCBvYmoubm9kZVR5cGUgIT09IDEgfHwgJC5leHByLmZpbHRlcnMuaGlkZGVuKG9iaikpKSB7DQoJCQlvYmogPSBvYmpbaXNSVEwgPyAicHJldmlvdXNTaWJsaW5nIiA6ICJuZXh0U2libGluZyJdOw0KCQl9DQoNCgkJcG9zaXRpb24gPSAkKG9iaikub2Zmc2V0KCk7DQoJCXJldHVybiBbcG9zaXRpb24ubGVmdCwgcG9zaXRpb24udG9wXTsNCgl9LA0KDQoJLyogSGlkZSB0aGUgZGF0ZSBwaWNrZXIgZnJvbSB2aWV3Lg0KCSAqIEBwYXJhbSAgaW5wdXQgIGVsZW1lbnQgLSB0aGUgaW5wdXQgZmllbGQgYXR0YWNoZWQgdG8gdGhlIGRhdGUgcGlja2VyDQoJICovDQoJX2hpZGVEYXRlcGlja2VyOiBmdW5jdGlvbihpbnB1dCkgew0KCQl2YXIgc2hvd0FuaW0sIGR1cmF0aW9uLCBwb3N0UHJvY2Vzcywgb25DbG9zZSwNCgkJCWluc3QgPSB0aGlzLl9jdXJJbnN0Ow0KDQoJCWlmICghaW5zdCB8fCAoaW5wdXQgJiYgaW5zdCAhPT0gJC5kYXRhKGlucHV0LCAiZGF0ZXBpY2tlciIpKSkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJaWYgKHRoaXMuX2RhdGVwaWNrZXJTaG93aW5nKSB7DQoJCQlzaG93QW5pbSA9IHRoaXMuX2dldChpbnN0LCAic2hvd0FuaW0iKTsNCgkJCWR1cmF0aW9uID0gdGhpcy5fZ2V0KGluc3QsICJkdXJhdGlvbiIpOw0KCQkJcG9zdFByb2Nlc3MgPSBmdW5jdGlvbigpIHsNCgkJCQkkLmRhdGVwaWNrZXIuX3RpZHlEaWFsb2coaW5zdCk7DQoJCQl9Ow0KDQoJCQkvLyBERVBSRUNBVEVEOiBhZnRlciBCQyBmb3IgMS44LnggJC5lZmZlY3RzWyBzaG93QW5pbSBdIGlzIG5vdCBuZWVkZWQNCgkJCWlmICggJC5lZmZlY3RzICYmICggJC5lZmZlY3RzLmVmZmVjdFsgc2hvd0FuaW0gXSB8fCAkLmVmZmVjdHNbIHNob3dBbmltIF0gKSApIHsNCgkJCQlpbnN0LmRwRGl2LmhpZGUoc2hvd0FuaW0sICQuZGF0ZXBpY2tlci5fZ2V0KGluc3QsICJzaG93T3B0aW9ucyIpLCBkdXJhdGlvbiwgcG9zdFByb2Nlc3MpOw0KCQkJfSBlbHNlIHsNCgkJCQlpbnN0LmRwRGl2WyhzaG93QW5pbSA9PT0gInNsaWRlRG93biIgPyAic2xpZGVVcCIgOg0KCQkJCQkoc2hvd0FuaW0gPT09ICJmYWRlSW4iID8gImZhZGVPdXQiIDogImhpZGUiKSldKChzaG93QW5pbSA/IGR1cmF0aW9uIDogbnVsbCksIHBvc3RQcm9jZXNzKTsNCgkJCX0NCg0KCQkJaWYgKCFzaG93QW5pbSkgew0KCQkJCXBvc3RQcm9jZXNzKCk7DQoJCQl9DQoJCQl0aGlzLl9kYXRlcGlja2VyU2hvd2luZyA9IGZhbHNlOw0KDQoJCQlvbkNsb3NlID0gdGhpcy5fZ2V0KGluc3QsICJvbkNsb3NlIik7DQoJCQlpZiAob25DbG9zZSkgew0KCQkJCW9uQ2xvc2UuYXBwbHkoKGluc3QuaW5wdXQgPyBpbnN0LmlucHV0WzBdIDogbnVsbCksIFsoaW5zdC5pbnB1dCA/IGluc3QuaW5wdXQudmFsKCkgOiAiIiksIGluc3RdKTsNCgkJCX0NCg0KCQkJdGhpcy5fbGFzdElucHV0ID0gbnVsbDsNCgkJCWlmICh0aGlzLl9pbkRpYWxvZykgew0KCQkJCXRoaXMuX2RpYWxvZ0lucHV0LmNzcyh7IHBvc2l0aW9uOiAiYWJzb2x1dGUiLCBsZWZ0OiAiMCIsIHRvcDogIi0xMDBweCIgfSk7DQoJCQkJaWYgKCQuYmxvY2tVSSkgew0KCQkJCQkkLnVuYmxvY2tVSSgpOw0KCQkJCQkkKCJib2R5IikuYXBwZW5kKHRoaXMuZHBEaXYpOw0KCQkJCX0NCgkJCX0NCgkJCXRoaXMuX2luRGlhbG9nID0gZmFsc2U7DQoJCX0NCgl9LA0KDQoJLyogVGlkeSB1cCBhZnRlciBhIGRpYWxvZyBkaXNwbGF5LiAqLw0KCV90aWR5RGlhbG9nOiBmdW5jdGlvbihpbnN0KSB7DQoJCWluc3QuZHBEaXYucmVtb3ZlQ2xhc3ModGhpcy5fZGlhbG9nQ2xhc3MpLnVuYmluZCgiLnVpLWRhdGVwaWNrZXItY2FsZW5kYXIiKTsNCgl9LA0KDQoJLyogQ2xvc2UgZGF0ZSBwaWNrZXIgaWYgY2xpY2tlZCBlbHNld2hlcmUuICovDQoJX2NoZWNrRXh0ZXJuYWxDbGljazogZnVuY3Rpb24oZXZlbnQpIHsNCgkJaWYgKCEkLmRhdGVwaWNrZXIuX2N1ckluc3QpIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCXZhciAkdGFyZ2V0ID0gJChldmVudC50YXJnZXQpLA0KCQkJaW5zdCA9ICQuZGF0ZXBpY2tlci5fZ2V0SW5zdCgkdGFyZ2V0WzBdKTsNCg0KCQlpZiAoICggKCAkdGFyZ2V0WzBdLmlkICE9PSAkLmRhdGVwaWNrZXIuX21haW5EaXZJZCAmJg0KCQkJCSR0YXJnZXQucGFyZW50cygiIyIgKyAkLmRhdGVwaWNrZXIuX21haW5EaXZJZCkubGVuZ3RoID09PSAwICYmDQoJCQkJISR0YXJnZXQuaGFzQ2xhc3MoJC5kYXRlcGlja2VyLm1hcmtlckNsYXNzTmFtZSkgJiYNCgkJCQkhJHRhcmdldC5jbG9zZXN0KCIuIiArICQuZGF0ZXBpY2tlci5fdHJpZ2dlckNsYXNzKS5sZW5ndGggJiYNCgkJCQkkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nICYmICEoJC5kYXRlcGlja2VyLl9pbkRpYWxvZyAmJiAkLmJsb2NrVUkpICkgKSB8fA0KCQkJKCAkdGFyZ2V0Lmhhc0NsYXNzKCQuZGF0ZXBpY2tlci5tYXJrZXJDbGFzc05hbWUpICYmICQuZGF0ZXBpY2tlci5fY3VySW5zdCAhPT0gaW5zdCApICkgew0KCQkJCSQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKTsNCgkJfQ0KCX0sDQoNCgkvKiBBZGp1c3Qgb25lIG9mIHRoZSBkYXRlIHN1Yi1maWVsZHMuICovDQoJX2FkanVzdERhdGU6IGZ1bmN0aW9uKGlkLCBvZmZzZXQsIHBlcmlvZCkgew0KCQl2YXIgdGFyZ2V0ID0gJChpZCksDQoJCQlpbnN0ID0gdGhpcy5fZ2V0SW5zdCh0YXJnZXRbMF0pOw0KDQoJCWlmICh0aGlzLl9pc0Rpc2FibGVkRGF0ZXBpY2tlcih0YXJnZXRbMF0pKSB7DQoJCQlyZXR1cm47DQoJCX0NCgkJdGhpcy5fYWRqdXN0SW5zdERhdGUoaW5zdCwgb2Zmc2V0ICsNCgkJCShwZXJpb2QgPT09ICJNIiA/IHRoaXMuX2dldChpbnN0LCAic2hvd0N1cnJlbnRBdFBvcyIpIDogMCksIC8vIHVuZG8gcG9zaXRpb25pbmcNCgkJCXBlcmlvZCk7DQoJCXRoaXMuX3VwZGF0ZURhdGVwaWNrZXIoaW5zdCk7DQoJfSwNCg0KCS8qIEFjdGlvbiBmb3IgY3VycmVudCBsaW5rLiAqLw0KCV9nb3RvVG9kYXk6IGZ1bmN0aW9uKGlkKSB7DQoJCXZhciBkYXRlLA0KCQkJdGFyZ2V0ID0gJChpZCksDQoJCQlpbnN0ID0gdGhpcy5fZ2V0SW5zdCh0YXJnZXRbMF0pOw0KDQoJCWlmICh0aGlzLl9nZXQoaW5zdCwgImdvdG9DdXJyZW50IikgJiYgaW5zdC5jdXJyZW50RGF5KSB7DQoJCQlpbnN0LnNlbGVjdGVkRGF5ID0gaW5zdC5jdXJyZW50RGF5Ow0KCQkJaW5zdC5kcmF3TW9udGggPSBpbnN0LnNlbGVjdGVkTW9udGggPSBpbnN0LmN1cnJlbnRNb250aDsNCgkJCWluc3QuZHJhd1llYXIgPSBpbnN0LnNlbGVjdGVkWWVhciA9IGluc3QuY3VycmVudFllYXI7DQoJCX0gZWxzZSB7DQoJCQlkYXRlID0gbmV3IERhdGUoKTsNCgkJCWluc3Quc2VsZWN0ZWREYXkgPSBkYXRlLmdldERhdGUoKTsNCgkJCWluc3QuZHJhd01vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoID0gZGF0ZS5nZXRNb250aCgpOw0KCQkJaW5zdC5kcmF3WWVhciA9IGluc3Quc2VsZWN0ZWRZZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOw0KCQl9DQoJCXRoaXMuX25vdGlmeUNoYW5nZShpbnN0KTsNCgkJdGhpcy5fYWRqdXN0RGF0ZSh0YXJnZXQpOw0KCX0sDQoNCgkvKiBBY3Rpb24gZm9yIHNlbGVjdGluZyBhIG5ldyBtb250aC95ZWFyLiAqLw0KCV9zZWxlY3RNb250aFllYXI6IGZ1bmN0aW9uKGlkLCBzZWxlY3QsIHBlcmlvZCkgew0KCQl2YXIgdGFyZ2V0ID0gJChpZCksDQoJCQlpbnN0ID0gdGhpcy5fZ2V0SW5zdCh0YXJnZXRbMF0pOw0KDQoJCWluc3RbInNlbGVjdGVkIiArIChwZXJpb2QgPT09ICJNIiA/ICJNb250aCIgOiAiWWVhciIpXSA9DQoJCWluc3RbImRyYXciICsgKHBlcmlvZCA9PT0gIk0iID8gIk1vbnRoIiA6ICJZZWFyIildID0NCgkJCXBhcnNlSW50KHNlbGVjdC5vcHRpb25zW3NlbGVjdC5zZWxlY3RlZEluZGV4XS52YWx1ZSwxMCk7DQoNCgkJdGhpcy5fbm90aWZ5Q2hhbmdlKGluc3QpOw0KCQl0aGlzLl9hZGp1c3REYXRlKHRhcmdldCk7DQoJfSwNCg0KCS8qIEFjdGlvbiBmb3Igc2VsZWN0aW5nIGEgZGF5LiAqLw0KCV9zZWxlY3REYXk6IGZ1bmN0aW9uKGlkLCBtb250aCwgeWVhciwgdGQpIHsNCgkJdmFyIGluc3QsDQoJCQl0YXJnZXQgPSAkKGlkKTsNCg0KCQlpZiAoJCh0ZCkuaGFzQ2xhc3ModGhpcy5fdW5zZWxlY3RhYmxlQ2xhc3MpIHx8IHRoaXMuX2lzRGlzYWJsZWREYXRlcGlja2VyKHRhcmdldFswXSkpIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCWluc3QgPSB0aGlzLl9nZXRJbnN0KHRhcmdldFswXSk7DQoJCWluc3Quc2VsZWN0ZWREYXkgPSBpbnN0LmN1cnJlbnREYXkgPSAkKCJhIiwgdGQpLmh0bWwoKTsNCgkJaW5zdC5zZWxlY3RlZE1vbnRoID0gaW5zdC5jdXJyZW50TW9udGggPSBtb250aDsNCgkJaW5zdC5zZWxlY3RlZFllYXIgPSBpbnN0LmN1cnJlbnRZZWFyID0geWVhcjsNCgkJdGhpcy5fc2VsZWN0RGF0ZShpZCwgdGhpcy5fZm9ybWF0RGF0ZShpbnN0LA0KCQkJaW5zdC5jdXJyZW50RGF5LCBpbnN0LmN1cnJlbnRNb250aCwgaW5zdC5jdXJyZW50WWVhcikpOw0KCX0sDQoNCgkvKiBFcmFzZSB0aGUgaW5wdXQgZmllbGQgYW5kIGhpZGUgdGhlIGRhdGUgcGlja2VyLiAqLw0KCV9jbGVhckRhdGU6IGZ1bmN0aW9uKGlkKSB7DQoJCXZhciB0YXJnZXQgPSAkKGlkKTsNCgkJdGhpcy5fc2VsZWN0RGF0ZSh0YXJnZXQsICIiKTsNCgl9LA0KDQoJLyogVXBkYXRlIHRoZSBpbnB1dCBmaWVsZCB3aXRoIHRoZSBzZWxlY3RlZCBkYXRlLiAqLw0KCV9zZWxlY3REYXRlOiBmdW5jdGlvbihpZCwgZGF0ZVN0cikgew0KCQl2YXIgb25TZWxlY3QsDQoJCQl0YXJnZXQgPSAkKGlkKSwNCgkJCWluc3QgPSB0aGlzLl9nZXRJbnN0KHRhcmdldFswXSk7DQoNCgkJZGF0ZVN0ciA9IChkYXRlU3RyICE9IG51bGwgPyBkYXRlU3RyIDogdGhpcy5fZm9ybWF0RGF0ZShpbnN0KSk7DQoJCWlmIChpbnN0LmlucHV0KSB7DQoJCQlpbnN0LmlucHV0LnZhbChkYXRlU3RyKTsNCgkJfQ0KCQl0aGlzLl91cGRhdGVBbHRlcm5hdGUoaW5zdCk7DQoNCgkJb25TZWxlY3QgPSB0aGlzLl9nZXQoaW5zdCwgIm9uU2VsZWN0Iik7DQoJCWlmIChvblNlbGVjdCkgew0KCQkJb25TZWxlY3QuYXBwbHkoKGluc3QuaW5wdXQgPyBpbnN0LmlucHV0WzBdIDogbnVsbCksIFtkYXRlU3RyLCBpbnN0XSk7ICAvLyB0cmlnZ2VyIGN1c3RvbSBjYWxsYmFjaw0KCQl9IGVsc2UgaWYgKGluc3QuaW5wdXQpIHsNCgkJCWluc3QuaW5wdXQudHJpZ2dlcigiY2hhbmdlIik7IC8vIGZpcmUgdGhlIGNoYW5nZSBldmVudA0KCQl9DQoNCgkJaWYgKGluc3QuaW5saW5lKXsNCgkJCXRoaXMuX3VwZGF0ZURhdGVwaWNrZXIoaW5zdCk7DQoJCX0gZWxzZSB7DQoJCQl0aGlzLl9oaWRlRGF0ZXBpY2tlcigpOw0KCQkJdGhpcy5fbGFzdElucHV0ID0gaW5zdC5pbnB1dFswXTsNCgkJCWlmICh0eXBlb2YoaW5zdC5pbnB1dFswXSkgIT09ICJvYmplY3QiKSB7DQoJCQkJaW5zdC5pbnB1dC5mb2N1cygpOyAvLyByZXN0b3JlIGZvY3VzDQoJCQl9DQoJCQl0aGlzLl9sYXN0SW5wdXQgPSBudWxsOw0KCQl9DQoJfSwNCg0KCS8qIFVwZGF0ZSBhbnkgYWx0ZXJuYXRlIGZpZWxkIHRvIHN5bmNocm9uaXNlIHdpdGggdGhlIG1haW4gZmllbGQuICovDQoJX3VwZGF0ZUFsdGVybmF0ZTogZnVuY3Rpb24oaW5zdCkgew0KCQl2YXIgYWx0Rm9ybWF0LCBkYXRlLCBkYXRlU3RyLA0KCQkJYWx0RmllbGQgPSB0aGlzLl9nZXQoaW5zdCwgImFsdEZpZWxkIik7DQoNCgkJaWYgKGFsdEZpZWxkKSB7IC8vIHVwZGF0ZSBhbHRlcm5hdGUgZmllbGQgdG9vDQoJCQlhbHRGb3JtYXQgPSB0aGlzLl9nZXQoaW5zdCwgImFsdEZvcm1hdCIpIHx8IHRoaXMuX2dldChpbnN0LCAiZGF0ZUZvcm1hdCIpOw0KCQkJZGF0ZSA9IHRoaXMuX2dldERhdGUoaW5zdCk7DQoJCQlkYXRlU3RyID0gdGhpcy5mb3JtYXREYXRlKGFsdEZvcm1hdCwgZGF0ZSwgdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKGluc3QpKTsNCgkJCSQoYWx0RmllbGQpLmVhY2goZnVuY3Rpb24oKSB7ICQodGhpcykudmFsKGRhdGVTdHIpOyB9KTsNCgkJfQ0KCX0sDQoNCgkvKiBTZXQgYXMgYmVmb3JlU2hvd0RheSBmdW5jdGlvbiB0byBwcmV2ZW50IHNlbGVjdGlvbiBvZiB3ZWVrZW5kcy4NCgkgKiBAcGFyYW0gIGRhdGUgIERhdGUgLSB0aGUgZGF0ZSB0byBjdXN0b21pc2UNCgkgKiBAcmV0dXJuIFtib29sZWFuLCBzdHJpbmddIC0gaXMgdGhpcyBkYXRlIHNlbGVjdGFibGU/LCB3aGF0IGlzIGl0cyBDU1MgY2xhc3M/DQoJICovDQoJbm9XZWVrZW5kczogZnVuY3Rpb24oZGF0ZSkgew0KCQl2YXIgZGF5ID0gZGF0ZS5nZXREYXkoKTsNCgkJcmV0dXJuIFsoZGF5ID4gMCAmJiBkYXkgPCA2KSwgIiJdOw0KCX0sDQoNCgkvKiBTZXQgYXMgY2FsY3VsYXRlV2VlayB0byBkZXRlcm1pbmUgdGhlIHdlZWsgb2YgdGhlIHllYXIgYmFzZWQgb24gdGhlIElTTyA4NjAxIGRlZmluaXRpb24uDQoJICogQHBhcmFtICBkYXRlICBEYXRlIC0gdGhlIGRhdGUgdG8gZ2V0IHRoZSB3ZWVrIGZvcg0KCSAqIEByZXR1cm4gIG51bWJlciAtIHRoZSBudW1iZXIgb2YgdGhlIHdlZWsgd2l0aGluIHRoZSB5ZWFyIHRoYXQgY29udGFpbnMgdGhpcyBkYXRlDQoJICovDQoJaXNvODYwMVdlZWs6IGZ1bmN0aW9uKGRhdGUpIHsNCgkJdmFyIHRpbWUsDQoJCQljaGVja0RhdGUgPSBuZXcgRGF0ZShkYXRlLmdldFRpbWUoKSk7DQoNCgkJLy8gRmluZCBUaHVyc2RheSBvZiB0aGlzIHdlZWsgc3RhcnRpbmcgb24gTW9uZGF5DQoJCWNoZWNrRGF0ZS5zZXREYXRlKGNoZWNrRGF0ZS5nZXREYXRlKCkgKyA0IC0gKGNoZWNrRGF0ZS5nZXREYXkoKSB8fCA3KSk7DQoNCgkJdGltZSA9IGNoZWNrRGF0ZS5nZXRUaW1lKCk7DQoJCWNoZWNrRGF0ZS5zZXRNb250aCgwKTsgLy8gQ29tcGFyZSB3aXRoIEphbiAxDQoJCWNoZWNrRGF0ZS5zZXREYXRlKDEpOw0KCQlyZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJvdW5kKCh0aW1lIC0gY2hlY2tEYXRlKSAvIDg2NDAwMDAwKSAvIDcpICsgMTsNCgl9LA0KDQoJLyogUGFyc2UgYSBzdHJpbmcgdmFsdWUgaW50byBhIGRhdGUgb2JqZWN0Lg0KCSAqIFNlZSBmb3JtYXREYXRlIGJlbG93IGZvciB0aGUgcG9zc2libGUgZm9ybWF0cy4NCgkgKg0KCSAqIEBwYXJhbSAgZm9ybWF0IHN0cmluZyAtIHRoZSBleHBlY3RlZCBmb3JtYXQgb2YgdGhlIGRhdGUNCgkgKiBAcGFyYW0gIHZhbHVlIHN0cmluZyAtIHRoZSBkYXRlIGluIHRoZSBhYm92ZSBmb3JtYXQNCgkgKiBAcGFyYW0gIHNldHRpbmdzIE9iamVjdCAtIGF0dHJpYnV0ZXMgaW5jbHVkZToNCgkgKgkJCQkJc2hvcnRZZWFyQ3V0b2ZmICBudW1iZXIgLSB0aGUgY3V0b2ZmIHllYXIgZm9yIGRldGVybWluaW5nIHRoZSBjZW50dXJ5IChvcHRpb25hbCkNCgkgKgkJCQkJZGF5TmFtZXNTaG9ydAlzdHJpbmdbN10gLSBhYmJyZXZpYXRlZCBuYW1lcyBvZiB0aGUgZGF5cyBmcm9tIFN1bmRheSAob3B0aW9uYWwpDQoJICoJCQkJCWRheU5hbWVzCQlzdHJpbmdbN10gLSBuYW1lcyBvZiB0aGUgZGF5cyBmcm9tIFN1bmRheSAob3B0aW9uYWwpDQoJICoJCQkJCW1vbnRoTmFtZXNTaG9ydCBzdHJpbmdbMTJdIC0gYWJicmV2aWF0ZWQgbmFtZXMgb2YgdGhlIG1vbnRocyAob3B0aW9uYWwpDQoJICoJCQkJCW1vbnRoTmFtZXMJCXN0cmluZ1sxMl0gLSBuYW1lcyBvZiB0aGUgbW9udGhzIChvcHRpb25hbCkNCgkgKiBAcmV0dXJuICBEYXRlIC0gdGhlIGV4dHJhY3RlZCBkYXRlIHZhbHVlIG9yIG51bGwgaWYgdmFsdWUgaXMgYmxhbmsNCgkgKi8NCglwYXJzZURhdGU6IGZ1bmN0aW9uIChmb3JtYXQsIHZhbHVlLCBzZXR0aW5ncykgew0KCQlpZiAoZm9ybWF0ID09IG51bGwgfHwgdmFsdWUgPT0gbnVsbCkgew0KCQkJdGhyb3cgIkludmFsaWQgYXJndW1lbnRzIjsNCgkJfQ0KDQoJCXZhbHVlID0gKHR5cGVvZiB2YWx1ZSA9PT0gIm9iamVjdCIgPyB2YWx1ZS50b1N0cmluZygpIDogdmFsdWUgKyAiIik7DQoJCWlmICh2YWx1ZSA9PT0gIiIpIHsNCgkJCXJldHVybiBudWxsOw0KCQl9DQoNCgkJdmFyIGlGb3JtYXQsIGRpbSwgZXh0cmEsDQoJCQlpVmFsdWUgPSAwLA0KCQkJc2hvcnRZZWFyQ3V0b2ZmVGVtcCA9IChzZXR0aW5ncyA/IHNldHRpbmdzLnNob3J0WWVhckN1dG9mZiA6IG51bGwpIHx8IHRoaXMuX2RlZmF1bHRzLnNob3J0WWVhckN1dG9mZiwNCgkJCXNob3J0WWVhckN1dG9mZiA9ICh0eXBlb2Ygc2hvcnRZZWFyQ3V0b2ZmVGVtcCAhPT0gInN0cmluZyIgPyBzaG9ydFllYXJDdXRvZmZUZW1wIDoNCgkJCQluZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkgJSAxMDAgKyBwYXJzZUludChzaG9ydFllYXJDdXRvZmZUZW1wLCAxMCkpLA0KCQkJZGF5TmFtZXNTaG9ydCA9IChzZXR0aW5ncyA/IHNldHRpbmdzLmRheU5hbWVzU2hvcnQgOiBudWxsKSB8fCB0aGlzLl9kZWZhdWx0cy5kYXlOYW1lc1Nob3J0LA0KCQkJZGF5TmFtZXMgPSAoc2V0dGluZ3MgPyBzZXR0aW5ncy5kYXlOYW1lcyA6IG51bGwpIHx8IHRoaXMuX2RlZmF1bHRzLmRheU5hbWVzLA0KCQkJbW9udGhOYW1lc1Nob3J0ID0gKHNldHRpbmdzID8gc2V0dGluZ3MubW9udGhOYW1lc1Nob3J0IDogbnVsbCkgfHwgdGhpcy5fZGVmYXVsdHMubW9udGhOYW1lc1Nob3J0LA0KCQkJbW9udGhOYW1lcyA9IChzZXR0aW5ncyA/IHNldHRpbmdzLm1vbnRoTmFtZXMgOiBudWxsKSB8fCB0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzLA0KCQkJeWVhciA9IC0xLA0KCQkJbW9udGggPSAtMSwNCgkJCWRheSA9IC0xLA0KCQkJZG95ID0gLTEsDQoJCQlsaXRlcmFsID0gZmFsc2UsDQoJCQlkYXRlLA0KCQkJLy8gQ2hlY2sgd2hldGhlciBhIGZvcm1hdCBjaGFyYWN0ZXIgaXMgZG91YmxlZA0KCQkJbG9va0FoZWFkID0gZnVuY3Rpb24obWF0Y2gpIHsNCgkJCQl2YXIgbWF0Y2hlcyA9IChpRm9ybWF0ICsgMSA8IGZvcm1hdC5sZW5ndGggJiYgZm9ybWF0LmNoYXJBdChpRm9ybWF0ICsgMSkgPT09IG1hdGNoKTsNCgkJCQlpZiAobWF0Y2hlcykgew0KCQkJCQlpRm9ybWF0Kys7DQoJCQkJfQ0KCQkJCXJldHVybiBtYXRjaGVzOw0KCQkJfSwNCgkJCS8vIEV4dHJhY3QgYSBudW1iZXIgZnJvbSB0aGUgc3RyaW5nIHZhbHVlDQoJCQlnZXROdW1iZXIgPSBmdW5jdGlvbihtYXRjaCkgew0KCQkJCXZhciBpc0RvdWJsZWQgPSBsb29rQWhlYWQobWF0Y2gpLA0KCQkJCQlzaXplID0gKG1hdGNoID09PSAiQCIgPyAxNCA6IChtYXRjaCA9PT0gIiEiID8gMjAgOg0KCQkJCQkobWF0Y2ggPT09ICJ5IiAmJiBpc0RvdWJsZWQgPyA0IDogKG1hdGNoID09PSAibyIgPyAzIDogMikpKSksDQoJCQkJCW1pblNpemUgPSAobWF0Y2ggPT09ICJ5IiA/IHNpemUgOiAxKSwNCgkJCQkJZGlnaXRzID0gbmV3IFJlZ0V4cCgiXlxcZHsiICsgbWluU2l6ZSArICIsIiArIHNpemUgKyAifSIpLA0KCQkJCQludW0gPSB2YWx1ZS5zdWJzdHJpbmcoaVZhbHVlKS5tYXRjaChkaWdpdHMpOw0KCQkJCWlmICghbnVtKSB7DQoJCQkJCXRocm93ICJNaXNzaW5nIG51bWJlciBhdCBwb3NpdGlvbiAiICsgaVZhbHVlOw0KCQkJCX0NCgkJCQlpVmFsdWUgKz0gbnVtWzBdLmxlbmd0aDsNCgkJCQlyZXR1cm4gcGFyc2VJbnQobnVtWzBdLCAxMCk7DQoJCQl9LA0KCQkJLy8gRXh0cmFjdCBhIG5hbWUgZnJvbSB0aGUgc3RyaW5nIHZhbHVlIGFuZCBjb252ZXJ0IHRvIGFuIGluZGV4DQoJCQlnZXROYW1lID0gZnVuY3Rpb24obWF0Y2gsIHNob3J0TmFtZXMsIGxvbmdOYW1lcykgew0KCQkJCXZhciBpbmRleCA9IC0xLA0KCQkJCQluYW1lcyA9ICQubWFwKGxvb2tBaGVhZChtYXRjaCkgPyBsb25nTmFtZXMgOiBzaG9ydE5hbWVzLCBmdW5jdGlvbiAodiwgaykgew0KCQkJCQkJcmV0dXJuIFsgW2ssIHZdIF07DQoJCQkJCX0pLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsNCgkJCQkJCXJldHVybiAtKGFbMV0ubGVuZ3RoIC0gYlsxXS5sZW5ndGgpOw0KCQkJCQl9KTsNCg0KCQkJCSQuZWFjaChuYW1lcywgZnVuY3Rpb24gKGksIHBhaXIpIHsNCgkJCQkJdmFyIG5hbWUgPSBwYWlyWzFdOw0KCQkJCQlpZiAodmFsdWUuc3Vic3RyKGlWYWx1ZSwgbmFtZS5sZW5ndGgpLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUudG9Mb3dlckNhc2UoKSkgew0KCQkJCQkJaW5kZXggPSBwYWlyWzBdOw0KCQkJCQkJaVZhbHVlICs9IG5hbWUubGVuZ3RoOw0KCQkJCQkJcmV0dXJuIGZhbHNlOw0KCQkJCQl9DQoJCQkJfSk7DQoJCQkJaWYgKGluZGV4ICE9PSAtMSkgew0KCQkJCQlyZXR1cm4gaW5kZXggKyAxOw0KCQkJCX0gZWxzZSB7DQoJCQkJCXRocm93ICJVbmtub3duIG5hbWUgYXQgcG9zaXRpb24gIiArIGlWYWx1ZTsNCgkJCQl9DQoJCQl9LA0KCQkJLy8gQ29uZmlybSB0aGF0IGEgbGl0ZXJhbCBjaGFyYWN0ZXIgbWF0Y2hlcyB0aGUgc3RyaW5nIHZhbHVlDQoJCQljaGVja0xpdGVyYWwgPSBmdW5jdGlvbigpIHsNCgkJCQlpZiAodmFsdWUuY2hhckF0KGlWYWx1ZSkgIT09IGZvcm1hdC5jaGFyQXQoaUZvcm1hdCkpIHsNCgkJCQkJdGhyb3cgIlVuZXhwZWN0ZWQgbGl0ZXJhbCBhdCBwb3NpdGlvbiAiICsgaVZhbHVlOw0KCQkJCX0NCgkJCQlpVmFsdWUrKzsNCgkJCX07DQoNCgkJZm9yIChpRm9ybWF0ID0gMDsgaUZvcm1hdCA8IGZvcm1hdC5sZW5ndGg7IGlGb3JtYXQrKykgew0KCQkJaWYgKGxpdGVyYWwpIHsNCgkJCQlpZiAoZm9ybWF0LmNoYXJBdChpRm9ybWF0KSA9PT0gIiciICYmICFsb29rQWhlYWQoIiciKSkgew0KCQkJCQlsaXRlcmFsID0gZmFsc2U7DQoJCQkJfSBlbHNlIHsNCgkJCQkJY2hlY2tMaXRlcmFsKCk7DQoJCQkJfQ0KCQkJfSBlbHNlIHsNCgkJCQlzd2l0Y2ggKGZvcm1hdC5jaGFyQXQoaUZvcm1hdCkpIHsNCgkJCQkJY2FzZSAiZCI6DQoJCQkJCQlkYXkgPSBnZXROdW1iZXIoImQiKTsNCgkJCQkJCWJyZWFrOw0KCQkJCQljYXNlICJEIjoNCgkJCQkJCWdldE5hbWUoIkQiLCBkYXlOYW1lc1Nob3J0LCBkYXlOYW1lcyk7DQoJCQkJCQlicmVhazsNCgkJCQkJY2FzZSAibyI6DQoJCQkJCQlkb3kgPSBnZXROdW1iZXIoIm8iKTsNCgkJCQkJCWJyZWFrOw0KCQkJCQljYXNlICJtIjoNCgkJCQkJCW1vbnRoID0gZ2V0TnVtYmVyKCJtIik7DQoJCQkJCQlicmVhazsNCgkJCQkJY2FzZSAiTSI6DQoJCQkJCQltb250aCA9IGdldE5hbWUoIk0iLCBtb250aE5hbWVzU2hvcnQsIG1vbnRoTmFtZXMpOw0KCQkJCQkJYnJlYWs7DQoJCQkJCWNhc2UgInkiOg0KCQkJCQkJeWVhciA9IGdldE51bWJlcigieSIpOw0KCQkJCQkJYnJlYWs7DQoJCQkJCWNhc2UgIkAiOg0KCQkJCQkJZGF0ZSA9IG5ldyBEYXRlKGdldE51bWJlcigiQCIpKTsNCgkJCQkJCXllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7DQoJCQkJCQltb250aCA9IGRhdGUuZ2V0TW9udGgoKSArIDE7DQoJCQkJCQlkYXkgPSBkYXRlLmdldERhdGUoKTsNCgkJCQkJCWJyZWFrOw0KCQkJCQljYXNlICIhIjoNCgkJCQkJCWRhdGUgPSBuZXcgRGF0ZSgoZ2V0TnVtYmVyKCIhIikgLSB0aGlzLl90aWNrc1RvMTk3MCkgLyAxMDAwMCk7DQoJCQkJCQl5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOw0KCQkJCQkJbW9udGggPSBkYXRlLmdldE1vbnRoKCkgKyAxOw0KCQkJCQkJZGF5ID0gZGF0ZS5nZXREYXRlKCk7DQoJCQkJCQlicmVhazsNCgkJCQkJY2FzZSAiJyI6DQoJCQkJCQlpZiAobG9va0FoZWFkKCInIikpew0KCQkJCQkJCWNoZWNrTGl0ZXJhbCgpOw0KCQkJCQkJfSBlbHNlIHsNCgkJCQkJCQlsaXRlcmFsID0gdHJ1ZTsNCgkJCQkJCX0NCgkJCQkJCWJyZWFrOw0KCQkJCQlkZWZhdWx0Og0KCQkJCQkJY2hlY2tMaXRlcmFsKCk7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoNCgkJaWYgKGlWYWx1ZSA8IHZhbHVlLmxlbmd0aCl7DQoJCQlleHRyYSA9IHZhbHVlLnN1YnN0cihpVmFsdWUpOw0KCQkJaWYgKCEvXlxzKy8udGVzdChleHRyYSkpIHsNCgkJCQl0aHJvdyAiRXh0cmEvdW5wYXJzZWQgY2hhcmFjdGVycyBmb3VuZCBpbiBkYXRlOiAiICsgZXh0cmE7DQoJCQl9DQoJCX0NCg0KCQlpZiAoeWVhciA9PT0gLTEpIHsNCgkJCXllYXIgPSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCk7DQoJCX0gZWxzZSBpZiAoeWVhciA8IDEwMCkgew0KCQkJeWVhciArPSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkgLSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkgJSAxMDAgKw0KCQkJCSh5ZWFyIDw9IHNob3J0WWVhckN1dG9mZiA/IDAgOiAtMTAwKTsNCgkJfQ0KDQoJCWlmIChkb3kgPiAtMSkgew0KCQkJbW9udGggPSAxOw0KCQkJZGF5ID0gZG95Ow0KCQkJZG8gew0KCQkJCWRpbSA9IHRoaXMuX2dldERheXNJbk1vbnRoKHllYXIsIG1vbnRoIC0gMSk7DQoJCQkJaWYgKGRheSA8PSBkaW0pIHsNCgkJCQkJYnJlYWs7DQoJCQkJfQ0KCQkJCW1vbnRoKys7DQoJCQkJZGF5IC09IGRpbTsNCgkJCX0gd2hpbGUgKHRydWUpOw0KCQl9DQoNCgkJZGF0ZSA9IHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKHllYXIsIG1vbnRoIC0gMSwgZGF5KSk7DQoJCWlmIChkYXRlLmdldEZ1bGxZZWFyKCkgIT09IHllYXIgfHwgZGF0ZS5nZXRNb250aCgpICsgMSAhPT0gbW9udGggfHwgZGF0ZS5nZXREYXRlKCkgIT09IGRheSkgew0KCQkJdGhyb3cgIkludmFsaWQgZGF0ZSI7IC8vIEUuZy4gMzEvMDIvMDANCgkJfQ0KCQlyZXR1cm4gZGF0ZTsNCgl9LA0KDQoJLyogU3RhbmRhcmQgZGF0ZSBmb3JtYXRzLiAqLw0KCUFUT006ICJ5eS1tbS1kZCIsIC8vIFJGQyAzMzM5IChJU08gODYwMSkNCglDT09LSUU6ICJELCBkZCBNIHl5IiwNCglJU09fODYwMTogInl5LW1tLWRkIiwNCglSRkNfODIyOiAiRCwgZCBNIHkiLA0KCVJGQ184NTA6ICJERCwgZGQtTS15IiwNCglSRkNfMTAzNjogIkQsIGQgTSB5IiwNCglSRkNfMTEyMzogIkQsIGQgTSB5eSIsDQoJUkZDXzI4MjI6ICJELCBkIE0geXkiLA0KCVJTUzogIkQsIGQgTSB5IiwgLy8gUkZDIDgyMg0KCVRJQ0tTOiAiISIsDQoJVElNRVNUQU1QOiAiQCIsDQoJVzNDOiAieXktbW0tZGQiLCAvLyBJU08gODYwMQ0KDQoJX3RpY2tzVG8xOTcwOiAoKCgxOTcwIC0gMSkgKiAzNjUgKyBNYXRoLmZsb29yKDE5NzAgLyA0KSAtIE1hdGguZmxvb3IoMTk3MCAvIDEwMCkgKw0KCQlNYXRoLmZsb29yKDE5NzAgLyA0MDApKSAqIDI0ICogNjAgKiA2MCAqIDEwMDAwMDAwKSwNCg0KCS8qIEZvcm1hdCBhIGRhdGUgb2JqZWN0IGludG8gYSBzdHJpbmcgdmFsdWUuDQoJICogVGhlIGZvcm1hdCBjYW4gYmUgY29tYmluYXRpb25zIG9mIHRoZSBmb2xsb3dpbmc6DQoJICogZCAgLSBkYXkgb2YgbW9udGggKG5vIGxlYWRpbmcgemVybykNCgkgKiBkZCAtIGRheSBvZiBtb250aCAodHdvIGRpZ2l0KQ0KCSAqIG8gIC0gZGF5IG9mIHllYXIgKG5vIGxlYWRpbmcgemVyb3MpDQoJICogb28gLSBkYXkgb2YgeWVhciAodGhyZWUgZGlnaXQpDQoJICogRCAgLSBkYXkgbmFtZSBzaG9ydA0KCSAqIEREIC0gZGF5IG5hbWUgbG9uZw0KCSAqIG0gIC0gbW9udGggb2YgeWVhciAobm8gbGVhZGluZyB6ZXJvKQ0KCSAqIG1tIC0gbW9udGggb2YgeWVhciAodHdvIGRpZ2l0KQ0KCSAqIE0gIC0gbW9udGggbmFtZSBzaG9ydA0KCSAqIE1NIC0gbW9udGggbmFtZSBsb25nDQoJICogeSAgLSB5ZWFyICh0d28gZGlnaXQpDQoJICogeXkgLSB5ZWFyIChmb3VyIGRpZ2l0KQ0KCSAqIEAgLSBVbml4IHRpbWVzdGFtcCAobXMgc2luY2UgMDEvMDEvMTk3MCkNCgkgKiAhIC0gV2luZG93cyB0aWNrcyAoMTAwbnMgc2luY2UgMDEvMDEvMDAwMSkNCgkgKiAiLi4uIiAtIGxpdGVyYWwgdGV4dA0KCSAqICcnIC0gc2luZ2xlIHF1b3RlDQoJICoNCgkgKiBAcGFyYW0gIGZvcm1hdCBzdHJpbmcgLSB0aGUgZGVzaXJlZCBmb3JtYXQgb2YgdGhlIGRhdGUNCgkgKiBAcGFyYW0gIGRhdGUgRGF0ZSAtIHRoZSBkYXRlIHZhbHVlIHRvIGZvcm1hdA0KCSAqIEBwYXJhbSAgc2V0dGluZ3MgT2JqZWN0IC0gYXR0cmlidXRlcyBpbmNsdWRlOg0KCSAqCQkJCQlkYXlOYW1lc1Nob3J0CXN0cmluZ1s3XSAtIGFiYnJldmlhdGVkIG5hbWVzIG9mIHRoZSBkYXlzIGZyb20gU3VuZGF5IChvcHRpb25hbCkNCgkgKgkJCQkJZGF5TmFtZXMJCXN0cmluZ1s3XSAtIG5hbWVzIG9mIHRoZSBkYXlzIGZyb20gU3VuZGF5IChvcHRpb25hbCkNCgkgKgkJCQkJbW9udGhOYW1lc1Nob3J0IHN0cmluZ1sxMl0gLSBhYmJyZXZpYXRlZCBuYW1lcyBvZiB0aGUgbW9udGhzIChvcHRpb25hbCkNCgkgKgkJCQkJbW9udGhOYW1lcwkJc3RyaW5nWzEyXSAtIG5hbWVzIG9mIHRoZSBtb250aHMgKG9wdGlvbmFsKQ0KCSAqIEByZXR1cm4gIHN0cmluZyAtIHRoZSBkYXRlIGluIHRoZSBhYm92ZSBmb3JtYXQNCgkgKi8NCglmb3JtYXREYXRlOiBmdW5jdGlvbiAoZm9ybWF0LCBkYXRlLCBzZXR0aW5ncykgew0KCQlpZiAoIWRhdGUpIHsNCgkJCXJldHVybiAiIjsNCgkJfQ0KDQoJCXZhciBpRm9ybWF0LA0KCQkJZGF5TmFtZXNTaG9ydCA9IChzZXR0aW5ncyA/IHNldHRpbmdzLmRheU5hbWVzU2hvcnQgOiBudWxsKSB8fCB0aGlzLl9kZWZhdWx0cy5kYXlOYW1lc1Nob3J0LA0KCQkJZGF5TmFtZXMgPSAoc2V0dGluZ3MgPyBzZXR0aW5ncy5kYXlOYW1lcyA6IG51bGwpIHx8IHRoaXMuX2RlZmF1bHRzLmRheU5hbWVzLA0KCQkJbW9udGhOYW1lc1Nob3J0ID0gKHNldHRpbmdzID8gc2V0dGluZ3MubW9udGhOYW1lc1Nob3J0IDogbnVsbCkgfHwgdGhpcy5fZGVmYXVsdHMubW9udGhOYW1lc1Nob3J0LA0KCQkJbW9udGhOYW1lcyA9IChzZXR0aW5ncyA/IHNldHRpbmdzLm1vbnRoTmFtZXMgOiBudWxsKSB8fCB0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzLA0KCQkJLy8gQ2hlY2sgd2hldGhlciBhIGZvcm1hdCBjaGFyYWN0ZXIgaXMgZG91YmxlZA0KCQkJbG9va0FoZWFkID0gZnVuY3Rpb24obWF0Y2gpIHsNCgkJCQl2YXIgbWF0Y2hlcyA9IChpRm9ybWF0ICsgMSA8IGZvcm1hdC5sZW5ndGggJiYgZm9ybWF0LmNoYXJBdChpRm9ybWF0ICsgMSkgPT09IG1hdGNoKTsNCgkJCQlpZiAobWF0Y2hlcykgew0KCQkJCQlpRm9ybWF0Kys7DQoJCQkJfQ0KCQkJCXJldHVybiBtYXRjaGVzOw0KCQkJfSwNCgkJCS8vIEZvcm1hdCBhIG51bWJlciwgd2l0aCBsZWFkaW5nIHplcm8gaWYgbmVjZXNzYXJ5DQoJCQlmb3JtYXROdW1iZXIgPSBmdW5jdGlvbihtYXRjaCwgdmFsdWUsIGxlbikgew0KCQkJCXZhciBudW0gPSAiIiArIHZhbHVlOw0KCQkJCWlmIChsb29rQWhlYWQobWF0Y2gpKSB7DQoJCQkJCXdoaWxlIChudW0ubGVuZ3RoIDwgbGVuKSB7DQoJCQkJCQludW0gPSAiMCIgKyBudW07DQoJCQkJCX0NCgkJCQl9DQoJCQkJcmV0dXJuIG51bTsNCgkJCX0sDQoJCQkvLyBGb3JtYXQgYSBuYW1lLCBzaG9ydCBvciBsb25nIGFzIHJlcXVlc3RlZA0KCQkJZm9ybWF0TmFtZSA9IGZ1bmN0aW9uKG1hdGNoLCB2YWx1ZSwgc2hvcnROYW1lcywgbG9uZ05hbWVzKSB7DQoJCQkJcmV0dXJuIChsb29rQWhlYWQobWF0Y2gpID8gbG9uZ05hbWVzW3ZhbHVlXSA6IHNob3J0TmFtZXNbdmFsdWVdKTsNCgkJCX0sDQoJCQlvdXRwdXQgPSAiIiwNCgkJCWxpdGVyYWwgPSBmYWxzZTsNCg0KCQlpZiAoZGF0ZSkgew0KCQkJZm9yIChpRm9ybWF0ID0gMDsgaUZvcm1hdCA8IGZvcm1hdC5sZW5ndGg7IGlGb3JtYXQrKykgew0KCQkJCWlmIChsaXRlcmFsKSB7DQoJCQkJCWlmIChmb3JtYXQuY2hhckF0KGlGb3JtYXQpID09PSAiJyIgJiYgIWxvb2tBaGVhZCgiJyIpKSB7DQoJCQkJCQlsaXRlcmFsID0gZmFsc2U7DQoJCQkJCX0gZWxzZSB7DQoJCQkJCQlvdXRwdXQgKz0gZm9ybWF0LmNoYXJBdChpRm9ybWF0KTsNCgkJCQkJfQ0KCQkJCX0gZWxzZSB7DQoJCQkJCXN3aXRjaCAoZm9ybWF0LmNoYXJBdChpRm9ybWF0KSkgew0KCQkJCQkJY2FzZSAiZCI6DQoJCQkJCQkJb3V0cHV0ICs9IGZvcm1hdE51bWJlcigiZCIsIGRhdGUuZ2V0RGF0ZSgpLCAyKTsNCgkJCQkJCQlicmVhazsNCgkJCQkJCWNhc2UgIkQiOg0KCQkJCQkJCW91dHB1dCArPSBmb3JtYXROYW1lKCJEIiwgZGF0ZS5nZXREYXkoKSwgZGF5TmFtZXNTaG9ydCwgZGF5TmFtZXMpOw0KCQkJCQkJCWJyZWFrOw0KCQkJCQkJY2FzZSAibyI6DQoJCQkJCQkJb3V0cHV0ICs9IGZvcm1hdE51bWJlcigibyIsDQoJCQkJCQkJCU1hdGgucm91bmQoKG5ldyBEYXRlKGRhdGUuZ2V0RnVsbFllYXIoKSwgZGF0ZS5nZXRNb250aCgpLCBkYXRlLmdldERhdGUoKSkuZ2V0VGltZSgpIC0gbmV3IERhdGUoZGF0ZS5nZXRGdWxsWWVhcigpLCAwLCAwKS5nZXRUaW1lKCkpIC8gODY0MDAwMDApLCAzKTsNCgkJCQkJCQlicmVhazsNCgkJCQkJCWNhc2UgIm0iOg0KCQkJCQkJCW91dHB1dCArPSBmb3JtYXROdW1iZXIoIm0iLCBkYXRlLmdldE1vbnRoKCkgKyAxLCAyKTsNCgkJCQkJCQlicmVhazsNCgkJCQkJCWNhc2UgIk0iOg0KCQkJCQkJCW91dHB1dCArPSBmb3JtYXROYW1lKCJNIiwgZGF0ZS5nZXRNb250aCgpLCBtb250aE5hbWVzU2hvcnQsIG1vbnRoTmFtZXMpOw0KCQkJCQkJCWJyZWFrOw0KCQkJCQkJY2FzZSAieSI6DQoJCQkJCQkJb3V0cHV0ICs9IChsb29rQWhlYWQoInkiKSA/IGRhdGUuZ2V0RnVsbFllYXIoKSA6DQoJCQkJCQkJCShkYXRlLmdldFllYXIoKSAlIDEwMCA8IDEwID8gIjAiIDogIiIpICsgZGF0ZS5nZXRZZWFyKCkgJSAxMDApOw0KCQkJCQkJCWJyZWFrOw0KCQkJCQkJY2FzZSAiQCI6DQoJCQkJCQkJb3V0cHV0ICs9IGRhdGUuZ2V0VGltZSgpOw0KCQkJCQkJCWJyZWFrOw0KCQkJCQkJY2FzZSAiISI6DQoJCQkJCQkJb3V0cHV0ICs9IGRhdGUuZ2V0VGltZSgpICogMTAwMDAgKyB0aGlzLl90aWNrc1RvMTk3MDsNCgkJCQkJCQlicmVhazsNCgkJCQkJCWNhc2UgIiciOg0KCQkJCQkJCWlmIChsb29rQWhlYWQoIiciKSkgew0KCQkJCQkJCQlvdXRwdXQgKz0gIiciOw0KCQkJCQkJCX0gZWxzZSB7DQoJCQkJCQkJCWxpdGVyYWwgPSB0cnVlOw0KCQkJCQkJCX0NCgkJCQkJCQlicmVhazsNCgkJCQkJCWRlZmF1bHQ6DQoJCQkJCQkJb3V0cHV0ICs9IGZvcm1hdC5jaGFyQXQoaUZvcm1hdCk7DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0NCgkJcmV0dXJuIG91dHB1dDsNCgl9LA0KDQoJLyogRXh0cmFjdCBhbGwgcG9zc2libGUgY2hhcmFjdGVycyBmcm9tIHRoZSBkYXRlIGZvcm1hdC4gKi8NCglfcG9zc2libGVDaGFyczogZnVuY3Rpb24gKGZvcm1hdCkgew0KCQl2YXIgaUZvcm1hdCwNCgkJCWNoYXJzID0gIiIsDQoJCQlsaXRlcmFsID0gZmFsc2UsDQoJCQkvLyBDaGVjayB3aGV0aGVyIGEgZm9ybWF0IGNoYXJhY3RlciBpcyBkb3VibGVkDQoJCQlsb29rQWhlYWQgPSBmdW5jdGlvbihtYXRjaCkgew0KCQkJCXZhciBtYXRjaGVzID0gKGlGb3JtYXQgKyAxIDwgZm9ybWF0Lmxlbmd0aCAmJiBmb3JtYXQuY2hhckF0KGlGb3JtYXQgKyAxKSA9PT0gbWF0Y2gpOw0KCQkJCWlmIChtYXRjaGVzKSB7DQoJCQkJCWlGb3JtYXQrKzsNCgkJCQl9DQoJCQkJcmV0dXJuIG1hdGNoZXM7DQoJCQl9Ow0KDQoJCWZvciAoaUZvcm1hdCA9IDA7IGlGb3JtYXQgPCBmb3JtYXQubGVuZ3RoOyBpRm9ybWF0KyspIHsNCgkJCWlmIChsaXRlcmFsKSB7DQoJCQkJaWYgKGZvcm1hdC5jaGFyQXQoaUZvcm1hdCkgPT09ICInIiAmJiAhbG9va0FoZWFkKCInIikpIHsNCgkJCQkJbGl0ZXJhbCA9IGZhbHNlOw0KCQkJCX0gZWxzZSB7DQoJCQkJCWNoYXJzICs9IGZvcm1hdC5jaGFyQXQoaUZvcm1hdCk7DQoJCQkJfQ0KCQkJfSBlbHNlIHsNCgkJCQlzd2l0Y2ggKGZvcm1hdC5jaGFyQXQoaUZvcm1hdCkpIHsNCgkJCQkJY2FzZSAiZCI6IGNhc2UgIm0iOiBjYXNlICJ5IjogY2FzZSAiQCI6DQoJCQkJCQljaGFycyArPSAiMDEyMzQ1Njc4OSI7DQoJCQkJCQlicmVhazsNCgkJCQkJY2FzZSAiRCI6IGNhc2UgIk0iOg0KCQkJCQkJcmV0dXJuIG51bGw7IC8vIEFjY2VwdCBhbnl0aGluZw0KCQkJCQljYXNlICInIjoNCgkJCQkJCWlmIChsb29rQWhlYWQoIiciKSkgew0KCQkJCQkJCWNoYXJzICs9ICInIjsNCgkJCQkJCX0gZWxzZSB7DQoJCQkJCQkJbGl0ZXJhbCA9IHRydWU7DQoJCQkJCQl9DQoJCQkJCQlicmVhazsNCgkJCQkJZGVmYXVsdDoNCgkJCQkJCWNoYXJzICs9IGZvcm1hdC5jaGFyQXQoaUZvcm1hdCk7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJCXJldHVybiBjaGFyczsNCgl9LA0KDQoJLyogR2V0IGEgc2V0dGluZyB2YWx1ZSwgZGVmYXVsdGluZyBpZiBuZWNlc3NhcnkuICovDQoJX2dldDogZnVuY3Rpb24oaW5zdCwgbmFtZSkgew0KCQlyZXR1cm4gaW5zdC5zZXR0aW5nc1tuYW1lXSAhPT0gdW5kZWZpbmVkID8NCgkJCWluc3Quc2V0dGluZ3NbbmFtZV0gOiB0aGlzLl9kZWZhdWx0c1tuYW1lXTsNCgl9LA0KDQoJLyogUGFyc2UgZXhpc3RpbmcgZGF0ZSBhbmQgaW5pdGlhbGlzZSBkYXRlIHBpY2tlci4gKi8NCglfc2V0RGF0ZUZyb21GaWVsZDogZnVuY3Rpb24oaW5zdCwgbm9EZWZhdWx0KSB7DQoJCWlmIChpbnN0LmlucHV0LnZhbCgpID09PSBpbnN0Lmxhc3RWYWwpIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCXZhciBkYXRlRm9ybWF0ID0gdGhpcy5fZ2V0KGluc3QsICJkYXRlRm9ybWF0IiksDQoJCQlkYXRlcyA9IGluc3QubGFzdFZhbCA9IGluc3QuaW5wdXQgPyBpbnN0LmlucHV0LnZhbCgpIDogbnVsbCwNCgkJCWRlZmF1bHREYXRlID0gdGhpcy5fZ2V0RGVmYXVsdERhdGUoaW5zdCksDQoJCQlkYXRlID0gZGVmYXVsdERhdGUsDQoJCQlzZXR0aW5ncyA9IHRoaXMuX2dldEZvcm1hdENvbmZpZyhpbnN0KTsNCg0KCQl0cnkgew0KCQkJZGF0ZSA9IHRoaXMucGFyc2VEYXRlKGRhdGVGb3JtYXQsIGRhdGVzLCBzZXR0aW5ncykgfHwgZGVmYXVsdERhdGU7DQoJCX0gY2F0Y2ggKGV2ZW50KSB7DQoJCQlkYXRlcyA9IChub0RlZmF1bHQgPyAiIiA6IGRhdGVzKTsNCgkJfQ0KCQlpbnN0LnNlbGVjdGVkRGF5ID0gZGF0ZS5nZXREYXRlKCk7DQoJCWluc3QuZHJhd01vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoID0gZGF0ZS5nZXRNb250aCgpOw0KCQlpbnN0LmRyYXdZZWFyID0gaW5zdC5zZWxlY3RlZFllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7DQoJCWluc3QuY3VycmVudERheSA9IChkYXRlcyA/IGRhdGUuZ2V0RGF0ZSgpIDogMCk7DQoJCWluc3QuY3VycmVudE1vbnRoID0gKGRhdGVzID8gZGF0ZS5nZXRNb250aCgpIDogMCk7DQoJCWluc3QuY3VycmVudFllYXIgPSAoZGF0ZXMgPyBkYXRlLmdldEZ1bGxZZWFyKCkgOiAwKTsNCgkJdGhpcy5fYWRqdXN0SW5zdERhdGUoaW5zdCk7DQoJfSwNCg0KCS8qIFJldHJpZXZlIHRoZSBkZWZhdWx0IGRhdGUgc2hvd24gb24gb3BlbmluZy4gKi8NCglfZ2V0RGVmYXVsdERhdGU6IGZ1bmN0aW9uKGluc3QpIHsNCgkJcmV0dXJuIHRoaXMuX3Jlc3RyaWN0TWluTWF4KGluc3QsDQoJCQl0aGlzLl9kZXRlcm1pbmVEYXRlKGluc3QsIHRoaXMuX2dldChpbnN0LCAiZGVmYXVsdERhdGUiKSwgbmV3IERhdGUoKSkpOw0KCX0sDQoNCgkvKiBBIGRhdGUgbWF5IGJlIHNwZWNpZmllZCBhcyBhbiBleGFjdCB2YWx1ZSBvciBhIHJlbGF0aXZlIG9uZS4gKi8NCglfZGV0ZXJtaW5lRGF0ZTogZnVuY3Rpb24oaW5zdCwgZGF0ZSwgZGVmYXVsdERhdGUpIHsNCgkJdmFyIG9mZnNldE51bWVyaWMgPSBmdW5jdGlvbihvZmZzZXQpIHsNCgkJCQl2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7DQoJCQkJZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgb2Zmc2V0KTsNCgkJCQlyZXR1cm4gZGF0ZTsNCgkJCX0sDQoJCQlvZmZzZXRTdHJpbmcgPSBmdW5jdGlvbihvZmZzZXQpIHsNCgkJCQl0cnkgew0KCQkJCQlyZXR1cm4gJC5kYXRlcGlja2VyLnBhcnNlRGF0ZSgkLmRhdGVwaWNrZXIuX2dldChpbnN0LCAiZGF0ZUZvcm1hdCIpLA0KCQkJCQkJb2Zmc2V0LCAkLmRhdGVwaWNrZXIuX2dldEZvcm1hdENvbmZpZyhpbnN0KSk7DQoJCQkJfQ0KCQkJCWNhdGNoIChlKSB7DQoJCQkJCS8vIElnbm9yZQ0KCQkJCX0NCg0KCQkJCXZhciBkYXRlID0gKG9mZnNldC50b0xvd2VyQ2FzZSgpLm1hdGNoKC9eYy8pID8NCgkJCQkJJC5kYXRlcGlja2VyLl9nZXREYXRlKGluc3QpIDogbnVsbCkgfHwgbmV3IERhdGUoKSwNCgkJCQkJeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKSwNCgkJCQkJbW9udGggPSBkYXRlLmdldE1vbnRoKCksDQoJCQkJCWRheSA9IGRhdGUuZ2V0RGF0ZSgpLA0KCQkJCQlwYXR0ZXJuID0gLyhbK1wtXT9bMC05XSspXHMqKGR8RHx3fFd8bXxNfHl8WSk/L2csDQoJCQkJCW1hdGNoZXMgPSBwYXR0ZXJuLmV4ZWMob2Zmc2V0KTsNCg0KCQkJCXdoaWxlIChtYXRjaGVzKSB7DQoJCQkJCXN3aXRjaCAobWF0Y2hlc1syXSB8fCAiZCIpIHsNCgkJCQkJCWNhc2UgImQiIDogY2FzZSAiRCIgOg0KCQkJCQkJCWRheSArPSBwYXJzZUludChtYXRjaGVzWzFdLDEwKTsgYnJlYWs7DQoJCQkJCQljYXNlICJ3IiA6IGNhc2UgIlciIDoNCgkJCQkJCQlkYXkgKz0gcGFyc2VJbnQobWF0Y2hlc1sxXSwxMCkgKiA3OyBicmVhazsNCgkJCQkJCWNhc2UgIm0iIDogY2FzZSAiTSIgOg0KCQkJCQkJCW1vbnRoICs9IHBhcnNlSW50KG1hdGNoZXNbMV0sMTApOw0KCQkJCQkJCWRheSA9IE1hdGgubWluKGRheSwgJC5kYXRlcGlja2VyLl9nZXREYXlzSW5Nb250aCh5ZWFyLCBtb250aCkpOw0KCQkJCQkJCWJyZWFrOw0KCQkJCQkJY2FzZSAieSI6IGNhc2UgIlkiIDoNCgkJCQkJCQl5ZWFyICs9IHBhcnNlSW50KG1hdGNoZXNbMV0sMTApOw0KCQkJCQkJCWRheSA9IE1hdGgubWluKGRheSwgJC5kYXRlcGlja2VyLl9nZXREYXlzSW5Nb250aCh5ZWFyLCBtb250aCkpOw0KCQkJCQkJCWJyZWFrOw0KCQkJCQl9DQoJCQkJCW1hdGNoZXMgPSBwYXR0ZXJuLmV4ZWMob2Zmc2V0KTsNCgkJCQl9DQoJCQkJcmV0dXJuIG5ldyBEYXRlKHllYXIsIG1vbnRoLCBkYXkpOw0KCQkJfSwNCgkJCW5ld0RhdGUgPSAoZGF0ZSA9PSBudWxsIHx8IGRhdGUgPT09ICIiID8gZGVmYXVsdERhdGUgOiAodHlwZW9mIGRhdGUgPT09ICJzdHJpbmciID8gb2Zmc2V0U3RyaW5nKGRhdGUpIDoNCgkJCQkodHlwZW9mIGRhdGUgPT09ICJudW1iZXIiID8gKGlzTmFOKGRhdGUpID8gZGVmYXVsdERhdGUgOiBvZmZzZXROdW1lcmljKGRhdGUpKSA6IG5ldyBEYXRlKGRhdGUuZ2V0VGltZSgpKSkpKTsNCg0KCQluZXdEYXRlID0gKG5ld0RhdGUgJiYgbmV3RGF0ZS50b1N0cmluZygpID09PSAiSW52YWxpZCBEYXRlIiA/IGRlZmF1bHREYXRlIDogbmV3RGF0ZSk7DQoJCWlmIChuZXdEYXRlKSB7DQoJCQluZXdEYXRlLnNldEhvdXJzKDApOw0KCQkJbmV3RGF0ZS5zZXRNaW51dGVzKDApOw0KCQkJbmV3RGF0ZS5zZXRTZWNvbmRzKDApOw0KCQkJbmV3RGF0ZS5zZXRNaWxsaXNlY29uZHMoMCk7DQoJCX0NCgkJcmV0dXJuIHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ld0RhdGUpOw0KCX0sDQoNCgkvKiBIYW5kbGUgc3dpdGNoIHRvL2Zyb20gZGF5bGlnaHQgc2F2aW5nLg0KCSAqIEhvdXJzIG1heSBiZSBub24temVybyBvbiBkYXlsaWdodCBzYXZpbmcgY3V0LW92ZXI6DQoJICogPiAxMiB3aGVuIG1pZG5pZ2h0IGNoYW5nZW92ZXIsIGJ1dCB0aGVuIGNhbm5vdCBnZW5lcmF0ZQ0KCSAqIG1pZG5pZ2h0IGRhdGV0aW1lLCBzbyBqdW1wIHRvIDFBTSwgb3RoZXJ3aXNlIHJlc2V0Lg0KCSAqIEBwYXJhbSAgZGF0ZSAgKERhdGUpIHRoZSBkYXRlIHRvIGNoZWNrDQoJICogQHJldHVybiAgKERhdGUpIHRoZSBjb3JyZWN0ZWQgZGF0ZQ0KCSAqLw0KCV9kYXlsaWdodFNhdmluZ0FkanVzdDogZnVuY3Rpb24oZGF0ZSkgew0KCQlpZiAoIWRhdGUpIHsNCgkJCXJldHVybiBudWxsOw0KCQl9DQoJCWRhdGUuc2V0SG91cnMoZGF0ZS5nZXRIb3VycygpID4gMTIgPyBkYXRlLmdldEhvdXJzKCkgKyAyIDogMCk7DQoJCXJldHVybiBkYXRlOw0KCX0sDQoNCgkvKiBTZXQgdGhlIGRhdGUocykgZGlyZWN0bHkuICovDQoJX3NldERhdGU6IGZ1bmN0aW9uKGluc3QsIGRhdGUsIG5vQ2hhbmdlKSB7DQoJCXZhciBjbGVhciA9ICFkYXRlLA0KCQkJb3JpZ01vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoLA0KCQkJb3JpZ1llYXIgPSBpbnN0LnNlbGVjdGVkWWVhciwNCgkJCW5ld0RhdGUgPSB0aGlzLl9yZXN0cmljdE1pbk1heChpbnN0LCB0aGlzLl9kZXRlcm1pbmVEYXRlKGluc3QsIGRhdGUsIG5ldyBEYXRlKCkpKTsNCg0KCQlpbnN0LnNlbGVjdGVkRGF5ID0gaW5zdC5jdXJyZW50RGF5ID0gbmV3RGF0ZS5nZXREYXRlKCk7DQoJCWluc3QuZHJhd01vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoID0gaW5zdC5jdXJyZW50TW9udGggPSBuZXdEYXRlLmdldE1vbnRoKCk7DQoJCWluc3QuZHJhd1llYXIgPSBpbnN0LnNlbGVjdGVkWWVhciA9IGluc3QuY3VycmVudFllYXIgPSBuZXdEYXRlLmdldEZ1bGxZZWFyKCk7DQoJCWlmICgob3JpZ01vbnRoICE9PSBpbnN0LnNlbGVjdGVkTW9udGggfHwgb3JpZ1llYXIgIT09IGluc3Quc2VsZWN0ZWRZZWFyKSAmJiAhbm9DaGFuZ2UpIHsNCgkJCXRoaXMuX25vdGlmeUNoYW5nZShpbnN0KTsNCgkJfQ0KCQl0aGlzLl9hZGp1c3RJbnN0RGF0ZShpbnN0KTsNCgkJaWYgKGluc3QuaW5wdXQpIHsNCgkJCWluc3QuaW5wdXQudmFsKGNsZWFyID8gIiIgOiB0aGlzLl9mb3JtYXREYXRlKGluc3QpKTsNCgkJfQ0KCX0sDQoNCgkvKiBSZXRyaWV2ZSB0aGUgZGF0ZShzKSBkaXJlY3RseS4gKi8NCglfZ2V0RGF0ZTogZnVuY3Rpb24oaW5zdCkgew0KCQl2YXIgc3RhcnREYXRlID0gKCFpbnN0LmN1cnJlbnRZZWFyIHx8IChpbnN0LmlucHV0ICYmIGluc3QuaW5wdXQudmFsKCkgPT09ICIiKSA/IG51bGwgOg0KCQkJdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoDQoJCQlpbnN0LmN1cnJlbnRZZWFyLCBpbnN0LmN1cnJlbnRNb250aCwgaW5zdC5jdXJyZW50RGF5KSkpOw0KCQkJcmV0dXJuIHN0YXJ0RGF0ZTsNCgl9LA0KDQoJLyogQXR0YWNoIHRoZSBvbnh4eCBoYW5kbGVycy4gIFRoZXNlIGFyZSBkZWNsYXJlZCBzdGF0aWNhbGx5IHNvDQoJICogdGhleSB3b3JrIHdpdGggc3RhdGljIGNvZGUgdHJhbnNmb3JtZXJzIGxpa2UgQ2FqYS4NCgkgKi8NCglfYXR0YWNoSGFuZGxlcnM6IGZ1bmN0aW9uKGluc3QpIHsNCgkJdmFyIHN0ZXBNb250aHMgPSB0aGlzLl9nZXQoaW5zdCwgInN0ZXBNb250aHMiKSwNCgkJCWlkID0gIiMiICsgaW5zdC5pZC5yZXBsYWNlKCAvXFxcXC9nLCAiXFwiICk7DQoJCWluc3QuZHBEaXYuZmluZCgiW2RhdGEtaGFuZGxlcl0iKS5tYXAoZnVuY3Rpb24gKCkgew0KCQkJdmFyIGhhbmRsZXIgPSB7DQoJCQkJcHJldjogZnVuY3Rpb24gKCkgew0KCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoaWQsIC1zdGVwTW9udGhzLCAiTSIpOw0KCQkJCX0sDQoJCQkJbmV4dDogZnVuY3Rpb24gKCkgew0KCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoaWQsICtzdGVwTW9udGhzLCAiTSIpOw0KCQkJCX0sDQoJCQkJaGlkZTogZnVuY3Rpb24gKCkgew0KCQkJCQkkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7DQoJCQkJfSwNCgkJCQl0b2RheTogZnVuY3Rpb24gKCkgew0KCQkJCQkkLmRhdGVwaWNrZXIuX2dvdG9Ub2RheShpZCk7DQoJCQkJfSwNCgkJCQlzZWxlY3REYXk6IGZ1bmN0aW9uICgpIHsNCgkJCQkJJC5kYXRlcGlja2VyLl9zZWxlY3REYXkoaWQsICt0aGlzLmdldEF0dHJpYnV0ZSgiZGF0YS1tb250aCIpLCArdGhpcy5nZXRBdHRyaWJ1dGUoImRhdGEteWVhciIpLCB0aGlzKTsNCgkJCQkJcmV0dXJuIGZhbHNlOw0KCQkJCX0sDQoJCQkJc2VsZWN0TW9udGg6IGZ1bmN0aW9uICgpIHsNCgkJCQkJJC5kYXRlcGlja2VyLl9zZWxlY3RNb250aFllYXIoaWQsIHRoaXMsICJNIik7DQoJCQkJCXJldHVybiBmYWxzZTsNCgkJCQl9LA0KCQkJCXNlbGVjdFllYXI6IGZ1bmN0aW9uICgpIHsNCgkJCQkJJC5kYXRlcGlja2VyLl9zZWxlY3RNb250aFllYXIoaWQsIHRoaXMsICJZIik7DQoJCQkJCXJldHVybiBmYWxzZTsNCgkJCQl9DQoJCQl9Ow0KCQkJJCh0aGlzKS5iaW5kKHRoaXMuZ2V0QXR0cmlidXRlKCJkYXRhLWV2ZW50IiksIGhhbmRsZXJbdGhpcy5nZXRBdHRyaWJ1dGUoImRhdGEtaGFuZGxlciIpXSk7DQoJCX0pOw0KCX0sDQoNCgkvKiBHZW5lcmF0ZSB0aGUgSFRNTCBmb3IgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGRhdGUgcGlja2VyLiAqLw0KCV9nZW5lcmF0ZUhUTUw6IGZ1bmN0aW9uKGluc3QpIHsNCgkJdmFyIG1heERyYXcsIHByZXZUZXh0LCBwcmV2LCBuZXh0VGV4dCwgbmV4dCwgY3VycmVudFRleHQsIGdvdG9EYXRlLA0KCQkJY29udHJvbHMsIGJ1dHRvblBhbmVsLCBmaXJzdERheSwgc2hvd1dlZWssIGRheU5hbWVzLCBkYXlOYW1lc01pbiwNCgkJCW1vbnRoTmFtZXMsIG1vbnRoTmFtZXNTaG9ydCwgYmVmb3JlU2hvd0RheSwgc2hvd090aGVyTW9udGhzLA0KCQkJc2VsZWN0T3RoZXJNb250aHMsIGRlZmF1bHREYXRlLCBodG1sLCBkb3csIHJvdywgZ3JvdXAsIGNvbCwgc2VsZWN0ZWREYXRlLA0KCQkJY29ybmVyQ2xhc3MsIGNhbGVuZGVyLCB0aGVhZCwgZGF5LCBkYXlzSW5Nb250aCwgbGVhZERheXMsIGN1clJvd3MsIG51bVJvd3MsDQoJCQlwcmludERhdGUsIGRSb3csIHRib2R5LCBkYXlTZXR0aW5ncywgb3RoZXJNb250aCwgdW5zZWxlY3RhYmxlLA0KCQkJdGVtcERhdGUgPSBuZXcgRGF0ZSgpLA0KCQkJdG9kYXkgPSB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCgNCgkJCQluZXcgRGF0ZSh0ZW1wRGF0ZS5nZXRGdWxsWWVhcigpLCB0ZW1wRGF0ZS5nZXRNb250aCgpLCB0ZW1wRGF0ZS5nZXREYXRlKCkpKSwgLy8gY2xlYXIgdGltZQ0KCQkJaXNSVEwgPSB0aGlzLl9nZXQoaW5zdCwgImlzUlRMIiksDQoJCQlzaG93QnV0dG9uUGFuZWwgPSB0aGlzLl9nZXQoaW5zdCwgInNob3dCdXR0b25QYW5lbCIpLA0KCQkJaGlkZUlmTm9QcmV2TmV4dCA9IHRoaXMuX2dldChpbnN0LCAiaGlkZUlmTm9QcmV2TmV4dCIpLA0KCQkJbmF2aWdhdGlvbkFzRGF0ZUZvcm1hdCA9IHRoaXMuX2dldChpbnN0LCAibmF2aWdhdGlvbkFzRGF0ZUZvcm1hdCIpLA0KCQkJbnVtTW9udGhzID0gdGhpcy5fZ2V0TnVtYmVyT2ZNb250aHMoaW5zdCksDQoJCQlzaG93Q3VycmVudEF0UG9zID0gdGhpcy5fZ2V0KGluc3QsICJzaG93Q3VycmVudEF0UG9zIiksDQoJCQlzdGVwTW9udGhzID0gdGhpcy5fZ2V0KGluc3QsICJzdGVwTW9udGhzIiksDQoJCQlpc011bHRpTW9udGggPSAobnVtTW9udGhzWzBdICE9PSAxIHx8IG51bU1vbnRoc1sxXSAhPT0gMSksDQoJCQljdXJyZW50RGF0ZSA9IHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KCghaW5zdC5jdXJyZW50RGF5ID8gbmV3IERhdGUoOTk5OSwgOSwgOSkgOg0KCQkJCW5ldyBEYXRlKGluc3QuY3VycmVudFllYXIsIGluc3QuY3VycmVudE1vbnRoLCBpbnN0LmN1cnJlbnREYXkpKSksDQoJCQltaW5EYXRlID0gdGhpcy5fZ2V0TWluTWF4RGF0ZShpbnN0LCAibWluIiksDQoJCQltYXhEYXRlID0gdGhpcy5fZ2V0TWluTWF4RGF0ZShpbnN0LCAibWF4IiksDQoJCQlkcmF3TW9udGggPSBpbnN0LmRyYXdNb250aCAtIHNob3dDdXJyZW50QXRQb3MsDQoJCQlkcmF3WWVhciA9IGluc3QuZHJhd1llYXI7DQoNCgkJaWYgKGRyYXdNb250aCA8IDApIHsNCgkJCWRyYXdNb250aCArPSAxMjsNCgkJCWRyYXdZZWFyLS07DQoJCX0NCgkJaWYgKG1heERhdGUpIHsNCgkJCW1heERyYXcgPSB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShtYXhEYXRlLmdldEZ1bGxZZWFyKCksDQoJCQkJbWF4RGF0ZS5nZXRNb250aCgpIC0gKG51bU1vbnRoc1swXSAqIG51bU1vbnRoc1sxXSkgKyAxLCBtYXhEYXRlLmdldERhdGUoKSkpOw0KCQkJbWF4RHJhdyA9IChtaW5EYXRlICYmIG1heERyYXcgPCBtaW5EYXRlID8gbWluRGF0ZSA6IG1heERyYXcpOw0KCQkJd2hpbGUgKHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGRyYXdZZWFyLCBkcmF3TW9udGgsIDEpKSA+IG1heERyYXcpIHsNCgkJCQlkcmF3TW9udGgtLTsNCgkJCQlpZiAoZHJhd01vbnRoIDwgMCkgew0KCQkJCQlkcmF3TW9udGggPSAxMTsNCgkJCQkJZHJhd1llYXItLTsNCgkJCQl9DQoJCQl9DQoJCX0NCgkJaW5zdC5kcmF3TW9udGggPSBkcmF3TW9udGg7DQoJCWluc3QuZHJhd1llYXIgPSBkcmF3WWVhcjsNCg0KCQlwcmV2VGV4dCA9IHRoaXMuX2dldChpbnN0LCAicHJldlRleHQiKTsNCgkJcHJldlRleHQgPSAoIW5hdmlnYXRpb25Bc0RhdGVGb3JtYXQgPyBwcmV2VGV4dCA6IHRoaXMuZm9ybWF0RGF0ZShwcmV2VGV4dCwNCgkJCXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGRyYXdZZWFyLCBkcmF3TW9udGggLSBzdGVwTW9udGhzLCAxKSksDQoJCQl0aGlzLl9nZXRGb3JtYXRDb25maWcoaW5zdCkpKTsNCg0KCQlwcmV2ID0gKHRoaXMuX2NhbkFkanVzdE1vbnRoKGluc3QsIC0xLCBkcmF3WWVhciwgZHJhd01vbnRoKSA/DQoJCQkiPGEgY2xhc3M9J3VpLWRhdGVwaWNrZXItcHJldiB1aS1jb3JuZXItYWxsJyBkYXRhLWhhbmRsZXI9J3ByZXYnIGRhdGEtZXZlbnQ9J2NsaWNrJyIgKw0KCQkJIiB0aXRsZT0nIiArIHByZXZUZXh0ICsgIic+PHNwYW4gY2xhc3M9J3VpLWljb24gdWktaWNvbi1jaXJjbGUtdHJpYW5nbGUtIiArICggaXNSVEwgPyAiZSIgOiAidyIpICsgIic+IiArIHByZXZUZXh0ICsgIjwvc3Bhbj48L2E+IiA6DQoJCQkoaGlkZUlmTm9QcmV2TmV4dCA/ICIiIDogIjxhIGNsYXNzPSd1aS1kYXRlcGlja2VyLXByZXYgdWktY29ybmVyLWFsbCB1aS1zdGF0ZS1kaXNhYmxlZCcgdGl0bGU9JyIrIHByZXZUZXh0ICsiJz48c3BhbiBjbGFzcz0ndWktaWNvbiB1aS1pY29uLWNpcmNsZS10cmlhbmdsZS0iICsgKCBpc1JUTCA/ICJlIiA6ICJ3IikgKyAiJz4iICsgcHJldlRleHQgKyAiPC9zcGFuPjwvYT4iKSk7DQoNCgkJbmV4dFRleHQgPSB0aGlzLl9nZXQoaW5zdCwgIm5leHRUZXh0Iik7DQoJCW5leHRUZXh0ID0gKCFuYXZpZ2F0aW9uQXNEYXRlRm9ybWF0ID8gbmV4dFRleHQgOiB0aGlzLmZvcm1hdERhdGUobmV4dFRleHQsDQoJCQl0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShkcmF3WWVhciwgZHJhd01vbnRoICsgc3RlcE1vbnRocywgMSkpLA0KCQkJdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKGluc3QpKSk7DQoNCgkJbmV4dCA9ICh0aGlzLl9jYW5BZGp1c3RNb250aChpbnN0LCArMSwgZHJhd1llYXIsIGRyYXdNb250aCkgPw0KCQkJIjxhIGNsYXNzPSd1aS1kYXRlcGlja2VyLW5leHQgdWktY29ybmVyLWFsbCcgZGF0YS1oYW5kbGVyPSduZXh0JyBkYXRhLWV2ZW50PSdjbGljayciICsNCgkJCSIgdGl0bGU9JyIgKyBuZXh0VGV4dCArICInPjxzcGFuIGNsYXNzPSd1aS1pY29uIHVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLSIgKyAoIGlzUlRMID8gInciIDogImUiKSArICInPiIgKyBuZXh0VGV4dCArICI8L3NwYW4+PC9hPiIgOg0KCQkJKGhpZGVJZk5vUHJldk5leHQgPyAiIiA6ICI8YSBjbGFzcz0ndWktZGF0ZXBpY2tlci1uZXh0IHVpLWNvcm5lci1hbGwgdWktc3RhdGUtZGlzYWJsZWQnIHRpdGxlPSciKyBuZXh0VGV4dCArICInPjxzcGFuIGNsYXNzPSd1aS1pY29uIHVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLSIgKyAoIGlzUlRMID8gInciIDogImUiKSArICInPiIgKyBuZXh0VGV4dCArICI8L3NwYW4+PC9hPiIpKTsNCg0KCQljdXJyZW50VGV4dCA9IHRoaXMuX2dldChpbnN0LCAiY3VycmVudFRleHQiKTsNCgkJZ290b0RhdGUgPSAodGhpcy5fZ2V0KGluc3QsICJnb3RvQ3VycmVudCIpICYmIGluc3QuY3VycmVudERheSA/IGN1cnJlbnREYXRlIDogdG9kYXkpOw0KCQljdXJyZW50VGV4dCA9ICghbmF2aWdhdGlvbkFzRGF0ZUZvcm1hdCA/IGN1cnJlbnRUZXh0IDoNCgkJCXRoaXMuZm9ybWF0RGF0ZShjdXJyZW50VGV4dCwgZ290b0RhdGUsIHRoaXMuX2dldEZvcm1hdENvbmZpZyhpbnN0KSkpOw0KDQoJCWNvbnRyb2xzID0gKCFpbnN0LmlubGluZSA/ICI8YnV0dG9uIHR5cGU9J2J1dHRvbicgY2xhc3M9J3VpLWRhdGVwaWNrZXItY2xvc2UgdWktc3RhdGUtZGVmYXVsdCB1aS1wcmlvcml0eS1wcmltYXJ5IHVpLWNvcm5lci1hbGwnIGRhdGEtaGFuZGxlcj0naGlkZScgZGF0YS1ldmVudD0nY2xpY2snPiIgKw0KCQkJdGhpcy5fZ2V0KGluc3QsICJjbG9zZVRleHQiKSArICI8L2J1dHRvbj4iIDogIiIpOw0KDQoJCWJ1dHRvblBhbmVsID0gKHNob3dCdXR0b25QYW5lbCkgPyAiPGRpdiBjbGFzcz0ndWktZGF0ZXBpY2tlci1idXR0b25wYW5lIHVpLXdpZGdldC1jb250ZW50Jz4iICsgKGlzUlRMID8gY29udHJvbHMgOiAiIikgKw0KCQkJKHRoaXMuX2lzSW5SYW5nZShpbnN0LCBnb3RvRGF0ZSkgPyAiPGJ1dHRvbiB0eXBlPSdidXR0b24nIGNsYXNzPSd1aS1kYXRlcGlja2VyLWN1cnJlbnQgdWktc3RhdGUtZGVmYXVsdCB1aS1wcmlvcml0eS1zZWNvbmRhcnkgdWktY29ybmVyLWFsbCcgZGF0YS1oYW5kbGVyPSd0b2RheScgZGF0YS1ldmVudD0nY2xpY2snIiArDQoJCQkiPiIgKyBjdXJyZW50VGV4dCArICI8L2J1dHRvbj4iIDogIiIpICsgKGlzUlRMID8gIiIgOiBjb250cm9scykgKyAiPC9kaXY+IiA6ICIiOw0KDQoJCWZpcnN0RGF5ID0gcGFyc2VJbnQodGhpcy5fZ2V0KGluc3QsICJmaXJzdERheSIpLDEwKTsNCgkJZmlyc3REYXkgPSAoaXNOYU4oZmlyc3REYXkpID8gMCA6IGZpcnN0RGF5KTsNCg0KCQlzaG93V2VlayA9IHRoaXMuX2dldChpbnN0LCAic2hvd1dlZWsiKTsNCgkJZGF5TmFtZXMgPSB0aGlzLl9nZXQoaW5zdCwgImRheU5hbWVzIik7DQoJCWRheU5hbWVzTWluID0gdGhpcy5fZ2V0KGluc3QsICJkYXlOYW1lc01pbiIpOw0KCQltb250aE5hbWVzID0gdGhpcy5fZ2V0KGluc3QsICJtb250aE5hbWVzIik7DQoJCW1vbnRoTmFtZXNTaG9ydCA9IHRoaXMuX2dldChpbnN0LCAibW9udGhOYW1lc1Nob3J0Iik7DQoJCWJlZm9yZVNob3dEYXkgPSB0aGlzLl9nZXQoaW5zdCwgImJlZm9yZVNob3dEYXkiKTsNCgkJc2hvd090aGVyTW9udGhzID0gdGhpcy5fZ2V0KGluc3QsICJzaG93T3RoZXJNb250aHMiKTsNCgkJc2VsZWN0T3RoZXJNb250aHMgPSB0aGlzLl9nZXQoaW5zdCwgInNlbGVjdE90aGVyTW9udGhzIik7DQoJCWRlZmF1bHREYXRlID0gdGhpcy5fZ2V0RGVmYXVsdERhdGUoaW5zdCk7DQoJCWh0bWwgPSAiIjsNCgkJZG93Ow0KCQlmb3IgKHJvdyA9IDA7IHJvdyA8IG51bU1vbnRoc1swXTsgcm93KyspIHsNCgkJCWdyb3VwID0gIiI7DQoJCQl0aGlzLm1heFJvd3MgPSA0Ow0KCQkJZm9yIChjb2wgPSAwOyBjb2wgPCBudW1Nb250aHNbMV07IGNvbCsrKSB7DQoJCQkJc2VsZWN0ZWREYXRlID0gdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoZHJhd1llYXIsIGRyYXdNb250aCwgaW5zdC5zZWxlY3RlZERheSkpOw0KCQkJCWNvcm5lckNsYXNzID0gIiB1aS1jb3JuZXItYWxsIjsNCgkJCQljYWxlbmRlciA9ICIiOw0KCQkJCWlmIChpc011bHRpTW9udGgpIHsNCgkJCQkJY2FsZW5kZXIgKz0gIjxkaXYgY2xhc3M9J3VpLWRhdGVwaWNrZXItZ3JvdXAiOw0KCQkJCQlpZiAobnVtTW9udGhzWzFdID4gMSkgew0KCQkJCQkJc3dpdGNoIChjb2wpIHsNCgkJCQkJCQljYXNlIDA6IGNhbGVuZGVyICs9ICIgdWktZGF0ZXBpY2tlci1ncm91cC1maXJzdCI7DQoJCQkJCQkJCWNvcm5lckNsYXNzID0gIiB1aS1jb3JuZXItIiArIChpc1JUTCA/ICJyaWdodCIgOiAibGVmdCIpOyBicmVhazsNCgkJCQkJCQljYXNlIG51bU1vbnRoc1sxXS0xOiBjYWxlbmRlciArPSAiIHVpLWRhdGVwaWNrZXItZ3JvdXAtbGFzdCI7DQoJCQkJCQkJCWNvcm5lckNsYXNzID0gIiB1aS1jb3JuZXItIiArIChpc1JUTCA/ICJsZWZ0IiA6ICJyaWdodCIpOyBicmVhazsNCgkJCQkJCQlkZWZhdWx0OiBjYWxlbmRlciArPSAiIHVpLWRhdGVwaWNrZXItZ3JvdXAtbWlkZGxlIjsgY29ybmVyQ2xhc3MgPSAiIjsgYnJlYWs7DQoJCQkJCQl9DQoJCQkJCX0NCgkJCQkJY2FsZW5kZXIgKz0gIic+IjsNCgkJCQl9DQoJCQkJY2FsZW5kZXIgKz0gIjxkaXYgY2xhc3M9J3VpLWRhdGVwaWNrZXItaGVhZGVyIHVpLXdpZGdldC1oZWFkZXIgdWktaGVscGVyLWNsZWFyZml4IiArIGNvcm5lckNsYXNzICsgIic+IiArDQoJCQkJCSgvYWxsfGxlZnQvLnRlc3QoY29ybmVyQ2xhc3MpICYmIHJvdyA9PT0gMCA/IChpc1JUTCA/IG5leHQgOiBwcmV2KSA6ICIiKSArDQoJCQkJCSgvYWxsfHJpZ2h0Ly50ZXN0KGNvcm5lckNsYXNzKSAmJiByb3cgPT09IDAgPyAoaXNSVEwgPyBwcmV2IDogbmV4dCkgOiAiIikgKw0KCQkJCQl0aGlzLl9nZW5lcmF0ZU1vbnRoWWVhckhlYWRlcihpbnN0LCBkcmF3TW9udGgsIGRyYXdZZWFyLCBtaW5EYXRlLCBtYXhEYXRlLA0KCQkJCQlyb3cgPiAwIHx8IGNvbCA+IDAsIG1vbnRoTmFtZXMsIG1vbnRoTmFtZXNTaG9ydCkgKyAvLyBkcmF3IG1vbnRoIGhlYWRlcnMNCgkJCQkJIjwvZGl2Pjx0YWJsZSBjbGFzcz0ndWktZGF0ZXBpY2tlci1jYWxlbmRhcic+PHRoZWFkPiIgKw0KCQkJCQkiPHRyPiI7DQoJCQkJdGhlYWQgPSAoc2hvd1dlZWsgPyAiPHRoIGNsYXNzPSd1aS1kYXRlcGlja2VyLXdlZWstY29sJz4iICsgdGhpcy5fZ2V0KGluc3QsICJ3ZWVrSGVhZGVyIikgKyAiPC90aD4iIDogIiIpOw0KCQkJCWZvciAoZG93ID0gMDsgZG93IDwgNzsgZG93KyspIHsgLy8gZGF5cyBvZiB0aGUgd2Vlaw0KCQkJCQlkYXkgPSAoZG93ICsgZmlyc3REYXkpICUgNzsNCgkJCQkJdGhlYWQgKz0gIjx0aCBzY29wZT0nY29sJyIgKyAoKGRvdyArIGZpcnN0RGF5ICsgNikgJSA3ID49IDUgPyAiIGNsYXNzPSd1aS1kYXRlcGlja2VyLXdlZWstZW5kJyIgOiAiIikgKyAiPiIgKw0KCQkJCQkJIjxzcGFuIHRpdGxlPSciICsgZGF5TmFtZXNbZGF5XSArICInPiIgKyBkYXlOYW1lc01pbltkYXldICsgIjwvc3Bhbj48L3RoPiI7DQoJCQkJfQ0KCQkJCWNhbGVuZGVyICs9IHRoZWFkICsgIjwvdHI+PC90aGVhZD48dGJvZHk+IjsNCgkJCQlkYXlzSW5Nb250aCA9IHRoaXMuX2dldERheXNJbk1vbnRoKGRyYXdZZWFyLCBkcmF3TW9udGgpOw0KCQkJCWlmIChkcmF3WWVhciA9PT0gaW5zdC5zZWxlY3RlZFllYXIgJiYgZHJhd01vbnRoID09PSBpbnN0LnNlbGVjdGVkTW9udGgpIHsNCgkJCQkJaW5zdC5zZWxlY3RlZERheSA9IE1hdGgubWluKGluc3Quc2VsZWN0ZWREYXksIGRheXNJbk1vbnRoKTsNCgkJCQl9DQoJCQkJbGVhZERheXMgPSAodGhpcy5fZ2V0Rmlyc3REYXlPZk1vbnRoKGRyYXdZZWFyLCBkcmF3TW9udGgpIC0gZmlyc3REYXkgKyA3KSAlIDc7DQoJCQkJY3VyUm93cyA9IE1hdGguY2VpbCgobGVhZERheXMgKyBkYXlzSW5Nb250aCkgLyA3KTsgLy8gY2FsY3VsYXRlIHRoZSBudW1iZXIgb2Ygcm93cyB0byBnZW5lcmF0ZQ0KCQkJCW51bVJvd3MgPSAoaXNNdWx0aU1vbnRoID8gdGhpcy5tYXhSb3dzID4gY3VyUm93cyA/IHRoaXMubWF4Um93cyA6IGN1clJvd3MgOiBjdXJSb3dzKTsgLy9JZiBtdWx0aXBsZSBtb250aHMsIHVzZSB0aGUgaGlnaGVyIG51bWJlciBvZiByb3dzIChzZWUgIzcwNDMpDQoJCQkJdGhpcy5tYXhSb3dzID0gbnVtUm93czsNCgkJCQlwcmludERhdGUgPSB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShkcmF3WWVhciwgZHJhd01vbnRoLCAxIC0gbGVhZERheXMpKTsNCgkJCQlmb3IgKGRSb3cgPSAwOyBkUm93IDwgbnVtUm93czsgZFJvdysrKSB7IC8vIGNyZWF0ZSBkYXRlIHBpY2tlciByb3dzDQoJCQkJCWNhbGVuZGVyICs9ICI8dHI+IjsNCgkJCQkJdGJvZHkgPSAoIXNob3dXZWVrID8gIiIgOiAiPHRkIGNsYXNzPSd1aS1kYXRlcGlja2VyLXdlZWstY29sJz4iICsNCgkJCQkJCXRoaXMuX2dldChpbnN0LCAiY2FsY3VsYXRlV2VlayIpKHByaW50RGF0ZSkgKyAiPC90ZD4iKTsNCgkJCQkJZm9yIChkb3cgPSAwOyBkb3cgPCA3OyBkb3crKykgeyAvLyBjcmVhdGUgZGF0ZSBwaWNrZXIgZGF5cw0KCQkJCQkJZGF5U2V0dGluZ3MgPSAoYmVmb3JlU2hvd0RheSA/DQoJCQkJCQkJYmVmb3JlU2hvd0RheS5hcHBseSgoaW5zdC5pbnB1dCA/IGluc3QuaW5wdXRbMF0gOiBudWxsKSwgW3ByaW50RGF0ZV0pIDogW3RydWUsICIiXSk7DQoJCQkJCQlvdGhlck1vbnRoID0gKHByaW50RGF0ZS5nZXRNb250aCgpICE9PSBkcmF3TW9udGgpOw0KCQkJCQkJdW5zZWxlY3RhYmxlID0gKG90aGVyTW9udGggJiYgIXNlbGVjdE90aGVyTW9udGhzKSB8fCAhZGF5U2V0dGluZ3NbMF0gfHwNCgkJCQkJCQkobWluRGF0ZSAmJiBwcmludERhdGUgPCBtaW5EYXRlKSB8fCAobWF4RGF0ZSAmJiBwcmludERhdGUgPiBtYXhEYXRlKTsNCgkJCQkJCXRib2R5ICs9ICI8dGQgY2xhc3M9JyIgKw0KCQkJCQkJCSgoZG93ICsgZmlyc3REYXkgKyA2KSAlIDcgPj0gNSA/ICIgdWktZGF0ZXBpY2tlci13ZWVrLWVuZCIgOiAiIikgKyAvLyBoaWdobGlnaHQgd2Vla2VuZHMNCgkJCQkJCQkob3RoZXJNb250aCA/ICIgdWktZGF0ZXBpY2tlci1vdGhlci1tb250aCIgOiAiIikgKyAvLyBoaWdobGlnaHQgZGF5cyBmcm9tIG90aGVyIG1vbnRocw0KCQkJCQkJCSgocHJpbnREYXRlLmdldFRpbWUoKSA9PT0gc2VsZWN0ZWREYXRlLmdldFRpbWUoKSAmJiBkcmF3TW9udGggPT09IGluc3Quc2VsZWN0ZWRNb250aCAmJiBpbnN0Ll9rZXlFdmVudCkgfHwgLy8gdXNlciBwcmVzc2VkIGtleQ0KCQkJCQkJCShkZWZhdWx0RGF0ZS5nZXRUaW1lKCkgPT09IHByaW50RGF0ZS5nZXRUaW1lKCkgJiYgZGVmYXVsdERhdGUuZ2V0VGltZSgpID09PSBzZWxlY3RlZERhdGUuZ2V0VGltZSgpKSA/DQoJCQkJCQkJLy8gb3IgZGVmYXVsdERhdGUgaXMgY3VycmVudCBwcmludGVkRGF0ZSBhbmQgZGVmYXVsdERhdGUgaXMgc2VsZWN0ZWREYXRlDQoJCQkJCQkJIiAiICsgdGhpcy5fZGF5T3ZlckNsYXNzIDogIiIpICsgLy8gaGlnaGxpZ2h0IHNlbGVjdGVkIGRheQ0KCQkJCQkJCSh1bnNlbGVjdGFibGUgPyAiICIgKyB0aGlzLl91bnNlbGVjdGFibGVDbGFzcyArICIgdWktc3RhdGUtZGlzYWJsZWQiOiAiIikgKyAgLy8gaGlnaGxpZ2h0IHVuc2VsZWN0YWJsZSBkYXlzDQoJCQkJCQkJKG90aGVyTW9udGggJiYgIXNob3dPdGhlck1vbnRocyA/ICIiIDogIiAiICsgZGF5U2V0dGluZ3NbMV0gKyAvLyBoaWdobGlnaHQgY3VzdG9tIGRhdGVzDQoJCQkJCQkJKHByaW50RGF0ZS5nZXRUaW1lKCkgPT09IGN1cnJlbnREYXRlLmdldFRpbWUoKSA/ICIgIiArIHRoaXMuX2N1cnJlbnRDbGFzcyA6ICIiKSArIC8vIGhpZ2hsaWdodCBzZWxlY3RlZCBkYXkNCgkJCQkJCQkocHJpbnREYXRlLmdldFRpbWUoKSA9PT0gdG9kYXkuZ2V0VGltZSgpID8gIiB1aS1kYXRlcGlja2VyLXRvZGF5IiA6ICIiKSkgKyAiJyIgKyAvLyBoaWdobGlnaHQgdG9kYXkgKGlmIGRpZmZlcmVudCkNCgkJCQkJCQkoKCFvdGhlck1vbnRoIHx8IHNob3dPdGhlck1vbnRocykgJiYgZGF5U2V0dGluZ3NbMl0gPyAiIHRpdGxlPSciICsgZGF5U2V0dGluZ3NbMl0ucmVwbGFjZSgvJy9nLCAiJiMzOTsiKSArICInIiA6ICIiKSArIC8vIGNlbGwgdGl0bGUNCgkJCQkJCQkodW5zZWxlY3RhYmxlID8gIiIgOiAiIGRhdGEtaGFuZGxlcj0nc2VsZWN0RGF5JyBkYXRhLWV2ZW50PSdjbGljaycgZGF0YS1tb250aD0nIiArIHByaW50RGF0ZS5nZXRNb250aCgpICsgIicgZGF0YS15ZWFyPSciICsgcHJpbnREYXRlLmdldEZ1bGxZZWFyKCkgKyAiJyIpICsgIj4iICsgLy8gYWN0aW9ucw0KCQkJCQkJCShvdGhlck1vbnRoICYmICFzaG93T3RoZXJNb250aHMgPyAiJiN4YTA7IiA6IC8vIGRpc3BsYXkgZm9yIG90aGVyIG1vbnRocw0KCQkJCQkJCSh1bnNlbGVjdGFibGUgPyAiPHNwYW4gY2xhc3M9J3VpLXN0YXRlLWRlZmF1bHQnPiIgKyBwcmludERhdGUuZ2V0RGF0ZSgpICsgIjwvc3Bhbj4iIDogIjxhIGNsYXNzPSd1aS1zdGF0ZS1kZWZhdWx0IiArDQoJCQkJCQkJKHByaW50RGF0ZS5nZXRUaW1lKCkgPT09IHRvZGF5LmdldFRpbWUoKSA/ICIgdWktc3RhdGUtaGlnaGxpZ2h0IiA6ICIiKSArDQoJCQkJCQkJKHByaW50RGF0ZS5nZXRUaW1lKCkgPT09IGN1cnJlbnREYXRlLmdldFRpbWUoKSA/ICIgdWktc3RhdGUtYWN0aXZlIiA6ICIiKSArIC8vIGhpZ2hsaWdodCBzZWxlY3RlZCBkYXkNCgkJCQkJCQkob3RoZXJNb250aCA/ICIgdWktcHJpb3JpdHktc2Vjb25kYXJ5IiA6ICIiKSArIC8vIGRpc3Rpbmd1aXNoIGRhdGVzIGZyb20gb3RoZXIgbW9udGhzDQoJCQkJCQkJIicgaHJlZj0nIyc+IiArIHByaW50RGF0ZS5nZXREYXRlKCkgKyAiPC9hPiIpKSArICI8L3RkPiI7IC8vIGRpc3BsYXkgc2VsZWN0YWJsZSBkYXRlDQoJCQkJCQlwcmludERhdGUuc2V0RGF0ZShwcmludERhdGUuZ2V0RGF0ZSgpICsgMSk7DQoJCQkJCQlwcmludERhdGUgPSB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChwcmludERhdGUpOw0KCQkJCQl9DQoJCQkJCWNhbGVuZGVyICs9IHRib2R5ICsgIjwvdHI+IjsNCgkJCQl9DQoJCQkJZHJhd01vbnRoKys7DQoJCQkJaWYgKGRyYXdNb250aCA+IDExKSB7DQoJCQkJCWRyYXdNb250aCA9IDA7DQoJCQkJCWRyYXdZZWFyKys7DQoJCQkJfQ0KCQkJCWNhbGVuZGVyICs9ICI8L3Rib2R5PjwvdGFibGU+IiArIChpc011bHRpTW9udGggPyAiPC9kaXY+IiArDQoJCQkJCQkJKChudW1Nb250aHNbMF0gPiAwICYmIGNvbCA9PT0gbnVtTW9udGhzWzFdLTEpID8gIjxkaXYgY2xhc3M9J3VpLWRhdGVwaWNrZXItcm93LWJyZWFrJz48L2Rpdj4iIDogIiIpIDogIiIpOw0KCQkJCWdyb3VwICs9IGNhbGVuZGVyOw0KCQkJfQ0KCQkJaHRtbCArPSBncm91cDsNCgkJfQ0KCQlodG1sICs9IGJ1dHRvblBhbmVsOw0KCQlpbnN0Ll9rZXlFdmVudCA9IGZhbHNlOw0KCQlyZXR1cm4gaHRtbDsNCgl9LA0KDQoJLyogR2VuZXJhdGUgdGhlIG1vbnRoIGFuZCB5ZWFyIGhlYWRlci4gKi8NCglfZ2VuZXJhdGVNb250aFllYXJIZWFkZXI6IGZ1bmN0aW9uKGluc3QsIGRyYXdNb250aCwgZHJhd1llYXIsIG1pbkRhdGUsIG1heERhdGUsDQoJCQlzZWNvbmRhcnksIG1vbnRoTmFtZXMsIG1vbnRoTmFtZXNTaG9ydCkgew0KDQoJCXZhciBpbk1pblllYXIsIGluTWF4WWVhciwgbW9udGgsIHllYXJzLCB0aGlzWWVhciwgZGV0ZXJtaW5lWWVhciwgeWVhciwgZW5kWWVhciwNCgkJCWNoYW5nZU1vbnRoID0gdGhpcy5fZ2V0KGluc3QsICJjaGFuZ2VNb250aCIpLA0KCQkJY2hhbmdlWWVhciA9IHRoaXMuX2dldChpbnN0LCAiY2hhbmdlWWVhciIpLA0KCQkJc2hvd01vbnRoQWZ0ZXJZZWFyID0gdGhpcy5fZ2V0KGluc3QsICJzaG93TW9udGhBZnRlclllYXIiKSwNCgkJCWh0bWwgPSAiPGRpdiBjbGFzcz0ndWktZGF0ZXBpY2tlci10aXRsZSc+IiwNCgkJCW1vbnRoSHRtbCA9ICIiOw0KDQoJCS8vIG1vbnRoIHNlbGVjdGlvbg0KCQlpZiAoc2Vjb25kYXJ5IHx8ICFjaGFuZ2VNb250aCkgew0KCQkJbW9udGhIdG1sICs9ICI8c3BhbiBjbGFzcz0ndWktZGF0ZXBpY2tlci1tb250aCc+IiArIG1vbnRoTmFtZXNbZHJhd01vbnRoXSArICI8L3NwYW4+IjsNCgkJfSBlbHNlIHsNCgkJCWluTWluWWVhciA9IChtaW5EYXRlICYmIG1pbkRhdGUuZ2V0RnVsbFllYXIoKSA9PT0gZHJhd1llYXIpOw0KCQkJaW5NYXhZZWFyID0gKG1heERhdGUgJiYgbWF4RGF0ZS5nZXRGdWxsWWVhcigpID09PSBkcmF3WWVhcik7DQoJCQltb250aEh0bWwgKz0gIjxzZWxlY3QgY2xhc3M9J3VpLWRhdGVwaWNrZXItbW9udGgnIGRhdGEtaGFuZGxlcj0nc2VsZWN0TW9udGgnIGRhdGEtZXZlbnQ9J2NoYW5nZSc+IjsNCgkJCWZvciAoIG1vbnRoID0gMDsgbW9udGggPCAxMjsgbW9udGgrKykgew0KCQkJCWlmICgoIWluTWluWWVhciB8fCBtb250aCA+PSBtaW5EYXRlLmdldE1vbnRoKCkpICYmICghaW5NYXhZZWFyIHx8IG1vbnRoIDw9IG1heERhdGUuZ2V0TW9udGgoKSkpIHsNCgkJCQkJbW9udGhIdG1sICs9ICI8b3B0aW9uIHZhbHVlPSciICsgbW9udGggKyAiJyIgKw0KCQkJCQkJKG1vbnRoID09PSBkcmF3TW9udGggPyAiIHNlbGVjdGVkPSdzZWxlY3RlZCciIDogIiIpICsNCgkJCQkJCSI+IiArIG1vbnRoTmFtZXNTaG9ydFttb250aF0gKyAiPC9vcHRpb24+IjsNCgkJCQl9DQoJCQl9DQoJCQltb250aEh0bWwgKz0gIjwvc2VsZWN0PiI7DQoJCX0NCg0KCQlpZiAoIXNob3dNb250aEFmdGVyWWVhcikgew0KCQkJaHRtbCArPSBtb250aEh0bWwgKyAoc2Vjb25kYXJ5IHx8ICEoY2hhbmdlTW9udGggJiYgY2hhbmdlWWVhcikgPyAiJiN4YTA7IiA6ICIiKTsNCgkJfQ0KDQoJCS8vIHllYXIgc2VsZWN0aW9uDQoJCWlmICggIWluc3QueWVhcnNodG1sICkgew0KCQkJaW5zdC55ZWFyc2h0bWwgPSAiIjsNCgkJCWlmIChzZWNvbmRhcnkgfHwgIWNoYW5nZVllYXIpIHsNCgkJCQlodG1sICs9ICI8c3BhbiBjbGFzcz0ndWktZGF0ZXBpY2tlci15ZWFyJz4iICsgZHJhd1llYXIgKyAiPC9zcGFuPiI7DQoJCQl9IGVsc2Ugew0KCQkJCS8vIGRldGVybWluZSByYW5nZSBvZiB5ZWFycyB0byBkaXNwbGF5DQoJCQkJeWVhcnMgPSB0aGlzLl9nZXQoaW5zdCwgInllYXJSYW5nZSIpLnNwbGl0KCI6Iik7DQoJCQkJdGhpc1llYXIgPSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCk7DQoJCQkJZGV0ZXJtaW5lWWVhciA9IGZ1bmN0aW9uKHZhbHVlKSB7DQoJCQkJCXZhciB5ZWFyID0gKHZhbHVlLm1hdGNoKC9jWytcLV0uKi8pID8gZHJhd1llYXIgKyBwYXJzZUludCh2YWx1ZS5zdWJzdHJpbmcoMSksIDEwKSA6DQoJCQkJCQkodmFsdWUubWF0Y2goL1srXC1dLiovKSA/IHRoaXNZZWFyICsgcGFyc2VJbnQodmFsdWUsIDEwKSA6DQoJCQkJCQlwYXJzZUludCh2YWx1ZSwgMTApKSk7DQoJCQkJCXJldHVybiAoaXNOYU4oeWVhcikgPyB0aGlzWWVhciA6IHllYXIpOw0KCQkJCX07DQoJCQkJeWVhciA9IGRldGVybWluZVllYXIoeWVhcnNbMF0pOw0KCQkJCWVuZFllYXIgPSBNYXRoLm1heCh5ZWFyLCBkZXRlcm1pbmVZZWFyKHllYXJzWzFdIHx8ICIiKSk7DQoJCQkJeWVhciA9IChtaW5EYXRlID8gTWF0aC5tYXgoeWVhciwgbWluRGF0ZS5nZXRGdWxsWWVhcigpKSA6IHllYXIpOw0KCQkJCWVuZFllYXIgPSAobWF4RGF0ZSA/IE1hdGgubWluKGVuZFllYXIsIG1heERhdGUuZ2V0RnVsbFllYXIoKSkgOiBlbmRZZWFyKTsNCgkJCQlpbnN0LnllYXJzaHRtbCArPSAiPHNlbGVjdCBjbGFzcz0ndWktZGF0ZXBpY2tlci15ZWFyJyBkYXRhLWhhbmRsZXI9J3NlbGVjdFllYXInIGRhdGEtZXZlbnQ9J2NoYW5nZSc+IjsNCgkJCQlmb3IgKDsgeWVhciA8PSBlbmRZZWFyOyB5ZWFyKyspIHsNCgkJCQkJaW5zdC55ZWFyc2h0bWwgKz0gIjxvcHRpb24gdmFsdWU9JyIgKyB5ZWFyICsgIiciICsNCgkJCQkJCSh5ZWFyID09PSBkcmF3WWVhciA/ICIgc2VsZWN0ZWQ9J3NlbGVjdGVkJyIgOiAiIikgKw0KCQkJCQkJIj4iICsgeWVhciArICI8L29wdGlvbj4iOw0KCQkJCX0NCgkJCQlpbnN0LnllYXJzaHRtbCArPSAiPC9zZWxlY3Q+IjsNCg0KCQkJCWh0bWwgKz0gaW5zdC55ZWFyc2h0bWw7DQoJCQkJaW5zdC55ZWFyc2h0bWwgPSBudWxsOw0KCQkJfQ0KCQl9DQoNCgkJaHRtbCArPSB0aGlzLl9nZXQoaW5zdCwgInllYXJTdWZmaXgiKTsNCgkJaWYgKHNob3dNb250aEFmdGVyWWVhcikgew0KCQkJaHRtbCArPSAoc2Vjb25kYXJ5IHx8ICEoY2hhbmdlTW9udGggJiYgY2hhbmdlWWVhcikgPyAiJiN4YTA7IiA6ICIiKSArIG1vbnRoSHRtbDsNCgkJfQ0KCQlodG1sICs9ICI8L2Rpdj4iOyAvLyBDbG9zZSBkYXRlcGlja2VyX2hlYWRlcg0KCQlyZXR1cm4gaHRtbDsNCgl9LA0KDQoJLyogQWRqdXN0IG9uZSBvZiB0aGUgZGF0ZSBzdWItZmllbGRzLiAqLw0KCV9hZGp1c3RJbnN0RGF0ZTogZnVuY3Rpb24oaW5zdCwgb2Zmc2V0LCBwZXJpb2QpIHsNCgkJdmFyIHllYXIgPSBpbnN0LmRyYXdZZWFyICsgKHBlcmlvZCA9PT0gIlkiID8gb2Zmc2V0IDogMCksDQoJCQltb250aCA9IGluc3QuZHJhd01vbnRoICsgKHBlcmlvZCA9PT0gIk0iID8gb2Zmc2V0IDogMCksDQoJCQlkYXkgPSBNYXRoLm1pbihpbnN0LnNlbGVjdGVkRGF5LCB0aGlzLl9nZXREYXlzSW5Nb250aCh5ZWFyLCBtb250aCkpICsgKHBlcmlvZCA9PT0gIkQiID8gb2Zmc2V0IDogMCksDQoJCQlkYXRlID0gdGhpcy5fcmVzdHJpY3RNaW5NYXgoaW5zdCwgdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoeWVhciwgbW9udGgsIGRheSkpKTsNCg0KCQlpbnN0LnNlbGVjdGVkRGF5ID0gZGF0ZS5nZXREYXRlKCk7DQoJCWluc3QuZHJhd01vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoID0gZGF0ZS5nZXRNb250aCgpOw0KCQlpbnN0LmRyYXdZZWFyID0gaW5zdC5zZWxlY3RlZFllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7DQoJCWlmIChwZXJpb2QgPT09ICJNIiB8fCBwZXJpb2QgPT09ICJZIikgew0KCQkJdGhpcy5fbm90aWZ5Q2hhbmdlKGluc3QpOw0KCQl9DQoJfSwNCg0KCS8qIEVuc3VyZSBhIGRhdGUgaXMgd2l0aGluIGFueSBtaW4vbWF4IGJvdW5kcy4gKi8NCglfcmVzdHJpY3RNaW5NYXg6IGZ1bmN0aW9uKGluc3QsIGRhdGUpIHsNCgkJdmFyIG1pbkRhdGUgPSB0aGlzLl9nZXRNaW5NYXhEYXRlKGluc3QsICJtaW4iKSwNCgkJCW1heERhdGUgPSB0aGlzLl9nZXRNaW5NYXhEYXRlKGluc3QsICJtYXgiKSwNCgkJCW5ld0RhdGUgPSAobWluRGF0ZSAmJiBkYXRlIDwgbWluRGF0ZSA/IG1pbkRhdGUgOiBkYXRlKTsNCgkJcmV0dXJuIChtYXhEYXRlICYmIG5ld0RhdGUgPiBtYXhEYXRlID8gbWF4RGF0ZSA6IG5ld0RhdGUpOw0KCX0sDQoNCgkvKiBOb3RpZnkgY2hhbmdlIG9mIG1vbnRoL3llYXIuICovDQoJX25vdGlmeUNoYW5nZTogZnVuY3Rpb24oaW5zdCkgew0KCQl2YXIgb25DaGFuZ2UgPSB0aGlzLl9nZXQoaW5zdCwgIm9uQ2hhbmdlTW9udGhZZWFyIik7DQoJCWlmIChvbkNoYW5nZSkgew0KCQkJb25DaGFuZ2UuYXBwbHkoKGluc3QuaW5wdXQgPyBpbnN0LmlucHV0WzBdIDogbnVsbCksDQoJCQkJW2luc3Quc2VsZWN0ZWRZZWFyLCBpbnN0LnNlbGVjdGVkTW9udGggKyAxLCBpbnN0XSk7DQoJCX0NCgl9LA0KDQoJLyogRGV0ZXJtaW5lIHRoZSBudW1iZXIgb2YgbW9udGhzIHRvIHNob3cuICovDQoJX2dldE51bWJlck9mTW9udGhzOiBmdW5jdGlvbihpbnN0KSB7DQoJCXZhciBudW1Nb250aHMgPSB0aGlzLl9nZXQoaW5zdCwgIm51bWJlck9mTW9udGhzIik7DQoJCXJldHVybiAobnVtTW9udGhzID09IG51bGwgPyBbMSwgMV0gOiAodHlwZW9mIG51bU1vbnRocyA9PT0gIm51bWJlciIgPyBbMSwgbnVtTW9udGhzXSA6IG51bU1vbnRocykpOw0KCX0sDQoNCgkvKiBEZXRlcm1pbmUgdGhlIGN1cnJlbnQgbWF4aW11bSBkYXRlIC0gZW5zdXJlIG5vIHRpbWUgY29tcG9uZW50cyBhcmUgc2V0LiAqLw0KCV9nZXRNaW5NYXhEYXRlOiBmdW5jdGlvbihpbnN0LCBtaW5NYXgpIHsNCgkJcmV0dXJuIHRoaXMuX2RldGVybWluZURhdGUoaW5zdCwgdGhpcy5fZ2V0KGluc3QsIG1pbk1heCArICJEYXRlIiksIG51bGwpOw0KCX0sDQoNCgkvKiBGaW5kIHRoZSBudW1iZXIgb2YgZGF5cyBpbiBhIGdpdmVuIG1vbnRoLiAqLw0KCV9nZXREYXlzSW5Nb250aDogZnVuY3Rpb24oeWVhciwgbW9udGgpIHsNCgkJcmV0dXJuIDMyIC0gdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoeWVhciwgbW9udGgsIDMyKSkuZ2V0RGF0ZSgpOw0KCX0sDQoNCgkvKiBGaW5kIHRoZSBkYXkgb2YgdGhlIHdlZWsgb2YgdGhlIGZpcnN0IG9mIGEgbW9udGguICovDQoJX2dldEZpcnN0RGF5T2ZNb250aDogZnVuY3Rpb24oeWVhciwgbW9udGgpIHsNCgkJcmV0dXJuIG5ldyBEYXRlKHllYXIsIG1vbnRoLCAxKS5nZXREYXkoKTsNCgl9LA0KDQoJLyogRGV0ZXJtaW5lcyBpZiB3ZSBzaG91bGQgYWxsb3cgYSAibmV4dC9wcmV2IiBtb250aCBkaXNwbGF5IGNoYW5nZS4gKi8NCglfY2FuQWRqdXN0TW9udGg6IGZ1bmN0aW9uKGluc3QsIG9mZnNldCwgY3VyWWVhciwgY3VyTW9udGgpIHsNCgkJdmFyIG51bU1vbnRocyA9IHRoaXMuX2dldE51bWJlck9mTW9udGhzKGluc3QpLA0KCQkJZGF0ZSA9IHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGN1clllYXIsDQoJCQljdXJNb250aCArIChvZmZzZXQgPCAwID8gb2Zmc2V0IDogbnVtTW9udGhzWzBdICogbnVtTW9udGhzWzFdKSwgMSkpOw0KDQoJCWlmIChvZmZzZXQgPCAwKSB7DQoJCQlkYXRlLnNldERhdGUodGhpcy5fZ2V0RGF5c0luTW9udGgoZGF0ZS5nZXRGdWxsWWVhcigpLCBkYXRlLmdldE1vbnRoKCkpKTsNCgkJfQ0KCQlyZXR1cm4gdGhpcy5faXNJblJhbmdlKGluc3QsIGRhdGUpOw0KCX0sDQoNCgkvKiBJcyB0aGUgZ2l2ZW4gZGF0ZSBpbiB0aGUgYWNjZXB0ZWQgcmFuZ2U/ICovDQoJX2lzSW5SYW5nZTogZnVuY3Rpb24oaW5zdCwgZGF0ZSkgew0KCQl2YXIgeWVhclNwbGl0LCBjdXJyZW50WWVhciwNCgkJCW1pbkRhdGUgPSB0aGlzLl9nZXRNaW5NYXhEYXRlKGluc3QsICJtaW4iKSwNCgkJCW1heERhdGUgPSB0aGlzLl9nZXRNaW5NYXhEYXRlKGluc3QsICJtYXgiKSwNCgkJCW1pblllYXIgPSBudWxsLA0KCQkJbWF4WWVhciA9IG51bGwsDQoJCQl5ZWFycyA9IHRoaXMuX2dldChpbnN0LCAieWVhclJhbmdlIik7DQoJCQlpZiAoeWVhcnMpew0KCQkJCXllYXJTcGxpdCA9IHllYXJzLnNwbGl0KCI6Iik7DQoJCQkJY3VycmVudFllYXIgPSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCk7DQoJCQkJbWluWWVhciA9IHBhcnNlSW50KHllYXJTcGxpdFswXSwgMTApOw0KCQkJCW1heFllYXIgPSBwYXJzZUludCh5ZWFyU3BsaXRbMV0sIDEwKTsNCgkJCQlpZiAoIHllYXJTcGxpdFswXS5tYXRjaCgvWytcLV0uKi8pICkgew0KCQkJCQltaW5ZZWFyICs9IGN1cnJlbnRZZWFyOw0KCQkJCX0NCgkJCQlpZiAoIHllYXJTcGxpdFsxXS5tYXRjaCgvWytcLV0uKi8pICkgew0KCQkJCQltYXhZZWFyICs9IGN1cnJlbnRZZWFyOw0KCQkJCX0NCgkJCX0NCg0KCQlyZXR1cm4gKCghbWluRGF0ZSB8fCBkYXRlLmdldFRpbWUoKSA+PSBtaW5EYXRlLmdldFRpbWUoKSkgJiYNCgkJCSghbWF4RGF0ZSB8fCBkYXRlLmdldFRpbWUoKSA8PSBtYXhEYXRlLmdldFRpbWUoKSkgJiYNCgkJCSghbWluWWVhciB8fCBkYXRlLmdldEZ1bGxZZWFyKCkgPj0gbWluWWVhcikgJiYNCgkJCSghbWF4WWVhciB8fCBkYXRlLmdldEZ1bGxZZWFyKCkgPD0gbWF4WWVhcikpOw0KCX0sDQoNCgkvKiBQcm92aWRlIHRoZSBjb25maWd1cmF0aW9uIHNldHRpbmdzIGZvciBmb3JtYXR0aW5nL3BhcnNpbmcuICovDQoJX2dldEZvcm1hdENvbmZpZzogZnVuY3Rpb24oaW5zdCkgew0KCQl2YXIgc2hvcnRZZWFyQ3V0b2ZmID0gdGhpcy5fZ2V0KGluc3QsICJzaG9ydFllYXJDdXRvZmYiKTsNCgkJc2hvcnRZZWFyQ3V0b2ZmID0gKHR5cGVvZiBzaG9ydFllYXJDdXRvZmYgIT09ICJzdHJpbmciID8gc2hvcnRZZWFyQ3V0b2ZmIDoNCgkJCW5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSAlIDEwMCArIHBhcnNlSW50KHNob3J0WWVhckN1dG9mZiwgMTApKTsNCgkJcmV0dXJuIHtzaG9ydFllYXJDdXRvZmY6IHNob3J0WWVhckN1dG9mZiwNCgkJCWRheU5hbWVzU2hvcnQ6IHRoaXMuX2dldChpbnN0LCAiZGF5TmFtZXNTaG9ydCIpLCBkYXlOYW1lczogdGhpcy5fZ2V0KGluc3QsICJkYXlOYW1lcyIpLA0KCQkJbW9udGhOYW1lc1Nob3J0OiB0aGlzLl9nZXQoaW5zdCwgIm1vbnRoTmFtZXNTaG9ydCIpLCBtb250aE5hbWVzOiB0aGlzLl9nZXQoaW5zdCwgIm1vbnRoTmFtZXMiKX07DQoJfSwNCg0KCS8qIEZvcm1hdCB0aGUgZ2l2ZW4gZGF0ZSBmb3IgZGlzcGxheS4gKi8NCglfZm9ybWF0RGF0ZTogZnVuY3Rpb24oaW5zdCwgZGF5LCBtb250aCwgeWVhcikgew0KCQlpZiAoIWRheSkgew0KCQkJaW5zdC5jdXJyZW50RGF5ID0gaW5zdC5zZWxlY3RlZERheTsNCgkJCWluc3QuY3VycmVudE1vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoOw0KCQkJaW5zdC5jdXJyZW50WWVhciA9IGluc3Quc2VsZWN0ZWRZZWFyOw0KCQl9DQoJCXZhciBkYXRlID0gKGRheSA/ICh0eXBlb2YgZGF5ID09PSAib2JqZWN0IiA/IGRheSA6DQoJCQl0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZSh5ZWFyLCBtb250aCwgZGF5KSkpIDoNCgkJCXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGluc3QuY3VycmVudFllYXIsIGluc3QuY3VycmVudE1vbnRoLCBpbnN0LmN1cnJlbnREYXkpKSk7DQoJCXJldHVybiB0aGlzLmZvcm1hdERhdGUodGhpcy5fZ2V0KGluc3QsICJkYXRlRm9ybWF0IiksIGRhdGUsIHRoaXMuX2dldEZvcm1hdENvbmZpZyhpbnN0KSk7DQoJfQ0KfSk7DQoNCi8qDQogKiBCaW5kIGhvdmVyIGV2ZW50cyBmb3IgZGF0ZXBpY2tlciBlbGVtZW50cy4NCiAqIERvbmUgdmlhIGRlbGVnYXRlIHNvIHRoZSBiaW5kaW5nIG9ubHkgb2NjdXJzIG9uY2UgaW4gdGhlIGxpZmV0aW1lIG9mIHRoZSBwYXJlbnQgZGl2Lg0KICogR2xvYmFsIGRhdGVwaWNrZXJfaW5zdEFjdGl2ZSwgc2V0IGJ5IF91cGRhdGVEYXRlcGlja2VyIGFsbG93cyB0aGUgaGFuZGxlcnMgdG8gZmluZCB0aGVpciB3YXkgYmFjayB0byB0aGUgYWN0aXZlIHBpY2tlci4NCiAqLw0KZnVuY3Rpb24gZGF0ZXBpY2tlcl9iaW5kSG92ZXIoZHBEaXYpIHsNCgl2YXIgc2VsZWN0b3IgPSAiYnV0dG9uLCAudWktZGF0ZXBpY2tlci1wcmV2LCAudWktZGF0ZXBpY2tlci1uZXh0LCAudWktZGF0ZXBpY2tlci1jYWxlbmRhciB0ZCBhIjsNCglyZXR1cm4gZHBEaXYuZGVsZWdhdGUoc2VsZWN0b3IsICJtb3VzZW91dCIsIGZ1bmN0aW9uKCkgew0KCQkJJCh0aGlzKS5yZW1vdmVDbGFzcygidWktc3RhdGUtaG92ZXIiKTsNCgkJCWlmICh0aGlzLmNsYXNzTmFtZS5pbmRleE9mKCJ1aS1kYXRlcGlja2VyLXByZXYiKSAhPT0gLTEpIHsNCgkJCQkkKHRoaXMpLnJlbW92ZUNsYXNzKCJ1aS1kYXRlcGlja2VyLXByZXYtaG92ZXIiKTsNCgkJCX0NCgkJCWlmICh0aGlzLmNsYXNzTmFtZS5pbmRleE9mKCJ1aS1kYXRlcGlja2VyLW5leHQiKSAhPT0gLTEpIHsNCgkJCQkkKHRoaXMpLnJlbW92ZUNsYXNzKCJ1aS1kYXRlcGlja2VyLW5leHQtaG92ZXIiKTsNCgkJCX0NCgkJfSkNCgkJLmRlbGVnYXRlKCBzZWxlY3RvciwgIm1vdXNlb3ZlciIsIGRhdGVwaWNrZXJfaGFuZGxlTW91c2VvdmVyICk7DQp9DQoNCmZ1bmN0aW9uIGRhdGVwaWNrZXJfaGFuZGxlTW91c2VvdmVyKCkgew0KCWlmICghJC5kYXRlcGlja2VyLl9pc0Rpc2FibGVkRGF0ZXBpY2tlciggZGF0ZXBpY2tlcl9pbnN0QWN0aXZlLmlubGluZT8gZGF0ZXBpY2tlcl9pbnN0QWN0aXZlLmRwRGl2LnBhcmVudCgpWzBdIDogZGF0ZXBpY2tlcl9pbnN0QWN0aXZlLmlucHV0WzBdKSkgew0KCQkkKHRoaXMpLnBhcmVudHMoIi51aS1kYXRlcGlja2VyLWNhbGVuZGFyIikuZmluZCgiYSIpLnJlbW92ZUNsYXNzKCJ1aS1zdGF0ZS1ob3ZlciIpOw0KCQkkKHRoaXMpLmFkZENsYXNzKCJ1aS1zdGF0ZS1ob3ZlciIpOw0KCQlpZiAodGhpcy5jbGFzc05hbWUuaW5kZXhPZigidWktZGF0ZXBpY2tlci1wcmV2IikgIT09IC0xKSB7DQoJCQkkKHRoaXMpLmFkZENsYXNzKCJ1aS1kYXRlcGlja2VyLXByZXYtaG92ZXIiKTsNCgkJfQ0KCQlpZiAodGhpcy5jbGFzc05hbWUuaW5kZXhPZigidWktZGF0ZXBpY2tlci1uZXh0IikgIT09IC0xKSB7DQoJCQkkKHRoaXMpLmFkZENsYXNzKCJ1aS1kYXRlcGlja2VyLW5leHQtaG92ZXIiKTsNCgkJfQ0KCX0NCn0NCg0KLyogalF1ZXJ5IGV4dGVuZCBub3cgaWdub3JlcyBudWxscyEgKi8NCmZ1bmN0aW9uIGRhdGVwaWNrZXJfZXh0ZW5kUmVtb3ZlKHRhcmdldCwgcHJvcHMpIHsNCgkkLmV4dGVuZCh0YXJnZXQsIHByb3BzKTsNCglmb3IgKHZhciBuYW1lIGluIHByb3BzKSB7DQoJCWlmIChwcm9wc1tuYW1lXSA9PSBudWxsKSB7DQoJCQl0YXJnZXRbbmFtZV0gPSBwcm9wc1tuYW1lXTsNCgkJfQ0KCX0NCglyZXR1cm4gdGFyZ2V0Ow0KfQ0KDQovKiBJbnZva2UgdGhlIGRhdGVwaWNrZXIgZnVuY3Rpb25hbGl0eS4NCiAgIEBwYXJhbSAgb3B0aW9ucyAgc3RyaW5nIC0gYSBjb21tYW5kLCBvcHRpb25hbGx5IGZvbGxvd2VkIGJ5IGFkZGl0aW9uYWwgcGFyYW1ldGVycyBvcg0KCQkJCQlPYmplY3QgLSBzZXR0aW5ncyBmb3IgYXR0YWNoaW5nIG5ldyBkYXRlcGlja2VyIGZ1bmN0aW9uYWxpdHkNCiAgIEByZXR1cm4gIGpRdWVyeSBvYmplY3QgKi8NCiQuZm4uZGF0ZXBpY2tlciA9IGZ1bmN0aW9uKG9wdGlvbnMpew0KDQoJLyogVmVyaWZ5IGFuIGVtcHR5IGNvbGxlY3Rpb24gd2Fzbid0IHBhc3NlZCAtIEZpeGVzICM2OTc2ICovDQoJaWYgKCAhdGhpcy5sZW5ndGggKSB7DQoJCXJldHVybiB0aGlzOw0KCX0NCg0KCS8qIEluaXRpYWxpc2UgdGhlIGRhdGUgcGlja2VyLiAqLw0KCWlmICghJC5kYXRlcGlja2VyLmluaXRpYWxpemVkKSB7DQoJCSQoZG9jdW1lbnQpLm1vdXNlZG93bigkLmRhdGVwaWNrZXIuX2NoZWNrRXh0ZXJuYWxDbGljayk7DQoJCSQuZGF0ZXBpY2tlci5pbml0aWFsaXplZCA9IHRydWU7DQoJfQ0KDQoJLyogQXBwZW5kIGRhdGVwaWNrZXIgbWFpbiBjb250YWluZXIgdG8gYm9keSBpZiBub3QgZXhpc3QuICovDQoJaWYgKCQoIiMiKyQuZGF0ZXBpY2tlci5fbWFpbkRpdklkKS5sZW5ndGggPT09IDApIHsNCgkJJCgiYm9keSIpLmFwcGVuZCgkLmRhdGVwaWNrZXIuZHBEaXYpOw0KCX0NCg0KCXZhciBvdGhlckFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpOw0KCWlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gInN0cmluZyIgJiYgKG9wdGlvbnMgPT09ICJpc0Rpc2FibGVkIiB8fCBvcHRpb25zID09PSAiZ2V0RGF0ZSIgfHwgb3B0aW9ucyA9PT0gIndpZGdldCIpKSB7DQoJCXJldHVybiAkLmRhdGVwaWNrZXJbIl8iICsgb3B0aW9ucyArICJEYXRlcGlja2VyIl0uDQoJCQlhcHBseSgkLmRhdGVwaWNrZXIsIFt0aGlzWzBdXS5jb25jYXQob3RoZXJBcmdzKSk7DQoJfQ0KCWlmIChvcHRpb25zID09PSAib3B0aW9uIiAmJiBhcmd1bWVudHMubGVuZ3RoID09PSAyICYmIHR5cGVvZiBhcmd1bWVudHNbMV0gPT09ICJzdHJpbmciKSB7DQoJCXJldHVybiAkLmRhdGVwaWNrZXJbIl8iICsgb3B0aW9ucyArICJEYXRlcGlja2VyIl0uDQoJCQlhcHBseSgkLmRhdGVwaWNrZXIsIFt0aGlzWzBdXS5jb25jYXQob3RoZXJBcmdzKSk7DQoJfQ0KCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7DQoJCXR5cGVvZiBvcHRpb25zID09PSAic3RyaW5nIiA/DQoJCQkkLmRhdGVwaWNrZXJbIl8iICsgb3B0aW9ucyArICJEYXRlcGlja2VyIl0uDQoJCQkJYXBwbHkoJC5kYXRlcGlja2VyLCBbdGhpc10uY29uY2F0KG90aGVyQXJncykpIDoNCgkJCSQuZGF0ZXBpY2tlci5fYXR0YWNoRGF0ZXBpY2tlcih0aGlzLCBvcHRpb25zKTsNCgl9KTsNCn07DQoNCiQuZGF0ZXBpY2tlciA9IG5ldyBEYXRlcGlja2VyKCk7IC8vIHNpbmdsZXRvbiBpbnN0YW5jZQ0KJC5kYXRlcGlja2VyLmluaXRpYWxpemVkID0gZmFsc2U7DQokLmRhdGVwaWNrZXIudXVpZCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOw0KJC5kYXRlcGlja2VyLnZlcnNpb24gPSAiMS4xMS4yIjsNCg0KdmFyIGRhdGVwaWNrZXIgPSAkLmRhdGVwaWNrZXI7DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgRHJhZ2dhYmxlIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9kcmFnZ2FibGUvDQogKi8NCg0KDQokLndpZGdldCgidWkuZHJhZ2dhYmxlIiwgJC51aS5tb3VzZSwgew0KCXZlcnNpb246ICIxLjExLjIiLA0KCXdpZGdldEV2ZW50UHJlZml4OiAiZHJhZyIsDQoJb3B0aW9uczogew0KCQlhZGRDbGFzc2VzOiB0cnVlLA0KCQlhcHBlbmRUbzogInBhcmVudCIsDQoJCWF4aXM6IGZhbHNlLA0KCQljb25uZWN0VG9Tb3J0YWJsZTogZmFsc2UsDQoJCWNvbnRhaW5tZW50OiBmYWxzZSwNCgkJY3Vyc29yOiAiYXV0byIsDQoJCWN1cnNvckF0OiBmYWxzZSwNCgkJZ3JpZDogZmFsc2UsDQoJCWhhbmRsZTogZmFsc2UsDQoJCWhlbHBlcjogIm9yaWdpbmFsIiwNCgkJaWZyYW1lRml4OiBmYWxzZSwNCgkJb3BhY2l0eTogZmFsc2UsDQoJCXJlZnJlc2hQb3NpdGlvbnM6IGZhbHNlLA0KCQlyZXZlcnQ6IGZhbHNlLA0KCQlyZXZlcnREdXJhdGlvbjogNTAwLA0KCQlzY29wZTogImRlZmF1bHQiLA0KCQlzY3JvbGw6IHRydWUsDQoJCXNjcm9sbFNlbnNpdGl2aXR5OiAyMCwNCgkJc2Nyb2xsU3BlZWQ6IDIwLA0KCQlzbmFwOiBmYWxzZSwNCgkJc25hcE1vZGU6ICJib3RoIiwNCgkJc25hcFRvbGVyYW5jZTogMjAsDQoJCXN0YWNrOiBmYWxzZSwNCgkJekluZGV4OiBmYWxzZSwNCg0KCQkvLyBjYWxsYmFja3MNCgkJZHJhZzogbnVsbCwNCgkJc3RhcnQ6IG51bGwsDQoJCXN0b3A6IG51bGwNCgl9LA0KCV9jcmVhdGU6IGZ1bmN0aW9uKCkgew0KDQoJCWlmICggdGhpcy5vcHRpb25zLmhlbHBlciA9PT0gIm9yaWdpbmFsIiApIHsNCgkJCXRoaXMuX3NldFBvc2l0aW9uUmVsYXRpdmUoKTsNCgkJfQ0KCQlpZiAodGhpcy5vcHRpb25zLmFkZENsYXNzZXMpew0KCQkJdGhpcy5lbGVtZW50LmFkZENsYXNzKCJ1aS1kcmFnZ2FibGUiKTsNCgkJfQ0KCQlpZiAodGhpcy5vcHRpb25zLmRpc2FibGVkKXsNCgkJCXRoaXMuZWxlbWVudC5hZGRDbGFzcygidWktZHJhZ2dhYmxlLWRpc2FibGVkIik7DQoJCX0NCgkJdGhpcy5fc2V0SGFuZGxlQ2xhc3NOYW1lKCk7DQoNCgkJdGhpcy5fbW91c2VJbml0KCk7DQoJfSwNCg0KCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgew0KCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOw0KCQlpZiAoIGtleSA9PT0gImhhbmRsZSIgKSB7DQoJCQl0aGlzLl9yZW1vdmVIYW5kbGVDbGFzc05hbWUoKTsNCgkJCXRoaXMuX3NldEhhbmRsZUNsYXNzTmFtZSgpOw0KCQl9DQoJfSwNCg0KCV9kZXN0cm95OiBmdW5jdGlvbigpIHsNCgkJaWYgKCAoIHRoaXMuaGVscGVyIHx8IHRoaXMuZWxlbWVudCApLmlzKCAiLnVpLWRyYWdnYWJsZS1kcmFnZ2luZyIgKSApIHsNCgkJCXRoaXMuZGVzdHJveU9uQ2xlYXIgPSB0cnVlOw0KCQkJcmV0dXJuOw0KCQl9DQoJCXRoaXMuZWxlbWVudC5yZW1vdmVDbGFzcyggInVpLWRyYWdnYWJsZSB1aS1kcmFnZ2FibGUtZHJhZ2dpbmcgdWktZHJhZ2dhYmxlLWRpc2FibGVkIiApOw0KCQl0aGlzLl9yZW1vdmVIYW5kbGVDbGFzc05hbWUoKTsNCgkJdGhpcy5fbW91c2VEZXN0cm95KCk7DQoJfSwNCg0KCV9tb3VzZUNhcHR1cmU6IGZ1bmN0aW9uKGV2ZW50KSB7DQoJCXZhciBvID0gdGhpcy5vcHRpb25zOw0KDQoJCXRoaXMuX2JsdXJBY3RpdmVFbGVtZW50KCBldmVudCApOw0KDQoJCS8vIGFtb25nIG90aGVycywgcHJldmVudCBhIGRyYWcgb24gYSByZXNpemFibGUtaGFuZGxlDQoJCWlmICh0aGlzLmhlbHBlciB8fCBvLmRpc2FibGVkIHx8ICQoZXZlbnQudGFyZ2V0KS5jbG9zZXN0KCIudWktcmVzaXphYmxlLWhhbmRsZSIpLmxlbmd0aCA+IDApIHsNCgkJCXJldHVybiBmYWxzZTsNCgkJfQ0KDQoJCS8vUXVpdCBpZiB3ZSdyZSBub3Qgb24gYSB2YWxpZCBoYW5kbGUNCgkJdGhpcy5oYW5kbGUgPSB0aGlzLl9nZXRIYW5kbGUoZXZlbnQpOw0KCQlpZiAoIXRoaXMuaGFuZGxlKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCg0KCQl0aGlzLl9ibG9ja0ZyYW1lcyggby5pZnJhbWVGaXggPT09IHRydWUgPyAiaWZyYW1lIiA6IG8uaWZyYW1lRml4ICk7DQoNCgkJcmV0dXJuIHRydWU7DQoNCgl9LA0KDQoJX2Jsb2NrRnJhbWVzOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7DQoJCXRoaXMuaWZyYW1lQmxvY2tzID0gdGhpcy5kb2N1bWVudC5maW5kKCBzZWxlY3RvciApLm1hcChmdW5jdGlvbigpIHsNCgkJCXZhciBpZnJhbWUgPSAkKCB0aGlzICk7DQoNCgkJCXJldHVybiAkKCAiPGRpdj4iICkNCgkJCQkuY3NzKCAicG9zaXRpb24iLCAiYWJzb2x1dGUiICkNCgkJCQkuYXBwZW5kVG8oIGlmcmFtZS5wYXJlbnQoKSApDQoJCQkJLm91dGVyV2lkdGgoIGlmcmFtZS5vdXRlcldpZHRoKCkgKQ0KCQkJCS5vdXRlckhlaWdodCggaWZyYW1lLm91dGVySGVpZ2h0KCkgKQ0KCQkJCS5vZmZzZXQoIGlmcmFtZS5vZmZzZXQoKSApWyAwIF07DQoJCX0pOw0KCX0sDQoNCglfdW5ibG9ja0ZyYW1lczogZnVuY3Rpb24oKSB7DQoJCWlmICggdGhpcy5pZnJhbWVCbG9ja3MgKSB7DQoJCQl0aGlzLmlmcmFtZUJsb2Nrcy5yZW1vdmUoKTsNCgkJCWRlbGV0ZSB0aGlzLmlmcmFtZUJsb2NrczsNCgkJfQ0KCX0sDQoNCglfYmx1ckFjdGl2ZUVsZW1lbnQ6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdmFyIGRvY3VtZW50ID0gdGhpcy5kb2N1bWVudFsgMCBdOw0KDQoJCS8vIE9ubHkgbmVlZCB0byBibHVyIGlmIHRoZSBldmVudCBvY2N1cnJlZCBvbiB0aGUgZHJhZ2dhYmxlIGl0c2VsZiwgc2VlICMxMDUyNw0KCQlpZiAoICF0aGlzLmhhbmRsZUVsZW1lbnQuaXMoIGV2ZW50LnRhcmdldCApICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJLy8gc3VwcG9ydDogSUU5DQoJCS8vIElFOSB0aHJvd3MgYW4gIlVuc3BlY2lmaWVkIGVycm9yIiBhY2Nlc3NpbmcgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBmcm9tIGFuIDxpZnJhbWU+DQoJCXRyeSB7DQoNCgkJCS8vIFN1cHBvcnQ6IElFOSwgSUUxMA0KCQkJLy8gSWYgdGhlIDxib2R5PiBpcyBibHVycmVkLCBJRSB3aWxsIHN3aXRjaCB3aW5kb3dzLCBzZWUgIzk1MjANCgkJCWlmICggZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJiBkb2N1bWVudC5hY3RpdmVFbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICJib2R5IiApIHsNCg0KCQkJCS8vIEJsdXIgYW55IGVsZW1lbnQgdGhhdCBjdXJyZW50bHkgaGFzIGZvY3VzLCBzZWUgIzQyNjENCgkJCQkkKCBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICkuYmx1cigpOw0KCQkJfQ0KCQl9IGNhdGNoICggZXJyb3IgKSB7fQ0KCX0sDQoNCglfbW91c2VTdGFydDogZnVuY3Rpb24oZXZlbnQpIHsNCg0KCQl2YXIgbyA9IHRoaXMub3B0aW9uczsNCg0KCQkvL0NyZWF0ZSBhbmQgYXBwZW5kIHRoZSB2aXNpYmxlIGhlbHBlcg0KCQl0aGlzLmhlbHBlciA9IHRoaXMuX2NyZWF0ZUhlbHBlcihldmVudCk7DQoNCgkJdGhpcy5oZWxwZXIuYWRkQ2xhc3MoInVpLWRyYWdnYWJsZS1kcmFnZ2luZyIpOw0KDQoJCS8vQ2FjaGUgdGhlIGhlbHBlciBzaXplDQoJCXRoaXMuX2NhY2hlSGVscGVyUHJvcG9ydGlvbnMoKTsNCg0KCQkvL0lmIGRkbWFuYWdlciBpcyB1c2VkIGZvciBkcm9wcGFibGVzLCBzZXQgdGhlIGdsb2JhbCBkcmFnZ2FibGUNCgkJaWYgKCQudWkuZGRtYW5hZ2VyKSB7DQoJCQkkLnVpLmRkbWFuYWdlci5jdXJyZW50ID0gdGhpczsNCgkJfQ0KDQoJCS8qDQoJCSAqIC0gUG9zaXRpb24gZ2VuZXJhdGlvbiAtDQoJCSAqIFRoaXMgYmxvY2sgZ2VuZXJhdGVzIGV2ZXJ5dGhpbmcgcG9zaXRpb24gcmVsYXRlZCAtIGl0J3MgdGhlIGNvcmUgb2YgZHJhZ2dhYmxlcy4NCgkJICovDQoNCgkJLy9DYWNoZSB0aGUgbWFyZ2lucyBvZiB0aGUgb3JpZ2luYWwgZWxlbWVudA0KCQl0aGlzLl9jYWNoZU1hcmdpbnMoKTsNCg0KCQkvL1N0b3JlIHRoZSBoZWxwZXIncyBjc3MgcG9zaXRpb24NCgkJdGhpcy5jc3NQb3NpdGlvbiA9IHRoaXMuaGVscGVyLmNzcyggInBvc2l0aW9uIiApOw0KCQl0aGlzLnNjcm9sbFBhcmVudCA9IHRoaXMuaGVscGVyLnNjcm9sbFBhcmVudCggdHJ1ZSApOw0KCQl0aGlzLm9mZnNldFBhcmVudCA9IHRoaXMuaGVscGVyLm9mZnNldFBhcmVudCgpOw0KCQl0aGlzLmhhc0ZpeGVkQW5jZXN0b3IgPSB0aGlzLmhlbHBlci5wYXJlbnRzKCkuZmlsdGVyKGZ1bmN0aW9uKCkgew0KCQkJCXJldHVybiAkKCB0aGlzICkuY3NzKCAicG9zaXRpb24iICkgPT09ICJmaXhlZCI7DQoJCQl9KS5sZW5ndGggPiAwOw0KDQoJCS8vVGhlIGVsZW1lbnQncyBhYnNvbHV0ZSBwb3NpdGlvbiBvbiB0aGUgcGFnZSBtaW51cyBtYXJnaW5zDQoJCXRoaXMucG9zaXRpb25BYnMgPSB0aGlzLmVsZW1lbnQub2Zmc2V0KCk7DQoJCXRoaXMuX3JlZnJlc2hPZmZzZXRzKCBldmVudCApOw0KDQoJCS8vR2VuZXJhdGUgdGhlIG9yaWdpbmFsIHBvc2l0aW9uDQoJCXRoaXMub3JpZ2luYWxQb3NpdGlvbiA9IHRoaXMucG9zaXRpb24gPSB0aGlzLl9nZW5lcmF0ZVBvc2l0aW9uKCBldmVudCwgZmFsc2UgKTsNCgkJdGhpcy5vcmlnaW5hbFBhZ2VYID0gZXZlbnQucGFnZVg7DQoJCXRoaXMub3JpZ2luYWxQYWdlWSA9IGV2ZW50LnBhZ2VZOw0KDQoJCS8vQWRqdXN0IHRoZSBtb3VzZSBvZmZzZXQgcmVsYXRpdmUgdG8gdGhlIGhlbHBlciBpZiAiY3Vyc29yQXQiIGlzIHN1cHBsaWVkDQoJCShvLmN1cnNvckF0ICYmIHRoaXMuX2FkanVzdE9mZnNldEZyb21IZWxwZXIoby5jdXJzb3JBdCkpOw0KDQoJCS8vU2V0IGEgY29udGFpbm1lbnQgaWYgZ2l2ZW4gaW4gdGhlIG9wdGlvbnMNCgkJdGhpcy5fc2V0Q29udGFpbm1lbnQoKTsNCg0KCQkvL1RyaWdnZXIgZXZlbnQgKyBjYWxsYmFja3MNCgkJaWYgKHRoaXMuX3RyaWdnZXIoInN0YXJ0IiwgZXZlbnQpID09PSBmYWxzZSkgew0KCQkJdGhpcy5fY2xlYXIoKTsNCgkJCXJldHVybiBmYWxzZTsNCgkJfQ0KDQoJCS8vUmVjYWNoZSB0aGUgaGVscGVyIHNpemUNCgkJdGhpcy5fY2FjaGVIZWxwZXJQcm9wb3J0aW9ucygpOw0KDQoJCS8vUHJlcGFyZSB0aGUgZHJvcHBhYmxlIG9mZnNldHMNCgkJaWYgKCQudWkuZGRtYW5hZ2VyICYmICFvLmRyb3BCZWhhdmlvdXIpIHsNCgkJCSQudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKHRoaXMsIGV2ZW50KTsNCgkJfQ0KDQoJCS8vIFJlc2V0IGhlbHBlcidzIHJpZ2h0L2JvdHRvbSBjc3MgaWYgdGhleSdyZSBzZXQgYW5kIHNldCBleHBsaWNpdCB3aWR0aC9oZWlnaHQgaW5zdGVhZA0KCQkvLyBhcyB0aGlzIHByZXZlbnRzIHJlc2l6aW5nIG9mIGVsZW1lbnRzIHdpdGggcmlnaHQvYm90dG9tIHNldCAoc2VlICM3NzcyKQ0KCQl0aGlzLl9ub3JtYWxpemVSaWdodEJvdHRvbSgpOw0KDQoJCXRoaXMuX21vdXNlRHJhZyhldmVudCwgdHJ1ZSk7IC8vRXhlY3V0ZSB0aGUgZHJhZyBvbmNlIC0gdGhpcyBjYXVzZXMgdGhlIGhlbHBlciBub3QgdG8gYmUgdmlzaWJsZSBiZWZvcmUgZ2V0dGluZyBpdHMgY29ycmVjdCBwb3NpdGlvbg0KDQoJCS8vSWYgdGhlIGRkbWFuYWdlciBpcyB1c2VkIGZvciBkcm9wcGFibGVzLCBpbmZvcm0gdGhlIG1hbmFnZXIgdGhhdCBkcmFnZ2luZyBoYXMgc3RhcnRlZCAoc2VlICM1MDAzKQ0KCQlpZiAoICQudWkuZGRtYW5hZ2VyICkgew0KCQkJJC51aS5kZG1hbmFnZXIuZHJhZ1N0YXJ0KHRoaXMsIGV2ZW50KTsNCgkJfQ0KDQoJCXJldHVybiB0cnVlOw0KCX0sDQoNCglfcmVmcmVzaE9mZnNldHM6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdGhpcy5vZmZzZXQgPSB7DQoJCQl0b3A6IHRoaXMucG9zaXRpb25BYnMudG9wIC0gdGhpcy5tYXJnaW5zLnRvcCwNCgkJCWxlZnQ6IHRoaXMucG9zaXRpb25BYnMubGVmdCAtIHRoaXMubWFyZ2lucy5sZWZ0LA0KCQkJc2Nyb2xsOiBmYWxzZSwNCgkJCXBhcmVudDogdGhpcy5fZ2V0UGFyZW50T2Zmc2V0KCksDQoJCQlyZWxhdGl2ZTogdGhpcy5fZ2V0UmVsYXRpdmVPZmZzZXQoKQ0KCQl9Ow0KDQoJCXRoaXMub2Zmc2V0LmNsaWNrID0gew0KCQkJbGVmdDogZXZlbnQucGFnZVggLSB0aGlzLm9mZnNldC5sZWZ0LA0KCQkJdG9wOiBldmVudC5wYWdlWSAtIHRoaXMub2Zmc2V0LnRvcA0KCQl9Ow0KCX0sDQoNCglfbW91c2VEcmFnOiBmdW5jdGlvbihldmVudCwgbm9Qcm9wYWdhdGlvbikgew0KCQkvLyByZXNldCBhbnkgbmVjZXNzYXJ5IGNhY2hlZCBwcm9wZXJ0aWVzIChzZWUgIzUwMDkpDQoJCWlmICggdGhpcy5oYXNGaXhlZEFuY2VzdG9yICkgew0KCQkJdGhpcy5vZmZzZXQucGFyZW50ID0gdGhpcy5fZ2V0UGFyZW50T2Zmc2V0KCk7DQoJCX0NCg0KCQkvL0NvbXB1dGUgdGhlIGhlbHBlcnMgcG9zaXRpb24NCgkJdGhpcy5wb3NpdGlvbiA9IHRoaXMuX2dlbmVyYXRlUG9zaXRpb24oIGV2ZW50LCB0cnVlICk7DQoJCXRoaXMucG9zaXRpb25BYnMgPSB0aGlzLl9jb252ZXJ0UG9zaXRpb25UbygiYWJzb2x1dGUiKTsNCg0KCQkvL0NhbGwgcGx1Z2lucyBhbmQgY2FsbGJhY2tzIGFuZCB1c2UgdGhlIHJlc3VsdGluZyBwb3NpdGlvbiBpZiBzb21ldGhpbmcgaXMgcmV0dXJuZWQNCgkJaWYgKCFub1Byb3BhZ2F0aW9uKSB7DQoJCQl2YXIgdWkgPSB0aGlzLl91aUhhc2goKTsNCgkJCWlmICh0aGlzLl90cmlnZ2VyKCJkcmFnIiwgZXZlbnQsIHVpKSA9PT0gZmFsc2UpIHsNCgkJCQl0aGlzLl9tb3VzZVVwKHt9KTsNCgkJCQlyZXR1cm4gZmFsc2U7DQoJCQl9DQoJCQl0aGlzLnBvc2l0aW9uID0gdWkucG9zaXRpb247DQoJCX0NCg0KCQl0aGlzLmhlbHBlclsgMCBdLnN0eWxlLmxlZnQgPSB0aGlzLnBvc2l0aW9uLmxlZnQgKyAicHgiOw0KCQl0aGlzLmhlbHBlclsgMCBdLnN0eWxlLnRvcCA9IHRoaXMucG9zaXRpb24udG9wICsgInB4IjsNCg0KCQlpZiAoJC51aS5kZG1hbmFnZXIpIHsNCgkJCSQudWkuZGRtYW5hZ2VyLmRyYWcodGhpcywgZXZlbnQpOw0KCQl9DQoNCgkJcmV0dXJuIGZhbHNlOw0KCX0sDQoNCglfbW91c2VTdG9wOiBmdW5jdGlvbihldmVudCkgew0KDQoJCS8vSWYgd2UgYXJlIHVzaW5nIGRyb3BwYWJsZXMsIGluZm9ybSB0aGUgbWFuYWdlciBhYm91dCB0aGUgZHJvcA0KCQl2YXIgdGhhdCA9IHRoaXMsDQoJCQlkcm9wcGVkID0gZmFsc2U7DQoJCWlmICgkLnVpLmRkbWFuYWdlciAmJiAhdGhpcy5vcHRpb25zLmRyb3BCZWhhdmlvdXIpIHsNCgkJCWRyb3BwZWQgPSAkLnVpLmRkbWFuYWdlci5kcm9wKHRoaXMsIGV2ZW50KTsNCgkJfQ0KDQoJCS8vaWYgYSBkcm9wIGNvbWVzIGZyb20gb3V0c2lkZSAoYSBzb3J0YWJsZSkNCgkJaWYgKHRoaXMuZHJvcHBlZCkgew0KCQkJZHJvcHBlZCA9IHRoaXMuZHJvcHBlZDsNCgkJCXRoaXMuZHJvcHBlZCA9IGZhbHNlOw0KCQl9DQoNCgkJaWYgKCh0aGlzLm9wdGlvbnMucmV2ZXJ0ID09PSAiaW52YWxpZCIgJiYgIWRyb3BwZWQpIHx8ICh0aGlzLm9wdGlvbnMucmV2ZXJ0ID09PSAidmFsaWQiICYmIGRyb3BwZWQpIHx8IHRoaXMub3B0aW9ucy5yZXZlcnQgPT09IHRydWUgfHwgKCQuaXNGdW5jdGlvbih0aGlzLm9wdGlvbnMucmV2ZXJ0KSAmJiB0aGlzLm9wdGlvbnMucmV2ZXJ0LmNhbGwodGhpcy5lbGVtZW50LCBkcm9wcGVkKSkpIHsNCgkJCSQodGhpcy5oZWxwZXIpLmFuaW1hdGUodGhpcy5vcmlnaW5hbFBvc2l0aW9uLCBwYXJzZUludCh0aGlzLm9wdGlvbnMucmV2ZXJ0RHVyYXRpb24sIDEwKSwgZnVuY3Rpb24oKSB7DQoJCQkJaWYgKHRoYXQuX3RyaWdnZXIoInN0b3AiLCBldmVudCkgIT09IGZhbHNlKSB7DQoJCQkJCXRoYXQuX2NsZWFyKCk7DQoJCQkJfQ0KCQkJfSk7DQoJCX0gZWxzZSB7DQoJCQlpZiAodGhpcy5fdHJpZ2dlcigic3RvcCIsIGV2ZW50KSAhPT0gZmFsc2UpIHsNCgkJCQl0aGlzLl9jbGVhcigpOw0KCQkJfQ0KCQl9DQoNCgkJcmV0dXJuIGZhbHNlOw0KCX0sDQoNCglfbW91c2VVcDogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl0aGlzLl91bmJsb2NrRnJhbWVzKCk7DQoNCgkJLy9JZiB0aGUgZGRtYW5hZ2VyIGlzIHVzZWQgZm9yIGRyb3BwYWJsZXMsIGluZm9ybSB0aGUgbWFuYWdlciB0aGF0IGRyYWdnaW5nIGhhcyBzdG9wcGVkIChzZWUgIzUwMDMpDQoJCWlmICggJC51aS5kZG1hbmFnZXIgKSB7DQoJCQkkLnVpLmRkbWFuYWdlci5kcmFnU3RvcCh0aGlzLCBldmVudCk7DQoJCX0NCg0KCQkvLyBPbmx5IG5lZWQgdG8gZm9jdXMgaWYgdGhlIGV2ZW50IG9jY3VycmVkIG9uIHRoZSBkcmFnZ2FibGUgaXRzZWxmLCBzZWUgIzEwNTI3DQoJCWlmICggdGhpcy5oYW5kbGVFbGVtZW50LmlzKCBldmVudC50YXJnZXQgKSApIHsNCgkJCS8vIFRoZSBpbnRlcmFjdGlvbiBpcyBvdmVyOyB3aGV0aGVyIG9yIG5vdCB0aGUgY2xpY2sgcmVzdWx0ZWQgaW4gYSBkcmFnLCBmb2N1cyB0aGUgZWxlbWVudA0KCQkJdGhpcy5lbGVtZW50LmZvY3VzKCk7DQoJCX0NCg0KCQlyZXR1cm4gJC51aS5tb3VzZS5wcm90b3R5cGUuX21vdXNlVXAuY2FsbCh0aGlzLCBldmVudCk7DQoJfSwNCg0KCWNhbmNlbDogZnVuY3Rpb24oKSB7DQoNCgkJaWYgKHRoaXMuaGVscGVyLmlzKCIudWktZHJhZ2dhYmxlLWRyYWdnaW5nIikpIHsNCgkJCXRoaXMuX21vdXNlVXAoe30pOw0KCQl9IGVsc2Ugew0KCQkJdGhpcy5fY2xlYXIoKTsNCgkJfQ0KDQoJCXJldHVybiB0aGlzOw0KDQoJfSwNCg0KCV9nZXRIYW5kbGU6IGZ1bmN0aW9uKGV2ZW50KSB7DQoJCXJldHVybiB0aGlzLm9wdGlvbnMuaGFuZGxlID8NCgkJCSEhJCggZXZlbnQudGFyZ2V0ICkuY2xvc2VzdCggdGhpcy5lbGVtZW50LmZpbmQoIHRoaXMub3B0aW9ucy5oYW5kbGUgKSApLmxlbmd0aCA6DQoJCQl0cnVlOw0KCX0sDQoNCglfc2V0SGFuZGxlQ2xhc3NOYW1lOiBmdW5jdGlvbigpIHsNCgkJdGhpcy5oYW5kbGVFbGVtZW50ID0gdGhpcy5vcHRpb25zLmhhbmRsZSA/DQoJCQl0aGlzLmVsZW1lbnQuZmluZCggdGhpcy5vcHRpb25zLmhhbmRsZSApIDogdGhpcy5lbGVtZW50Ow0KCQl0aGlzLmhhbmRsZUVsZW1lbnQuYWRkQ2xhc3MoICJ1aS1kcmFnZ2FibGUtaGFuZGxlIiApOw0KCX0sDQoNCglfcmVtb3ZlSGFuZGxlQ2xhc3NOYW1lOiBmdW5jdGlvbigpIHsNCgkJdGhpcy5oYW5kbGVFbGVtZW50LnJlbW92ZUNsYXNzKCAidWktZHJhZ2dhYmxlLWhhbmRsZSIgKTsNCgl9LA0KDQoJX2NyZWF0ZUhlbHBlcjogZnVuY3Rpb24oZXZlbnQpIHsNCg0KCQl2YXIgbyA9IHRoaXMub3B0aW9ucywNCgkJCWhlbHBlcklzRnVuY3Rpb24gPSAkLmlzRnVuY3Rpb24oIG8uaGVscGVyICksDQoJCQloZWxwZXIgPSBoZWxwZXJJc0Z1bmN0aW9uID8NCgkJCQkkKCBvLmhlbHBlci5hcHBseSggdGhpcy5lbGVtZW50WyAwIF0sIFsgZXZlbnQgXSApICkgOg0KCQkJCSggby5oZWxwZXIgPT09ICJjbG9uZSIgPw0KCQkJCQl0aGlzLmVsZW1lbnQuY2xvbmUoKS5yZW1vdmVBdHRyKCAiaWQiICkgOg0KCQkJCQl0aGlzLmVsZW1lbnQgKTsNCg0KCQlpZiAoIWhlbHBlci5wYXJlbnRzKCJib2R5IikubGVuZ3RoKSB7DQoJCQloZWxwZXIuYXBwZW5kVG8oKG8uYXBwZW5kVG8gPT09ICJwYXJlbnQiID8gdGhpcy5lbGVtZW50WzBdLnBhcmVudE5vZGUgOiBvLmFwcGVuZFRvKSk7DQoJCX0NCg0KCQkvLyBodHRwOi8vYnVncy5qcXVlcnl1aS5jb20vdGlja2V0Lzk0NDYNCgkJLy8gYSBoZWxwZXIgZnVuY3Rpb24gY2FuIHJldHVybiB0aGUgb3JpZ2luYWwgZWxlbWVudA0KCQkvLyB3aGljaCB3b3VsZG4ndCBoYXZlIGJlZW4gc2V0IHRvIHJlbGF0aXZlIGluIF9jcmVhdGUNCgkJaWYgKCBoZWxwZXJJc0Z1bmN0aW9uICYmIGhlbHBlclsgMCBdID09PSB0aGlzLmVsZW1lbnRbIDAgXSApIHsNCgkJCXRoaXMuX3NldFBvc2l0aW9uUmVsYXRpdmUoKTsNCgkJfQ0KDQoJCWlmIChoZWxwZXJbMF0gIT09IHRoaXMuZWxlbWVudFswXSAmJiAhKC8oZml4ZWR8YWJzb2x1dGUpLykudGVzdChoZWxwZXIuY3NzKCJwb3NpdGlvbiIpKSkgew0KCQkJaGVscGVyLmNzcygicG9zaXRpb24iLCAiYWJzb2x1dGUiKTsNCgkJfQ0KDQoJCXJldHVybiBoZWxwZXI7DQoNCgl9LA0KDQoJX3NldFBvc2l0aW9uUmVsYXRpdmU6IGZ1bmN0aW9uKCkgew0KCQlpZiAoICEoIC9eKD86cnxhfGYpLyApLnRlc3QoIHRoaXMuZWxlbWVudC5jc3MoICJwb3NpdGlvbiIgKSApICkgew0KCQkJdGhpcy5lbGVtZW50WyAwIF0uc3R5bGUucG9zaXRpb24gPSAicmVsYXRpdmUiOw0KCQl9DQoJfSwNCg0KCV9hZGp1c3RPZmZzZXRGcm9tSGVscGVyOiBmdW5jdGlvbihvYmopIHsNCgkJaWYgKHR5cGVvZiBvYmogPT09ICJzdHJpbmciKSB7DQoJCQlvYmogPSBvYmouc3BsaXQoIiAiKTsNCgkJfQ0KCQlpZiAoJC5pc0FycmF5KG9iaikpIHsNCgkJCW9iaiA9IHsgbGVmdDogK29ialswXSwgdG9wOiArb2JqWzFdIHx8IDAgfTsNCgkJfQ0KCQlpZiAoImxlZnQiIGluIG9iaikgew0KCQkJdGhpcy5vZmZzZXQuY2xpY2subGVmdCA9IG9iai5sZWZ0ICsgdGhpcy5tYXJnaW5zLmxlZnQ7DQoJCX0NCgkJaWYgKCJyaWdodCIgaW4gb2JqKSB7DQoJCQl0aGlzLm9mZnNldC5jbGljay5sZWZ0ID0gdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCAtIG9iai5yaWdodCArIHRoaXMubWFyZ2lucy5sZWZ0Ow0KCQl9DQoJCWlmICgidG9wIiBpbiBvYmopIHsNCgkJCXRoaXMub2Zmc2V0LmNsaWNrLnRvcCA9IG9iai50b3AgKyB0aGlzLm1hcmdpbnMudG9wOw0KCQl9DQoJCWlmICgiYm90dG9tIiBpbiBvYmopIHsNCgkJCXRoaXMub2Zmc2V0LmNsaWNrLnRvcCA9IHRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0IC0gb2JqLmJvdHRvbSArIHRoaXMubWFyZ2lucy50b3A7DQoJCX0NCgl9LA0KDQoJX2lzUm9vdE5vZGU6IGZ1bmN0aW9uKCBlbGVtZW50ICkgew0KCQlyZXR1cm4gKCAvKGh0bWx8Ym9keSkvaSApLnRlc3QoIGVsZW1lbnQudGFnTmFtZSApIHx8IGVsZW1lbnQgPT09IHRoaXMuZG9jdW1lbnRbIDAgXTsNCgl9LA0KDQoJX2dldFBhcmVudE9mZnNldDogZnVuY3Rpb24oKSB7DQoNCgkJLy9HZXQgdGhlIG9mZnNldFBhcmVudCBhbmQgY2FjaGUgaXRzIHBvc2l0aW9uDQoJCXZhciBwbyA9IHRoaXMub2Zmc2V0UGFyZW50Lm9mZnNldCgpLA0KCQkJZG9jdW1lbnQgPSB0aGlzLmRvY3VtZW50WyAwIF07DQoNCgkJLy8gVGhpcyBpcyBhIHNwZWNpYWwgY2FzZSB3aGVyZSB3ZSBuZWVkIHRvIG1vZGlmeSBhIG9mZnNldCBjYWxjdWxhdGVkIG9uIHN0YXJ0LCBzaW5jZSB0aGUgZm9sbG93aW5nIGhhcHBlbmVkOg0KCQkvLyAxLiBUaGUgcG9zaXRpb24gb2YgdGhlIGhlbHBlciBpcyBhYnNvbHV0ZSwgc28gaXQncyBwb3NpdGlvbiBpcyBjYWxjdWxhdGVkIGJhc2VkIG9uIHRoZSBuZXh0IHBvc2l0aW9uZWQgcGFyZW50DQoJCS8vIDIuIFRoZSBhY3R1YWwgb2Zmc2V0IHBhcmVudCBpcyBhIGNoaWxkIG9mIHRoZSBzY3JvbGwgcGFyZW50LCBhbmQgdGhlIHNjcm9sbCBwYXJlbnQgaXNuJ3QgdGhlIGRvY3VtZW50LCB3aGljaCBtZWFucyB0aGF0DQoJCS8vICAgIHRoZSBzY3JvbGwgaXMgaW5jbHVkZWQgaW4gdGhlIGluaXRpYWwgY2FsY3VsYXRpb24gb2YgdGhlIG9mZnNldCBvZiB0aGUgcGFyZW50LCBhbmQgbmV2ZXIgcmVjYWxjdWxhdGVkIHVwb24gZHJhZw0KCQlpZiAodGhpcy5jc3NQb3NpdGlvbiA9PT0gImFic29sdXRlIiAmJiB0aGlzLnNjcm9sbFBhcmVudFswXSAhPT0gZG9jdW1lbnQgJiYgJC5jb250YWlucyh0aGlzLnNjcm9sbFBhcmVudFswXSwgdGhpcy5vZmZzZXRQYXJlbnRbMF0pKSB7DQoJCQlwby5sZWZ0ICs9IHRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKTsNCgkJCXBvLnRvcCArPSB0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKTsNCgkJfQ0KDQoJCWlmICggdGhpcy5faXNSb290Tm9kZSggdGhpcy5vZmZzZXRQYXJlbnRbIDAgXSApICkgew0KCQkJcG8gPSB7IHRvcDogMCwgbGVmdDogMCB9Ow0KCQl9DQoNCgkJcmV0dXJuIHsNCgkJCXRvcDogcG8udG9wICsgKHBhcnNlSW50KHRoaXMub2Zmc2V0UGFyZW50LmNzcygiYm9yZGVyVG9wV2lkdGgiKSwgMTApIHx8IDApLA0KCQkJbGVmdDogcG8ubGVmdCArIChwYXJzZUludCh0aGlzLm9mZnNldFBhcmVudC5jc3MoImJvcmRlckxlZnRXaWR0aCIpLCAxMCkgfHwgMCkNCgkJfTsNCg0KCX0sDQoNCglfZ2V0UmVsYXRpdmVPZmZzZXQ6IGZ1bmN0aW9uKCkgew0KCQlpZiAoIHRoaXMuY3NzUG9zaXRpb24gIT09ICJyZWxhdGl2ZSIgKSB7DQoJCQlyZXR1cm4geyB0b3A6IDAsIGxlZnQ6IDAgfTsNCgkJfQ0KDQoJCXZhciBwID0gdGhpcy5lbGVtZW50LnBvc2l0aW9uKCksDQoJCQlzY3JvbGxJc1Jvb3ROb2RlID0gdGhpcy5faXNSb290Tm9kZSggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSApOw0KDQoJCXJldHVybiB7DQoJCQl0b3A6IHAudG9wIC0gKCBwYXJzZUludCh0aGlzLmhlbHBlci5jc3MoICJ0b3AiICksIDEwKSB8fCAwICkgKyAoICFzY3JvbGxJc1Jvb3ROb2RlID8gdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCkgOiAwICksDQoJCQlsZWZ0OiBwLmxlZnQgLSAoIHBhcnNlSW50KHRoaXMuaGVscGVyLmNzcyggImxlZnQiICksIDEwKSB8fCAwICkgKyAoICFzY3JvbGxJc1Jvb3ROb2RlID8gdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCgpIDogMCApDQoJCX07DQoNCgl9LA0KDQoJX2NhY2hlTWFyZ2luczogZnVuY3Rpb24oKSB7DQoJCXRoaXMubWFyZ2lucyA9IHsNCgkJCWxlZnQ6IChwYXJzZUludCh0aGlzLmVsZW1lbnQuY3NzKCJtYXJnaW5MZWZ0IiksIDEwKSB8fCAwKSwNCgkJCXRvcDogKHBhcnNlSW50KHRoaXMuZWxlbWVudC5jc3MoIm1hcmdpblRvcCIpLCAxMCkgfHwgMCksDQoJCQlyaWdodDogKHBhcnNlSW50KHRoaXMuZWxlbWVudC5jc3MoIm1hcmdpblJpZ2h0IiksIDEwKSB8fCAwKSwNCgkJCWJvdHRvbTogKHBhcnNlSW50KHRoaXMuZWxlbWVudC5jc3MoIm1hcmdpbkJvdHRvbSIpLCAxMCkgfHwgMCkNCgkJfTsNCgl9LA0KDQoJX2NhY2hlSGVscGVyUHJvcG9ydGlvbnM6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLmhlbHBlclByb3BvcnRpb25zID0gew0KCQkJd2lkdGg6IHRoaXMuaGVscGVyLm91dGVyV2lkdGgoKSwNCgkJCWhlaWdodDogdGhpcy5oZWxwZXIub3V0ZXJIZWlnaHQoKQ0KCQl9Ow0KCX0sDQoNCglfc2V0Q29udGFpbm1lbnQ6IGZ1bmN0aW9uKCkgew0KDQoJCXZhciBpc1VzZXJTY3JvbGxhYmxlLCBjLCBjZSwNCgkJCW8gPSB0aGlzLm9wdGlvbnMsDQoJCQlkb2N1bWVudCA9IHRoaXMuZG9jdW1lbnRbIDAgXTsNCg0KCQl0aGlzLnJlbGF0aXZlQ29udGFpbmVyID0gbnVsbDsNCg0KCQlpZiAoICFvLmNvbnRhaW5tZW50ICkgew0KCQkJdGhpcy5jb250YWlubWVudCA9IG51bGw7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQlpZiAoIG8uY29udGFpbm1lbnQgPT09ICJ3aW5kb3ciICkgew0KCQkJdGhpcy5jb250YWlubWVudCA9IFsNCgkJCQkkKCB3aW5kb3cgKS5zY3JvbGxMZWZ0KCkgLSB0aGlzLm9mZnNldC5yZWxhdGl2ZS5sZWZ0IC0gdGhpcy5vZmZzZXQucGFyZW50LmxlZnQsDQoJCQkJJCggd2luZG93ICkuc2Nyb2xsVG9wKCkgLSB0aGlzLm9mZnNldC5yZWxhdGl2ZS50b3AgLSB0aGlzLm9mZnNldC5wYXJlbnQudG9wLA0KCQkJCSQoIHdpbmRvdyApLnNjcm9sbExlZnQoKSArICQoIHdpbmRvdyApLndpZHRoKCkgLSB0aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoIC0gdGhpcy5tYXJnaW5zLmxlZnQsDQoJCQkJJCggd2luZG93ICkuc2Nyb2xsVG9wKCkgKyAoICQoIHdpbmRvdyApLmhlaWdodCgpIHx8IGRvY3VtZW50LmJvZHkucGFyZW50Tm9kZS5zY3JvbGxIZWlnaHQgKSAtIHRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0IC0gdGhpcy5tYXJnaW5zLnRvcA0KCQkJXTsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCWlmICggby5jb250YWlubWVudCA9PT0gImRvY3VtZW50Iikgew0KCQkJdGhpcy5jb250YWlubWVudCA9IFsNCgkJCQkwLA0KCQkJCTAsDQoJCQkJJCggZG9jdW1lbnQgKS53aWR0aCgpIC0gdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCAtIHRoaXMubWFyZ2lucy5sZWZ0LA0KCQkJCSggJCggZG9jdW1lbnQgKS5oZWlnaHQoKSB8fCBkb2N1bWVudC5ib2R5LnBhcmVudE5vZGUuc2Nyb2xsSGVpZ2h0ICkgLSB0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCAtIHRoaXMubWFyZ2lucy50b3ANCgkJCV07DQoJCQlyZXR1cm47DQoJCX0NCg0KCQlpZiAoIG8uY29udGFpbm1lbnQuY29uc3RydWN0b3IgPT09IEFycmF5ICkgew0KCQkJdGhpcy5jb250YWlubWVudCA9IG8uY29udGFpbm1lbnQ7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQlpZiAoIG8uY29udGFpbm1lbnQgPT09ICJwYXJlbnQiICkgew0KCQkJby5jb250YWlubWVudCA9IHRoaXMuaGVscGVyWyAwIF0ucGFyZW50Tm9kZTsNCgkJfQ0KDQoJCWMgPSAkKCBvLmNvbnRhaW5tZW50ICk7DQoJCWNlID0gY1sgMCBdOw0KDQoJCWlmICggIWNlICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJaXNVc2VyU2Nyb2xsYWJsZSA9IC8oc2Nyb2xsfGF1dG8pLy50ZXN0KCBjLmNzcyggIm92ZXJmbG93IiApICk7DQoNCgkJdGhpcy5jb250YWlubWVudCA9IFsNCgkJCSggcGFyc2VJbnQoIGMuY3NzKCAiYm9yZGVyTGVmdFdpZHRoIiApLCAxMCApIHx8IDAgKSArICggcGFyc2VJbnQoIGMuY3NzKCAicGFkZGluZ0xlZnQiICksIDEwICkgfHwgMCApLA0KCQkJKCBwYXJzZUludCggYy5jc3MoICJib3JkZXJUb3BXaWR0aCIgKSwgMTAgKSB8fCAwICkgKyAoIHBhcnNlSW50KCBjLmNzcyggInBhZGRpbmdUb3AiICksIDEwICkgfHwgMCApLA0KCQkJKCBpc1VzZXJTY3JvbGxhYmxlID8gTWF0aC5tYXgoIGNlLnNjcm9sbFdpZHRoLCBjZS5vZmZzZXRXaWR0aCApIDogY2Uub2Zmc2V0V2lkdGggKSAtDQoJCQkJKCBwYXJzZUludCggYy5jc3MoICJib3JkZXJSaWdodFdpZHRoIiApLCAxMCApIHx8IDAgKSAtDQoJCQkJKCBwYXJzZUludCggYy5jc3MoICJwYWRkaW5nUmlnaHQiICksIDEwICkgfHwgMCApIC0NCgkJCQl0aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoIC0NCgkJCQl0aGlzLm1hcmdpbnMubGVmdCAtDQoJCQkJdGhpcy5tYXJnaW5zLnJpZ2h0LA0KCQkJKCBpc1VzZXJTY3JvbGxhYmxlID8gTWF0aC5tYXgoIGNlLnNjcm9sbEhlaWdodCwgY2Uub2Zmc2V0SGVpZ2h0ICkgOiBjZS5vZmZzZXRIZWlnaHQgKSAtDQoJCQkJKCBwYXJzZUludCggYy5jc3MoICJib3JkZXJCb3R0b21XaWR0aCIgKSwgMTAgKSB8fCAwICkgLQ0KCQkJCSggcGFyc2VJbnQoIGMuY3NzKCAicGFkZGluZ0JvdHRvbSIgKSwgMTAgKSB8fCAwICkgLQ0KCQkJCXRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0IC0NCgkJCQl0aGlzLm1hcmdpbnMudG9wIC0NCgkJCQl0aGlzLm1hcmdpbnMuYm90dG9tDQoJCV07DQoJCXRoaXMucmVsYXRpdmVDb250YWluZXIgPSBjOw0KCX0sDQoNCglfY29udmVydFBvc2l0aW9uVG86IGZ1bmN0aW9uKGQsIHBvcykgew0KDQoJCWlmICghcG9zKSB7DQoJCQlwb3MgPSB0aGlzLnBvc2l0aW9uOw0KCQl9DQoNCgkJdmFyIG1vZCA9IGQgPT09ICJhYnNvbHV0ZSIgPyAxIDogLTEsDQoJCQlzY3JvbGxJc1Jvb3ROb2RlID0gdGhpcy5faXNSb290Tm9kZSggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSApOw0KDQoJCXJldHVybiB7DQoJCQl0b3A6ICgNCgkJCQlwb3MudG9wCSsJCQkJCQkJCQkJCQkJCQkJLy8gVGhlIGFic29sdXRlIG1vdXNlIHBvc2l0aW9uDQoJCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wICogbW9kICsJCQkJCQkJCQkJLy8gT25seSBmb3IgcmVsYXRpdmUgcG9zaXRpb25lZCBub2RlczogUmVsYXRpdmUgb2Zmc2V0IGZyb20gZWxlbWVudCB0byBvZmZzZXQgcGFyZW50DQoJCQkJdGhpcy5vZmZzZXQucGFyZW50LnRvcCAqIG1vZCAtCQkJCQkJCQkJCS8vIFRoZSBvZmZzZXRQYXJlbnQncyBvZmZzZXQgd2l0aG91dCBib3JkZXJzIChvZmZzZXQgKyBib3JkZXIpDQoJCQkJKCAoIHRoaXMuY3NzUG9zaXRpb24gPT09ICJmaXhlZCIgPyAtdGhpcy5vZmZzZXQuc2Nyb2xsLnRvcCA6ICggc2Nyb2xsSXNSb290Tm9kZSA/IDAgOiB0aGlzLm9mZnNldC5zY3JvbGwudG9wICkgKSAqIG1vZCkNCgkJCSksDQoJCQlsZWZ0OiAoDQoJCQkJcG9zLmxlZnQgKwkJCQkJCQkJCQkJCQkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24NCgkJCQl0aGlzLm9mZnNldC5yZWxhdGl2ZS5sZWZ0ICogbW9kICsJCQkJCQkJCQkJLy8gT25seSBmb3IgcmVsYXRpdmUgcG9zaXRpb25lZCBub2RlczogUmVsYXRpdmUgb2Zmc2V0IGZyb20gZWxlbWVudCB0byBvZmZzZXQgcGFyZW50DQoJCQkJdGhpcy5vZmZzZXQucGFyZW50LmxlZnQgKiBtb2QJLQkJCQkJCQkJCQkvLyBUaGUgb2Zmc2V0UGFyZW50J3Mgb2Zmc2V0IHdpdGhvdXQgYm9yZGVycyAob2Zmc2V0ICsgYm9yZGVyKQ0KCQkJCSggKCB0aGlzLmNzc1Bvc2l0aW9uID09PSAiZml4ZWQiID8gLXRoaXMub2Zmc2V0LnNjcm9sbC5sZWZ0IDogKCBzY3JvbGxJc1Jvb3ROb2RlID8gMCA6IHRoaXMub2Zmc2V0LnNjcm9sbC5sZWZ0ICkgKSAqIG1vZCkNCgkJCSkNCgkJfTsNCg0KCX0sDQoNCglfZ2VuZXJhdGVQb3NpdGlvbjogZnVuY3Rpb24oIGV2ZW50LCBjb25zdHJhaW5Qb3NpdGlvbiApIHsNCg0KCQl2YXIgY29udGFpbm1lbnQsIGNvLCB0b3AsIGxlZnQsDQoJCQlvID0gdGhpcy5vcHRpb25zLA0KCQkJc2Nyb2xsSXNSb290Tm9kZSA9IHRoaXMuX2lzUm9vdE5vZGUoIHRoaXMuc2Nyb2xsUGFyZW50WyAwIF0gKSwNCgkJCXBhZ2VYID0gZXZlbnQucGFnZVgsDQoJCQlwYWdlWSA9IGV2ZW50LnBhZ2VZOw0KDQoJCS8vIENhY2hlIHRoZSBzY3JvbGwNCgkJaWYgKCAhc2Nyb2xsSXNSb290Tm9kZSB8fCAhdGhpcy5vZmZzZXQuc2Nyb2xsICkgew0KCQkJdGhpcy5vZmZzZXQuc2Nyb2xsID0gew0KCQkJCXRvcDogdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCksDQoJCQkJbGVmdDogdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCgpDQoJCQl9Ow0KCQl9DQoNCgkJLyoNCgkJICogLSBQb3NpdGlvbiBjb25zdHJhaW5pbmcgLQ0KCQkgKiBDb25zdHJhaW4gdGhlIHBvc2l0aW9uIHRvIGEgbWl4IG9mIGdyaWQsIGNvbnRhaW5tZW50Lg0KCQkgKi8NCg0KCQkvLyBJZiB3ZSBhcmUgbm90IGRyYWdnaW5nIHlldCwgd2Ugd29uJ3QgY2hlY2sgZm9yIG9wdGlvbnMNCgkJaWYgKCBjb25zdHJhaW5Qb3NpdGlvbiApIHsNCgkJCWlmICggdGhpcy5jb250YWlubWVudCApIHsNCgkJCQlpZiAoIHRoaXMucmVsYXRpdmVDb250YWluZXIgKXsNCgkJCQkJY28gPSB0aGlzLnJlbGF0aXZlQ29udGFpbmVyLm9mZnNldCgpOw0KCQkJCQljb250YWlubWVudCA9IFsNCgkJCQkJCXRoaXMuY29udGFpbm1lbnRbIDAgXSArIGNvLmxlZnQsDQoJCQkJCQl0aGlzLmNvbnRhaW5tZW50WyAxIF0gKyBjby50b3AsDQoJCQkJCQl0aGlzLmNvbnRhaW5tZW50WyAyIF0gKyBjby5sZWZ0LA0KCQkJCQkJdGhpcy5jb250YWlubWVudFsgMyBdICsgY28udG9wDQoJCQkJCV07DQoJCQkJfSBlbHNlIHsNCgkJCQkJY29udGFpbm1lbnQgPSB0aGlzLmNvbnRhaW5tZW50Ow0KCQkJCX0NCg0KCQkJCWlmIChldmVudC5wYWdlWCAtIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPCBjb250YWlubWVudFswXSkgew0KCQkJCQlwYWdlWCA9IGNvbnRhaW5tZW50WzBdICsgdGhpcy5vZmZzZXQuY2xpY2subGVmdDsNCgkJCQl9DQoJCQkJaWYgKGV2ZW50LnBhZ2VZIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wIDwgY29udGFpbm1lbnRbMV0pIHsNCgkJCQkJcGFnZVkgPSBjb250YWlubWVudFsxXSArIHRoaXMub2Zmc2V0LmNsaWNrLnRvcDsNCgkJCQl9DQoJCQkJaWYgKGV2ZW50LnBhZ2VYIC0gdGhpcy5vZmZzZXQuY2xpY2subGVmdCA+IGNvbnRhaW5tZW50WzJdKSB7DQoJCQkJCXBhZ2VYID0gY29udGFpbm1lbnRbMl0gKyB0aGlzLm9mZnNldC5jbGljay5sZWZ0Ow0KCQkJCX0NCgkJCQlpZiAoZXZlbnQucGFnZVkgLSB0aGlzLm9mZnNldC5jbGljay50b3AgPiBjb250YWlubWVudFszXSkgew0KCQkJCQlwYWdlWSA9IGNvbnRhaW5tZW50WzNdICsgdGhpcy5vZmZzZXQuY2xpY2sudG9wOw0KCQkJCX0NCgkJCX0NCg0KCQkJaWYgKG8uZ3JpZCkgew0KCQkJCS8vQ2hlY2sgZm9yIGdyaWQgZWxlbWVudHMgc2V0IHRvIDAgdG8gcHJldmVudCBkaXZpZGUgYnkgMCBlcnJvciBjYXVzaW5nIGludmFsaWQgYXJndW1lbnQgZXJyb3JzIGluIElFIChzZWUgdGlja2V0ICM2OTUwKQ0KCQkJCXRvcCA9IG8uZ3JpZFsxXSA/IHRoaXMub3JpZ2luYWxQYWdlWSArIE1hdGgucm91bmQoKHBhZ2VZIC0gdGhpcy5vcmlnaW5hbFBhZ2VZKSAvIG8uZ3JpZFsxXSkgKiBvLmdyaWRbMV0gOiB0aGlzLm9yaWdpbmFsUGFnZVk7DQoJCQkJcGFnZVkgPSBjb250YWlubWVudCA/ICgodG9wIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wID49IGNvbnRhaW5tZW50WzFdIHx8IHRvcCAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA+IGNvbnRhaW5tZW50WzNdKSA/IHRvcCA6ICgodG9wIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wID49IGNvbnRhaW5tZW50WzFdKSA/IHRvcCAtIG8uZ3JpZFsxXSA6IHRvcCArIG8uZ3JpZFsxXSkpIDogdG9wOw0KDQoJCQkJbGVmdCA9IG8uZ3JpZFswXSA/IHRoaXMub3JpZ2luYWxQYWdlWCArIE1hdGgucm91bmQoKHBhZ2VYIC0gdGhpcy5vcmlnaW5hbFBhZ2VYKSAvIG8uZ3JpZFswXSkgKiBvLmdyaWRbMF0gOiB0aGlzLm9yaWdpbmFsUGFnZVg7DQoJCQkJcGFnZVggPSBjb250YWlubWVudCA/ICgobGVmdCAtIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPj0gY29udGFpbm1lbnRbMF0gfHwgbGVmdCAtIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPiBjb250YWlubWVudFsyXSkgPyBsZWZ0IDogKChsZWZ0IC0gdGhpcy5vZmZzZXQuY2xpY2subGVmdCA+PSBjb250YWlubWVudFswXSkgPyBsZWZ0IC0gby5ncmlkWzBdIDogbGVmdCArIG8uZ3JpZFswXSkpIDogbGVmdDsNCgkJCX0NCg0KCQkJaWYgKCBvLmF4aXMgPT09ICJ5IiApIHsNCgkJCQlwYWdlWCA9IHRoaXMub3JpZ2luYWxQYWdlWDsNCgkJCX0NCg0KCQkJaWYgKCBvLmF4aXMgPT09ICJ4IiApIHsNCgkJCQlwYWdlWSA9IHRoaXMub3JpZ2luYWxQYWdlWTsNCgkJCX0NCgkJfQ0KDQoJCXJldHVybiB7DQoJCQl0b3A6ICgNCgkJCQlwYWdlWSAtCQkJCQkJCQkJCQkJCQkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24NCgkJCQl0aGlzLm9mZnNldC5jbGljay50b3AJLQkJCQkJCQkJCQkJCS8vIENsaWNrIG9mZnNldCAocmVsYXRpdmUgdG8gdGhlIGVsZW1lbnQpDQoJCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wIC0JCQkJCQkJCQkJCQkvLyBPbmx5IGZvciByZWxhdGl2ZSBwb3NpdGlvbmVkIG5vZGVzOiBSZWxhdGl2ZSBvZmZzZXQgZnJvbSBlbGVtZW50IHRvIG9mZnNldCBwYXJlbnQNCgkJCQl0aGlzLm9mZnNldC5wYXJlbnQudG9wICsJCQkJCQkJCQkJCQkvLyBUaGUgb2Zmc2V0UGFyZW50J3Mgb2Zmc2V0IHdpdGhvdXQgYm9yZGVycyAob2Zmc2V0ICsgYm9yZGVyKQ0KCQkJCSggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/IC10aGlzLm9mZnNldC5zY3JvbGwudG9wIDogKCBzY3JvbGxJc1Jvb3ROb2RlID8gMCA6IHRoaXMub2Zmc2V0LnNjcm9sbC50b3AgKSApDQoJCQkpLA0KCQkJbGVmdDogKA0KCQkJCXBhZ2VYIC0JCQkJCQkJCQkJCQkJCQkJCS8vIFRoZSBhYnNvbHV0ZSBtb3VzZSBwb3NpdGlvbg0KCQkJCXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgLQkJCQkJCQkJCQkJCS8vIENsaWNrIG9mZnNldCAocmVsYXRpdmUgdG8gdGhlIGVsZW1lbnQpDQoJCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdCAtCQkJCQkJCQkJCQkJLy8gT25seSBmb3IgcmVsYXRpdmUgcG9zaXRpb25lZCBub2RlczogUmVsYXRpdmUgb2Zmc2V0IGZyb20gZWxlbWVudCB0byBvZmZzZXQgcGFyZW50DQoJCQkJdGhpcy5vZmZzZXQucGFyZW50LmxlZnQgKwkJCQkJCQkJCQkJCS8vIFRoZSBvZmZzZXRQYXJlbnQncyBvZmZzZXQgd2l0aG91dCBib3JkZXJzIChvZmZzZXQgKyBib3JkZXIpDQoJCQkJKCB0aGlzLmNzc1Bvc2l0aW9uID09PSAiZml4ZWQiID8gLXRoaXMub2Zmc2V0LnNjcm9sbC5sZWZ0IDogKCBzY3JvbGxJc1Jvb3ROb2RlID8gMCA6IHRoaXMub2Zmc2V0LnNjcm9sbC5sZWZ0ICkgKQ0KCQkJKQ0KCQl9Ow0KDQoJfSwNCg0KCV9jbGVhcjogZnVuY3Rpb24oKSB7DQoJCXRoaXMuaGVscGVyLnJlbW92ZUNsYXNzKCJ1aS1kcmFnZ2FibGUtZHJhZ2dpbmciKTsNCgkJaWYgKHRoaXMuaGVscGVyWzBdICE9PSB0aGlzLmVsZW1lbnRbMF0gJiYgIXRoaXMuY2FuY2VsSGVscGVyUmVtb3ZhbCkgew0KCQkJdGhpcy5oZWxwZXIucmVtb3ZlKCk7DQoJCX0NCgkJdGhpcy5oZWxwZXIgPSBudWxsOw0KCQl0aGlzLmNhbmNlbEhlbHBlclJlbW92YWwgPSBmYWxzZTsNCgkJaWYgKCB0aGlzLmRlc3Ryb3lPbkNsZWFyICkgew0KCQkJdGhpcy5kZXN0cm95KCk7DQoJCX0NCgl9LA0KDQoJX25vcm1hbGl6ZVJpZ2h0Qm90dG9tOiBmdW5jdGlvbigpIHsNCgkJaWYgKCB0aGlzLm9wdGlvbnMuYXhpcyAhPT0gInkiICYmIHRoaXMuaGVscGVyLmNzcyggInJpZ2h0IiApICE9PSAiYXV0byIgKSB7DQoJCQl0aGlzLmhlbHBlci53aWR0aCggdGhpcy5oZWxwZXIud2lkdGgoKSApOw0KCQkJdGhpcy5oZWxwZXIuY3NzKCAicmlnaHQiLCAiYXV0byIgKTsNCgkJfQ0KCQlpZiAoIHRoaXMub3B0aW9ucy5heGlzICE9PSAieCIgJiYgdGhpcy5oZWxwZXIuY3NzKCAiYm90dG9tIiApICE9PSAiYXV0byIgKSB7DQoJCQl0aGlzLmhlbHBlci5oZWlnaHQoIHRoaXMuaGVscGVyLmhlaWdodCgpICk7DQoJCQl0aGlzLmhlbHBlci5jc3MoICJib3R0b20iLCAiYXV0byIgKTsNCgkJfQ0KCX0sDQoNCgkvLyBGcm9tIG5vdyBvbiBidWxrIHN0dWZmIC0gbWFpbmx5IGhlbHBlcnMNCg0KCV90cmlnZ2VyOiBmdW5jdGlvbiggdHlwZSwgZXZlbnQsIHVpICkgew0KCQl1aSA9IHVpIHx8IHRoaXMuX3VpSGFzaCgpOw0KCQkkLnVpLnBsdWdpbi5jYWxsKCB0aGlzLCB0eXBlLCBbIGV2ZW50LCB1aSwgdGhpcyBdLCB0cnVlICk7DQoNCgkJLy8gQWJzb2x1dGUgcG9zaXRpb24gYW5kIG9mZnNldCAoc2VlICM2ODg0ICkgaGF2ZSB0byBiZSByZWNhbGN1bGF0ZWQgYWZ0ZXIgcGx1Z2lucw0KCQlpZiAoIC9eKGRyYWd8c3RhcnR8c3RvcCkvLnRlc3QoIHR5cGUgKSApIHsNCgkJCXRoaXMucG9zaXRpb25BYnMgPSB0aGlzLl9jb252ZXJ0UG9zaXRpb25UbyggImFic29sdXRlIiApOw0KCQkJdWkub2Zmc2V0ID0gdGhpcy5wb3NpdGlvbkFiczsNCgkJfQ0KCQlyZXR1cm4gJC5XaWRnZXQucHJvdG90eXBlLl90cmlnZ2VyLmNhbGwoIHRoaXMsIHR5cGUsIGV2ZW50LCB1aSApOw0KCX0sDQoNCglwbHVnaW5zOiB7fSwNCg0KCV91aUhhc2g6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gew0KCQkJaGVscGVyOiB0aGlzLmhlbHBlciwNCgkJCXBvc2l0aW9uOiB0aGlzLnBvc2l0aW9uLA0KCQkJb3JpZ2luYWxQb3NpdGlvbjogdGhpcy5vcmlnaW5hbFBvc2l0aW9uLA0KCQkJb2Zmc2V0OiB0aGlzLnBvc2l0aW9uQWJzDQoJCX07DQoJfQ0KDQp9KTsNCg0KJC51aS5wbHVnaW4uYWRkKCAiZHJhZ2dhYmxlIiwgImNvbm5lY3RUb1NvcnRhYmxlIiwgew0KCXN0YXJ0OiBmdW5jdGlvbiggZXZlbnQsIHVpLCBkcmFnZ2FibGUgKSB7DQoJCXZhciB1aVNvcnRhYmxlID0gJC5leHRlbmQoIHt9LCB1aSwgew0KCQkJaXRlbTogZHJhZ2dhYmxlLmVsZW1lbnQNCgkJfSk7DQoNCgkJZHJhZ2dhYmxlLnNvcnRhYmxlcyA9IFtdOw0KCQkkKCBkcmFnZ2FibGUub3B0aW9ucy5jb25uZWN0VG9Tb3J0YWJsZSApLmVhY2goZnVuY3Rpb24oKSB7DQoJCQl2YXIgc29ydGFibGUgPSAkKCB0aGlzICkuc29ydGFibGUoICJpbnN0YW5jZSIgKTsNCg0KCQkJaWYgKCBzb3J0YWJsZSAmJiAhc29ydGFibGUub3B0aW9ucy5kaXNhYmxlZCApIHsNCgkJCQlkcmFnZ2FibGUuc29ydGFibGVzLnB1c2goIHNvcnRhYmxlICk7DQoNCgkJCQkvLyByZWZyZXNoUG9zaXRpb25zIGlzIGNhbGxlZCBhdCBkcmFnIHN0YXJ0IHRvIHJlZnJlc2ggdGhlIGNvbnRhaW5lckNhY2hlDQoJCQkJLy8gd2hpY2ggaXMgdXNlZCBpbiBkcmFnLiBUaGlzIGVuc3VyZXMgaXQncyBpbml0aWFsaXplZCBhbmQgc3luY2hyb25pemVkDQoJCQkJLy8gd2l0aCBhbnkgY2hhbmdlcyB0aGF0IG1pZ2h0IGhhdmUgaGFwcGVuZWQgb24gdGhlIHBhZ2Ugc2luY2UgaW5pdGlhbGl6YXRpb24uDQoJCQkJc29ydGFibGUucmVmcmVzaFBvc2l0aW9ucygpOw0KCQkJCXNvcnRhYmxlLl90cmlnZ2VyKCJhY3RpdmF0ZSIsIGV2ZW50LCB1aVNvcnRhYmxlKTsNCgkJCX0NCgkJfSk7DQoJfSwNCglzdG9wOiBmdW5jdGlvbiggZXZlbnQsIHVpLCBkcmFnZ2FibGUgKSB7DQoJCXZhciB1aVNvcnRhYmxlID0gJC5leHRlbmQoIHt9LCB1aSwgew0KCQkJaXRlbTogZHJhZ2dhYmxlLmVsZW1lbnQNCgkJfSk7DQoNCgkJZHJhZ2dhYmxlLmNhbmNlbEhlbHBlclJlbW92YWwgPSBmYWxzZTsNCg0KCQkkLmVhY2goIGRyYWdnYWJsZS5zb3J0YWJsZXMsIGZ1bmN0aW9uKCkgew0KCQkJdmFyIHNvcnRhYmxlID0gdGhpczsNCg0KCQkJaWYgKCBzb3J0YWJsZS5pc092ZXIgKSB7DQoJCQkJc29ydGFibGUuaXNPdmVyID0gMDsNCg0KCQkJCS8vIEFsbG93IHRoaXMgc29ydGFibGUgdG8gaGFuZGxlIHJlbW92aW5nIHRoZSBoZWxwZXINCgkJCQlkcmFnZ2FibGUuY2FuY2VsSGVscGVyUmVtb3ZhbCA9IHRydWU7DQoJCQkJc29ydGFibGUuY2FuY2VsSGVscGVyUmVtb3ZhbCA9IGZhbHNlOw0KDQoJCQkJLy8gVXNlIF9zdG9yZWRDU1MgVG8gcmVzdG9yZSBwcm9wZXJ0aWVzIGluIHRoZSBzb3J0YWJsZSwNCgkJCQkvLyBhcyB0aGlzIGFsc28gaGFuZGxlcyByZXZlcnQgKCM5Njc1KSBzaW5jZSB0aGUgZHJhZ2dhYmxlDQoJCQkJLy8gbWF5IGhhdmUgbW9kaWZpZWQgdGhlbSBpbiB1bmV4cGVjdGVkIHdheXMgKCM4ODA5KQ0KCQkJCXNvcnRhYmxlLl9zdG9yZWRDU1MgPSB7DQoJCQkJCXBvc2l0aW9uOiBzb3J0YWJsZS5wbGFjZWhvbGRlci5jc3MoICJwb3NpdGlvbiIgKSwNCgkJCQkJdG9wOiBzb3J0YWJsZS5wbGFjZWhvbGRlci5jc3MoICJ0b3AiICksDQoJCQkJCWxlZnQ6IHNvcnRhYmxlLnBsYWNlaG9sZGVyLmNzcyggImxlZnQiICkNCgkJCQl9Ow0KDQoJCQkJc29ydGFibGUuX21vdXNlU3RvcChldmVudCk7DQoNCgkJCQkvLyBPbmNlIGRyYWcgaGFzIGVuZGVkLCB0aGUgc29ydGFibGUgc2hvdWxkIHJldHVybiB0byB1c2luZw0KCQkJCS8vIGl0cyBvcmlnaW5hbCBoZWxwZXIsIG5vdCB0aGUgc2hhcmVkIGhlbHBlciBmcm9tIGRyYWdnYWJsZQ0KCQkJCXNvcnRhYmxlLm9wdGlvbnMuaGVscGVyID0gc29ydGFibGUub3B0aW9ucy5faGVscGVyOw0KCQkJfSBlbHNlIHsNCgkJCQkvLyBQcmV2ZW50IHRoaXMgU29ydGFibGUgZnJvbSByZW1vdmluZyB0aGUgaGVscGVyLg0KCQkJCS8vIEhvd2V2ZXIsIGRvbid0IHNldCB0aGUgZHJhZ2dhYmxlIHRvIHJlbW92ZSB0aGUgaGVscGVyDQoJCQkJLy8gZWl0aGVyIGFzIGFub3RoZXIgY29ubmVjdGVkIFNvcnRhYmxlIG1heSB5ZXQgaGFuZGxlIHRoZSByZW1vdmFsLg0KCQkJCXNvcnRhYmxlLmNhbmNlbEhlbHBlclJlbW92YWwgPSB0cnVlOw0KDQoJCQkJc29ydGFibGUuX3RyaWdnZXIoICJkZWFjdGl2YXRlIiwgZXZlbnQsIHVpU29ydGFibGUgKTsNCgkJCX0NCgkJfSk7DQoJfSwNCglkcmFnOiBmdW5jdGlvbiggZXZlbnQsIHVpLCBkcmFnZ2FibGUgKSB7DQoJCSQuZWFjaCggZHJhZ2dhYmxlLnNvcnRhYmxlcywgZnVuY3Rpb24oKSB7DQoJCQl2YXIgaW5uZXJtb3N0SW50ZXJzZWN0aW5nID0gZmFsc2UsDQoJCQkJc29ydGFibGUgPSB0aGlzOw0KDQoJCQkvLyBDb3B5IG92ZXIgdmFyaWFibGVzIHRoYXQgc29ydGFibGUncyBfaW50ZXJzZWN0c1dpdGggdXNlcw0KCQkJc29ydGFibGUucG9zaXRpb25BYnMgPSBkcmFnZ2FibGUucG9zaXRpb25BYnM7DQoJCQlzb3J0YWJsZS5oZWxwZXJQcm9wb3J0aW9ucyA9IGRyYWdnYWJsZS5oZWxwZXJQcm9wb3J0aW9uczsNCgkJCXNvcnRhYmxlLm9mZnNldC5jbGljayA9IGRyYWdnYWJsZS5vZmZzZXQuY2xpY2s7DQoNCgkJCWlmICggc29ydGFibGUuX2ludGVyc2VjdHNXaXRoKCBzb3J0YWJsZS5jb250YWluZXJDYWNoZSApICkgew0KCQkJCWlubmVybW9zdEludGVyc2VjdGluZyA9IHRydWU7DQoNCgkJCQkkLmVhY2goIGRyYWdnYWJsZS5zb3J0YWJsZXMsIGZ1bmN0aW9uKCkgew0KCQkJCQkvLyBDb3B5IG92ZXIgdmFyaWFibGVzIHRoYXQgc29ydGFibGUncyBfaW50ZXJzZWN0c1dpdGggdXNlcw0KCQkJCQl0aGlzLnBvc2l0aW9uQWJzID0gZHJhZ2dhYmxlLnBvc2l0aW9uQWJzOw0KCQkJCQl0aGlzLmhlbHBlclByb3BvcnRpb25zID0gZHJhZ2dhYmxlLmhlbHBlclByb3BvcnRpb25zOw0KCQkJCQl0aGlzLm9mZnNldC5jbGljayA9IGRyYWdnYWJsZS5vZmZzZXQuY2xpY2s7DQoNCgkJCQkJaWYgKCB0aGlzICE9PSBzb3J0YWJsZSAmJg0KCQkJCQkJCXRoaXMuX2ludGVyc2VjdHNXaXRoKCB0aGlzLmNvbnRhaW5lckNhY2hlICkgJiYNCgkJCQkJCQkkLmNvbnRhaW5zKCBzb3J0YWJsZS5lbGVtZW50WyAwIF0sIHRoaXMuZWxlbWVudFsgMCBdICkgKSB7DQoJCQkJCQlpbm5lcm1vc3RJbnRlcnNlY3RpbmcgPSBmYWxzZTsNCgkJCQkJfQ0KDQoJCQkJCXJldHVybiBpbm5lcm1vc3RJbnRlcnNlY3Rpbmc7DQoJCQkJfSk7DQoJCQl9DQoNCgkJCWlmICggaW5uZXJtb3N0SW50ZXJzZWN0aW5nICkgew0KCQkJCS8vIElmIGl0IGludGVyc2VjdHMsIHdlIHVzZSBhIGxpdHRsZSBpc092ZXIgdmFyaWFibGUgYW5kIHNldCBpdCBvbmNlLA0KCQkJCS8vIHNvIHRoYXQgdGhlIG1vdmUtaW4gc3R1ZmYgZ2V0cyBmaXJlZCBvbmx5IG9uY2UuDQoJCQkJaWYgKCAhc29ydGFibGUuaXNPdmVyICkgew0KCQkJCQlzb3J0YWJsZS5pc092ZXIgPSAxOw0KDQoJCQkJCXNvcnRhYmxlLmN1cnJlbnRJdGVtID0gdWkuaGVscGVyDQoJCQkJCQkuYXBwZW5kVG8oIHNvcnRhYmxlLmVsZW1lbnQgKQ0KCQkJCQkJLmRhdGEoICJ1aS1zb3J0YWJsZS1pdGVtIiwgdHJ1ZSApOw0KDQoJCQkJCS8vIFN0b3JlIGhlbHBlciBvcHRpb24gdG8gbGF0ZXIgcmVzdG9yZSBpdA0KCQkJCQlzb3J0YWJsZS5vcHRpb25zLl9oZWxwZXIgPSBzb3J0YWJsZS5vcHRpb25zLmhlbHBlcjsNCg0KCQkJCQlzb3J0YWJsZS5vcHRpb25zLmhlbHBlciA9IGZ1bmN0aW9uKCkgew0KCQkJCQkJcmV0dXJuIHVpLmhlbHBlclsgMCBdOw0KCQkJCQl9Ow0KDQoJCQkJCS8vIEZpcmUgdGhlIHN0YXJ0IGV2ZW50cyBvZiB0aGUgc29ydGFibGUgd2l0aCBvdXIgcGFzc2VkIGJyb3dzZXIgZXZlbnQsDQoJCQkJCS8vIGFuZCBvdXIgb3duIGhlbHBlciAoc28gaXQgZG9lc24ndCBjcmVhdGUgYSBuZXcgb25lKQ0KCQkJCQlldmVudC50YXJnZXQgPSBzb3J0YWJsZS5jdXJyZW50SXRlbVsgMCBdOw0KCQkJCQlzb3J0YWJsZS5fbW91c2VDYXB0dXJlKCBldmVudCwgdHJ1ZSApOw0KCQkJCQlzb3J0YWJsZS5fbW91c2VTdGFydCggZXZlbnQsIHRydWUsIHRydWUgKTsNCg0KCQkJCQkvLyBCZWNhdXNlIHRoZSBicm93c2VyIGV2ZW50IGlzIHdheSBvZmYgdGhlIG5ldyBhcHBlbmRlZCBwb3J0bGV0LA0KCQkJCQkvLyBtb2RpZnkgbmVjZXNzYXJ5IHZhcmlhYmxlcyB0byByZWZsZWN0IHRoZSBjaGFuZ2VzDQoJCQkJCXNvcnRhYmxlLm9mZnNldC5jbGljay50b3AgPSBkcmFnZ2FibGUub2Zmc2V0LmNsaWNrLnRvcDsNCgkJCQkJc29ydGFibGUub2Zmc2V0LmNsaWNrLmxlZnQgPSBkcmFnZ2FibGUub2Zmc2V0LmNsaWNrLmxlZnQ7DQoJCQkJCXNvcnRhYmxlLm9mZnNldC5wYXJlbnQubGVmdCAtPSBkcmFnZ2FibGUub2Zmc2V0LnBhcmVudC5sZWZ0IC0NCgkJCQkJCXNvcnRhYmxlLm9mZnNldC5wYXJlbnQubGVmdDsNCgkJCQkJc29ydGFibGUub2Zmc2V0LnBhcmVudC50b3AgLT0gZHJhZ2dhYmxlLm9mZnNldC5wYXJlbnQudG9wIC0NCgkJCQkJCXNvcnRhYmxlLm9mZnNldC5wYXJlbnQudG9wOw0KDQoJCQkJCWRyYWdnYWJsZS5fdHJpZ2dlciggInRvU29ydGFibGUiLCBldmVudCApOw0KDQoJCQkJCS8vIEluZm9ybSBkcmFnZ2FibGUgdGhhdCB0aGUgaGVscGVyIGlzIGluIGEgdmFsaWQgZHJvcCB6b25lLA0KCQkJCQkvLyB1c2VkIHNvbGVseSBpbiB0aGUgcmV2ZXJ0IG9wdGlvbiB0byBoYW5kbGUgInZhbGlkL2ludmFsaWQiLg0KCQkJCQlkcmFnZ2FibGUuZHJvcHBlZCA9IHNvcnRhYmxlLmVsZW1lbnQ7DQoNCgkJCQkJLy8gTmVlZCB0byByZWZyZXNoUG9zaXRpb25zIG9mIGFsbCBzb3J0YWJsZXMgaW4gdGhlIGNhc2UgdGhhdA0KCQkJCQkvLyBhZGRpbmcgdG8gb25lIHNvcnRhYmxlIGNoYW5nZXMgdGhlIGxvY2F0aW9uIG9mIHRoZSBvdGhlciBzb3J0YWJsZXMgKCM5Njc1KQ0KCQkJCQkkLmVhY2goIGRyYWdnYWJsZS5zb3J0YWJsZXMsIGZ1bmN0aW9uKCkgew0KCQkJCQkJdGhpcy5yZWZyZXNoUG9zaXRpb25zKCk7DQoJCQkJCX0pOw0KDQoJCQkJCS8vIGhhY2sgc28gcmVjZWl2ZS91cGRhdGUgY2FsbGJhY2tzIHdvcmsgKG1vc3RseSkNCgkJCQkJZHJhZ2dhYmxlLmN1cnJlbnRJdGVtID0gZHJhZ2dhYmxlLmVsZW1lbnQ7DQoJCQkJCXNvcnRhYmxlLmZyb21PdXRzaWRlID0gZHJhZ2dhYmxlOw0KCQkJCX0NCg0KCQkJCWlmICggc29ydGFibGUuY3VycmVudEl0ZW0gKSB7DQoJCQkJCXNvcnRhYmxlLl9tb3VzZURyYWcoIGV2ZW50ICk7DQoJCQkJCS8vIENvcHkgdGhlIHNvcnRhYmxlJ3MgcG9zaXRpb24gYmVjYXVzZSB0aGUgZHJhZ2dhYmxlJ3MgY2FuIHBvdGVudGlhbGx5IHJlZmxlY3QNCgkJCQkJLy8gYSByZWxhdGl2ZSBwb3NpdGlvbiwgd2hpbGUgc29ydGFibGUgaXMgYWx3YXlzIGFic29sdXRlLCB3aGljaCB0aGUgZHJhZ2dlZA0KCQkJCQkvLyBlbGVtZW50IGhhcyBub3cgYmVjb21lLiAoIzg4MDkpDQoJCQkJCXVpLnBvc2l0aW9uID0gc29ydGFibGUucG9zaXRpb247DQoJCQkJfQ0KCQkJfSBlbHNlIHsNCgkJCQkvLyBJZiBpdCBkb2Vzbid0IGludGVyc2VjdCB3aXRoIHRoZSBzb3J0YWJsZSwgYW5kIGl0IGludGVyc2VjdGVkIGJlZm9yZSwNCgkJCQkvLyB3ZSBmYWtlIHRoZSBkcmFnIHN0b3Agb2YgdGhlIHNvcnRhYmxlLCBidXQgbWFrZSBzdXJlIGl0IGRvZXNuJ3QgcmVtb3ZlDQoJCQkJLy8gdGhlIGhlbHBlciBieSB1c2luZyBjYW5jZWxIZWxwZXJSZW1vdmFsLg0KCQkJCWlmICggc29ydGFibGUuaXNPdmVyICkgew0KDQoJCQkJCXNvcnRhYmxlLmlzT3ZlciA9IDA7DQoJCQkJCXNvcnRhYmxlLmNhbmNlbEhlbHBlclJlbW92YWwgPSB0cnVlOw0KDQoJCQkJCS8vIENhbGxpbmcgc29ydGFibGUncyBtb3VzZVN0b3Agd291bGQgdHJpZ2dlciBhIHJldmVydCwNCgkJCQkJLy8gc28gcmV2ZXJ0IG11c3QgYmUgdGVtcG9yYXJpbHkgZmFsc2UgdW50aWwgYWZ0ZXIgbW91c2VTdG9wIGlzIGNhbGxlZC4NCgkJCQkJc29ydGFibGUub3B0aW9ucy5fcmV2ZXJ0ID0gc29ydGFibGUub3B0aW9ucy5yZXZlcnQ7DQoJCQkJCXNvcnRhYmxlLm9wdGlvbnMucmV2ZXJ0ID0gZmFsc2U7DQoNCgkJCQkJc29ydGFibGUuX3RyaWdnZXIoICJvdXQiLCBldmVudCwgc29ydGFibGUuX3VpSGFzaCggc29ydGFibGUgKSApOw0KCQkJCQlzb3J0YWJsZS5fbW91c2VTdG9wKCBldmVudCwgdHJ1ZSApOw0KDQoJCQkJCS8vIHJlc3RvcmUgc29ydGFibGUgYmVoYXZpb3JzIHRoYXQgd2VyZSBtb2RmaWVkDQoJCQkJCS8vIHdoZW4gdGhlIGRyYWdnYWJsZSBlbnRlcmVkIHRoZSBzb3J0YWJsZSBhcmVhICgjOTQ4MSkNCgkJCQkJc29ydGFibGUub3B0aW9ucy5yZXZlcnQgPSBzb3J0YWJsZS5vcHRpb25zLl9yZXZlcnQ7DQoJCQkJCXNvcnRhYmxlLm9wdGlvbnMuaGVscGVyID0gc29ydGFibGUub3B0aW9ucy5faGVscGVyOw0KDQoJCQkJCWlmICggc29ydGFibGUucGxhY2Vob2xkZXIgKSB7DQoJCQkJCQlzb3J0YWJsZS5wbGFjZWhvbGRlci5yZW1vdmUoKTsNCgkJCQkJfQ0KDQoJCQkJCS8vIFJlY2FsY3VsYXRlIHRoZSBkcmFnZ2FibGUncyBvZmZzZXQgY29uc2lkZXJpbmcgdGhlIHNvcnRhYmxlDQoJCQkJCS8vIG1heSBoYXZlIG1vZGlmaWVkIHRoZW0gaW4gdW5leHBlY3RlZCB3YXlzICgjODgwOSkNCgkJCQkJZHJhZ2dhYmxlLl9yZWZyZXNoT2Zmc2V0cyggZXZlbnQgKTsNCgkJCQkJdWkucG9zaXRpb24gPSBkcmFnZ2FibGUuX2dlbmVyYXRlUG9zaXRpb24oIGV2ZW50LCB0cnVlICk7DQoNCgkJCQkJZHJhZ2dhYmxlLl90cmlnZ2VyKCAiZnJvbVNvcnRhYmxlIiwgZXZlbnQgKTsNCg0KCQkJCQkvLyBJbmZvcm0gZHJhZ2dhYmxlIHRoYXQgdGhlIGhlbHBlciBpcyBubyBsb25nZXIgaW4gYSB2YWxpZCBkcm9wIHpvbmUNCgkJCQkJZHJhZ2dhYmxlLmRyb3BwZWQgPSBmYWxzZTsNCg0KCQkJCQkvLyBOZWVkIHRvIHJlZnJlc2hQb3NpdGlvbnMgb2YgYWxsIHNvcnRhYmxlcyBqdXN0IGluIGNhc2UgcmVtb3ZpbmcNCgkJCQkJLy8gZnJvbSBvbmUgc29ydGFibGUgY2hhbmdlcyB0aGUgbG9jYXRpb24gb2Ygb3RoZXIgc29ydGFibGVzICgjOTY3NSkNCgkJCQkJJC5lYWNoKCBkcmFnZ2FibGUuc29ydGFibGVzLCBmdW5jdGlvbigpIHsNCgkJCQkJCXRoaXMucmVmcmVzaFBvc2l0aW9ucygpOw0KCQkJCQl9KTsNCgkJCQl9DQoJCQl9DQoJCX0pOw0KCX0NCn0pOw0KDQokLnVpLnBsdWdpbi5hZGQoImRyYWdnYWJsZSIsICJjdXJzb3IiLCB7DQoJc3RhcnQ6IGZ1bmN0aW9uKCBldmVudCwgdWksIGluc3RhbmNlICkgew0KCQl2YXIgdCA9ICQoICJib2R5IiApLA0KCQkJbyA9IGluc3RhbmNlLm9wdGlvbnM7DQoNCgkJaWYgKHQuY3NzKCJjdXJzb3IiKSkgew0KCQkJby5fY3Vyc29yID0gdC5jc3MoImN1cnNvciIpOw0KCQl9DQoJCXQuY3NzKCJjdXJzb3IiLCBvLmN1cnNvcik7DQoJfSwNCglzdG9wOiBmdW5jdGlvbiggZXZlbnQsIHVpLCBpbnN0YW5jZSApIHsNCgkJdmFyIG8gPSBpbnN0YW5jZS5vcHRpb25zOw0KCQlpZiAoby5fY3Vyc29yKSB7DQoJCQkkKCJib2R5IikuY3NzKCJjdXJzb3IiLCBvLl9jdXJzb3IpOw0KCQl9DQoJfQ0KfSk7DQoNCiQudWkucGx1Z2luLmFkZCgiZHJhZ2dhYmxlIiwgIm9wYWNpdHkiLCB7DQoJc3RhcnQ6IGZ1bmN0aW9uKCBldmVudCwgdWksIGluc3RhbmNlICkgew0KCQl2YXIgdCA9ICQoIHVpLmhlbHBlciApLA0KCQkJbyA9IGluc3RhbmNlLm9wdGlvbnM7DQoJCWlmICh0LmNzcygib3BhY2l0eSIpKSB7DQoJCQlvLl9vcGFjaXR5ID0gdC5jc3MoIm9wYWNpdHkiKTsNCgkJfQ0KCQl0LmNzcygib3BhY2l0eSIsIG8ub3BhY2l0eSk7DQoJfSwNCglzdG9wOiBmdW5jdGlvbiggZXZlbnQsIHVpLCBpbnN0YW5jZSApIHsNCgkJdmFyIG8gPSBpbnN0YW5jZS5vcHRpb25zOw0KCQlpZiAoby5fb3BhY2l0eSkgew0KCQkJJCh1aS5oZWxwZXIpLmNzcygib3BhY2l0eSIsIG8uX29wYWNpdHkpOw0KCQl9DQoJfQ0KfSk7DQoNCiQudWkucGx1Z2luLmFkZCgiZHJhZ2dhYmxlIiwgInNjcm9sbCIsIHsNCglzdGFydDogZnVuY3Rpb24oIGV2ZW50LCB1aSwgaSApIHsNCgkJaWYgKCAhaS5zY3JvbGxQYXJlbnROb3RIaWRkZW4gKSB7DQoJCQlpLnNjcm9sbFBhcmVudE5vdEhpZGRlbiA9IGkuaGVscGVyLnNjcm9sbFBhcmVudCggZmFsc2UgKTsNCgkJfQ0KDQoJCWlmICggaS5zY3JvbGxQYXJlbnROb3RIaWRkZW5bIDAgXSAhPT0gaS5kb2N1bWVudFsgMCBdICYmIGkuc2Nyb2xsUGFyZW50Tm90SGlkZGVuWyAwIF0udGFnTmFtZSAhPT0gIkhUTUwiICkgew0KCQkJaS5vdmVyZmxvd09mZnNldCA9IGkuc2Nyb2xsUGFyZW50Tm90SGlkZGVuLm9mZnNldCgpOw0KCQl9DQoJfSwNCglkcmFnOiBmdW5jdGlvbiggZXZlbnQsIHVpLCBpICApIHsNCg0KCQl2YXIgbyA9IGkub3B0aW9ucywNCgkJCXNjcm9sbGVkID0gZmFsc2UsDQoJCQlzY3JvbGxQYXJlbnQgPSBpLnNjcm9sbFBhcmVudE5vdEhpZGRlblsgMCBdLA0KCQkJZG9jdW1lbnQgPSBpLmRvY3VtZW50WyAwIF07DQoNCgkJaWYgKCBzY3JvbGxQYXJlbnQgIT09IGRvY3VtZW50ICYmIHNjcm9sbFBhcmVudC50YWdOYW1lICE9PSAiSFRNTCIgKSB7DQoJCQlpZiAoICFvLmF4aXMgfHwgby5heGlzICE9PSAieCIgKSB7DQoJCQkJaWYgKCAoIGkub3ZlcmZsb3dPZmZzZXQudG9wICsgc2Nyb2xsUGFyZW50Lm9mZnNldEhlaWdodCApIC0gZXZlbnQucGFnZVkgPCBvLnNjcm9sbFNlbnNpdGl2aXR5ICkgew0KCQkJCQlzY3JvbGxQYXJlbnQuc2Nyb2xsVG9wID0gc2Nyb2xsZWQgPSBzY3JvbGxQYXJlbnQuc2Nyb2xsVG9wICsgby5zY3JvbGxTcGVlZDsNCgkJCQl9IGVsc2UgaWYgKCBldmVudC5wYWdlWSAtIGkub3ZlcmZsb3dPZmZzZXQudG9wIDwgby5zY3JvbGxTZW5zaXRpdml0eSApIHsNCgkJCQkJc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCA9IHNjcm9sbGVkID0gc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCAtIG8uc2Nyb2xsU3BlZWQ7DQoJCQkJfQ0KCQkJfQ0KDQoJCQlpZiAoICFvLmF4aXMgfHwgby5heGlzICE9PSAieSIgKSB7DQoJCQkJaWYgKCAoIGkub3ZlcmZsb3dPZmZzZXQubGVmdCArIHNjcm9sbFBhcmVudC5vZmZzZXRXaWR0aCApIC0gZXZlbnQucGFnZVggPCBvLnNjcm9sbFNlbnNpdGl2aXR5ICkgew0KCQkJCQlzY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCA9IHNjcm9sbGVkID0gc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQgKyBvLnNjcm9sbFNwZWVkOw0KCQkJCX0gZWxzZSBpZiAoIGV2ZW50LnBhZ2VYIC0gaS5vdmVyZmxvd09mZnNldC5sZWZ0IDwgby5zY3JvbGxTZW5zaXRpdml0eSApIHsNCgkJCQkJc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQgPSBzY3JvbGxlZCA9IHNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0IC0gby5zY3JvbGxTcGVlZDsNCgkJCQl9DQoJCQl9DQoNCgkJfSBlbHNlIHsNCg0KCQkJaWYgKCFvLmF4aXMgfHwgby5heGlzICE9PSAieCIpIHsNCgkJCQlpZiAoZXZlbnQucGFnZVkgLSAkKGRvY3VtZW50KS5zY3JvbGxUb3AoKSA8IG8uc2Nyb2xsU2Vuc2l0aXZpdHkpIHsNCgkJCQkJc2Nyb2xsZWQgPSAkKGRvY3VtZW50KS5zY3JvbGxUb3AoJChkb2N1bWVudCkuc2Nyb2xsVG9wKCkgLSBvLnNjcm9sbFNwZWVkKTsNCgkJCQl9IGVsc2UgaWYgKCQod2luZG93KS5oZWlnaHQoKSAtIChldmVudC5wYWdlWSAtICQoZG9jdW1lbnQpLnNjcm9sbFRvcCgpKSA8IG8uc2Nyb2xsU2Vuc2l0aXZpdHkpIHsNCgkJCQkJc2Nyb2xsZWQgPSAkKGRvY3VtZW50KS5zY3JvbGxUb3AoJChkb2N1bWVudCkuc2Nyb2xsVG9wKCkgKyBvLnNjcm9sbFNwZWVkKTsNCgkJCQl9DQoJCQl9DQoNCgkJCWlmICghby5heGlzIHx8IG8uYXhpcyAhPT0gInkiKSB7DQoJCQkJaWYgKGV2ZW50LnBhZ2VYIC0gJChkb2N1bWVudCkuc2Nyb2xsTGVmdCgpIDwgby5zY3JvbGxTZW5zaXRpdml0eSkgew0KCQkJCQlzY3JvbGxlZCA9ICQoZG9jdW1lbnQpLnNjcm9sbExlZnQoJChkb2N1bWVudCkuc2Nyb2xsTGVmdCgpIC0gby5zY3JvbGxTcGVlZCk7DQoJCQkJfSBlbHNlIGlmICgkKHdpbmRvdykud2lkdGgoKSAtIChldmVudC5wYWdlWCAtICQoZG9jdW1lbnQpLnNjcm9sbExlZnQoKSkgPCBvLnNjcm9sbFNlbnNpdGl2aXR5KSB7DQoJCQkJCXNjcm9sbGVkID0gJChkb2N1bWVudCkuc2Nyb2xsTGVmdCgkKGRvY3VtZW50KS5zY3JvbGxMZWZ0KCkgKyBvLnNjcm9sbFNwZWVkKTsNCgkJCQl9DQoJCQl9DQoNCgkJfQ0KDQoJCWlmIChzY3JvbGxlZCAhPT0gZmFsc2UgJiYgJC51aS5kZG1hbmFnZXIgJiYgIW8uZHJvcEJlaGF2aW91cikgew0KCQkJJC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHMoaSwgZXZlbnQpOw0KCQl9DQoNCgl9DQp9KTsNCg0KJC51aS5wbHVnaW4uYWRkKCJkcmFnZ2FibGUiLCAic25hcCIsIHsNCglzdGFydDogZnVuY3Rpb24oIGV2ZW50LCB1aSwgaSApIHsNCg0KCQl2YXIgbyA9IGkub3B0aW9uczsNCg0KCQlpLnNuYXBFbGVtZW50cyA9IFtdOw0KDQoJCSQoby5zbmFwLmNvbnN0cnVjdG9yICE9PSBTdHJpbmcgPyAoIG8uc25hcC5pdGVtcyB8fCAiOmRhdGEodWktZHJhZ2dhYmxlKSIgKSA6IG8uc25hcCkuZWFjaChmdW5jdGlvbigpIHsNCgkJCXZhciAkdCA9ICQodGhpcyksDQoJCQkJJG8gPSAkdC5vZmZzZXQoKTsNCgkJCWlmICh0aGlzICE9PSBpLmVsZW1lbnRbMF0pIHsNCgkJCQlpLnNuYXBFbGVtZW50cy5wdXNoKHsNCgkJCQkJaXRlbTogdGhpcywNCgkJCQkJd2lkdGg6ICR0Lm91dGVyV2lkdGgoKSwgaGVpZ2h0OiAkdC5vdXRlckhlaWdodCgpLA0KCQkJCQl0b3A6ICRvLnRvcCwgbGVmdDogJG8ubGVmdA0KCQkJCX0pOw0KCQkJfQ0KCQl9KTsNCg0KCX0sDQoJZHJhZzogZnVuY3Rpb24oIGV2ZW50LCB1aSwgaW5zdCApIHsNCg0KCQl2YXIgdHMsIGJzLCBscywgcnMsIGwsIHIsIHQsIGIsIGksIGZpcnN0LA0KCQkJbyA9IGluc3Qub3B0aW9ucywNCgkJCWQgPSBvLnNuYXBUb2xlcmFuY2UsDQoJCQl4MSA9IHVpLm9mZnNldC5sZWZ0LCB4MiA9IHgxICsgaW5zdC5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCwNCgkJCXkxID0gdWkub2Zmc2V0LnRvcCwgeTIgPSB5MSArIGluc3QuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0Ow0KDQoJCWZvciAoaSA9IGluc3Quc25hcEVsZW1lbnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKXsNCg0KCQkJbCA9IGluc3Quc25hcEVsZW1lbnRzW2ldLmxlZnQgLSBpbnN0Lm1hcmdpbnMubGVmdDsNCgkJCXIgPSBsICsgaW5zdC5zbmFwRWxlbWVudHNbaV0ud2lkdGg7DQoJCQl0ID0gaW5zdC5zbmFwRWxlbWVudHNbaV0udG9wIC0gaW5zdC5tYXJnaW5zLnRvcDsNCgkJCWIgPSB0ICsgaW5zdC5zbmFwRWxlbWVudHNbaV0uaGVpZ2h0Ow0KDQoJCQlpZiAoIHgyIDwgbCAtIGQgfHwgeDEgPiByICsgZCB8fCB5MiA8IHQgLSBkIHx8IHkxID4gYiArIGQgfHwgISQuY29udGFpbnMoIGluc3Quc25hcEVsZW1lbnRzWyBpIF0uaXRlbS5vd25lckRvY3VtZW50LCBpbnN0LnNuYXBFbGVtZW50c1sgaSBdLml0ZW0gKSApIHsNCgkJCQlpZiAoaW5zdC5zbmFwRWxlbWVudHNbaV0uc25hcHBpbmcpIHsNCgkJCQkJKGluc3Qub3B0aW9ucy5zbmFwLnJlbGVhc2UgJiYgaW5zdC5vcHRpb25zLnNuYXAucmVsZWFzZS5jYWxsKGluc3QuZWxlbWVudCwgZXZlbnQsICQuZXh0ZW5kKGluc3QuX3VpSGFzaCgpLCB7IHNuYXBJdGVtOiBpbnN0LnNuYXBFbGVtZW50c1tpXS5pdGVtIH0pKSk7DQoJCQkJfQ0KCQkJCWluc3Quc25hcEVsZW1lbnRzW2ldLnNuYXBwaW5nID0gZmFsc2U7DQoJCQkJY29udGludWU7DQoJCQl9DQoNCgkJCWlmIChvLnNuYXBNb2RlICE9PSAiaW5uZXIiKSB7DQoJCQkJdHMgPSBNYXRoLmFicyh0IC0geTIpIDw9IGQ7DQoJCQkJYnMgPSBNYXRoLmFicyhiIC0geTEpIDw9IGQ7DQoJCQkJbHMgPSBNYXRoLmFicyhsIC0geDIpIDw9IGQ7DQoJCQkJcnMgPSBNYXRoLmFicyhyIC0geDEpIDw9IGQ7DQoJCQkJaWYgKHRzKSB7DQoJCQkJCXVpLnBvc2l0aW9uLnRvcCA9IGluc3QuX2NvbnZlcnRQb3NpdGlvblRvKCJyZWxhdGl2ZSIsIHsgdG9wOiB0IC0gaW5zdC5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQsIGxlZnQ6IDAgfSkudG9wOw0KCQkJCX0NCgkJCQlpZiAoYnMpIHsNCgkJCQkJdWkucG9zaXRpb24udG9wID0gaW5zdC5fY29udmVydFBvc2l0aW9uVG8oInJlbGF0aXZlIiwgeyB0b3A6IGIsIGxlZnQ6IDAgfSkudG9wOw0KCQkJCX0NCgkJCQlpZiAobHMpIHsNCgkJCQkJdWkucG9zaXRpb24ubGVmdCA9IGluc3QuX2NvbnZlcnRQb3NpdGlvblRvKCJyZWxhdGl2ZSIsIHsgdG9wOiAwLCBsZWZ0OiBsIC0gaW5zdC5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCB9KS5sZWZ0Ow0KCQkJCX0NCgkJCQlpZiAocnMpIHsNCgkJCQkJdWkucG9zaXRpb24ubGVmdCA9IGluc3QuX2NvbnZlcnRQb3NpdGlvblRvKCJyZWxhdGl2ZSIsIHsgdG9wOiAwLCBsZWZ0OiByIH0pLmxlZnQ7DQoJCQkJfQ0KCQkJfQ0KDQoJCQlmaXJzdCA9ICh0cyB8fCBicyB8fCBscyB8fCBycyk7DQoNCgkJCWlmIChvLnNuYXBNb2RlICE9PSAib3V0ZXIiKSB7DQoJCQkJdHMgPSBNYXRoLmFicyh0IC0geTEpIDw9IGQ7DQoJCQkJYnMgPSBNYXRoLmFicyhiIC0geTIpIDw9IGQ7DQoJCQkJbHMgPSBNYXRoLmFicyhsIC0geDEpIDw9IGQ7DQoJCQkJcnMgPSBNYXRoLmFicyhyIC0geDIpIDw9IGQ7DQoJCQkJaWYgKHRzKSB7DQoJCQkJCXVpLnBvc2l0aW9uLnRvcCA9IGluc3QuX2NvbnZlcnRQb3NpdGlvblRvKCJyZWxhdGl2ZSIsIHsgdG9wOiB0LCBsZWZ0OiAwIH0pLnRvcDsNCgkJCQl9DQoJCQkJaWYgKGJzKSB7DQoJCQkJCXVpLnBvc2l0aW9uLnRvcCA9IGluc3QuX2NvbnZlcnRQb3NpdGlvblRvKCJyZWxhdGl2ZSIsIHsgdG9wOiBiIC0gaW5zdC5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQsIGxlZnQ6IDAgfSkudG9wOw0KCQkJCX0NCgkJCQlpZiAobHMpIHsNCgkJCQkJdWkucG9zaXRpb24ubGVmdCA9IGluc3QuX2NvbnZlcnRQb3NpdGlvblRvKCJyZWxhdGl2ZSIsIHsgdG9wOiAwLCBsZWZ0OiBsIH0pLmxlZnQ7DQoJCQkJfQ0KCQkJCWlmIChycykgew0KCQkJCQl1aS5wb3NpdGlvbi5sZWZ0ID0gaW5zdC5fY29udmVydFBvc2l0aW9uVG8oInJlbGF0aXZlIiwgeyB0b3A6IDAsIGxlZnQ6IHIgLSBpbnN0LmhlbHBlclByb3BvcnRpb25zLndpZHRoIH0pLmxlZnQ7DQoJCQkJfQ0KCQkJfQ0KDQoJCQlpZiAoIWluc3Quc25hcEVsZW1lbnRzW2ldLnNuYXBwaW5nICYmICh0cyB8fCBicyB8fCBscyB8fCBycyB8fCBmaXJzdCkpIHsNCgkJCQkoaW5zdC5vcHRpb25zLnNuYXAuc25hcCAmJiBpbnN0Lm9wdGlvbnMuc25hcC5zbmFwLmNhbGwoaW5zdC5lbGVtZW50LCBldmVudCwgJC5leHRlbmQoaW5zdC5fdWlIYXNoKCksIHsgc25hcEl0ZW06IGluc3Quc25hcEVsZW1lbnRzW2ldLml0ZW0gfSkpKTsNCgkJCX0NCgkJCWluc3Quc25hcEVsZW1lbnRzW2ldLnNuYXBwaW5nID0gKHRzIHx8IGJzIHx8IGxzIHx8IHJzIHx8IGZpcnN0KTsNCg0KCQl9DQoNCgl9DQp9KTsNCg0KJC51aS5wbHVnaW4uYWRkKCJkcmFnZ2FibGUiLCAic3RhY2siLCB7DQoJc3RhcnQ6IGZ1bmN0aW9uKCBldmVudCwgdWksIGluc3RhbmNlICkgew0KCQl2YXIgbWluLA0KCQkJbyA9IGluc3RhbmNlLm9wdGlvbnMsDQoJCQlncm91cCA9ICQubWFrZUFycmF5KCQoby5zdGFjaykpLnNvcnQoZnVuY3Rpb24oYSwgYikgew0KCQkJCXJldHVybiAocGFyc2VJbnQoJChhKS5jc3MoInpJbmRleCIpLCAxMCkgfHwgMCkgLSAocGFyc2VJbnQoJChiKS5jc3MoInpJbmRleCIpLCAxMCkgfHwgMCk7DQoJCQl9KTsNCg0KCQlpZiAoIWdyb3VwLmxlbmd0aCkgeyByZXR1cm47IH0NCg0KCQltaW4gPSBwYXJzZUludCgkKGdyb3VwWzBdKS5jc3MoInpJbmRleCIpLCAxMCkgfHwgMDsNCgkJJChncm91cCkuZWFjaChmdW5jdGlvbihpKSB7DQoJCQkkKHRoaXMpLmNzcygiekluZGV4IiwgbWluICsgaSk7DQoJCX0pOw0KCQl0aGlzLmNzcygiekluZGV4IiwgKG1pbiArIGdyb3VwLmxlbmd0aCkpOw0KCX0NCn0pOw0KDQokLnVpLnBsdWdpbi5hZGQoImRyYWdnYWJsZSIsICJ6SW5kZXgiLCB7DQoJc3RhcnQ6IGZ1bmN0aW9uKCBldmVudCwgdWksIGluc3RhbmNlICkgew0KCQl2YXIgdCA9ICQoIHVpLmhlbHBlciApLA0KCQkJbyA9IGluc3RhbmNlLm9wdGlvbnM7DQoNCgkJaWYgKHQuY3NzKCJ6SW5kZXgiKSkgew0KCQkJby5fekluZGV4ID0gdC5jc3MoInpJbmRleCIpOw0KCQl9DQoJCXQuY3NzKCJ6SW5kZXgiLCBvLnpJbmRleCk7DQoJfSwNCglzdG9wOiBmdW5jdGlvbiggZXZlbnQsIHVpLCBpbnN0YW5jZSApIHsNCgkJdmFyIG8gPSBpbnN0YW5jZS5vcHRpb25zOw0KDQoJCWlmIChvLl96SW5kZXgpIHsNCgkJCSQodWkuaGVscGVyKS5jc3MoInpJbmRleCIsIG8uX3pJbmRleCk7DQoJCX0NCgl9DQp9KTsNCg0KdmFyIGRyYWdnYWJsZSA9ICQudWkuZHJhZ2dhYmxlOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIFJlc2l6YWJsZSAxLjExLjINCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgMjAxNCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKg0KICogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vcmVzaXphYmxlLw0KICovDQoNCg0KJC53aWRnZXQoInVpLnJlc2l6YWJsZSIsICQudWkubW91c2UsIHsNCgl2ZXJzaW9uOiAiMS4xMS4yIiwNCgl3aWRnZXRFdmVudFByZWZpeDogInJlc2l6ZSIsDQoJb3B0aW9uczogew0KCQlhbHNvUmVzaXplOiBmYWxzZSwNCgkJYW5pbWF0ZTogZmFsc2UsDQoJCWFuaW1hdGVEdXJhdGlvbjogInNsb3ciLA0KCQlhbmltYXRlRWFzaW5nOiAic3dpbmciLA0KCQlhc3BlY3RSYXRpbzogZmFsc2UsDQoJCWF1dG9IaWRlOiBmYWxzZSwNCgkJY29udGFpbm1lbnQ6IGZhbHNlLA0KCQlnaG9zdDogZmFsc2UsDQoJCWdyaWQ6IGZhbHNlLA0KCQloYW5kbGVzOiAiZSxzLHNlIiwNCgkJaGVscGVyOiBmYWxzZSwNCgkJbWF4SGVpZ2h0OiBudWxsLA0KCQltYXhXaWR0aDogbnVsbCwNCgkJbWluSGVpZ2h0OiAxMCwNCgkJbWluV2lkdGg6IDEwLA0KCQkvLyBTZWUgIzc5NjANCgkJekluZGV4OiA5MCwNCg0KCQkvLyBjYWxsYmFja3MNCgkJcmVzaXplOiBudWxsLA0KCQlzdGFydDogbnVsbCwNCgkJc3RvcDogbnVsbA0KCX0sDQoNCglfbnVtOiBmdW5jdGlvbiggdmFsdWUgKSB7DQoJCXJldHVybiBwYXJzZUludCggdmFsdWUsIDEwICkgfHwgMDsNCgl9LA0KDQoJX2lzTnVtYmVyOiBmdW5jdGlvbiggdmFsdWUgKSB7DQoJCXJldHVybiAhaXNOYU4oIHBhcnNlSW50KCB2YWx1ZSwgMTAgKSApOw0KCX0sDQoNCglfaGFzU2Nyb2xsOiBmdW5jdGlvbiggZWwsIGEgKSB7DQoNCgkJaWYgKCAkKCBlbCApLmNzcyggIm92ZXJmbG93IiApID09PSAiaGlkZGVuIikgew0KCQkJcmV0dXJuIGZhbHNlOw0KCQl9DQoNCgkJdmFyIHNjcm9sbCA9ICggYSAmJiBhID09PSAibGVmdCIgKSA/ICJzY3JvbGxMZWZ0IiA6ICJzY3JvbGxUb3AiLA0KCQkJaGFzID0gZmFsc2U7DQoNCgkJaWYgKCBlbFsgc2Nyb2xsIF0gPiAwICkgew0KCQkJcmV0dXJuIHRydWU7DQoJCX0NCg0KCQkvLyBUT0RPOiBkZXRlcm1pbmUgd2hpY2ggY2FzZXMgYWN0dWFsbHkgY2F1c2UgdGhpcyB0byBoYXBwZW4NCgkJLy8gaWYgdGhlIGVsZW1lbnQgZG9lc24ndCBoYXZlIHRoZSBzY3JvbGwgc2V0LCBzZWUgaWYgaXQncyBwb3NzaWJsZSB0bw0KCQkvLyBzZXQgdGhlIHNjcm9sbA0KCQllbFsgc2Nyb2xsIF0gPSAxOw0KCQloYXMgPSAoIGVsWyBzY3JvbGwgXSA+IDAgKTsNCgkJZWxbIHNjcm9sbCBdID0gMDsNCgkJcmV0dXJuIGhhczsNCgl9LA0KDQoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7DQoNCgkJdmFyIG4sIGksIGhhbmRsZSwgYXhpcywgaG5hbWUsDQoJCQl0aGF0ID0gdGhpcywNCgkJCW8gPSB0aGlzLm9wdGlvbnM7DQoJCXRoaXMuZWxlbWVudC5hZGRDbGFzcygidWktcmVzaXphYmxlIik7DQoNCgkJJC5leHRlbmQodGhpcywgew0KCQkJX2FzcGVjdFJhdGlvOiAhIShvLmFzcGVjdFJhdGlvKSwNCgkJCWFzcGVjdFJhdGlvOiBvLmFzcGVjdFJhdGlvLA0KCQkJb3JpZ2luYWxFbGVtZW50OiB0aGlzLmVsZW1lbnQsDQoJCQlfcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50czogW10sDQoJCQlfaGVscGVyOiBvLmhlbHBlciB8fCBvLmdob3N0IHx8IG8uYW5pbWF0ZSA/IG8uaGVscGVyIHx8ICJ1aS1yZXNpemFibGUtaGVscGVyIiA6IG51bGwNCgkJfSk7DQoNCgkJLy8gV3JhcCB0aGUgZWxlbWVudCBpZiBpdCBjYW5ub3QgaG9sZCBjaGlsZCBub2Rlcw0KCQlpZiAodGhpcy5lbGVtZW50WzBdLm5vZGVOYW1lLm1hdGNoKC9jYW52YXN8dGV4dGFyZWF8aW5wdXR8c2VsZWN0fGJ1dHRvbnxpbWcvaSkpIHsNCg0KCQkJdGhpcy5lbGVtZW50LndyYXAoDQoJCQkJJCgiPGRpdiBjbGFzcz0ndWktd3JhcHBlcicgc3R5bGU9J292ZXJmbG93OiBoaWRkZW47Jz48L2Rpdj4iKS5jc3Moew0KCQkJCQlwb3NpdGlvbjogdGhpcy5lbGVtZW50LmNzcygicG9zaXRpb24iKSwNCgkJCQkJd2lkdGg6IHRoaXMuZWxlbWVudC5vdXRlcldpZHRoKCksDQoJCQkJCWhlaWdodDogdGhpcy5lbGVtZW50Lm91dGVySGVpZ2h0KCksDQoJCQkJCXRvcDogdGhpcy5lbGVtZW50LmNzcygidG9wIiksDQoJCQkJCWxlZnQ6IHRoaXMuZWxlbWVudC5jc3MoImxlZnQiKQ0KCQkJCX0pDQoJCQkpOw0KDQoJCQl0aGlzLmVsZW1lbnQgPSB0aGlzLmVsZW1lbnQucGFyZW50KCkuZGF0YSgNCgkJCQkidWktcmVzaXphYmxlIiwgdGhpcy5lbGVtZW50LnJlc2l6YWJsZSggImluc3RhbmNlIiApDQoJCQkpOw0KDQoJCQl0aGlzLmVsZW1lbnRJc1dyYXBwZXIgPSB0cnVlOw0KDQoJCQl0aGlzLmVsZW1lbnQuY3NzKHsNCgkJCQltYXJnaW5MZWZ0OiB0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoIm1hcmdpbkxlZnQiKSwNCgkJCQltYXJnaW5Ub3A6IHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcygibWFyZ2luVG9wIiksDQoJCQkJbWFyZ2luUmlnaHQ6IHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcygibWFyZ2luUmlnaHQiKSwNCgkJCQltYXJnaW5Cb3R0b206IHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcygibWFyZ2luQm90dG9tIikNCgkJCX0pOw0KCQkJdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKHsNCgkJCQltYXJnaW5MZWZ0OiAwLA0KCQkJCW1hcmdpblRvcDogMCwNCgkJCQltYXJnaW5SaWdodDogMCwNCgkJCQltYXJnaW5Cb3R0b206IDANCgkJCX0pOw0KCQkJLy8gc3VwcG9ydDogU2FmYXJpDQoJCQkvLyBQcmV2ZW50IFNhZmFyaSB0ZXh0YXJlYSByZXNpemUNCgkJCXRoaXMub3JpZ2luYWxSZXNpemVTdHlsZSA9IHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcygicmVzaXplIik7DQoJCQl0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoInJlc2l6ZSIsICJub25lIik7DQoNCgkJCXRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMucHVzaCggdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKHsNCgkJCQlwb3NpdGlvbjogInN0YXRpYyIsDQoJCQkJem9vbTogMSwNCgkJCQlkaXNwbGF5OiAiYmxvY2siDQoJCQl9KSApOw0KDQoJCQkvLyBzdXBwb3J0OiBJRTkNCgkJCS8vIGF2b2lkIElFIGp1bXAgKGhhcmQgc2V0IHRoZSBtYXJnaW4pDQoJCQl0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoeyBtYXJnaW46IHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcygibWFyZ2luIikgfSk7DQoNCgkJCXRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplKCk7DQoJCX0NCg0KCQl0aGlzLmhhbmRsZXMgPSBvLmhhbmRsZXMgfHwNCgkJCSggISQoIi51aS1yZXNpemFibGUtaGFuZGxlIiwgdGhpcy5lbGVtZW50KS5sZW5ndGggPw0KCQkJCSJlLHMsc2UiIDogew0KCQkJCQluOiAiLnVpLXJlc2l6YWJsZS1uIiwNCgkJCQkJZTogIi51aS1yZXNpemFibGUtZSIsDQoJCQkJCXM6ICIudWktcmVzaXphYmxlLXMiLA0KCQkJCQl3OiAiLnVpLXJlc2l6YWJsZS13IiwNCgkJCQkJc2U6ICIudWktcmVzaXphYmxlLXNlIiwNCgkJCQkJc3c6ICIudWktcmVzaXphYmxlLXN3IiwNCgkJCQkJbmU6ICIudWktcmVzaXphYmxlLW5lIiwNCgkJCQkJbnc6ICIudWktcmVzaXphYmxlLW53Ig0KCQkJCX0gKTsNCg0KCQlpZiAodGhpcy5oYW5kbGVzLmNvbnN0cnVjdG9yID09PSBTdHJpbmcpIHsNCg0KCQkJaWYgKCB0aGlzLmhhbmRsZXMgPT09ICJhbGwiKSB7DQoJCQkJdGhpcy5oYW5kbGVzID0gIm4sZSxzLHcsc2Usc3csbmUsbnciOw0KCQkJfQ0KDQoJCQluID0gdGhpcy5oYW5kbGVzLnNwbGl0KCIsIik7DQoJCQl0aGlzLmhhbmRsZXMgPSB7fTsNCg0KCQkJZm9yIChpID0gMDsgaSA8IG4ubGVuZ3RoOyBpKyspIHsNCg0KCQkJCWhhbmRsZSA9ICQudHJpbShuW2ldKTsNCgkJCQlobmFtZSA9ICJ1aS1yZXNpemFibGUtIiArIGhhbmRsZTsNCgkJCQlheGlzID0gJCgiPGRpdiBjbGFzcz0ndWktcmVzaXphYmxlLWhhbmRsZSAiICsgaG5hbWUgKyAiJz48L2Rpdj4iKTsNCg0KCQkJCWF4aXMuY3NzKHsgekluZGV4OiBvLnpJbmRleCB9KTsNCg0KCQkJCS8vIFRPRE8gOiBXaGF0J3MgZ29pbmcgb24gaGVyZT8NCgkJCQlpZiAoInNlIiA9PT0gaGFuZGxlKSB7DQoJCQkJCWF4aXMuYWRkQ2xhc3MoInVpLWljb24gdWktaWNvbi1ncmlwc21hbGwtZGlhZ29uYWwtc2UiKTsNCgkJCQl9DQoNCgkJCQl0aGlzLmhhbmRsZXNbaGFuZGxlXSA9ICIudWktcmVzaXphYmxlLSIgKyBoYW5kbGU7DQoJCQkJdGhpcy5lbGVtZW50LmFwcGVuZChheGlzKTsNCgkJCX0NCg0KCQl9DQoNCgkJdGhpcy5fcmVuZGVyQXhpcyA9IGZ1bmN0aW9uKHRhcmdldCkgew0KDQoJCQl2YXIgaSwgYXhpcywgcGFkUG9zLCBwYWRXcmFwcGVyOw0KDQoJCQl0YXJnZXQgPSB0YXJnZXQgfHwgdGhpcy5lbGVtZW50Ow0KDQoJCQlmb3IgKGkgaW4gdGhpcy5oYW5kbGVzKSB7DQoNCgkJCQlpZiAodGhpcy5oYW5kbGVzW2ldLmNvbnN0cnVjdG9yID09PSBTdHJpbmcpIHsNCgkJCQkJdGhpcy5oYW5kbGVzW2ldID0gdGhpcy5lbGVtZW50LmNoaWxkcmVuKCB0aGlzLmhhbmRsZXNbIGkgXSApLmZpcnN0KCkuc2hvdygpOw0KCQkJCX0NCg0KCQkJCWlmICh0aGlzLmVsZW1lbnRJc1dyYXBwZXIgJiYgdGhpcy5vcmlnaW5hbEVsZW1lbnRbMF0ubm9kZU5hbWUubWF0Y2goL3RleHRhcmVhfGlucHV0fHNlbGVjdHxidXR0b24vaSkpIHsNCg0KCQkJCQlheGlzID0gJCh0aGlzLmhhbmRsZXNbaV0sIHRoaXMuZWxlbWVudCk7DQoNCgkJCQkJcGFkV3JhcHBlciA9IC9zd3xuZXxud3xzZXxufHMvLnRlc3QoaSkgPyBheGlzLm91dGVySGVpZ2h0KCkgOiBheGlzLm91dGVyV2lkdGgoKTsNCg0KCQkJCQlwYWRQb3MgPSBbICJwYWRkaW5nIiwNCgkJCQkJCS9uZXxud3xuLy50ZXN0KGkpID8gIlRvcCIgOg0KCQkJCQkJL3NlfHN3fHMvLnRlc3QoaSkgPyAiQm90dG9tIiA6DQoJCQkJCQkvXmUkLy50ZXN0KGkpID8gIlJpZ2h0IiA6ICJMZWZ0IiBdLmpvaW4oIiIpOw0KDQoJCQkJCXRhcmdldC5jc3MocGFkUG9zLCBwYWRXcmFwcGVyKTsNCg0KCQkJCQl0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpOw0KDQoJCQkJfQ0KDQoJCQkJLy8gVE9ETzogV2hhdCdzIHRoYXQgZ29vZCBmb3I/IFRoZXJlJ3Mgbm90IGFueXRoaW5nIHRvIGJlIGV4ZWN1dGVkIGxlZnQNCgkJCQlpZiAoISQodGhpcy5oYW5kbGVzW2ldKS5sZW5ndGgpIHsNCgkJCQkJY29udGludWU7DQoJCQkJfQ0KCQkJfQ0KCQl9Ow0KDQoJCS8vIFRPRE86IG1ha2UgcmVuZGVyQXhpcyBhIHByb3RvdHlwZSBmdW5jdGlvbg0KCQl0aGlzLl9yZW5kZXJBeGlzKHRoaXMuZWxlbWVudCk7DQoNCgkJdGhpcy5faGFuZGxlcyA9ICQoIi51aS1yZXNpemFibGUtaGFuZGxlIiwgdGhpcy5lbGVtZW50KQ0KCQkJLmRpc2FibGVTZWxlY3Rpb24oKTsNCg0KCQl0aGlzLl9oYW5kbGVzLm1vdXNlb3ZlcihmdW5jdGlvbigpIHsNCgkJCWlmICghdGhhdC5yZXNpemluZykgew0KCQkJCWlmICh0aGlzLmNsYXNzTmFtZSkgew0KCQkJCQlheGlzID0gdGhpcy5jbGFzc05hbWUubWF0Y2goL3VpLXJlc2l6YWJsZS0oc2V8c3d8bmV8bnd8bnxlfHN8dykvaSk7DQoJCQkJfQ0KCQkJCXRoYXQuYXhpcyA9IGF4aXMgJiYgYXhpc1sxXSA/IGF4aXNbMV0gOiAic2UiOw0KCQkJfQ0KCQl9KTsNCg0KCQlpZiAoby5hdXRvSGlkZSkgew0KCQkJdGhpcy5faGFuZGxlcy5oaWRlKCk7DQoJCQkkKHRoaXMuZWxlbWVudCkNCgkJCQkuYWRkQ2xhc3MoInVpLXJlc2l6YWJsZS1hdXRvaGlkZSIpDQoJCQkJLm1vdXNlZW50ZXIoZnVuY3Rpb24oKSB7DQoJCQkJCWlmIChvLmRpc2FibGVkKSB7DQoJCQkJCQlyZXR1cm47DQoJCQkJCX0NCgkJCQkJJCh0aGlzKS5yZW1vdmVDbGFzcygidWktcmVzaXphYmxlLWF1dG9oaWRlIik7DQoJCQkJCXRoYXQuX2hhbmRsZXMuc2hvdygpOw0KCQkJCX0pDQoJCQkJLm1vdXNlbGVhdmUoZnVuY3Rpb24oKSB7DQoJCQkJCWlmIChvLmRpc2FibGVkKSB7DQoJCQkJCQlyZXR1cm47DQoJCQkJCX0NCgkJCQkJaWYgKCF0aGF0LnJlc2l6aW5nKSB7DQoJCQkJCQkkKHRoaXMpLmFkZENsYXNzKCJ1aS1yZXNpemFibGUtYXV0b2hpZGUiKTsNCgkJCQkJCXRoYXQuX2hhbmRsZXMuaGlkZSgpOw0KCQkJCQl9DQoJCQkJfSk7DQoJCX0NCg0KCQl0aGlzLl9tb3VzZUluaXQoKTsNCg0KCX0sDQoNCglfZGVzdHJveTogZnVuY3Rpb24oKSB7DQoNCgkJdGhpcy5fbW91c2VEZXN0cm95KCk7DQoNCgkJdmFyIHdyYXBwZXIsDQoJCQlfZGVzdHJveSA9IGZ1bmN0aW9uKGV4cCkgew0KCQkJCSQoZXhwKQ0KCQkJCQkucmVtb3ZlQ2xhc3MoInVpLXJlc2l6YWJsZSB1aS1yZXNpemFibGUtZGlzYWJsZWQgdWktcmVzaXphYmxlLXJlc2l6aW5nIikNCgkJCQkJLnJlbW92ZURhdGEoInJlc2l6YWJsZSIpDQoJCQkJCS5yZW1vdmVEYXRhKCJ1aS1yZXNpemFibGUiKQ0KCQkJCQkudW5iaW5kKCIucmVzaXphYmxlIikNCgkJCQkJLmZpbmQoIi51aS1yZXNpemFibGUtaGFuZGxlIikNCgkJCQkJCS5yZW1vdmUoKTsNCgkJCX07DQoNCgkJLy8gVE9ETzogVW53cmFwIGF0IHNhbWUgRE9NIHBvc2l0aW9uDQoJCWlmICh0aGlzLmVsZW1lbnRJc1dyYXBwZXIpIHsNCgkJCV9kZXN0cm95KHRoaXMuZWxlbWVudCk7DQoJCQl3cmFwcGVyID0gdGhpcy5lbGVtZW50Ow0KCQkJdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKHsNCgkJCQlwb3NpdGlvbjogd3JhcHBlci5jc3MoInBvc2l0aW9uIiksDQoJCQkJd2lkdGg6IHdyYXBwZXIub3V0ZXJXaWR0aCgpLA0KCQkJCWhlaWdodDogd3JhcHBlci5vdXRlckhlaWdodCgpLA0KCQkJCXRvcDogd3JhcHBlci5jc3MoInRvcCIpLA0KCQkJCWxlZnQ6IHdyYXBwZXIuY3NzKCJsZWZ0IikNCgkJCX0pLmluc2VydEFmdGVyKCB3cmFwcGVyICk7DQoJCQl3cmFwcGVyLnJlbW92ZSgpOw0KCQl9DQoNCgkJdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKCJyZXNpemUiLCB0aGlzLm9yaWdpbmFsUmVzaXplU3R5bGUpOw0KCQlfZGVzdHJveSh0aGlzLm9yaWdpbmFsRWxlbWVudCk7DQoNCgkJcmV0dXJuIHRoaXM7DQoJfSwNCg0KCV9tb3VzZUNhcHR1cmU6IGZ1bmN0aW9uKGV2ZW50KSB7DQoJCXZhciBpLCBoYW5kbGUsDQoJCQljYXB0dXJlID0gZmFsc2U7DQoNCgkJZm9yIChpIGluIHRoaXMuaGFuZGxlcykgew0KCQkJaGFuZGxlID0gJCh0aGlzLmhhbmRsZXNbaV0pWzBdOw0KCQkJaWYgKGhhbmRsZSA9PT0gZXZlbnQudGFyZ2V0IHx8ICQuY29udGFpbnMoaGFuZGxlLCBldmVudC50YXJnZXQpKSB7DQoJCQkJY2FwdHVyZSA9IHRydWU7DQoJCQl9DQoJCX0NCg0KCQlyZXR1cm4gIXRoaXMub3B0aW9ucy5kaXNhYmxlZCAmJiBjYXB0dXJlOw0KCX0sDQoNCglfbW91c2VTdGFydDogZnVuY3Rpb24oZXZlbnQpIHsNCg0KCQl2YXIgY3VybGVmdCwgY3VydG9wLCBjdXJzb3IsDQoJCQlvID0gdGhpcy5vcHRpb25zLA0KCQkJZWwgPSB0aGlzLmVsZW1lbnQ7DQoNCgkJdGhpcy5yZXNpemluZyA9IHRydWU7DQoNCgkJdGhpcy5fcmVuZGVyUHJveHkoKTsNCg0KCQljdXJsZWZ0ID0gdGhpcy5fbnVtKHRoaXMuaGVscGVyLmNzcygibGVmdCIpKTsNCgkJY3VydG9wID0gdGhpcy5fbnVtKHRoaXMuaGVscGVyLmNzcygidG9wIikpOw0KDQoJCWlmIChvLmNvbnRhaW5tZW50KSB7DQoJCQljdXJsZWZ0ICs9ICQoby5jb250YWlubWVudCkuc2Nyb2xsTGVmdCgpIHx8IDA7DQoJCQljdXJ0b3AgKz0gJChvLmNvbnRhaW5tZW50KS5zY3JvbGxUb3AoKSB8fCAwOw0KCQl9DQoNCgkJdGhpcy5vZmZzZXQgPSB0aGlzLmhlbHBlci5vZmZzZXQoKTsNCgkJdGhpcy5wb3NpdGlvbiA9IHsgbGVmdDogY3VybGVmdCwgdG9wOiBjdXJ0b3AgfTsNCg0KCQl0aGlzLnNpemUgPSB0aGlzLl9oZWxwZXIgPyB7DQoJCQkJd2lkdGg6IHRoaXMuaGVscGVyLndpZHRoKCksDQoJCQkJaGVpZ2h0OiB0aGlzLmhlbHBlci5oZWlnaHQoKQ0KCQkJfSA6IHsNCgkJCQl3aWR0aDogZWwud2lkdGgoKSwNCgkJCQloZWlnaHQ6IGVsLmhlaWdodCgpDQoJCQl9Ow0KDQoJCXRoaXMub3JpZ2luYWxTaXplID0gdGhpcy5faGVscGVyID8gew0KCQkJCXdpZHRoOiBlbC5vdXRlcldpZHRoKCksDQoJCQkJaGVpZ2h0OiBlbC5vdXRlckhlaWdodCgpDQoJCQl9IDogew0KCQkJCXdpZHRoOiBlbC53aWR0aCgpLA0KCQkJCWhlaWdodDogZWwuaGVpZ2h0KCkNCgkJCX07DQoNCgkJdGhpcy5zaXplRGlmZiA9IHsNCgkJCXdpZHRoOiBlbC5vdXRlcldpZHRoKCkgLSBlbC53aWR0aCgpLA0KCQkJaGVpZ2h0OiBlbC5vdXRlckhlaWdodCgpIC0gZWwuaGVpZ2h0KCkNCgkJfTsNCg0KCQl0aGlzLm9yaWdpbmFsUG9zaXRpb24gPSB7IGxlZnQ6IGN1cmxlZnQsIHRvcDogY3VydG9wIH07DQoJCXRoaXMub3JpZ2luYWxNb3VzZVBvc2l0aW9uID0geyBsZWZ0OiBldmVudC5wYWdlWCwgdG9wOiBldmVudC5wYWdlWSB9Ow0KDQoJCXRoaXMuYXNwZWN0UmF0aW8gPSAodHlwZW9mIG8uYXNwZWN0UmF0aW8gPT09ICJudW1iZXIiKSA/DQoJCQlvLmFzcGVjdFJhdGlvIDoNCgkJCSgodGhpcy5vcmlnaW5hbFNpemUud2lkdGggLyB0aGlzLm9yaWdpbmFsU2l6ZS5oZWlnaHQpIHx8IDEpOw0KDQoJCWN1cnNvciA9ICQoIi51aS1yZXNpemFibGUtIiArIHRoaXMuYXhpcykuY3NzKCJjdXJzb3IiKTsNCgkJJCgiYm9keSIpLmNzcygiY3Vyc29yIiwgY3Vyc29yID09PSAiYXV0byIgPyB0aGlzLmF4aXMgKyAiLXJlc2l6ZSIgOiBjdXJzb3IpOw0KDQoJCWVsLmFkZENsYXNzKCJ1aS1yZXNpemFibGUtcmVzaXppbmciKTsNCgkJdGhpcy5fcHJvcGFnYXRlKCJzdGFydCIsIGV2ZW50KTsNCgkJcmV0dXJuIHRydWU7DQoJfSwNCg0KCV9tb3VzZURyYWc6IGZ1bmN0aW9uKGV2ZW50KSB7DQoNCgkJdmFyIGRhdGEsIHByb3BzLA0KCQkJc21wID0gdGhpcy5vcmlnaW5hbE1vdXNlUG9zaXRpb24sDQoJCQlhID0gdGhpcy5heGlzLA0KCQkJZHggPSAoZXZlbnQucGFnZVggLSBzbXAubGVmdCkgfHwgMCwNCgkJCWR5ID0gKGV2ZW50LnBhZ2VZIC0gc21wLnRvcCkgfHwgMCwNCgkJCXRyaWdnZXIgPSB0aGlzLl9jaGFuZ2VbYV07DQoNCgkJdGhpcy5fdXBkYXRlUHJldlByb3BlcnRpZXMoKTsNCg0KCQlpZiAoIXRyaWdnZXIpIHsNCgkJCXJldHVybiBmYWxzZTsNCgkJfQ0KDQoJCWRhdGEgPSB0cmlnZ2VyLmFwcGx5KHRoaXMsIFsgZXZlbnQsIGR4LCBkeSBdKTsNCg0KCQl0aGlzLl91cGRhdGVWaXJ0dWFsQm91bmRhcmllcyhldmVudC5zaGlmdEtleSk7DQoJCWlmICh0aGlzLl9hc3BlY3RSYXRpbyB8fCBldmVudC5zaGlmdEtleSkgew0KCQkJZGF0YSA9IHRoaXMuX3VwZGF0ZVJhdGlvKGRhdGEsIGV2ZW50KTsNCgkJfQ0KDQoJCWRhdGEgPSB0aGlzLl9yZXNwZWN0U2l6ZShkYXRhLCBldmVudCk7DQoNCgkJdGhpcy5fdXBkYXRlQ2FjaGUoZGF0YSk7DQoNCgkJdGhpcy5fcHJvcGFnYXRlKCJyZXNpemUiLCBldmVudCk7DQoNCgkJcHJvcHMgPSB0aGlzLl9hcHBseUNoYW5nZXMoKTsNCg0KCQlpZiAoICF0aGlzLl9oZWxwZXIgJiYgdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50cy5sZW5ndGggKSB7DQoJCQl0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpOw0KCQl9DQoNCgkJaWYgKCAhJC5pc0VtcHR5T2JqZWN0KCBwcm9wcyApICkgew0KCQkJdGhpcy5fdXBkYXRlUHJldlByb3BlcnRpZXMoKTsNCgkJCXRoaXMuX3RyaWdnZXIoICJyZXNpemUiLCBldmVudCwgdGhpcy51aSgpICk7DQoJCQl0aGlzLl9hcHBseUNoYW5nZXMoKTsNCgkJfQ0KDQoJCXJldHVybiBmYWxzZTsNCgl9LA0KDQoJX21vdXNlU3RvcDogZnVuY3Rpb24oZXZlbnQpIHsNCg0KCQl0aGlzLnJlc2l6aW5nID0gZmFsc2U7DQoJCXZhciBwciwgaXN0YSwgc29mZnNldGgsIHNvZmZzZXR3LCBzLCBsZWZ0LCB0b3AsDQoJCQlvID0gdGhpcy5vcHRpb25zLCB0aGF0ID0gdGhpczsNCg0KCQlpZiAodGhpcy5faGVscGVyKSB7DQoNCgkJCXByID0gdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50czsNCgkJCWlzdGEgPSBwci5sZW5ndGggJiYgKC90ZXh0YXJlYS9pKS50ZXN0KHByWzBdLm5vZGVOYW1lKTsNCgkJCXNvZmZzZXRoID0gaXN0YSAmJiB0aGlzLl9oYXNTY3JvbGwocHJbMF0sICJsZWZ0IikgPyAwIDogdGhhdC5zaXplRGlmZi5oZWlnaHQ7DQoJCQlzb2Zmc2V0dyA9IGlzdGEgPyAwIDogdGhhdC5zaXplRGlmZi53aWR0aDsNCg0KCQkJcyA9IHsNCgkJCQl3aWR0aDogKHRoYXQuaGVscGVyLndpZHRoKCkgIC0gc29mZnNldHcpLA0KCQkJCWhlaWdodDogKHRoYXQuaGVscGVyLmhlaWdodCgpIC0gc29mZnNldGgpDQoJCQl9Ow0KCQkJbGVmdCA9IChwYXJzZUludCh0aGF0LmVsZW1lbnQuY3NzKCJsZWZ0IiksIDEwKSArDQoJCQkJKHRoYXQucG9zaXRpb24ubGVmdCAtIHRoYXQub3JpZ2luYWxQb3NpdGlvbi5sZWZ0KSkgfHwgbnVsbDsNCgkJCXRvcCA9IChwYXJzZUludCh0aGF0LmVsZW1lbnQuY3NzKCJ0b3AiKSwgMTApICsNCgkJCQkodGhhdC5wb3NpdGlvbi50b3AgLSB0aGF0Lm9yaWdpbmFsUG9zaXRpb24udG9wKSkgfHwgbnVsbDsNCg0KCQkJaWYgKCFvLmFuaW1hdGUpIHsNCgkJCQl0aGlzLmVsZW1lbnQuY3NzKCQuZXh0ZW5kKHMsIHsgdG9wOiB0b3AsIGxlZnQ6IGxlZnQgfSkpOw0KCQkJfQ0KDQoJCQl0aGF0LmhlbHBlci5oZWlnaHQodGhhdC5zaXplLmhlaWdodCk7DQoJCQl0aGF0LmhlbHBlci53aWR0aCh0aGF0LnNpemUud2lkdGgpOw0KDQoJCQlpZiAodGhpcy5faGVscGVyICYmICFvLmFuaW1hdGUpIHsNCgkJCQl0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpOw0KCQkJfQ0KCQl9DQoNCgkJJCgiYm9keSIpLmNzcygiY3Vyc29yIiwgImF1dG8iKTsNCg0KCQl0aGlzLmVsZW1lbnQucmVtb3ZlQ2xhc3MoInVpLXJlc2l6YWJsZS1yZXNpemluZyIpOw0KDQoJCXRoaXMuX3Byb3BhZ2F0ZSgic3RvcCIsIGV2ZW50KTsNCg0KCQlpZiAodGhpcy5faGVscGVyKSB7DQoJCQl0aGlzLmhlbHBlci5yZW1vdmUoKTsNCgkJfQ0KDQoJCXJldHVybiBmYWxzZTsNCg0KCX0sDQoNCglfdXBkYXRlUHJldlByb3BlcnRpZXM6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLnByZXZQb3NpdGlvbiA9IHsNCgkJCXRvcDogdGhpcy5wb3NpdGlvbi50b3AsDQoJCQlsZWZ0OiB0aGlzLnBvc2l0aW9uLmxlZnQNCgkJfTsNCgkJdGhpcy5wcmV2U2l6ZSA9IHsNCgkJCXdpZHRoOiB0aGlzLnNpemUud2lkdGgsDQoJCQloZWlnaHQ6IHRoaXMuc2l6ZS5oZWlnaHQNCgkJfTsNCgl9LA0KDQoJX2FwcGx5Q2hhbmdlczogZnVuY3Rpb24oKSB7DQoJCXZhciBwcm9wcyA9IHt9Ow0KDQoJCWlmICggdGhpcy5wb3NpdGlvbi50b3AgIT09IHRoaXMucHJldlBvc2l0aW9uLnRvcCApIHsNCgkJCXByb3BzLnRvcCA9IHRoaXMucG9zaXRpb24udG9wICsgInB4IjsNCgkJfQ0KCQlpZiAoIHRoaXMucG9zaXRpb24ubGVmdCAhPT0gdGhpcy5wcmV2UG9zaXRpb24ubGVmdCApIHsNCgkJCXByb3BzLmxlZnQgPSB0aGlzLnBvc2l0aW9uLmxlZnQgKyAicHgiOw0KCQl9DQoJCWlmICggdGhpcy5zaXplLndpZHRoICE9PSB0aGlzLnByZXZTaXplLndpZHRoICkgew0KCQkJcHJvcHMud2lkdGggPSB0aGlzLnNpemUud2lkdGggKyAicHgiOw0KCQl9DQoJCWlmICggdGhpcy5zaXplLmhlaWdodCAhPT0gdGhpcy5wcmV2U2l6ZS5oZWlnaHQgKSB7DQoJCQlwcm9wcy5oZWlnaHQgPSB0aGlzLnNpemUuaGVpZ2h0ICsgInB4IjsNCgkJfQ0KDQoJCXRoaXMuaGVscGVyLmNzcyggcHJvcHMgKTsNCg0KCQlyZXR1cm4gcHJvcHM7DQoJfSwNCg0KCV91cGRhdGVWaXJ0dWFsQm91bmRhcmllczogZnVuY3Rpb24oZm9yY2VBc3BlY3RSYXRpbykgew0KCQl2YXIgcE1pbldpZHRoLCBwTWF4V2lkdGgsIHBNaW5IZWlnaHQsIHBNYXhIZWlnaHQsIGIsDQoJCQlvID0gdGhpcy5vcHRpb25zOw0KDQoJCWIgPSB7DQoJCQltaW5XaWR0aDogdGhpcy5faXNOdW1iZXIoby5taW5XaWR0aCkgPyBvLm1pbldpZHRoIDogMCwNCgkJCW1heFdpZHRoOiB0aGlzLl9pc051bWJlcihvLm1heFdpZHRoKSA/IG8ubWF4V2lkdGggOiBJbmZpbml0eSwNCgkJCW1pbkhlaWdodDogdGhpcy5faXNOdW1iZXIoby5taW5IZWlnaHQpID8gby5taW5IZWlnaHQgOiAwLA0KCQkJbWF4SGVpZ2h0OiB0aGlzLl9pc051bWJlcihvLm1heEhlaWdodCkgPyBvLm1heEhlaWdodCA6IEluZmluaXR5DQoJCX07DQoNCgkJaWYgKHRoaXMuX2FzcGVjdFJhdGlvIHx8IGZvcmNlQXNwZWN0UmF0aW8pIHsNCgkJCXBNaW5XaWR0aCA9IGIubWluSGVpZ2h0ICogdGhpcy5hc3BlY3RSYXRpbzsNCgkJCXBNaW5IZWlnaHQgPSBiLm1pbldpZHRoIC8gdGhpcy5hc3BlY3RSYXRpbzsNCgkJCXBNYXhXaWR0aCA9IGIubWF4SGVpZ2h0ICogdGhpcy5hc3BlY3RSYXRpbzsNCgkJCXBNYXhIZWlnaHQgPSBiLm1heFdpZHRoIC8gdGhpcy5hc3BlY3RSYXRpbzsNCg0KCQkJaWYgKHBNaW5XaWR0aCA+IGIubWluV2lkdGgpIHsNCgkJCQliLm1pbldpZHRoID0gcE1pbldpZHRoOw0KCQkJfQ0KCQkJaWYgKHBNaW5IZWlnaHQgPiBiLm1pbkhlaWdodCkgew0KCQkJCWIubWluSGVpZ2h0ID0gcE1pbkhlaWdodDsNCgkJCX0NCgkJCWlmIChwTWF4V2lkdGggPCBiLm1heFdpZHRoKSB7DQoJCQkJYi5tYXhXaWR0aCA9IHBNYXhXaWR0aDsNCgkJCX0NCgkJCWlmIChwTWF4SGVpZ2h0IDwgYi5tYXhIZWlnaHQpIHsNCgkJCQliLm1heEhlaWdodCA9IHBNYXhIZWlnaHQ7DQoJCQl9DQoJCX0NCgkJdGhpcy5fdkJvdW5kYXJpZXMgPSBiOw0KCX0sDQoNCglfdXBkYXRlQ2FjaGU6IGZ1bmN0aW9uKGRhdGEpIHsNCgkJdGhpcy5vZmZzZXQgPSB0aGlzLmhlbHBlci5vZmZzZXQoKTsNCgkJaWYgKHRoaXMuX2lzTnVtYmVyKGRhdGEubGVmdCkpIHsNCgkJCXRoaXMucG9zaXRpb24ubGVmdCA9IGRhdGEubGVmdDsNCgkJfQ0KCQlpZiAodGhpcy5faXNOdW1iZXIoZGF0YS50b3ApKSB7DQoJCQl0aGlzLnBvc2l0aW9uLnRvcCA9IGRhdGEudG9wOw0KCQl9DQoJCWlmICh0aGlzLl9pc051bWJlcihkYXRhLmhlaWdodCkpIHsNCgkJCXRoaXMuc2l6ZS5oZWlnaHQgPSBkYXRhLmhlaWdodDsNCgkJfQ0KCQlpZiAodGhpcy5faXNOdW1iZXIoZGF0YS53aWR0aCkpIHsNCgkJCXRoaXMuc2l6ZS53aWR0aCA9IGRhdGEud2lkdGg7DQoJCX0NCgl9LA0KDQoJX3VwZGF0ZVJhdGlvOiBmdW5jdGlvbiggZGF0YSApIHsNCg0KCQl2YXIgY3BvcyA9IHRoaXMucG9zaXRpb24sDQoJCQljc2l6ZSA9IHRoaXMuc2l6ZSwNCgkJCWEgPSB0aGlzLmF4aXM7DQoNCgkJaWYgKHRoaXMuX2lzTnVtYmVyKGRhdGEuaGVpZ2h0KSkgew0KCQkJZGF0YS53aWR0aCA9IChkYXRhLmhlaWdodCAqIHRoaXMuYXNwZWN0UmF0aW8pOw0KCQl9IGVsc2UgaWYgKHRoaXMuX2lzTnVtYmVyKGRhdGEud2lkdGgpKSB7DQoJCQlkYXRhLmhlaWdodCA9IChkYXRhLndpZHRoIC8gdGhpcy5hc3BlY3RSYXRpbyk7DQoJCX0NCg0KCQlpZiAoYSA9PT0gInN3Iikgew0KCQkJZGF0YS5sZWZ0ID0gY3Bvcy5sZWZ0ICsgKGNzaXplLndpZHRoIC0gZGF0YS53aWR0aCk7DQoJCQlkYXRhLnRvcCA9IG51bGw7DQoJCX0NCgkJaWYgKGEgPT09ICJudyIpIHsNCgkJCWRhdGEudG9wID0gY3Bvcy50b3AgKyAoY3NpemUuaGVpZ2h0IC0gZGF0YS5oZWlnaHQpOw0KCQkJZGF0YS5sZWZ0ID0gY3Bvcy5sZWZ0ICsgKGNzaXplLndpZHRoIC0gZGF0YS53aWR0aCk7DQoJCX0NCg0KCQlyZXR1cm4gZGF0YTsNCgl9LA0KDQoJX3Jlc3BlY3RTaXplOiBmdW5jdGlvbiggZGF0YSApIHsNCg0KCQl2YXIgbyA9IHRoaXMuX3ZCb3VuZGFyaWVzLA0KCQkJYSA9IHRoaXMuYXhpcywNCgkJCWlzbWF4dyA9IHRoaXMuX2lzTnVtYmVyKGRhdGEud2lkdGgpICYmIG8ubWF4V2lkdGggJiYgKG8ubWF4V2lkdGggPCBkYXRhLndpZHRoKSwNCgkJCWlzbWF4aCA9IHRoaXMuX2lzTnVtYmVyKGRhdGEuaGVpZ2h0KSAmJiBvLm1heEhlaWdodCAmJiAoby5tYXhIZWlnaHQgPCBkYXRhLmhlaWdodCksDQoJCQlpc21pbncgPSB0aGlzLl9pc051bWJlcihkYXRhLndpZHRoKSAmJiBvLm1pbldpZHRoICYmIChvLm1pbldpZHRoID4gZGF0YS53aWR0aCksDQoJCQlpc21pbmggPSB0aGlzLl9pc051bWJlcihkYXRhLmhlaWdodCkgJiYgby5taW5IZWlnaHQgJiYgKG8ubWluSGVpZ2h0ID4gZGF0YS5oZWlnaHQpLA0KCQkJZHcgPSB0aGlzLm9yaWdpbmFsUG9zaXRpb24ubGVmdCArIHRoaXMub3JpZ2luYWxTaXplLndpZHRoLA0KCQkJZGggPSB0aGlzLnBvc2l0aW9uLnRvcCArIHRoaXMuc2l6ZS5oZWlnaHQsDQoJCQljdyA9IC9zd3xud3x3Ly50ZXN0KGEpLCBjaCA9IC9ud3xuZXxuLy50ZXN0KGEpOw0KCQlpZiAoaXNtaW53KSB7DQoJCQlkYXRhLndpZHRoID0gby5taW5XaWR0aDsNCgkJfQ0KCQlpZiAoaXNtaW5oKSB7DQoJCQlkYXRhLmhlaWdodCA9IG8ubWluSGVpZ2h0Ow0KCQl9DQoJCWlmIChpc21heHcpIHsNCgkJCWRhdGEud2lkdGggPSBvLm1heFdpZHRoOw0KCQl9DQoJCWlmIChpc21heGgpIHsNCgkJCWRhdGEuaGVpZ2h0ID0gby5tYXhIZWlnaHQ7DQoJCX0NCg0KCQlpZiAoaXNtaW53ICYmIGN3KSB7DQoJCQlkYXRhLmxlZnQgPSBkdyAtIG8ubWluV2lkdGg7DQoJCX0NCgkJaWYgKGlzbWF4dyAmJiBjdykgew0KCQkJZGF0YS5sZWZ0ID0gZHcgLSBvLm1heFdpZHRoOw0KCQl9DQoJCWlmIChpc21pbmggJiYgY2gpIHsNCgkJCWRhdGEudG9wID0gZGggLSBvLm1pbkhlaWdodDsNCgkJfQ0KCQlpZiAoaXNtYXhoICYmIGNoKSB7DQoJCQlkYXRhLnRvcCA9IGRoIC0gby5tYXhIZWlnaHQ7DQoJCX0NCg0KCQkvLyBGaXhpbmcganVtcCBlcnJvciBvbiB0b3AvbGVmdCAtIGJ1ZyAjMjMzMA0KCQlpZiAoIWRhdGEud2lkdGggJiYgIWRhdGEuaGVpZ2h0ICYmICFkYXRhLmxlZnQgJiYgZGF0YS50b3ApIHsNCgkJCWRhdGEudG9wID0gbnVsbDsNCgkJfSBlbHNlIGlmICghZGF0YS53aWR0aCAmJiAhZGF0YS5oZWlnaHQgJiYgIWRhdGEudG9wICYmIGRhdGEubGVmdCkgew0KCQkJZGF0YS5sZWZ0ID0gbnVsbDsNCgkJfQ0KDQoJCXJldHVybiBkYXRhOw0KCX0sDQoNCglfZ2V0UGFkZGluZ1BsdXNCb3JkZXJEaW1lbnNpb25zOiBmdW5jdGlvbiggZWxlbWVudCApIHsNCgkJdmFyIGkgPSAwLA0KCQkJd2lkdGhzID0gW10sDQoJCQlib3JkZXJzID0gWw0KCQkJCWVsZW1lbnQuY3NzKCAiYm9yZGVyVG9wV2lkdGgiICksDQoJCQkJZWxlbWVudC5jc3MoICJib3JkZXJSaWdodFdpZHRoIiApLA0KCQkJCWVsZW1lbnQuY3NzKCAiYm9yZGVyQm90dG9tV2lkdGgiICksDQoJCQkJZWxlbWVudC5jc3MoICJib3JkZXJMZWZ0V2lkdGgiICkNCgkJCV0sDQoJCQlwYWRkaW5ncyA9IFsNCgkJCQllbGVtZW50LmNzcyggInBhZGRpbmdUb3AiICksDQoJCQkJZWxlbWVudC5jc3MoICJwYWRkaW5nUmlnaHQiICksDQoJCQkJZWxlbWVudC5jc3MoICJwYWRkaW5nQm90dG9tIiApLA0KCQkJCWVsZW1lbnQuY3NzKCAicGFkZGluZ0xlZnQiICkNCgkJCV07DQoNCgkJZm9yICggOyBpIDwgNDsgaSsrICkgew0KCQkJd2lkdGhzWyBpIF0gPSAoIHBhcnNlSW50KCBib3JkZXJzWyBpIF0sIDEwICkgfHwgMCApOw0KCQkJd2lkdGhzWyBpIF0gKz0gKCBwYXJzZUludCggcGFkZGluZ3NbIGkgXSwgMTAgKSB8fCAwICk7DQoJCX0NCg0KCQlyZXR1cm4gew0KCQkJaGVpZ2h0OiB3aWR0aHNbIDAgXSArIHdpZHRoc1sgMiBdLA0KCQkJd2lkdGg6IHdpZHRoc1sgMSBdICsgd2lkdGhzWyAzIF0NCgkJfTsNCgl9LA0KDQoJX3Byb3BvcnRpb25hbGx5UmVzaXplOiBmdW5jdGlvbigpIHsNCg0KCQlpZiAoIXRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMubGVuZ3RoKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQl2YXIgcHJlbCwNCgkJCWkgPSAwLA0KCQkJZWxlbWVudCA9IHRoaXMuaGVscGVyIHx8IHRoaXMuZWxlbWVudDsNCg0KCQlmb3IgKCA7IGkgPCB0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzLmxlbmd0aDsgaSsrKSB7DQoNCgkJCXByZWwgPSB0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzW2ldOw0KDQoJCQkvLyBUT0RPOiBTZWVtcyBsaWtlIGEgYnVnIHRvIGNhY2hlIHRoaXMub3V0ZXJEaW1lbnNpb25zDQoJCQkvLyBjb25zaWRlcmluZyB0aGF0IHdlIGFyZSBpbiBhIGxvb3AuDQoJCQlpZiAoIXRoaXMub3V0ZXJEaW1lbnNpb25zKSB7DQoJCQkJdGhpcy5vdXRlckRpbWVuc2lvbnMgPSB0aGlzLl9nZXRQYWRkaW5nUGx1c0JvcmRlckRpbWVuc2lvbnMoIHByZWwgKTsNCgkJCX0NCg0KCQkJcHJlbC5jc3Moew0KCQkJCWhlaWdodDogKGVsZW1lbnQuaGVpZ2h0KCkgLSB0aGlzLm91dGVyRGltZW5zaW9ucy5oZWlnaHQpIHx8IDAsDQoJCQkJd2lkdGg6IChlbGVtZW50LndpZHRoKCkgLSB0aGlzLm91dGVyRGltZW5zaW9ucy53aWR0aCkgfHwgMA0KCQkJfSk7DQoNCgkJfQ0KDQoJfSwNCg0KCV9yZW5kZXJQcm94eTogZnVuY3Rpb24oKSB7DQoNCgkJdmFyIGVsID0gdGhpcy5lbGVtZW50LCBvID0gdGhpcy5vcHRpb25zOw0KCQl0aGlzLmVsZW1lbnRPZmZzZXQgPSBlbC5vZmZzZXQoKTsNCg0KCQlpZiAodGhpcy5faGVscGVyKSB7DQoNCgkJCXRoaXMuaGVscGVyID0gdGhpcy5oZWxwZXIgfHwgJCgiPGRpdiBzdHlsZT0nb3ZlcmZsb3c6aGlkZGVuOyc+PC9kaXY+Iik7DQoNCgkJCXRoaXMuaGVscGVyLmFkZENsYXNzKHRoaXMuX2hlbHBlcikuY3NzKHsNCgkJCQl3aWR0aDogdGhpcy5lbGVtZW50Lm91dGVyV2lkdGgoKSAtIDEsDQoJCQkJaGVpZ2h0OiB0aGlzLmVsZW1lbnQub3V0ZXJIZWlnaHQoKSAtIDEsDQoJCQkJcG9zaXRpb246ICJhYnNvbHV0ZSIsDQoJCQkJbGVmdDogdGhpcy5lbGVtZW50T2Zmc2V0LmxlZnQgKyAicHgiLA0KCQkJCXRvcDogdGhpcy5lbGVtZW50T2Zmc2V0LnRvcCArICJweCIsDQoJCQkJekluZGV4OiArK28uekluZGV4IC8vVE9ETzogRG9uJ3QgbW9kaWZ5IG9wdGlvbg0KCQkJfSk7DQoNCgkJCXRoaXMuaGVscGVyDQoJCQkJLmFwcGVuZFRvKCJib2R5IikNCgkJCQkuZGlzYWJsZVNlbGVjdGlvbigpOw0KDQoJCX0gZWxzZSB7DQoJCQl0aGlzLmhlbHBlciA9IHRoaXMuZWxlbWVudDsNCgkJfQ0KDQoJfSwNCg0KCV9jaGFuZ2U6IHsNCgkJZTogZnVuY3Rpb24oZXZlbnQsIGR4KSB7DQoJCQlyZXR1cm4geyB3aWR0aDogdGhpcy5vcmlnaW5hbFNpemUud2lkdGggKyBkeCB9Ow0KCQl9LA0KCQl3OiBmdW5jdGlvbihldmVudCwgZHgpIHsNCgkJCXZhciBjcyA9IHRoaXMub3JpZ2luYWxTaXplLCBzcCA9IHRoaXMub3JpZ2luYWxQb3NpdGlvbjsNCgkJCXJldHVybiB7IGxlZnQ6IHNwLmxlZnQgKyBkeCwgd2lkdGg6IGNzLndpZHRoIC0gZHggfTsNCgkJfSwNCgkJbjogZnVuY3Rpb24oZXZlbnQsIGR4LCBkeSkgew0KCQkJdmFyIGNzID0gdGhpcy5vcmlnaW5hbFNpemUsIHNwID0gdGhpcy5vcmlnaW5hbFBvc2l0aW9uOw0KCQkJcmV0dXJuIHsgdG9wOiBzcC50b3AgKyBkeSwgaGVpZ2h0OiBjcy5oZWlnaHQgLSBkeSB9Ow0KCQl9LA0KCQlzOiBmdW5jdGlvbihldmVudCwgZHgsIGR5KSB7DQoJCQlyZXR1cm4geyBoZWlnaHQ6IHRoaXMub3JpZ2luYWxTaXplLmhlaWdodCArIGR5IH07DQoJCX0sDQoJCXNlOiBmdW5jdGlvbihldmVudCwgZHgsIGR5KSB7DQoJCQlyZXR1cm4gJC5leHRlbmQodGhpcy5fY2hhbmdlLnMuYXBwbHkodGhpcywgYXJndW1lbnRzKSwNCgkJCQl0aGlzLl9jaGFuZ2UuZS5hcHBseSh0aGlzLCBbIGV2ZW50LCBkeCwgZHkgXSkpOw0KCQl9LA0KCQlzdzogZnVuY3Rpb24oZXZlbnQsIGR4LCBkeSkgew0KCQkJcmV0dXJuICQuZXh0ZW5kKHRoaXMuX2NoYW5nZS5zLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksDQoJCQkJdGhpcy5fY2hhbmdlLncuYXBwbHkodGhpcywgWyBldmVudCwgZHgsIGR5IF0pKTsNCgkJfSwNCgkJbmU6IGZ1bmN0aW9uKGV2ZW50LCBkeCwgZHkpIHsNCgkJCXJldHVybiAkLmV4dGVuZCh0aGlzLl9jaGFuZ2Uubi5hcHBseSh0aGlzLCBhcmd1bWVudHMpLA0KCQkJCXRoaXMuX2NoYW5nZS5lLmFwcGx5KHRoaXMsIFsgZXZlbnQsIGR4LCBkeSBdKSk7DQoJCX0sDQoJCW53OiBmdW5jdGlvbihldmVudCwgZHgsIGR5KSB7DQoJCQlyZXR1cm4gJC5leHRlbmQodGhpcy5fY2hhbmdlLm4uYXBwbHkodGhpcywgYXJndW1lbnRzKSwNCgkJCQl0aGlzLl9jaGFuZ2Uudy5hcHBseSh0aGlzLCBbIGV2ZW50LCBkeCwgZHkgXSkpOw0KCQl9DQoJfSwNCg0KCV9wcm9wYWdhdGU6IGZ1bmN0aW9uKG4sIGV2ZW50KSB7DQoJCSQudWkucGx1Z2luLmNhbGwodGhpcywgbiwgWyBldmVudCwgdGhpcy51aSgpIF0pOw0KCQkobiAhPT0gInJlc2l6ZSIgJiYgdGhpcy5fdHJpZ2dlcihuLCBldmVudCwgdGhpcy51aSgpKSk7DQoJfSwNCg0KCXBsdWdpbnM6IHt9LA0KDQoJdWk6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gew0KCQkJb3JpZ2luYWxFbGVtZW50OiB0aGlzLm9yaWdpbmFsRWxlbWVudCwNCgkJCWVsZW1lbnQ6IHRoaXMuZWxlbWVudCwNCgkJCWhlbHBlcjogdGhpcy5oZWxwZXIsDQoJCQlwb3NpdGlvbjogdGhpcy5wb3NpdGlvbiwNCgkJCXNpemU6IHRoaXMuc2l6ZSwNCgkJCW9yaWdpbmFsU2l6ZTogdGhpcy5vcmlnaW5hbFNpemUsDQoJCQlvcmlnaW5hbFBvc2l0aW9uOiB0aGlzLm9yaWdpbmFsUG9zaXRpb24NCgkJfTsNCgl9DQoNCn0pOw0KDQovKg0KICogUmVzaXphYmxlIEV4dGVuc2lvbnMNCiAqLw0KDQokLnVpLnBsdWdpbi5hZGQoInJlc2l6YWJsZSIsICJhbmltYXRlIiwgew0KDQoJc3RvcDogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl2YXIgdGhhdCA9ICQodGhpcykucmVzaXphYmxlKCAiaW5zdGFuY2UiICksDQoJCQlvID0gdGhhdC5vcHRpb25zLA0KCQkJcHIgPSB0aGF0Ll9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzLA0KCQkJaXN0YSA9IHByLmxlbmd0aCAmJiAoL3RleHRhcmVhL2kpLnRlc3QocHJbMF0ubm9kZU5hbWUpLA0KCQkJc29mZnNldGggPSBpc3RhICYmIHRoYXQuX2hhc1Njcm9sbChwclswXSwgImxlZnQiKSA/IDAgOiB0aGF0LnNpemVEaWZmLmhlaWdodCwNCgkJCXNvZmZzZXR3ID0gaXN0YSA/IDAgOiB0aGF0LnNpemVEaWZmLndpZHRoLA0KCQkJc3R5bGUgPSB7IHdpZHRoOiAodGhhdC5zaXplLndpZHRoIC0gc29mZnNldHcpLCBoZWlnaHQ6ICh0aGF0LnNpemUuaGVpZ2h0IC0gc29mZnNldGgpIH0sDQoJCQlsZWZ0ID0gKHBhcnNlSW50KHRoYXQuZWxlbWVudC5jc3MoImxlZnQiKSwgMTApICsNCgkJCQkodGhhdC5wb3NpdGlvbi5sZWZ0IC0gdGhhdC5vcmlnaW5hbFBvc2l0aW9uLmxlZnQpKSB8fCBudWxsLA0KCQkJdG9wID0gKHBhcnNlSW50KHRoYXQuZWxlbWVudC5jc3MoInRvcCIpLCAxMCkgKw0KCQkJCSh0aGF0LnBvc2l0aW9uLnRvcCAtIHRoYXQub3JpZ2luYWxQb3NpdGlvbi50b3ApKSB8fCBudWxsOw0KDQoJCXRoYXQuZWxlbWVudC5hbmltYXRlKA0KCQkJJC5leHRlbmQoc3R5bGUsIHRvcCAmJiBsZWZ0ID8geyB0b3A6IHRvcCwgbGVmdDogbGVmdCB9IDoge30pLCB7DQoJCQkJZHVyYXRpb246IG8uYW5pbWF0ZUR1cmF0aW9uLA0KCQkJCWVhc2luZzogby5hbmltYXRlRWFzaW5nLA0KCQkJCXN0ZXA6IGZ1bmN0aW9uKCkgew0KDQoJCQkJCXZhciBkYXRhID0gew0KCQkJCQkJd2lkdGg6IHBhcnNlSW50KHRoYXQuZWxlbWVudC5jc3MoIndpZHRoIiksIDEwKSwNCgkJCQkJCWhlaWdodDogcGFyc2VJbnQodGhhdC5lbGVtZW50LmNzcygiaGVpZ2h0IiksIDEwKSwNCgkJCQkJCXRvcDogcGFyc2VJbnQodGhhdC5lbGVtZW50LmNzcygidG9wIiksIDEwKSwNCgkJCQkJCWxlZnQ6IHBhcnNlSW50KHRoYXQuZWxlbWVudC5jc3MoImxlZnQiKSwgMTApDQoJCQkJCX07DQoNCgkJCQkJaWYgKHByICYmIHByLmxlbmd0aCkgew0KCQkJCQkJJChwclswXSkuY3NzKHsgd2lkdGg6IGRhdGEud2lkdGgsIGhlaWdodDogZGF0YS5oZWlnaHQgfSk7DQoJCQkJCX0NCg0KCQkJCQkvLyBwcm9wYWdhdGluZyByZXNpemUsIGFuZCB1cGRhdGluZyB2YWx1ZXMgZm9yIGVhY2ggYW5pbWF0aW9uIHN0ZXANCgkJCQkJdGhhdC5fdXBkYXRlQ2FjaGUoZGF0YSk7DQoJCQkJCXRoYXQuX3Byb3BhZ2F0ZSgicmVzaXplIiwgZXZlbnQpOw0KDQoJCQkJfQ0KCQkJfQ0KCQkpOw0KCX0NCg0KfSk7DQoNCiQudWkucGx1Z2luLmFkZCggInJlc2l6YWJsZSIsICJjb250YWlubWVudCIsIHsNCg0KCXN0YXJ0OiBmdW5jdGlvbigpIHsNCgkJdmFyIGVsZW1lbnQsIHAsIGNvLCBjaCwgY3csIHdpZHRoLCBoZWlnaHQsDQoJCQl0aGF0ID0gJCggdGhpcyApLnJlc2l6YWJsZSggImluc3RhbmNlIiApLA0KCQkJbyA9IHRoYXQub3B0aW9ucywNCgkJCWVsID0gdGhhdC5lbGVtZW50LA0KCQkJb2MgPSBvLmNvbnRhaW5tZW50LA0KCQkJY2UgPSAoIG9jIGluc3RhbmNlb2YgJCApID8gb2MuZ2V0KCAwICkgOiAoIC9wYXJlbnQvLnRlc3QoIG9jICkgKSA/IGVsLnBhcmVudCgpLmdldCggMCApIDogb2M7DQoNCgkJaWYgKCAhY2UgKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQl0aGF0LmNvbnRhaW5lckVsZW1lbnQgPSAkKCBjZSApOw0KDQoJCWlmICggL2RvY3VtZW50Ly50ZXN0KCBvYyApIHx8IG9jID09PSBkb2N1bWVudCApIHsNCgkJCXRoYXQuY29udGFpbmVyT2Zmc2V0ID0gew0KCQkJCWxlZnQ6IDAsDQoJCQkJdG9wOiAwDQoJCQl9Ow0KCQkJdGhhdC5jb250YWluZXJQb3NpdGlvbiA9IHsNCgkJCQlsZWZ0OiAwLA0KCQkJCXRvcDogMA0KCQkJfTsNCg0KCQkJdGhhdC5wYXJlbnREYXRhID0gew0KCQkJCWVsZW1lbnQ6ICQoIGRvY3VtZW50ICksDQoJCQkJbGVmdDogMCwNCgkJCQl0b3A6IDAsDQoJCQkJd2lkdGg6ICQoIGRvY3VtZW50ICkud2lkdGgoKSwNCgkJCQloZWlnaHQ6ICQoIGRvY3VtZW50ICkuaGVpZ2h0KCkgfHwgZG9jdW1lbnQuYm9keS5wYXJlbnROb2RlLnNjcm9sbEhlaWdodA0KCQkJfTsNCgkJfSBlbHNlIHsNCgkJCWVsZW1lbnQgPSAkKCBjZSApOw0KCQkJcCA9IFtdOw0KCQkJJChbICJUb3AiLCAiUmlnaHQiLCAiTGVmdCIsICJCb3R0b20iIF0pLmVhY2goZnVuY3Rpb24oIGksIG5hbWUgKSB7DQoJCQkJcFsgaSBdID0gdGhhdC5fbnVtKCBlbGVtZW50LmNzcyggInBhZGRpbmciICsgbmFtZSApICk7DQoJCQl9KTsNCg0KCQkJdGhhdC5jb250YWluZXJPZmZzZXQgPSBlbGVtZW50Lm9mZnNldCgpOw0KCQkJdGhhdC5jb250YWluZXJQb3NpdGlvbiA9IGVsZW1lbnQucG9zaXRpb24oKTsNCgkJCXRoYXQuY29udGFpbmVyU2l6ZSA9IHsNCgkJCQloZWlnaHQ6ICggZWxlbWVudC5pbm5lckhlaWdodCgpIC0gcFsgMyBdICksDQoJCQkJd2lkdGg6ICggZWxlbWVudC5pbm5lcldpZHRoKCkgLSBwWyAxIF0gKQ0KCQkJfTsNCg0KCQkJY28gPSB0aGF0LmNvbnRhaW5lck9mZnNldDsNCgkJCWNoID0gdGhhdC5jb250YWluZXJTaXplLmhlaWdodDsNCgkJCWN3ID0gdGhhdC5jb250YWluZXJTaXplLndpZHRoOw0KCQkJd2lkdGggPSAoIHRoYXQuX2hhc1Njcm9sbCAoIGNlLCAibGVmdCIgKSA/IGNlLnNjcm9sbFdpZHRoIDogY3cgKTsNCgkJCWhlaWdodCA9ICggdGhhdC5faGFzU2Nyb2xsICggY2UgKSA/IGNlLnNjcm9sbEhlaWdodCA6IGNoICkgOw0KDQoJCQl0aGF0LnBhcmVudERhdGEgPSB7DQoJCQkJZWxlbWVudDogY2UsDQoJCQkJbGVmdDogY28ubGVmdCwNCgkJCQl0b3A6IGNvLnRvcCwNCgkJCQl3aWR0aDogd2lkdGgsDQoJCQkJaGVpZ2h0OiBoZWlnaHQNCgkJCX07DQoJCX0NCgl9LA0KDQoJcmVzaXplOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXZhciB3b3NldCwgaG9zZXQsIGlzUGFyZW50LCBpc09mZnNldFJlbGF0aXZlLA0KCQkJdGhhdCA9ICQoIHRoaXMgKS5yZXNpemFibGUoICJpbnN0YW5jZSIgKSwNCgkJCW8gPSB0aGF0Lm9wdGlvbnMsDQoJCQljbyA9IHRoYXQuY29udGFpbmVyT2Zmc2V0LA0KCQkJY3AgPSB0aGF0LnBvc2l0aW9uLA0KCQkJcFJhdGlvID0gdGhhdC5fYXNwZWN0UmF0aW8gfHwgZXZlbnQuc2hpZnRLZXksDQoJCQljb3AgPSB7DQoJCQkJdG9wOiAwLA0KCQkJCWxlZnQ6IDANCgkJCX0sDQoJCQljZSA9IHRoYXQuY29udGFpbmVyRWxlbWVudCwNCgkJCWNvbnRpbnVlUmVzaXplID0gdHJ1ZTsNCg0KCQlpZiAoIGNlWyAwIF0gIT09IGRvY3VtZW50ICYmICggL3N0YXRpYy8gKS50ZXN0KCBjZS5jc3MoICJwb3NpdGlvbiIgKSApICkgew0KCQkJY29wID0gY287DQoJCX0NCg0KCQlpZiAoIGNwLmxlZnQgPCAoIHRoYXQuX2hlbHBlciA/IGNvLmxlZnQgOiAwICkgKSB7DQoJCQl0aGF0LnNpemUud2lkdGggPSB0aGF0LnNpemUud2lkdGggKw0KCQkJCSggdGhhdC5faGVscGVyID8NCgkJCQkJKCB0aGF0LnBvc2l0aW9uLmxlZnQgLSBjby5sZWZ0ICkgOg0KCQkJCQkoIHRoYXQucG9zaXRpb24ubGVmdCAtIGNvcC5sZWZ0ICkgKTsNCg0KCQkJaWYgKCBwUmF0aW8gKSB7DQoJCQkJdGhhdC5zaXplLmhlaWdodCA9IHRoYXQuc2l6ZS53aWR0aCAvIHRoYXQuYXNwZWN0UmF0aW87DQoJCQkJY29udGludWVSZXNpemUgPSBmYWxzZTsNCgkJCX0NCgkJCXRoYXQucG9zaXRpb24ubGVmdCA9IG8uaGVscGVyID8gY28ubGVmdCA6IDA7DQoJCX0NCg0KCQlpZiAoIGNwLnRvcCA8ICggdGhhdC5faGVscGVyID8gY28udG9wIDogMCApICkgew0KCQkJdGhhdC5zaXplLmhlaWdodCA9IHRoYXQuc2l6ZS5oZWlnaHQgKw0KCQkJCSggdGhhdC5faGVscGVyID8NCgkJCQkJKCB0aGF0LnBvc2l0aW9uLnRvcCAtIGNvLnRvcCApIDoNCgkJCQkJdGhhdC5wb3NpdGlvbi50b3AgKTsNCg0KCQkJaWYgKCBwUmF0aW8gKSB7DQoJCQkJdGhhdC5zaXplLndpZHRoID0gdGhhdC5zaXplLmhlaWdodCAqIHRoYXQuYXNwZWN0UmF0aW87DQoJCQkJY29udGludWVSZXNpemUgPSBmYWxzZTsNCgkJCX0NCgkJCXRoYXQucG9zaXRpb24udG9wID0gdGhhdC5faGVscGVyID8gY28udG9wIDogMDsNCgkJfQ0KDQoJCWlzUGFyZW50ID0gdGhhdC5jb250YWluZXJFbGVtZW50LmdldCggMCApID09PSB0aGF0LmVsZW1lbnQucGFyZW50KCkuZ2V0KCAwICk7DQoJCWlzT2Zmc2V0UmVsYXRpdmUgPSAvcmVsYXRpdmV8YWJzb2x1dGUvLnRlc3QoIHRoYXQuY29udGFpbmVyRWxlbWVudC5jc3MoICJwb3NpdGlvbiIgKSApOw0KDQoJCWlmICggaXNQYXJlbnQgJiYgaXNPZmZzZXRSZWxhdGl2ZSApIHsNCgkJCXRoYXQub2Zmc2V0LmxlZnQgPSB0aGF0LnBhcmVudERhdGEubGVmdCArIHRoYXQucG9zaXRpb24ubGVmdDsNCgkJCXRoYXQub2Zmc2V0LnRvcCA9IHRoYXQucGFyZW50RGF0YS50b3AgKyB0aGF0LnBvc2l0aW9uLnRvcDsNCgkJfSBlbHNlIHsNCgkJCXRoYXQub2Zmc2V0LmxlZnQgPSB0aGF0LmVsZW1lbnQub2Zmc2V0KCkubGVmdDsNCgkJCXRoYXQub2Zmc2V0LnRvcCA9IHRoYXQuZWxlbWVudC5vZmZzZXQoKS50b3A7DQoJCX0NCg0KCQl3b3NldCA9IE1hdGguYWJzKCB0aGF0LnNpemVEaWZmLndpZHRoICsNCgkJCSh0aGF0Ll9oZWxwZXIgPw0KCQkJCXRoYXQub2Zmc2V0LmxlZnQgLSBjb3AubGVmdCA6DQoJCQkJKHRoYXQub2Zmc2V0LmxlZnQgLSBjby5sZWZ0KSkgKTsNCg0KCQlob3NldCA9IE1hdGguYWJzKCB0aGF0LnNpemVEaWZmLmhlaWdodCArDQoJCQkodGhhdC5faGVscGVyID8NCgkJCQl0aGF0Lm9mZnNldC50b3AgLSBjb3AudG9wIDoNCgkJCQkodGhhdC5vZmZzZXQudG9wIC0gY28udG9wKSkgKTsNCg0KCQlpZiAoIHdvc2V0ICsgdGhhdC5zaXplLndpZHRoID49IHRoYXQucGFyZW50RGF0YS53aWR0aCApIHsNCgkJCXRoYXQuc2l6ZS53aWR0aCA9IHRoYXQucGFyZW50RGF0YS53aWR0aCAtIHdvc2V0Ow0KCQkJaWYgKCBwUmF0aW8gKSB7DQoJCQkJdGhhdC5zaXplLmhlaWdodCA9IHRoYXQuc2l6ZS53aWR0aCAvIHRoYXQuYXNwZWN0UmF0aW87DQoJCQkJY29udGludWVSZXNpemUgPSBmYWxzZTsNCgkJCX0NCgkJfQ0KDQoJCWlmICggaG9zZXQgKyB0aGF0LnNpemUuaGVpZ2h0ID49IHRoYXQucGFyZW50RGF0YS5oZWlnaHQgKSB7DQoJCQl0aGF0LnNpemUuaGVpZ2h0ID0gdGhhdC5wYXJlbnREYXRhLmhlaWdodCAtIGhvc2V0Ow0KCQkJaWYgKCBwUmF0aW8gKSB7DQoJCQkJdGhhdC5zaXplLndpZHRoID0gdGhhdC5zaXplLmhlaWdodCAqIHRoYXQuYXNwZWN0UmF0aW87DQoJCQkJY29udGludWVSZXNpemUgPSBmYWxzZTsNCgkJCX0NCgkJfQ0KDQoJCWlmICggIWNvbnRpbnVlUmVzaXplICl7DQoJCQl0aGF0LnBvc2l0aW9uLmxlZnQgPSB0aGF0LnByZXZQb3NpdGlvbi5sZWZ0Ow0KCQkJdGhhdC5wb3NpdGlvbi50b3AgPSB0aGF0LnByZXZQb3NpdGlvbi50b3A7DQoJCQl0aGF0LnNpemUud2lkdGggPSB0aGF0LnByZXZTaXplLndpZHRoOw0KCQkJdGhhdC5zaXplLmhlaWdodCA9IHRoYXQucHJldlNpemUuaGVpZ2h0Ow0KCQl9DQoJfSwNCg0KCXN0b3A6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdGhhdCA9ICQoIHRoaXMgKS5yZXNpemFibGUoICJpbnN0YW5jZSIgKSwNCgkJCW8gPSB0aGF0Lm9wdGlvbnMsDQoJCQljbyA9IHRoYXQuY29udGFpbmVyT2Zmc2V0LA0KCQkJY29wID0gdGhhdC5jb250YWluZXJQb3NpdGlvbiwNCgkJCWNlID0gdGhhdC5jb250YWluZXJFbGVtZW50LA0KCQkJaGVscGVyID0gJCggdGhhdC5oZWxwZXIgKSwNCgkJCWhvID0gaGVscGVyLm9mZnNldCgpLA0KCQkJdyA9IGhlbHBlci5vdXRlcldpZHRoKCkgLSB0aGF0LnNpemVEaWZmLndpZHRoLA0KCQkJaCA9IGhlbHBlci5vdXRlckhlaWdodCgpIC0gdGhhdC5zaXplRGlmZi5oZWlnaHQ7DQoNCgkJaWYgKCB0aGF0Ll9oZWxwZXIgJiYgIW8uYW5pbWF0ZSAmJiAoIC9yZWxhdGl2ZS8gKS50ZXN0KCBjZS5jc3MoICJwb3NpdGlvbiIgKSApICkgew0KCQkJJCggdGhpcyApLmNzcyh7DQoJCQkJbGVmdDogaG8ubGVmdCAtIGNvcC5sZWZ0IC0gY28ubGVmdCwNCgkJCQl3aWR0aDogdywNCgkJCQloZWlnaHQ6IGgNCgkJCX0pOw0KCQl9DQoNCgkJaWYgKCB0aGF0Ll9oZWxwZXIgJiYgIW8uYW5pbWF0ZSAmJiAoIC9zdGF0aWMvICkudGVzdCggY2UuY3NzKCAicG9zaXRpb24iICkgKSApIHsNCgkJCSQoIHRoaXMgKS5jc3Moew0KCQkJCWxlZnQ6IGhvLmxlZnQgLSBjb3AubGVmdCAtIGNvLmxlZnQsDQoJCQkJd2lkdGg6IHcsDQoJCQkJaGVpZ2h0OiBoDQoJCQl9KTsNCgkJfQ0KCX0NCn0pOw0KDQokLnVpLnBsdWdpbi5hZGQoInJlc2l6YWJsZSIsICJhbHNvUmVzaXplIiwgew0KDQoJc3RhcnQ6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdGhhdCA9ICQodGhpcykucmVzaXphYmxlKCAiaW5zdGFuY2UiICksDQoJCQlvID0gdGhhdC5vcHRpb25zLA0KCQkJX3N0b3JlID0gZnVuY3Rpb24oZXhwKSB7DQoJCQkJJChleHApLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJCXZhciBlbCA9ICQodGhpcyk7DQoJCQkJCWVsLmRhdGEoInVpLXJlc2l6YWJsZS1hbHNvcmVzaXplIiwgew0KCQkJCQkJd2lkdGg6IHBhcnNlSW50KGVsLndpZHRoKCksIDEwKSwgaGVpZ2h0OiBwYXJzZUludChlbC5oZWlnaHQoKSwgMTApLA0KCQkJCQkJbGVmdDogcGFyc2VJbnQoZWwuY3NzKCJsZWZ0IiksIDEwKSwgdG9wOiBwYXJzZUludChlbC5jc3MoInRvcCIpLCAxMCkNCgkJCQkJfSk7DQoJCQkJfSk7DQoJCQl9Ow0KDQoJCWlmICh0eXBlb2Yoby5hbHNvUmVzaXplKSA9PT0gIm9iamVjdCIgJiYgIW8uYWxzb1Jlc2l6ZS5wYXJlbnROb2RlKSB7DQoJCQlpZiAoby5hbHNvUmVzaXplLmxlbmd0aCkgew0KCQkJCW8uYWxzb1Jlc2l6ZSA9IG8uYWxzb1Jlc2l6ZVswXTsNCgkJCQlfc3RvcmUoby5hbHNvUmVzaXplKTsNCgkJCX0gZWxzZSB7DQoJCQkJJC5lYWNoKG8uYWxzb1Jlc2l6ZSwgZnVuY3Rpb24oZXhwKSB7DQoJCQkJCV9zdG9yZShleHApOw0KCQkJCX0pOw0KCQkJfQ0KCQl9IGVsc2Ugew0KCQkJX3N0b3JlKG8uYWxzb1Jlc2l6ZSk7DQoJCX0NCgl9LA0KDQoJcmVzaXplOiBmdW5jdGlvbihldmVudCwgdWkpIHsNCgkJdmFyIHRoYXQgPSAkKHRoaXMpLnJlc2l6YWJsZSggImluc3RhbmNlIiApLA0KCQkJbyA9IHRoYXQub3B0aW9ucywNCgkJCW9zID0gdGhhdC5vcmlnaW5hbFNpemUsDQoJCQlvcCA9IHRoYXQub3JpZ2luYWxQb3NpdGlvbiwNCgkJCWRlbHRhID0gew0KCQkJCWhlaWdodDogKHRoYXQuc2l6ZS5oZWlnaHQgLSBvcy5oZWlnaHQpIHx8IDAsDQoJCQkJd2lkdGg6ICh0aGF0LnNpemUud2lkdGggLSBvcy53aWR0aCkgfHwgMCwNCgkJCQl0b3A6ICh0aGF0LnBvc2l0aW9uLnRvcCAtIG9wLnRvcCkgfHwgMCwNCgkJCQlsZWZ0OiAodGhhdC5wb3NpdGlvbi5sZWZ0IC0gb3AubGVmdCkgfHwgMA0KCQkJfSwNCg0KCQkJX2Fsc29SZXNpemUgPSBmdW5jdGlvbihleHAsIGMpIHsNCgkJCQkkKGV4cCkuZWFjaChmdW5jdGlvbigpIHsNCgkJCQkJdmFyIGVsID0gJCh0aGlzKSwgc3RhcnQgPSAkKHRoaXMpLmRhdGEoInVpLXJlc2l6YWJsZS1hbHNvcmVzaXplIiksIHN0eWxlID0ge30sDQoJCQkJCQljc3MgPSBjICYmIGMubGVuZ3RoID8NCgkJCQkJCQljIDoNCgkJCQkJCQllbC5wYXJlbnRzKHVpLm9yaWdpbmFsRWxlbWVudFswXSkubGVuZ3RoID8NCgkJCQkJCQkJWyAid2lkdGgiLCAiaGVpZ2h0IiBdIDoNCgkJCQkJCQkJWyAid2lkdGgiLCAiaGVpZ2h0IiwgInRvcCIsICJsZWZ0IiBdOw0KDQoJCQkJCSQuZWFjaChjc3MsIGZ1bmN0aW9uKGksIHByb3ApIHsNCgkJCQkJCXZhciBzdW0gPSAoc3RhcnRbcHJvcF0gfHwgMCkgKyAoZGVsdGFbcHJvcF0gfHwgMCk7DQoJCQkJCQlpZiAoc3VtICYmIHN1bSA+PSAwKSB7DQoJCQkJCQkJc3R5bGVbcHJvcF0gPSBzdW0gfHwgbnVsbDsNCgkJCQkJCX0NCgkJCQkJfSk7DQoNCgkJCQkJZWwuY3NzKHN0eWxlKTsNCgkJCQl9KTsNCgkJCX07DQoNCgkJaWYgKHR5cGVvZihvLmFsc29SZXNpemUpID09PSAib2JqZWN0IiAmJiAhby5hbHNvUmVzaXplLm5vZGVUeXBlKSB7DQoJCQkkLmVhY2goby5hbHNvUmVzaXplLCBmdW5jdGlvbihleHAsIGMpIHsNCgkJCQlfYWxzb1Jlc2l6ZShleHAsIGMpOw0KCQkJfSk7DQoJCX0gZWxzZSB7DQoJCQlfYWxzb1Jlc2l6ZShvLmFsc29SZXNpemUpOw0KCQl9DQoJfSwNCg0KCXN0b3A6IGZ1bmN0aW9uKCkgew0KCQkkKHRoaXMpLnJlbW92ZURhdGEoInJlc2l6YWJsZS1hbHNvcmVzaXplIik7DQoJfQ0KfSk7DQoNCiQudWkucGx1Z2luLmFkZCgicmVzaXphYmxlIiwgImdob3N0Iiwgew0KDQoJc3RhcnQ6IGZ1bmN0aW9uKCkgew0KDQoJCXZhciB0aGF0ID0gJCh0aGlzKS5yZXNpemFibGUoICJpbnN0YW5jZSIgKSwgbyA9IHRoYXQub3B0aW9ucywgY3MgPSB0aGF0LnNpemU7DQoNCgkJdGhhdC5naG9zdCA9IHRoYXQub3JpZ2luYWxFbGVtZW50LmNsb25lKCk7DQoJCXRoYXQuZ2hvc3QNCgkJCS5jc3Moew0KCQkJCW9wYWNpdHk6IDAuMjUsDQoJCQkJZGlzcGxheTogImJsb2NrIiwNCgkJCQlwb3NpdGlvbjogInJlbGF0aXZlIiwNCgkJCQloZWlnaHQ6IGNzLmhlaWdodCwNCgkJCQl3aWR0aDogY3Mud2lkdGgsDQoJCQkJbWFyZ2luOiAwLA0KCQkJCWxlZnQ6IDAsDQoJCQkJdG9wOiAwDQoJCQl9KQ0KCQkJLmFkZENsYXNzKCJ1aS1yZXNpemFibGUtZ2hvc3QiKQ0KCQkJLmFkZENsYXNzKHR5cGVvZiBvLmdob3N0ID09PSAic3RyaW5nIiA/IG8uZ2hvc3QgOiAiIik7DQoNCgkJdGhhdC5naG9zdC5hcHBlbmRUbyh0aGF0LmhlbHBlcik7DQoNCgl9LA0KDQoJcmVzaXplOiBmdW5jdGlvbigpIHsNCgkJdmFyIHRoYXQgPSAkKHRoaXMpLnJlc2l6YWJsZSggImluc3RhbmNlIiApOw0KCQlpZiAodGhhdC5naG9zdCkgew0KCQkJdGhhdC5naG9zdC5jc3Moew0KCQkJCXBvc2l0aW9uOiAicmVsYXRpdmUiLA0KCQkJCWhlaWdodDogdGhhdC5zaXplLmhlaWdodCwNCgkJCQl3aWR0aDogdGhhdC5zaXplLndpZHRoDQoJCQl9KTsNCgkJfQ0KCX0sDQoNCglzdG9wOiBmdW5jdGlvbigpIHsNCgkJdmFyIHRoYXQgPSAkKHRoaXMpLnJlc2l6YWJsZSggImluc3RhbmNlIiApOw0KCQlpZiAodGhhdC5naG9zdCAmJiB0aGF0LmhlbHBlcikgew0KCQkJdGhhdC5oZWxwZXIuZ2V0KDApLnJlbW92ZUNoaWxkKHRoYXQuZ2hvc3QuZ2V0KDApKTsNCgkJfQ0KCX0NCg0KfSk7DQoNCiQudWkucGx1Z2luLmFkZCgicmVzaXphYmxlIiwgImdyaWQiLCB7DQoNCglyZXNpemU6IGZ1bmN0aW9uKCkgew0KCQl2YXIgb3V0ZXJEaW1lbnNpb25zLA0KCQkJdGhhdCA9ICQodGhpcykucmVzaXphYmxlKCAiaW5zdGFuY2UiICksDQoJCQlvID0gdGhhdC5vcHRpb25zLA0KCQkJY3MgPSB0aGF0LnNpemUsDQoJCQlvcyA9IHRoYXQub3JpZ2luYWxTaXplLA0KCQkJb3AgPSB0aGF0Lm9yaWdpbmFsUG9zaXRpb24sDQoJCQlhID0gdGhhdC5heGlzLA0KCQkJZ3JpZCA9IHR5cGVvZiBvLmdyaWQgPT09ICJudW1iZXIiID8gWyBvLmdyaWQsIG8uZ3JpZCBdIDogby5ncmlkLA0KCQkJZ3JpZFggPSAoZ3JpZFswXSB8fCAxKSwNCgkJCWdyaWRZID0gKGdyaWRbMV0gfHwgMSksDQoJCQlveCA9IE1hdGgucm91bmQoKGNzLndpZHRoIC0gb3Mud2lkdGgpIC8gZ3JpZFgpICogZ3JpZFgsDQoJCQlveSA9IE1hdGgucm91bmQoKGNzLmhlaWdodCAtIG9zLmhlaWdodCkgLyBncmlkWSkgKiBncmlkWSwNCgkJCW5ld1dpZHRoID0gb3Mud2lkdGggKyBveCwNCgkJCW5ld0hlaWdodCA9IG9zLmhlaWdodCArIG95LA0KCQkJaXNNYXhXaWR0aCA9IG8ubWF4V2lkdGggJiYgKG8ubWF4V2lkdGggPCBuZXdXaWR0aCksDQoJCQlpc01heEhlaWdodCA9IG8ubWF4SGVpZ2h0ICYmIChvLm1heEhlaWdodCA8IG5ld0hlaWdodCksDQoJCQlpc01pbldpZHRoID0gby5taW5XaWR0aCAmJiAoby5taW5XaWR0aCA+IG5ld1dpZHRoKSwNCgkJCWlzTWluSGVpZ2h0ID0gby5taW5IZWlnaHQgJiYgKG8ubWluSGVpZ2h0ID4gbmV3SGVpZ2h0KTsNCg0KCQlvLmdyaWQgPSBncmlkOw0KDQoJCWlmIChpc01pbldpZHRoKSB7DQoJCQluZXdXaWR0aCArPSBncmlkWDsNCgkJfQ0KCQlpZiAoaXNNaW5IZWlnaHQpIHsNCgkJCW5ld0hlaWdodCArPSBncmlkWTsNCgkJfQ0KCQlpZiAoaXNNYXhXaWR0aCkgew0KCQkJbmV3V2lkdGggLT0gZ3JpZFg7DQoJCX0NCgkJaWYgKGlzTWF4SGVpZ2h0KSB7DQoJCQluZXdIZWlnaHQgLT0gZ3JpZFk7DQoJCX0NCg0KCQlpZiAoL14oc2V8c3xlKSQvLnRlc3QoYSkpIHsNCgkJCXRoYXQuc2l6ZS53aWR0aCA9IG5ld1dpZHRoOw0KCQkJdGhhdC5zaXplLmhlaWdodCA9IG5ld0hlaWdodDsNCgkJfSBlbHNlIGlmICgvXihuZSkkLy50ZXN0KGEpKSB7DQoJCQl0aGF0LnNpemUud2lkdGggPSBuZXdXaWR0aDsNCgkJCXRoYXQuc2l6ZS5oZWlnaHQgPSBuZXdIZWlnaHQ7DQoJCQl0aGF0LnBvc2l0aW9uLnRvcCA9IG9wLnRvcCAtIG95Ow0KCQl9IGVsc2UgaWYgKC9eKHN3KSQvLnRlc3QoYSkpIHsNCgkJCXRoYXQuc2l6ZS53aWR0aCA9IG5ld1dpZHRoOw0KCQkJdGhhdC5zaXplLmhlaWdodCA9IG5ld0hlaWdodDsNCgkJCXRoYXQucG9zaXRpb24ubGVmdCA9IG9wLmxlZnQgLSBveDsNCgkJfSBlbHNlIHsNCgkJCWlmICggbmV3SGVpZ2h0IC0gZ3JpZFkgPD0gMCB8fCBuZXdXaWR0aCAtIGdyaWRYIDw9IDApIHsNCgkJCQlvdXRlckRpbWVuc2lvbnMgPSB0aGF0Ll9nZXRQYWRkaW5nUGx1c0JvcmRlckRpbWVuc2lvbnMoIHRoaXMgKTsNCgkJCX0NCg0KCQkJaWYgKCBuZXdIZWlnaHQgLSBncmlkWSA+IDAgKSB7DQoJCQkJdGhhdC5zaXplLmhlaWdodCA9IG5ld0hlaWdodDsNCgkJCQl0aGF0LnBvc2l0aW9uLnRvcCA9IG9wLnRvcCAtIG95Ow0KCQkJfSBlbHNlIHsNCgkJCQluZXdIZWlnaHQgPSBncmlkWSAtIG91dGVyRGltZW5zaW9ucy5oZWlnaHQ7DQoJCQkJdGhhdC5zaXplLmhlaWdodCA9IG5ld0hlaWdodDsNCgkJCQl0aGF0LnBvc2l0aW9uLnRvcCA9IG9wLnRvcCArIG9zLmhlaWdodCAtIG5ld0hlaWdodDsNCgkJCX0NCgkJCWlmICggbmV3V2lkdGggLSBncmlkWCA+IDAgKSB7DQoJCQkJdGhhdC5zaXplLndpZHRoID0gbmV3V2lkdGg7DQoJCQkJdGhhdC5wb3NpdGlvbi5sZWZ0ID0gb3AubGVmdCAtIG94Ow0KCQkJfSBlbHNlIHsNCgkJCQluZXdXaWR0aCA9IGdyaWRZIC0gb3V0ZXJEaW1lbnNpb25zLmhlaWdodDsNCgkJCQl0aGF0LnNpemUud2lkdGggPSBuZXdXaWR0aDsNCgkJCQl0aGF0LnBvc2l0aW9uLmxlZnQgPSBvcC5sZWZ0ICsgb3Mud2lkdGggLSBuZXdXaWR0aDsNCgkJCX0NCgkJfQ0KCX0NCg0KfSk7DQoNCnZhciByZXNpemFibGUgPSAkLnVpLnJlc2l6YWJsZTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBEaWFsb2cgMS4xMS4yDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICoNCiAqIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2RpYWxvZy8NCiAqLw0KDQoNCnZhciBkaWFsb2cgPSAkLndpZGdldCggInVpLmRpYWxvZyIsIHsNCgl2ZXJzaW9uOiAiMS4xMS4yIiwNCglvcHRpb25zOiB7DQoJCWFwcGVuZFRvOiAiYm9keSIsDQoJCWF1dG9PcGVuOiB0cnVlLA0KCQlidXR0b25zOiBbXSwNCgkJY2xvc2VPbkVzY2FwZTogdHJ1ZSwNCgkJY2xvc2VUZXh0OiAiQ2xvc2UiLA0KCQlkaWFsb2dDbGFzczogIiIsDQoJCWRyYWdnYWJsZTogdHJ1ZSwNCgkJaGlkZTogbnVsbCwNCgkJaGVpZ2h0OiAiYXV0byIsDQoJCW1heEhlaWdodDogbnVsbCwNCgkJbWF4V2lkdGg6IG51bGwsDQoJCW1pbkhlaWdodDogMTUwLA0KCQltaW5XaWR0aDogMTUwLA0KCQltb2RhbDogZmFsc2UsDQoJCXBvc2l0aW9uOiB7DQoJCQlteTogImNlbnRlciIsDQoJCQlhdDogImNlbnRlciIsDQoJCQlvZjogd2luZG93LA0KCQkJY29sbGlzaW9uOiAiZml0IiwNCgkJCS8vIEVuc3VyZSB0aGUgdGl0bGViYXIgaXMgYWx3YXlzIHZpc2libGUNCgkJCXVzaW5nOiBmdW5jdGlvbiggcG9zICkgew0KCQkJCXZhciB0b3BPZmZzZXQgPSAkKCB0aGlzICkuY3NzKCBwb3MgKS5vZmZzZXQoKS50b3A7DQoJCQkJaWYgKCB0b3BPZmZzZXQgPCAwICkgew0KCQkJCQkkKCB0aGlzICkuY3NzKCAidG9wIiwgcG9zLnRvcCAtIHRvcE9mZnNldCApOw0KCQkJCX0NCgkJCX0NCgkJfSwNCgkJcmVzaXphYmxlOiB0cnVlLA0KCQlzaG93OiBudWxsLA0KCQl0aXRsZTogbnVsbCwNCgkJd2lkdGg6IDMwMCwNCg0KCQkvLyBjYWxsYmFja3MNCgkJYmVmb3JlQ2xvc2U6IG51bGwsDQoJCWNsb3NlOiBudWxsLA0KCQlkcmFnOiBudWxsLA0KCQlkcmFnU3RhcnQ6IG51bGwsDQoJCWRyYWdTdG9wOiBudWxsLA0KCQlmb2N1czogbnVsbCwNCgkJb3BlbjogbnVsbCwNCgkJcmVzaXplOiBudWxsLA0KCQlyZXNpemVTdGFydDogbnVsbCwNCgkJcmVzaXplU3RvcDogbnVsbA0KCX0sDQoNCglzaXplUmVsYXRlZE9wdGlvbnM6IHsNCgkJYnV0dG9uczogdHJ1ZSwNCgkJaGVpZ2h0OiB0cnVlLA0KCQltYXhIZWlnaHQ6IHRydWUsDQoJCW1heFdpZHRoOiB0cnVlLA0KCQltaW5IZWlnaHQ6IHRydWUsDQoJCW1pbldpZHRoOiB0cnVlLA0KCQl3aWR0aDogdHJ1ZQ0KCX0sDQoNCglyZXNpemFibGVSZWxhdGVkT3B0aW9uczogew0KCQltYXhIZWlnaHQ6IHRydWUsDQoJCW1heFdpZHRoOiB0cnVlLA0KCQltaW5IZWlnaHQ6IHRydWUsDQoJCW1pbldpZHRoOiB0cnVlDQoJfSwNCg0KCV9jcmVhdGU6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLm9yaWdpbmFsQ3NzID0gew0KCQkJZGlzcGxheTogdGhpcy5lbGVtZW50WyAwIF0uc3R5bGUuZGlzcGxheSwNCgkJCXdpZHRoOiB0aGlzLmVsZW1lbnRbIDAgXS5zdHlsZS53aWR0aCwNCgkJCW1pbkhlaWdodDogdGhpcy5lbGVtZW50WyAwIF0uc3R5bGUubWluSGVpZ2h0LA0KCQkJbWF4SGVpZ2h0OiB0aGlzLmVsZW1lbnRbIDAgXS5zdHlsZS5tYXhIZWlnaHQsDQoJCQloZWlnaHQ6IHRoaXMuZWxlbWVudFsgMCBdLnN0eWxlLmhlaWdodA0KCQl9Ow0KCQl0aGlzLm9yaWdpbmFsUG9zaXRpb24gPSB7DQoJCQlwYXJlbnQ6IHRoaXMuZWxlbWVudC5wYXJlbnQoKSwNCgkJCWluZGV4OiB0aGlzLmVsZW1lbnQucGFyZW50KCkuY2hpbGRyZW4oKS5pbmRleCggdGhpcy5lbGVtZW50ICkNCgkJfTsNCgkJdGhpcy5vcmlnaW5hbFRpdGxlID0gdGhpcy5lbGVtZW50LmF0dHIoICJ0aXRsZSIgKTsNCgkJdGhpcy5vcHRpb25zLnRpdGxlID0gdGhpcy5vcHRpb25zLnRpdGxlIHx8IHRoaXMub3JpZ2luYWxUaXRsZTsNCg0KCQl0aGlzLl9jcmVhdGVXcmFwcGVyKCk7DQoNCgkJdGhpcy5lbGVtZW50DQoJCQkuc2hvdygpDQoJCQkucmVtb3ZlQXR0ciggInRpdGxlIiApDQoJCQkuYWRkQ2xhc3MoICJ1aS1kaWFsb2ctY29udGVudCB1aS13aWRnZXQtY29udGVudCIgKQ0KCQkJLmFwcGVuZFRvKCB0aGlzLnVpRGlhbG9nICk7DQoNCgkJdGhpcy5fY3JlYXRlVGl0bGViYXIoKTsNCgkJdGhpcy5fY3JlYXRlQnV0dG9uUGFuZSgpOw0KDQoJCWlmICggdGhpcy5vcHRpb25zLmRyYWdnYWJsZSAmJiAkLmZuLmRyYWdnYWJsZSApIHsNCgkJCXRoaXMuX21ha2VEcmFnZ2FibGUoKTsNCgkJfQ0KCQlpZiAoIHRoaXMub3B0aW9ucy5yZXNpemFibGUgJiYgJC5mbi5yZXNpemFibGUgKSB7DQoJCQl0aGlzLl9tYWtlUmVzaXphYmxlKCk7DQoJCX0NCg0KCQl0aGlzLl9pc09wZW4gPSBmYWxzZTsNCg0KCQl0aGlzLl90cmFja0ZvY3VzKCk7DQoJfSwNCg0KCV9pbml0OiBmdW5jdGlvbigpIHsNCgkJaWYgKCB0aGlzLm9wdGlvbnMuYXV0b09wZW4gKSB7DQoJCQl0aGlzLm9wZW4oKTsNCgkJfQ0KCX0sDQoNCglfYXBwZW5kVG86IGZ1bmN0aW9uKCkgew0KCQl2YXIgZWxlbWVudCA9IHRoaXMub3B0aW9ucy5hcHBlbmRUbzsNCgkJaWYgKCBlbGVtZW50ICYmIChlbGVtZW50LmpxdWVyeSB8fCBlbGVtZW50Lm5vZGVUeXBlKSApIHsNCgkJCXJldHVybiAkKCBlbGVtZW50ICk7DQoJCX0NCgkJcmV0dXJuIHRoaXMuZG9jdW1lbnQuZmluZCggZWxlbWVudCB8fCAiYm9keSIgKS5lcSggMCApOw0KCX0sDQoNCglfZGVzdHJveTogZnVuY3Rpb24oKSB7DQoJCXZhciBuZXh0LA0KCQkJb3JpZ2luYWxQb3NpdGlvbiA9IHRoaXMub3JpZ2luYWxQb3NpdGlvbjsNCg0KCQl0aGlzLl9kZXN0cm95T3ZlcmxheSgpOw0KDQoJCXRoaXMuZWxlbWVudA0KCQkJLnJlbW92ZVVuaXF1ZUlkKCkNCgkJCS5yZW1vdmVDbGFzcyggInVpLWRpYWxvZy1jb250ZW50IHVpLXdpZGdldC1jb250ZW50IiApDQoJCQkuY3NzKCB0aGlzLm9yaWdpbmFsQ3NzICkNCgkJCS8vIFdpdGhvdXQgZGV0YWNoaW5nIGZpcnN0LCB0aGUgZm9sbG93aW5nIGJlY29tZXMgcmVhbGx5IHNsb3cNCgkJCS5kZXRhY2goKTsNCg0KCQl0aGlzLnVpRGlhbG9nLnN0b3AoIHRydWUsIHRydWUgKS5yZW1vdmUoKTsNCg0KCQlpZiAoIHRoaXMub3JpZ2luYWxUaXRsZSApIHsNCgkJCXRoaXMuZWxlbWVudC5hdHRyKCAidGl0bGUiLCB0aGlzLm9yaWdpbmFsVGl0bGUgKTsNCgkJfQ0KDQoJCW5leHQgPSBvcmlnaW5hbFBvc2l0aW9uLnBhcmVudC5jaGlsZHJlbigpLmVxKCBvcmlnaW5hbFBvc2l0aW9uLmluZGV4ICk7DQoJCS8vIERvbid0IHRyeSB0byBwbGFjZSB0aGUgZGlhbG9nIG5leHQgdG8gaXRzZWxmICgjODYxMykNCgkJaWYgKCBuZXh0Lmxlbmd0aCAmJiBuZXh0WyAwIF0gIT09IHRoaXMuZWxlbWVudFsgMCBdICkgew0KCQkJbmV4dC5iZWZvcmUoIHRoaXMuZWxlbWVudCApOw0KCQl9IGVsc2Ugew0KCQkJb3JpZ2luYWxQb3NpdGlvbi5wYXJlbnQuYXBwZW5kKCB0aGlzLmVsZW1lbnQgKTsNCgkJfQ0KCX0sDQoNCgl3aWRnZXQ6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy51aURpYWxvZzsNCgl9LA0KDQoJZGlzYWJsZTogJC5ub29wLA0KCWVuYWJsZTogJC5ub29wLA0KDQoJY2xvc2U6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdmFyIGFjdGl2ZUVsZW1lbnQsDQoJCQl0aGF0ID0gdGhpczsNCg0KCQlpZiAoICF0aGlzLl9pc09wZW4gfHwgdGhpcy5fdHJpZ2dlciggImJlZm9yZUNsb3NlIiwgZXZlbnQgKSA9PT0gZmFsc2UgKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQl0aGlzLl9pc09wZW4gPSBmYWxzZTsNCgkJdGhpcy5fZm9jdXNlZEVsZW1lbnQgPSBudWxsOw0KCQl0aGlzLl9kZXN0cm95T3ZlcmxheSgpOw0KCQl0aGlzLl91bnRyYWNrSW5zdGFuY2UoKTsNCg0KCQlpZiAoICF0aGlzLm9wZW5lci5maWx0ZXIoICI6Zm9jdXNhYmxlIiApLmZvY3VzKCkubGVuZ3RoICkgew0KDQoJCQkvLyBzdXBwb3J0OiBJRTkNCgkJCS8vIElFOSB0aHJvd3MgYW4gIlVuc3BlY2lmaWVkIGVycm9yIiBhY2Nlc3NpbmcgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBmcm9tIGFuIDxpZnJhbWU+DQoJCQl0cnkgew0KCQkJCWFjdGl2ZUVsZW1lbnQgPSB0aGlzLmRvY3VtZW50WyAwIF0uYWN0aXZlRWxlbWVudDsNCg0KCQkJCS8vIFN1cHBvcnQ6IElFOSwgSUUxMA0KCQkJCS8vIElmIHRoZSA8Ym9keT4gaXMgYmx1cnJlZCwgSUUgd2lsbCBzd2l0Y2ggd2luZG93cywgc2VlICM0NTIwDQoJCQkJaWYgKCBhY3RpdmVFbGVtZW50ICYmIGFjdGl2ZUVsZW1lbnQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSAhPT0gImJvZHkiICkgew0KDQoJCQkJCS8vIEhpZGluZyBhIGZvY3VzZWQgZWxlbWVudCBkb2Vzbid0IHRyaWdnZXIgYmx1ciBpbiBXZWJLaXQNCgkJCQkJLy8gc28gaW4gY2FzZSB3ZSBoYXZlIG5vdGhpbmcgdG8gZm9jdXMgb24sIGV4cGxpY2l0bHkgYmx1ciB0aGUgYWN0aXZlIGVsZW1lbnQNCgkJCQkJLy8gaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTQ3MTgyDQoJCQkJCSQoIGFjdGl2ZUVsZW1lbnQgKS5ibHVyKCk7DQoJCQkJfQ0KCQkJfSBjYXRjaCAoIGVycm9yICkge30NCgkJfQ0KDQoJCXRoaXMuX2hpZGUoIHRoaXMudWlEaWFsb2csIHRoaXMub3B0aW9ucy5oaWRlLCBmdW5jdGlvbigpIHsNCgkJCXRoYXQuX3RyaWdnZXIoICJjbG9zZSIsIGV2ZW50ICk7DQoJCX0pOw0KCX0sDQoNCglpc09wZW46IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy5faXNPcGVuOw0KCX0sDQoNCgltb3ZlVG9Ub3A6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLl9tb3ZlVG9Ub3AoKTsNCgl9LA0KDQoJX21vdmVUb1RvcDogZnVuY3Rpb24oIGV2ZW50LCBzaWxlbnQgKSB7DQoJCXZhciBtb3ZlZCA9IGZhbHNlLA0KCQkJekluZGljaWVzID0gdGhpcy51aURpYWxvZy5zaWJsaW5ncyggIi51aS1mcm9udDp2aXNpYmxlIiApLm1hcChmdW5jdGlvbigpIHsNCgkJCQlyZXR1cm4gKyQoIHRoaXMgKS5jc3MoICJ6LWluZGV4IiApOw0KCQkJfSkuZ2V0KCksDQoJCQl6SW5kZXhNYXggPSBNYXRoLm1heC5hcHBseSggbnVsbCwgekluZGljaWVzICk7DQoNCgkJaWYgKCB6SW5kZXhNYXggPj0gK3RoaXMudWlEaWFsb2cuY3NzKCAiei1pbmRleCIgKSApIHsNCgkJCXRoaXMudWlEaWFsb2cuY3NzKCAiei1pbmRleCIsIHpJbmRleE1heCArIDEgKTsNCgkJCW1vdmVkID0gdHJ1ZTsNCgkJfQ0KDQoJCWlmICggbW92ZWQgJiYgIXNpbGVudCApIHsNCgkJCXRoaXMuX3RyaWdnZXIoICJmb2N1cyIsIGV2ZW50ICk7DQoJCX0NCgkJcmV0dXJuIG1vdmVkOw0KCX0sDQoNCglvcGVuOiBmdW5jdGlvbigpIHsNCgkJdmFyIHRoYXQgPSB0aGlzOw0KCQlpZiAoIHRoaXMuX2lzT3BlbiApIHsNCgkJCWlmICggdGhpcy5fbW92ZVRvVG9wKCkgKSB7DQoJCQkJdGhpcy5fZm9jdXNUYWJiYWJsZSgpOw0KCQkJfQ0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJdGhpcy5faXNPcGVuID0gdHJ1ZTsNCgkJdGhpcy5vcGVuZXIgPSAkKCB0aGlzLmRvY3VtZW50WyAwIF0uYWN0aXZlRWxlbWVudCApOw0KDQoJCXRoaXMuX3NpemUoKTsNCgkJdGhpcy5fcG9zaXRpb24oKTsNCgkJdGhpcy5fY3JlYXRlT3ZlcmxheSgpOw0KCQl0aGlzLl9tb3ZlVG9Ub3AoIG51bGwsIHRydWUgKTsNCg0KCQkvLyBFbnN1cmUgdGhlIG92ZXJsYXkgaXMgbW92ZWQgdG8gdGhlIHRvcCB3aXRoIHRoZSBkaWFsb2csIGJ1dCBvbmx5IHdoZW4NCgkJLy8gb3BlbmluZy4gVGhlIG92ZXJsYXkgc2hvdWxkbid0IG1vdmUgYWZ0ZXIgdGhlIGRpYWxvZyBpcyBvcGVuIHNvIHRoYXQNCgkJLy8gbW9kZWxlc3MgZGlhbG9ncyBvcGVuZWQgYWZ0ZXIgdGhlIG1vZGFsIGRpYWxvZyBzdGFjayBwcm9wZXJseS4NCgkJaWYgKCB0aGlzLm92ZXJsYXkgKSB7DQoJCQl0aGlzLm92ZXJsYXkuY3NzKCAiei1pbmRleCIsIHRoaXMudWlEaWFsb2cuY3NzKCAiei1pbmRleCIgKSAtIDEgKTsNCgkJfQ0KDQoJCXRoaXMuX3Nob3coIHRoaXMudWlEaWFsb2csIHRoaXMub3B0aW9ucy5zaG93LCBmdW5jdGlvbigpIHsNCgkJCXRoYXQuX2ZvY3VzVGFiYmFibGUoKTsNCgkJCXRoYXQuX3RyaWdnZXIoICJmb2N1cyIgKTsNCgkJfSk7DQoNCgkJLy8gVHJhY2sgdGhlIGRpYWxvZyBpbW1lZGlhdGVseSB1cG9uIG9wZW5lbmluZyBpbiBjYXNlIGEgZm9jdXMgZXZlbnQNCgkJLy8gc29tZWhvdyBvY2N1cnMgb3V0c2lkZSBvZiB0aGUgZGlhbG9nIGJlZm9yZSBhbiBlbGVtZW50IGluc2lkZSB0aGUNCgkJLy8gZGlhbG9nIGlzIGZvY3VzZWQgKCMxMDE1MikNCgkJdGhpcy5fbWFrZUZvY3VzVGFyZ2V0KCk7DQoNCgkJdGhpcy5fdHJpZ2dlciggIm9wZW4iICk7DQoJfSwNCg0KCV9mb2N1c1RhYmJhYmxlOiBmdW5jdGlvbigpIHsNCgkJLy8gU2V0IGZvY3VzIHRvIHRoZSBmaXJzdCBtYXRjaDoNCgkJLy8gMS4gQW4gZWxlbWVudCB0aGF0IHdhcyBmb2N1c2VkIHByZXZpb3VzbHkNCgkJLy8gMi4gRmlyc3QgZWxlbWVudCBpbnNpZGUgdGhlIGRpYWxvZyBtYXRjaGluZyBbYXV0b2ZvY3VzXQ0KCQkvLyAzLiBUYWJiYWJsZSBlbGVtZW50IGluc2lkZSB0aGUgY29udGVudCBlbGVtZW50DQoJCS8vIDQuIFRhYmJhYmxlIGVsZW1lbnQgaW5zaWRlIHRoZSBidXR0b25wYW5lDQoJCS8vIDUuIFRoZSBjbG9zZSBidXR0b24NCgkJLy8gNi4gVGhlIGRpYWxvZyBpdHNlbGYNCgkJdmFyIGhhc0ZvY3VzID0gdGhpcy5fZm9jdXNlZEVsZW1lbnQ7DQoJCWlmICggIWhhc0ZvY3VzICkgew0KCQkJaGFzRm9jdXMgPSB0aGlzLmVsZW1lbnQuZmluZCggIlthdXRvZm9jdXNdIiApOw0KCQl9DQoJCWlmICggIWhhc0ZvY3VzLmxlbmd0aCApIHsNCgkJCWhhc0ZvY3VzID0gdGhpcy5lbGVtZW50LmZpbmQoICI6dGFiYmFibGUiICk7DQoJCX0NCgkJaWYgKCAhaGFzRm9jdXMubGVuZ3RoICkgew0KCQkJaGFzRm9jdXMgPSB0aGlzLnVpRGlhbG9nQnV0dG9uUGFuZS5maW5kKCAiOnRhYmJhYmxlIiApOw0KCQl9DQoJCWlmICggIWhhc0ZvY3VzLmxlbmd0aCApIHsNCgkJCWhhc0ZvY3VzID0gdGhpcy51aURpYWxvZ1RpdGxlYmFyQ2xvc2UuZmlsdGVyKCAiOnRhYmJhYmxlIiApOw0KCQl9DQoJCWlmICggIWhhc0ZvY3VzLmxlbmd0aCApIHsNCgkJCWhhc0ZvY3VzID0gdGhpcy51aURpYWxvZzsNCgkJfQ0KCQloYXNGb2N1cy5lcSggMCApLmZvY3VzKCk7DQoJfSwNCg0KCV9rZWVwRm9jdXM6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJZnVuY3Rpb24gY2hlY2tGb2N1cygpIHsNCgkJCXZhciBhY3RpdmVFbGVtZW50ID0gdGhpcy5kb2N1bWVudFswXS5hY3RpdmVFbGVtZW50LA0KCQkJCWlzQWN0aXZlID0gdGhpcy51aURpYWxvZ1swXSA9PT0gYWN0aXZlRWxlbWVudCB8fA0KCQkJCQkkLmNvbnRhaW5zKCB0aGlzLnVpRGlhbG9nWzBdLCBhY3RpdmVFbGVtZW50ICk7DQoJCQlpZiAoICFpc0FjdGl2ZSApIHsNCgkJCQl0aGlzLl9mb2N1c1RhYmJhYmxlKCk7DQoJCQl9DQoJCX0NCgkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCgkJY2hlY2tGb2N1cy5jYWxsKCB0aGlzICk7DQoJCS8vIHN1cHBvcnQ6IElFDQoJCS8vIElFIDw9IDggZG9lc24ndCBwcmV2ZW50IG1vdmluZyBmb2N1cyBldmVuIHdpdGggZXZlbnQucHJldmVudERlZmF1bHQoKQ0KCQkvLyBzbyB3ZSBjaGVjayBhZ2FpbiBsYXRlcg0KCQl0aGlzLl9kZWxheSggY2hlY2tGb2N1cyApOw0KCX0sDQoNCglfY3JlYXRlV3JhcHBlcjogZnVuY3Rpb24oKSB7DQoJCXRoaXMudWlEaWFsb2cgPSAkKCI8ZGl2PiIpDQoJCQkuYWRkQ2xhc3MoICJ1aS1kaWFsb2cgdWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWNvcm5lci1hbGwgdWktZnJvbnQgIiArDQoJCQkJdGhpcy5vcHRpb25zLmRpYWxvZ0NsYXNzICkNCgkJCS5oaWRlKCkNCgkJCS5hdHRyKHsNCgkJCQkvLyBTZXR0aW5nIHRhYkluZGV4IG1ha2VzIHRoZSBkaXYgZm9jdXNhYmxlDQoJCQkJdGFiSW5kZXg6IC0xLA0KCQkJCXJvbGU6ICJkaWFsb2ciDQoJCQl9KQ0KCQkJLmFwcGVuZFRvKCB0aGlzLl9hcHBlbmRUbygpICk7DQoNCgkJdGhpcy5fb24oIHRoaXMudWlEaWFsb2csIHsNCgkJCWtleWRvd246IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQlpZiAoIHRoaXMub3B0aW9ucy5jbG9zZU9uRXNjYXBlICYmICFldmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSAmJiBldmVudC5rZXlDb2RlICYmDQoJCQkJCQlldmVudC5rZXlDb2RlID09PSAkLnVpLmtleUNvZGUuRVNDQVBFICkgew0KCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQkJCQl0aGlzLmNsb3NlKCBldmVudCApOw0KCQkJCQlyZXR1cm47DQoJCQkJfQ0KDQoJCQkJLy8gcHJldmVudCB0YWJiaW5nIG91dCBvZiBkaWFsb2dzDQoJCQkJaWYgKCBldmVudC5rZXlDb2RlICE9PSAkLnVpLmtleUNvZGUuVEFCIHx8IGV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpICkgew0KCQkJCQlyZXR1cm47DQoJCQkJfQ0KCQkJCXZhciB0YWJiYWJsZXMgPSB0aGlzLnVpRGlhbG9nLmZpbmQoICI6dGFiYmFibGUiICksDQoJCQkJCWZpcnN0ID0gdGFiYmFibGVzLmZpbHRlciggIjpmaXJzdCIgKSwNCgkJCQkJbGFzdCA9IHRhYmJhYmxlcy5maWx0ZXIoICI6bGFzdCIgKTsNCg0KCQkJCWlmICggKCBldmVudC50YXJnZXQgPT09IGxhc3RbMF0gfHwgZXZlbnQudGFyZ2V0ID09PSB0aGlzLnVpRGlhbG9nWzBdICkgJiYgIWV2ZW50LnNoaWZ0S2V5ICkgew0KCQkJCQl0aGlzLl9kZWxheShmdW5jdGlvbigpIHsNCgkJCQkJCWZpcnN0LmZvY3VzKCk7DQoJCQkJCX0pOw0KCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQkJCX0gZWxzZSBpZiAoICggZXZlbnQudGFyZ2V0ID09PSBmaXJzdFswXSB8fCBldmVudC50YXJnZXQgPT09IHRoaXMudWlEaWFsb2dbMF0gKSAmJiBldmVudC5zaGlmdEtleSApIHsNCgkJCQkJdGhpcy5fZGVsYXkoZnVuY3Rpb24oKSB7DQoJCQkJCQlsYXN0LmZvY3VzKCk7DQoJCQkJCX0pOw0KCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQkJCX0NCgkJCX0sDQoJCQltb3VzZWRvd246IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQlpZiAoIHRoaXMuX21vdmVUb1RvcCggZXZlbnQgKSApIHsNCgkJCQkJdGhpcy5fZm9jdXNUYWJiYWJsZSgpOw0KCQkJCX0NCgkJCX0NCgkJfSk7DQoNCgkJLy8gV2UgYXNzdW1lIHRoYXQgYW55IGV4aXN0aW5nIGFyaWEtZGVzY3JpYmVkYnkgYXR0cmlidXRlIG1lYW5zDQoJCS8vIHRoYXQgdGhlIGRpYWxvZyBjb250ZW50IGlzIG1hcmtlZCB1cCBwcm9wZXJseQ0KCQkvLyBvdGhlcndpc2Ugd2UgYnJ1dGUgZm9yY2UgdGhlIGNvbnRlbnQgYXMgdGhlIGRlc2NyaXB0aW9uDQoJCWlmICggIXRoaXMuZWxlbWVudC5maW5kKCAiW2FyaWEtZGVzY3JpYmVkYnldIiApLmxlbmd0aCApIHsNCgkJCXRoaXMudWlEaWFsb2cuYXR0cih7DQoJCQkJImFyaWEtZGVzY3JpYmVkYnkiOiB0aGlzLmVsZW1lbnQudW5pcXVlSWQoKS5hdHRyKCAiaWQiICkNCgkJCX0pOw0KCQl9DQoJfSwNCg0KCV9jcmVhdGVUaXRsZWJhcjogZnVuY3Rpb24oKSB7DQoJCXZhciB1aURpYWxvZ1RpdGxlOw0KDQoJCXRoaXMudWlEaWFsb2dUaXRsZWJhciA9ICQoICI8ZGl2PiIgKQ0KCQkJLmFkZENsYXNzKCAidWktZGlhbG9nLXRpdGxlYmFyIHVpLXdpZGdldC1oZWFkZXIgdWktY29ybmVyLWFsbCB1aS1oZWxwZXItY2xlYXJmaXgiICkNCgkJCS5wcmVwZW5kVG8oIHRoaXMudWlEaWFsb2cgKTsNCgkJdGhpcy5fb24oIHRoaXMudWlEaWFsb2dUaXRsZWJhciwgew0KCQkJbW91c2Vkb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQkJLy8gRG9uJ3QgcHJldmVudCBjbGljayBvbiBjbG9zZSBidXR0b24gKCM4ODM4KQ0KCQkJCS8vIEZvY3VzaW5nIGEgZGlhbG9nIHRoYXQgaXMgcGFydGlhbGx5IHNjcm9sbGVkIG91dCBvZiB2aWV3DQoJCQkJLy8gY2F1c2VzIHRoZSBicm93c2VyIHRvIHNjcm9sbCBpdCBpbnRvIHZpZXcsIHByZXZlbnRpbmcgdGhlIGNsaWNrIGV2ZW50DQoJCQkJaWYgKCAhJCggZXZlbnQudGFyZ2V0ICkuY2xvc2VzdCggIi51aS1kaWFsb2ctdGl0bGViYXItY2xvc2UiICkgKSB7DQoJCQkJCS8vIERpYWxvZyBpc24ndCBnZXR0aW5nIGZvY3VzIHdoZW4gZHJhZ2dpbmcgKCM4MDYzKQ0KCQkJCQl0aGlzLnVpRGlhbG9nLmZvY3VzKCk7DQoJCQkJfQ0KCQkJfQ0KCQl9KTsNCg0KCQkvLyBzdXBwb3J0OiBJRQ0KCQkvLyBVc2UgdHlwZT0iYnV0dG9uIiB0byBwcmV2ZW50IGVudGVyIGtleXByZXNzZXMgaW4gdGV4dGJveGVzIGZyb20gY2xvc2luZyB0aGUNCgkJLy8gZGlhbG9nIGluIElFICgjOTMxMikNCgkJdGhpcy51aURpYWxvZ1RpdGxlYmFyQ2xvc2UgPSAkKCAiPGJ1dHRvbiB0eXBlPSdidXR0b24nPjwvYnV0dG9uPiIgKQ0KCQkJLmJ1dHRvbih7DQoJCQkJbGFiZWw6IHRoaXMub3B0aW9ucy5jbG9zZVRleHQsDQoJCQkJaWNvbnM6IHsNCgkJCQkJcHJpbWFyeTogInVpLWljb24tY2xvc2V0aGljayINCgkJCQl9LA0KCQkJCXRleHQ6IGZhbHNlDQoJCQl9KQ0KCQkJLmFkZENsYXNzKCAidWktZGlhbG9nLXRpdGxlYmFyLWNsb3NlIiApDQoJCQkuYXBwZW5kVG8oIHRoaXMudWlEaWFsb2dUaXRsZWJhciApOw0KCQl0aGlzLl9vbiggdGhpcy51aURpYWxvZ1RpdGxlYmFyQ2xvc2UsIHsNCgkJCWNsaWNrOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCgkJCQl0aGlzLmNsb3NlKCBldmVudCApOw0KCQkJfQ0KCQl9KTsNCg0KCQl1aURpYWxvZ1RpdGxlID0gJCggIjxzcGFuPiIgKQ0KCQkJLnVuaXF1ZUlkKCkNCgkJCS5hZGRDbGFzcyggInVpLWRpYWxvZy10aXRsZSIgKQ0KCQkJLnByZXBlbmRUbyggdGhpcy51aURpYWxvZ1RpdGxlYmFyICk7DQoJCXRoaXMuX3RpdGxlKCB1aURpYWxvZ1RpdGxlICk7DQoNCgkJdGhpcy51aURpYWxvZy5hdHRyKHsNCgkJCSJhcmlhLWxhYmVsbGVkYnkiOiB1aURpYWxvZ1RpdGxlLmF0dHIoICJpZCIgKQ0KCQl9KTsNCgl9LA0KDQoJX3RpdGxlOiBmdW5jdGlvbiggdGl0bGUgKSB7DQoJCWlmICggIXRoaXMub3B0aW9ucy50aXRsZSApIHsNCgkJCXRpdGxlLmh0bWwoICImIzE2MDsiICk7DQoJCX0NCgkJdGl0bGUudGV4dCggdGhpcy5vcHRpb25zLnRpdGxlICk7DQoJfSwNCg0KCV9jcmVhdGVCdXR0b25QYW5lOiBmdW5jdGlvbigpIHsNCgkJdGhpcy51aURpYWxvZ0J1dHRvblBhbmUgPSAkKCAiPGRpdj4iICkNCgkJCS5hZGRDbGFzcyggInVpLWRpYWxvZy1idXR0b25wYW5lIHVpLXdpZGdldC1jb250ZW50IHVpLWhlbHBlci1jbGVhcmZpeCIgKTsNCg0KCQl0aGlzLnVpQnV0dG9uU2V0ID0gJCggIjxkaXY+IiApDQoJCQkuYWRkQ2xhc3MoICJ1aS1kaWFsb2ctYnV0dG9uc2V0IiApDQoJCQkuYXBwZW5kVG8oIHRoaXMudWlEaWFsb2dCdXR0b25QYW5lICk7DQoNCgkJdGhpcy5fY3JlYXRlQnV0dG9ucygpOw0KCX0sDQoNCglfY3JlYXRlQnV0dG9uczogZnVuY3Rpb24oKSB7DQoJCXZhciB0aGF0ID0gdGhpcywNCgkJCWJ1dHRvbnMgPSB0aGlzLm9wdGlvbnMuYnV0dG9uczsNCg0KCQkvLyBpZiB3ZSBhbHJlYWR5IGhhdmUgYSBidXR0b24gcGFuZSwgcmVtb3ZlIGl0DQoJCXRoaXMudWlEaWFsb2dCdXR0b25QYW5lLnJlbW92ZSgpOw0KCQl0aGlzLnVpQnV0dG9uU2V0LmVtcHR5KCk7DQoNCgkJaWYgKCAkLmlzRW1wdHlPYmplY3QoIGJ1dHRvbnMgKSB8fCAoJC5pc0FycmF5KCBidXR0b25zICkgJiYgIWJ1dHRvbnMubGVuZ3RoKSApIHsNCgkJCXRoaXMudWlEaWFsb2cucmVtb3ZlQ2xhc3MoICJ1aS1kaWFsb2ctYnV0dG9ucyIgKTsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCSQuZWFjaCggYnV0dG9ucywgZnVuY3Rpb24oIG5hbWUsIHByb3BzICkgew0KCQkJdmFyIGNsaWNrLCBidXR0b25PcHRpb25zOw0KCQkJcHJvcHMgPSAkLmlzRnVuY3Rpb24oIHByb3BzICkgPw0KCQkJCXsgY2xpY2s6IHByb3BzLCB0ZXh0OiBuYW1lIH0gOg0KCQkJCXByb3BzOw0KCQkJLy8gRGVmYXVsdCB0byBhIG5vbi1zdWJtaXR0aW5nIGJ1dHRvbg0KCQkJcHJvcHMgPSAkLmV4dGVuZCggeyB0eXBlOiAiYnV0dG9uIiB9LCBwcm9wcyApOw0KCQkJLy8gQ2hhbmdlIHRoZSBjb250ZXh0IGZvciB0aGUgY2xpY2sgY2FsbGJhY2sgdG8gYmUgdGhlIG1haW4gZWxlbWVudA0KCQkJY2xpY2sgPSBwcm9wcy5jbGljazsNCgkJCXByb3BzLmNsaWNrID0gZnVuY3Rpb24oKSB7DQoJCQkJY2xpY2suYXBwbHkoIHRoYXQuZWxlbWVudFsgMCBdLCBhcmd1bWVudHMgKTsNCgkJCX07DQoJCQlidXR0b25PcHRpb25zID0gew0KCQkJCWljb25zOiBwcm9wcy5pY29ucywNCgkJCQl0ZXh0OiBwcm9wcy5zaG93VGV4dA0KCQkJfTsNCgkJCWRlbGV0ZSBwcm9wcy5pY29uczsNCgkJCWRlbGV0ZSBwcm9wcy5zaG93VGV4dDsNCgkJCSQoICI8YnV0dG9uPjwvYnV0dG9uPiIsIHByb3BzICkNCgkJCQkuYnV0dG9uKCBidXR0b25PcHRpb25zICkNCgkJCQkuYXBwZW5kVG8oIHRoYXQudWlCdXR0b25TZXQgKTsNCgkJfSk7DQoJCXRoaXMudWlEaWFsb2cuYWRkQ2xhc3MoICJ1aS1kaWFsb2ctYnV0dG9ucyIgKTsNCgkJdGhpcy51aURpYWxvZ0J1dHRvblBhbmUuYXBwZW5kVG8oIHRoaXMudWlEaWFsb2cgKTsNCgl9LA0KDQoJX21ha2VEcmFnZ2FibGU6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdGhhdCA9IHRoaXMsDQoJCQlvcHRpb25zID0gdGhpcy5vcHRpb25zOw0KDQoJCWZ1bmN0aW9uIGZpbHRlcmVkVWkoIHVpICkgew0KCQkJcmV0dXJuIHsNCgkJCQlwb3NpdGlvbjogdWkucG9zaXRpb24sDQoJCQkJb2Zmc2V0OiB1aS5vZmZzZXQNCgkJCX07DQoJCX0NCg0KCQl0aGlzLnVpRGlhbG9nLmRyYWdnYWJsZSh7DQoJCQljYW5jZWw6ICIudWktZGlhbG9nLWNvbnRlbnQsIC51aS1kaWFsb2ctdGl0bGViYXItY2xvc2UiLA0KCQkJaGFuZGxlOiAiLnVpLWRpYWxvZy10aXRsZWJhciIsDQoJCQljb250YWlubWVudDogImRvY3VtZW50IiwNCgkJCXN0YXJ0OiBmdW5jdGlvbiggZXZlbnQsIHVpICkgew0KCQkJCSQoIHRoaXMgKS5hZGRDbGFzcyggInVpLWRpYWxvZy1kcmFnZ2luZyIgKTsNCgkJCQl0aGF0Ll9ibG9ja0ZyYW1lcygpOw0KCQkJCXRoYXQuX3RyaWdnZXIoICJkcmFnU3RhcnQiLCBldmVudCwgZmlsdGVyZWRVaSggdWkgKSApOw0KCQkJfSwNCgkJCWRyYWc6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7DQoJCQkJdGhhdC5fdHJpZ2dlciggImRyYWciLCBldmVudCwgZmlsdGVyZWRVaSggdWkgKSApOw0KCQkJfSwNCgkJCXN0b3A6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7DQoJCQkJdmFyIGxlZnQgPSB1aS5vZmZzZXQubGVmdCAtIHRoYXQuZG9jdW1lbnQuc2Nyb2xsTGVmdCgpLA0KCQkJCQl0b3AgPSB1aS5vZmZzZXQudG9wIC0gdGhhdC5kb2N1bWVudC5zY3JvbGxUb3AoKTsNCg0KCQkJCW9wdGlvbnMucG9zaXRpb24gPSB7DQoJCQkJCW15OiAibGVmdCB0b3AiLA0KCQkJCQlhdDogImxlZnQiICsgKGxlZnQgPj0gMCA/ICIrIiA6ICIiKSArIGxlZnQgKyAiICIgKw0KCQkJCQkJInRvcCIgKyAodG9wID49IDAgPyAiKyIgOiAiIikgKyB0b3AsDQoJCQkJCW9mOiB0aGF0LndpbmRvdw0KCQkJCX07DQoJCQkJJCggdGhpcyApLnJlbW92ZUNsYXNzKCAidWktZGlhbG9nLWRyYWdnaW5nIiApOw0KCQkJCXRoYXQuX3VuYmxvY2tGcmFtZXMoKTsNCgkJCQl0aGF0Ll90cmlnZ2VyKCAiZHJhZ1N0b3AiLCBldmVudCwgZmlsdGVyZWRVaSggdWkgKSApOw0KCQkJfQ0KCQl9KTsNCgl9LA0KDQoJX21ha2VSZXNpemFibGU6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdGhhdCA9IHRoaXMsDQoJCQlvcHRpb25zID0gdGhpcy5vcHRpb25zLA0KCQkJaGFuZGxlcyA9IG9wdGlvbnMucmVzaXphYmxlLA0KCQkJLy8gLnVpLXJlc2l6YWJsZSBoYXMgcG9zaXRpb246IHJlbGF0aXZlIGRlZmluZWQgaW4gdGhlIHN0eWxlc2hlZXQNCgkJCS8vIGJ1dCBkaWFsb2dzIGhhdmUgdG8gdXNlIGFic29sdXRlIG9yIGZpeGVkIHBvc2l0aW9uaW5nDQoJCQlwb3NpdGlvbiA9IHRoaXMudWlEaWFsb2cuY3NzKCJwb3NpdGlvbiIpLA0KCQkJcmVzaXplSGFuZGxlcyA9IHR5cGVvZiBoYW5kbGVzID09PSAic3RyaW5nIiA/DQoJCQkJaGFuZGxlcwk6DQoJCQkJIm4sZSxzLHcsc2Usc3csbmUsbnciOw0KDQoJCWZ1bmN0aW9uIGZpbHRlcmVkVWkoIHVpICkgew0KCQkJcmV0dXJuIHsNCgkJCQlvcmlnaW5hbFBvc2l0aW9uOiB1aS5vcmlnaW5hbFBvc2l0aW9uLA0KCQkJCW9yaWdpbmFsU2l6ZTogdWkub3JpZ2luYWxTaXplLA0KCQkJCXBvc2l0aW9uOiB1aS5wb3NpdGlvbiwNCgkJCQlzaXplOiB1aS5zaXplDQoJCQl9Ow0KCQl9DQoNCgkJdGhpcy51aURpYWxvZy5yZXNpemFibGUoew0KCQkJY2FuY2VsOiAiLnVpLWRpYWxvZy1jb250ZW50IiwNCgkJCWNvbnRhaW5tZW50OiAiZG9jdW1lbnQiLA0KCQkJYWxzb1Jlc2l6ZTogdGhpcy5lbGVtZW50LA0KCQkJbWF4V2lkdGg6IG9wdGlvbnMubWF4V2lkdGgsDQoJCQltYXhIZWlnaHQ6IG9wdGlvbnMubWF4SGVpZ2h0LA0KCQkJbWluV2lkdGg6IG9wdGlvbnMubWluV2lkdGgsDQoJCQltaW5IZWlnaHQ6IHRoaXMuX21pbkhlaWdodCgpLA0KCQkJaGFuZGxlczogcmVzaXplSGFuZGxlcywNCgkJCXN0YXJ0OiBmdW5jdGlvbiggZXZlbnQsIHVpICkgew0KCQkJCSQoIHRoaXMgKS5hZGRDbGFzcyggInVpLWRpYWxvZy1yZXNpemluZyIgKTsNCgkJCQl0aGF0Ll9ibG9ja0ZyYW1lcygpOw0KCQkJCXRoYXQuX3RyaWdnZXIoICJyZXNpemVTdGFydCIsIGV2ZW50LCBmaWx0ZXJlZFVpKCB1aSApICk7DQoJCQl9LA0KCQkJcmVzaXplOiBmdW5jdGlvbiggZXZlbnQsIHVpICkgew0KCQkJCXRoYXQuX3RyaWdnZXIoICJyZXNpemUiLCBldmVudCwgZmlsdGVyZWRVaSggdWkgKSApOw0KCQkJfSwNCgkJCXN0b3A6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7DQoJCQkJdmFyIG9mZnNldCA9IHRoYXQudWlEaWFsb2cub2Zmc2V0KCksDQoJCQkJCWxlZnQgPSBvZmZzZXQubGVmdCAtIHRoYXQuZG9jdW1lbnQuc2Nyb2xsTGVmdCgpLA0KCQkJCQl0b3AgPSBvZmZzZXQudG9wIC0gdGhhdC5kb2N1bWVudC5zY3JvbGxUb3AoKTsNCg0KCQkJCW9wdGlvbnMuaGVpZ2h0ID0gdGhhdC51aURpYWxvZy5oZWlnaHQoKTsNCgkJCQlvcHRpb25zLndpZHRoID0gdGhhdC51aURpYWxvZy53aWR0aCgpOw0KCQkJCW9wdGlvbnMucG9zaXRpb24gPSB7DQoJCQkJCW15OiAibGVmdCB0b3AiLA0KCQkJCQlhdDogImxlZnQiICsgKGxlZnQgPj0gMCA/ICIrIiA6ICIiKSArIGxlZnQgKyAiICIgKw0KCQkJCQkJInRvcCIgKyAodG9wID49IDAgPyAiKyIgOiAiIikgKyB0b3AsDQoJCQkJCW9mOiB0aGF0LndpbmRvdw0KCQkJCX07DQoJCQkJJCggdGhpcyApLnJlbW92ZUNsYXNzKCAidWktZGlhbG9nLXJlc2l6aW5nIiApOw0KCQkJCXRoYXQuX3VuYmxvY2tGcmFtZXMoKTsNCgkJCQl0aGF0Ll90cmlnZ2VyKCAicmVzaXplU3RvcCIsIGV2ZW50LCBmaWx0ZXJlZFVpKCB1aSApICk7DQoJCQl9DQoJCX0pDQoJCS5jc3MoICJwb3NpdGlvbiIsIHBvc2l0aW9uICk7DQoJfSwNCg0KCV90cmFja0ZvY3VzOiBmdW5jdGlvbigpIHsNCgkJdGhpcy5fb24oIHRoaXMud2lkZ2V0KCksIHsNCgkJCWZvY3VzaW46IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQl0aGlzLl9tYWtlRm9jdXNUYXJnZXQoKTsNCgkJCQl0aGlzLl9mb2N1c2VkRWxlbWVudCA9ICQoIGV2ZW50LnRhcmdldCApOw0KCQkJfQ0KCQl9KTsNCgl9LA0KDQoJX21ha2VGb2N1c1RhcmdldDogZnVuY3Rpb24oKSB7DQoJCXRoaXMuX3VudHJhY2tJbnN0YW5jZSgpOw0KCQl0aGlzLl90cmFja2luZ0luc3RhbmNlcygpLnVuc2hpZnQoIHRoaXMgKTsNCgl9LA0KDQoJX3VudHJhY2tJbnN0YW5jZTogZnVuY3Rpb24oKSB7DQoJCXZhciBpbnN0YW5jZXMgPSB0aGlzLl90cmFja2luZ0luc3RhbmNlcygpLA0KCQkJZXhpc3RzID0gJC5pbkFycmF5KCB0aGlzLCBpbnN0YW5jZXMgKTsNCgkJaWYgKCBleGlzdHMgIT09IC0xICkgew0KCQkJaW5zdGFuY2VzLnNwbGljZSggZXhpc3RzLCAxICk7DQoJCX0NCgl9LA0KDQoJX3RyYWNraW5nSW5zdGFuY2VzOiBmdW5jdGlvbigpIHsNCgkJdmFyIGluc3RhbmNlcyA9IHRoaXMuZG9jdW1lbnQuZGF0YSggInVpLWRpYWxvZy1pbnN0YW5jZXMiICk7DQoJCWlmICggIWluc3RhbmNlcyApIHsNCgkJCWluc3RhbmNlcyA9IFtdOw0KCQkJdGhpcy5kb2N1bWVudC5kYXRhKCAidWktZGlhbG9nLWluc3RhbmNlcyIsIGluc3RhbmNlcyApOw0KCQl9DQoJCXJldHVybiBpbnN0YW5jZXM7DQoJfSwNCg0KCV9taW5IZWlnaHQ6IGZ1bmN0aW9uKCkgew0KCQl2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9uczsNCg0KCQlyZXR1cm4gb3B0aW9ucy5oZWlnaHQgPT09ICJhdXRvIiA/DQoJCQlvcHRpb25zLm1pbkhlaWdodCA6DQoJCQlNYXRoLm1pbiggb3B0aW9ucy5taW5IZWlnaHQsIG9wdGlvbnMuaGVpZ2h0ICk7DQoJfSwNCg0KCV9wb3NpdGlvbjogZnVuY3Rpb24oKSB7DQoJCS8vIE5lZWQgdG8gc2hvdyB0aGUgZGlhbG9nIHRvIGdldCB0aGUgYWN0dWFsIG9mZnNldCBpbiB0aGUgcG9zaXRpb24gcGx1Z2luDQoJCXZhciBpc1Zpc2libGUgPSB0aGlzLnVpRGlhbG9nLmlzKCAiOnZpc2libGUiICk7DQoJCWlmICggIWlzVmlzaWJsZSApIHsNCgkJCXRoaXMudWlEaWFsb2cuc2hvdygpOw0KCQl9DQoJCXRoaXMudWlEaWFsb2cucG9zaXRpb24oIHRoaXMub3B0aW9ucy5wb3NpdGlvbiApOw0KCQlpZiAoICFpc1Zpc2libGUgKSB7DQoJCQl0aGlzLnVpRGlhbG9nLmhpZGUoKTsNCgkJfQ0KCX0sDQoNCglfc2V0T3B0aW9uczogZnVuY3Rpb24oIG9wdGlvbnMgKSB7DQoJCXZhciB0aGF0ID0gdGhpcywNCgkJCXJlc2l6ZSA9IGZhbHNlLA0KCQkJcmVzaXphYmxlT3B0aW9ucyA9IHt9Ow0KDQoJCSQuZWFjaCggb3B0aW9ucywgZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7DQoJCQl0aGF0Ll9zZXRPcHRpb24oIGtleSwgdmFsdWUgKTsNCg0KCQkJaWYgKCBrZXkgaW4gdGhhdC5zaXplUmVsYXRlZE9wdGlvbnMgKSB7DQoJCQkJcmVzaXplID0gdHJ1ZTsNCgkJCX0NCgkJCWlmICgga2V5IGluIHRoYXQucmVzaXphYmxlUmVsYXRlZE9wdGlvbnMgKSB7DQoJCQkJcmVzaXphYmxlT3B0aW9uc1sga2V5IF0gPSB2YWx1ZTsNCgkJCX0NCgkJfSk7DQoNCgkJaWYgKCByZXNpemUgKSB7DQoJCQl0aGlzLl9zaXplKCk7DQoJCQl0aGlzLl9wb3NpdGlvbigpOw0KCQl9DQoJCWlmICggdGhpcy51aURpYWxvZy5pcyggIjpkYXRhKHVpLXJlc2l6YWJsZSkiICkgKSB7DQoJCQl0aGlzLnVpRGlhbG9nLnJlc2l6YWJsZSggIm9wdGlvbiIsIHJlc2l6YWJsZU9wdGlvbnMgKTsNCgkJfQ0KCX0sDQoNCglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsNCgkJdmFyIGlzRHJhZ2dhYmxlLCBpc1Jlc2l6YWJsZSwNCgkJCXVpRGlhbG9nID0gdGhpcy51aURpYWxvZzsNCg0KCQlpZiAoIGtleSA9PT0gImRpYWxvZ0NsYXNzIiApIHsNCgkJCXVpRGlhbG9nDQoJCQkJLnJlbW92ZUNsYXNzKCB0aGlzLm9wdGlvbnMuZGlhbG9nQ2xhc3MgKQ0KCQkJCS5hZGRDbGFzcyggdmFsdWUgKTsNCgkJfQ0KDQoJCWlmICgga2V5ID09PSAiZGlzYWJsZWQiICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsNCg0KCQlpZiAoIGtleSA9PT0gImFwcGVuZFRvIiApIHsNCgkJCXRoaXMudWlEaWFsb2cuYXBwZW5kVG8oIHRoaXMuX2FwcGVuZFRvKCkgKTsNCgkJfQ0KDQoJCWlmICgga2V5ID09PSAiYnV0dG9ucyIgKSB7DQoJCQl0aGlzLl9jcmVhdGVCdXR0b25zKCk7DQoJCX0NCg0KCQlpZiAoIGtleSA9PT0gImNsb3NlVGV4dCIgKSB7DQoJCQl0aGlzLnVpRGlhbG9nVGl0bGViYXJDbG9zZS5idXR0b24oew0KCQkJCS8vIEVuc3VyZSB0aGF0IHdlIGFsd2F5cyBwYXNzIGEgc3RyaW5nDQoJCQkJbGFiZWw6ICIiICsgdmFsdWUNCgkJCX0pOw0KCQl9DQoNCgkJaWYgKCBrZXkgPT09ICJkcmFnZ2FibGUiICkgew0KCQkJaXNEcmFnZ2FibGUgPSB1aURpYWxvZy5pcyggIjpkYXRhKHVpLWRyYWdnYWJsZSkiICk7DQoJCQlpZiAoIGlzRHJhZ2dhYmxlICYmICF2YWx1ZSApIHsNCgkJCQl1aURpYWxvZy5kcmFnZ2FibGUoICJkZXN0cm95IiApOw0KCQkJfQ0KDQoJCQlpZiAoICFpc0RyYWdnYWJsZSAmJiB2YWx1ZSApIHsNCgkJCQl0aGlzLl9tYWtlRHJhZ2dhYmxlKCk7DQoJCQl9DQoJCX0NCg0KCQlpZiAoIGtleSA9PT0gInBvc2l0aW9uIiApIHsNCgkJCXRoaXMuX3Bvc2l0aW9uKCk7DQoJCX0NCg0KCQlpZiAoIGtleSA9PT0gInJlc2l6YWJsZSIgKSB7DQoJCQkvLyBjdXJyZW50bHkgcmVzaXphYmxlLCBiZWNvbWluZyBub24tcmVzaXphYmxlDQoJCQlpc1Jlc2l6YWJsZSA9IHVpRGlhbG9nLmlzKCAiOmRhdGEodWktcmVzaXphYmxlKSIgKTsNCgkJCWlmICggaXNSZXNpemFibGUgJiYgIXZhbHVlICkgew0KCQkJCXVpRGlhbG9nLnJlc2l6YWJsZSggImRlc3Ryb3kiICk7DQoJCQl9DQoNCgkJCS8vIGN1cnJlbnRseSByZXNpemFibGUsIGNoYW5naW5nIGhhbmRsZXMNCgkJCWlmICggaXNSZXNpemFibGUgJiYgdHlwZW9mIHZhbHVlID09PSAic3RyaW5nIiApIHsNCgkJCQl1aURpYWxvZy5yZXNpemFibGUoICJvcHRpb24iLCAiaGFuZGxlcyIsIHZhbHVlICk7DQoJCQl9DQoNCgkJCS8vIGN1cnJlbnRseSBub24tcmVzaXphYmxlLCBiZWNvbWluZyByZXNpemFibGUNCgkJCWlmICggIWlzUmVzaXphYmxlICYmIHZhbHVlICE9PSBmYWxzZSApIHsNCgkJCQl0aGlzLl9tYWtlUmVzaXphYmxlKCk7DQoJCQl9DQoJCX0NCg0KCQlpZiAoIGtleSA9PT0gInRpdGxlIiApIHsNCgkJCXRoaXMuX3RpdGxlKCB0aGlzLnVpRGlhbG9nVGl0bGViYXIuZmluZCggIi51aS1kaWFsb2ctdGl0bGUiICkgKTsNCgkJfQ0KCX0sDQoNCglfc2l6ZTogZnVuY3Rpb24oKSB7DQoJCS8vIElmIHRoZSB1c2VyIGhhcyByZXNpemVkIHRoZSBkaWFsb2csIHRoZSAudWktZGlhbG9nIGFuZCAudWktZGlhbG9nLWNvbnRlbnQNCgkJLy8gZGl2cyB3aWxsIGJvdGggaGF2ZSB3aWR0aCBhbmQgaGVpZ2h0IHNldCwgc28gd2UgbmVlZCB0byByZXNldCB0aGVtDQoJCXZhciBub25Db250ZW50SGVpZ2h0LCBtaW5Db250ZW50SGVpZ2h0LCBtYXhDb250ZW50SGVpZ2h0LA0KCQkJb3B0aW9ucyA9IHRoaXMub3B0aW9uczsNCg0KCQkvLyBSZXNldCBjb250ZW50IHNpemluZw0KCQl0aGlzLmVsZW1lbnQuc2hvdygpLmNzcyh7DQoJCQl3aWR0aDogImF1dG8iLA0KCQkJbWluSGVpZ2h0OiAwLA0KCQkJbWF4SGVpZ2h0OiAibm9uZSIsDQoJCQloZWlnaHQ6IDANCgkJfSk7DQoNCgkJaWYgKCBvcHRpb25zLm1pbldpZHRoID4gb3B0aW9ucy53aWR0aCApIHsNCgkJCW9wdGlvbnMud2lkdGggPSBvcHRpb25zLm1pbldpZHRoOw0KCQl9DQoNCgkJLy8gcmVzZXQgd3JhcHBlciBzaXppbmcNCgkJLy8gZGV0ZXJtaW5lIHRoZSBoZWlnaHQgb2YgYWxsIHRoZSBub24tY29udGVudCBlbGVtZW50cw0KCQlub25Db250ZW50SGVpZ2h0ID0gdGhpcy51aURpYWxvZy5jc3Moew0KCQkJCWhlaWdodDogImF1dG8iLA0KCQkJCXdpZHRoOiBvcHRpb25zLndpZHRoDQoJCQl9KQ0KCQkJLm91dGVySGVpZ2h0KCk7DQoJCW1pbkNvbnRlbnRIZWlnaHQgPSBNYXRoLm1heCggMCwgb3B0aW9ucy5taW5IZWlnaHQgLSBub25Db250ZW50SGVpZ2h0ICk7DQoJCW1heENvbnRlbnRIZWlnaHQgPSB0eXBlb2Ygb3B0aW9ucy5tYXhIZWlnaHQgPT09ICJudW1iZXIiID8NCgkJCU1hdGgubWF4KCAwLCBvcHRpb25zLm1heEhlaWdodCAtIG5vbkNvbnRlbnRIZWlnaHQgKSA6DQoJCQkibm9uZSI7DQoNCgkJaWYgKCBvcHRpb25zLmhlaWdodCA9PT0gImF1dG8iICkgew0KCQkJdGhpcy5lbGVtZW50LmNzcyh7DQoJCQkJbWluSGVpZ2h0OiBtaW5Db250ZW50SGVpZ2h0LA0KCQkJCW1heEhlaWdodDogbWF4Q29udGVudEhlaWdodCwNCgkJCQloZWlnaHQ6ICJhdXRvIg0KCQkJfSk7DQoJCX0gZWxzZSB7DQoJCQl0aGlzLmVsZW1lbnQuaGVpZ2h0KCBNYXRoLm1heCggMCwgb3B0aW9ucy5oZWlnaHQgLSBub25Db250ZW50SGVpZ2h0ICkgKTsNCgkJfQ0KDQoJCWlmICggdGhpcy51aURpYWxvZy5pcyggIjpkYXRhKHVpLXJlc2l6YWJsZSkiICkgKSB7DQoJCQl0aGlzLnVpRGlhbG9nLnJlc2l6YWJsZSggIm9wdGlvbiIsICJtaW5IZWlnaHQiLCB0aGlzLl9taW5IZWlnaHQoKSApOw0KCQl9DQoJfSwNCg0KCV9ibG9ja0ZyYW1lczogZnVuY3Rpb24oKSB7DQoJCXRoaXMuaWZyYW1lQmxvY2tzID0gdGhpcy5kb2N1bWVudC5maW5kKCAiaWZyYW1lIiApLm1hcChmdW5jdGlvbigpIHsNCgkJCXZhciBpZnJhbWUgPSAkKCB0aGlzICk7DQoNCgkJCXJldHVybiAkKCAiPGRpdj4iICkNCgkJCQkuY3NzKHsNCgkJCQkJcG9zaXRpb246ICJhYnNvbHV0ZSIsDQoJCQkJCXdpZHRoOiBpZnJhbWUub3V0ZXJXaWR0aCgpLA0KCQkJCQloZWlnaHQ6IGlmcmFtZS5vdXRlckhlaWdodCgpDQoJCQkJfSkNCgkJCQkuYXBwZW5kVG8oIGlmcmFtZS5wYXJlbnQoKSApDQoJCQkJLm9mZnNldCggaWZyYW1lLm9mZnNldCgpIClbMF07DQoJCX0pOw0KCX0sDQoNCglfdW5ibG9ja0ZyYW1lczogZnVuY3Rpb24oKSB7DQoJCWlmICggdGhpcy5pZnJhbWVCbG9ja3MgKSB7DQoJCQl0aGlzLmlmcmFtZUJsb2Nrcy5yZW1vdmUoKTsNCgkJCWRlbGV0ZSB0aGlzLmlmcmFtZUJsb2NrczsNCgkJfQ0KCX0sDQoNCglfYWxsb3dJbnRlcmFjdGlvbjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQlpZiAoICQoIGV2ZW50LnRhcmdldCApLmNsb3Nlc3QoICIudWktZGlhbG9nIiApLmxlbmd0aCApIHsNCgkJCXJldHVybiB0cnVlOw0KCQl9DQoNCgkJLy8gVE9ETzogUmVtb3ZlIGhhY2sgd2hlbiBkYXRlcGlja2VyIGltcGxlbWVudHMNCgkJLy8gdGhlIC51aS1mcm9udCBsb2dpYyAoIzg5ODkpDQoJCXJldHVybiAhISQoIGV2ZW50LnRhcmdldCApLmNsb3Nlc3QoICIudWktZGF0ZXBpY2tlciIgKS5sZW5ndGg7DQoJfSwNCg0KCV9jcmVhdGVPdmVybGF5OiBmdW5jdGlvbigpIHsNCgkJaWYgKCAhdGhpcy5vcHRpb25zLm1vZGFsICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJLy8gV2UgdXNlIGEgZGVsYXkgaW4gY2FzZSB0aGUgb3ZlcmxheSBpcyBjcmVhdGVkIGZyb20gYW4NCgkJLy8gZXZlbnQgdGhhdCB3ZSdyZSBnb2luZyB0byBiZSBjYW5jZWxsaW5nICgjMjgwNCkNCgkJdmFyIGlzT3BlbmluZyA9IHRydWU7DQoJCXRoaXMuX2RlbGF5KGZ1bmN0aW9uKCkgew0KCQkJaXNPcGVuaW5nID0gZmFsc2U7DQoJCX0pOw0KDQoJCWlmICggIXRoaXMuZG9jdW1lbnQuZGF0YSggInVpLWRpYWxvZy1vdmVybGF5cyIgKSApIHsNCg0KCQkJLy8gUHJldmVudCB1c2Ugb2YgYW5jaG9ycyBhbmQgaW5wdXRzDQoJCQkvLyBVc2luZyBfb24oKSBmb3IgYW4gZXZlbnQgaGFuZGxlciBzaGFyZWQgYWNyb3NzIG1hbnkgaW5zdGFuY2VzIGlzDQoJCQkvLyBzYWZlIGJlY2F1c2UgdGhlIGRpYWxvZ3Mgc3RhY2sgYW5kIG11c3QgYmUgY2xvc2VkIGluIHJldmVyc2Ugb3JkZXINCgkJCXRoaXMuX29uKCB0aGlzLmRvY3VtZW50LCB7DQoJCQkJZm9jdXNpbjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCQlpZiAoIGlzT3BlbmluZyApIHsNCgkJCQkJCXJldHVybjsNCgkJCQkJfQ0KDQoJCQkJCWlmICggIXRoaXMuX2FsbG93SW50ZXJhY3Rpb24oIGV2ZW50ICkgKSB7DQoJCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQkJCQkJdGhpcy5fdHJhY2tpbmdJbnN0YW5jZXMoKVsgMCBdLl9mb2N1c1RhYmJhYmxlKCk7DQoJCQkJCX0NCgkJCQl9DQoJCQl9KTsNCgkJfQ0KDQoJCXRoaXMub3ZlcmxheSA9ICQoICI8ZGl2PiIgKQ0KCQkJLmFkZENsYXNzKCAidWktd2lkZ2V0LW92ZXJsYXkgdWktZnJvbnQiICkNCgkJCS5hcHBlbmRUbyggdGhpcy5fYXBwZW5kVG8oKSApOw0KCQl0aGlzLl9vbiggdGhpcy5vdmVybGF5LCB7DQoJCQltb3VzZWRvd246ICJfa2VlcEZvY3VzIg0KCQl9KTsNCgkJdGhpcy5kb2N1bWVudC5kYXRhKCAidWktZGlhbG9nLW92ZXJsYXlzIiwNCgkJCSh0aGlzLmRvY3VtZW50LmRhdGEoICJ1aS1kaWFsb2ctb3ZlcmxheXMiICkgfHwgMCkgKyAxICk7DQoJfSwNCg0KCV9kZXN0cm95T3ZlcmxheTogZnVuY3Rpb24oKSB7DQoJCWlmICggIXRoaXMub3B0aW9ucy5tb2RhbCApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCWlmICggdGhpcy5vdmVybGF5ICkgew0KCQkJdmFyIG92ZXJsYXlzID0gdGhpcy5kb2N1bWVudC5kYXRhKCAidWktZGlhbG9nLW92ZXJsYXlzIiApIC0gMTsNCg0KCQkJaWYgKCAhb3ZlcmxheXMgKSB7DQoJCQkJdGhpcy5kb2N1bWVudA0KCQkJCQkudW5iaW5kKCAiZm9jdXNpbiIgKQ0KCQkJCQkucmVtb3ZlRGF0YSggInVpLWRpYWxvZy1vdmVybGF5cyIgKTsNCgkJCX0gZWxzZSB7DQoJCQkJdGhpcy5kb2N1bWVudC5kYXRhKCAidWktZGlhbG9nLW92ZXJsYXlzIiwgb3ZlcmxheXMgKTsNCgkJCX0NCg0KCQkJdGhpcy5vdmVybGF5LnJlbW92ZSgpOw0KCQkJdGhpcy5vdmVybGF5ID0gbnVsbDsNCgkJfQ0KCX0NCn0pOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIERyb3BwYWJsZSAxLjExLjINCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgMjAxNCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKg0KICogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZHJvcHBhYmxlLw0KICovDQoNCg0KJC53aWRnZXQoICJ1aS5kcm9wcGFibGUiLCB7DQoJdmVyc2lvbjogIjEuMTEuMiIsDQoJd2lkZ2V0RXZlbnRQcmVmaXg6ICJkcm9wIiwNCglvcHRpb25zOiB7DQoJCWFjY2VwdDogIioiLA0KCQlhY3RpdmVDbGFzczogZmFsc2UsDQoJCWFkZENsYXNzZXM6IHRydWUsDQoJCWdyZWVkeTogZmFsc2UsDQoJCWhvdmVyQ2xhc3M6IGZhbHNlLA0KCQlzY29wZTogImRlZmF1bHQiLA0KCQl0b2xlcmFuY2U6ICJpbnRlcnNlY3QiLA0KDQoJCS8vIGNhbGxiYWNrcw0KCQlhY3RpdmF0ZTogbnVsbCwNCgkJZGVhY3RpdmF0ZTogbnVsbCwNCgkJZHJvcDogbnVsbCwNCgkJb3V0OiBudWxsLA0KCQlvdmVyOiBudWxsDQoJfSwNCglfY3JlYXRlOiBmdW5jdGlvbigpIHsNCg0KCQl2YXIgcHJvcG9ydGlvbnMsDQoJCQlvID0gdGhpcy5vcHRpb25zLA0KCQkJYWNjZXB0ID0gby5hY2NlcHQ7DQoNCgkJdGhpcy5pc292ZXIgPSBmYWxzZTsNCgkJdGhpcy5pc291dCA9IHRydWU7DQoNCgkJdGhpcy5hY2NlcHQgPSAkLmlzRnVuY3Rpb24oIGFjY2VwdCApID8gYWNjZXB0IDogZnVuY3Rpb24oIGQgKSB7DQoJCQlyZXR1cm4gZC5pcyggYWNjZXB0ICk7DQoJCX07DQoNCgkJdGhpcy5wcm9wb3J0aW9ucyA9IGZ1bmN0aW9uKCAvKiB2YWx1ZVRvV3JpdGUgKi8gKSB7DQoJCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7DQoJCQkJLy8gU3RvcmUgdGhlIGRyb3BwYWJsZSdzIHByb3BvcnRpb25zDQoJCQkJcHJvcG9ydGlvbnMgPSBhcmd1bWVudHNbIDAgXTsNCgkJCX0gZWxzZSB7DQoJCQkJLy8gUmV0cmlldmUgb3IgZGVyaXZlIHRoZSBkcm9wcGFibGUncyBwcm9wb3J0aW9ucw0KCQkJCXJldHVybiBwcm9wb3J0aW9ucyA/DQoJCQkJCXByb3BvcnRpb25zIDoNCgkJCQkJcHJvcG9ydGlvbnMgPSB7DQoJCQkJCQl3aWR0aDogdGhpcy5lbGVtZW50WyAwIF0ub2Zmc2V0V2lkdGgsDQoJCQkJCQloZWlnaHQ6IHRoaXMuZWxlbWVudFsgMCBdLm9mZnNldEhlaWdodA0KCQkJCQl9Ow0KCQkJfQ0KCQl9Ow0KDQoJCXRoaXMuX2FkZFRvTWFuYWdlciggby5zY29wZSApOw0KDQoJCW8uYWRkQ2xhc3NlcyAmJiB0aGlzLmVsZW1lbnQuYWRkQ2xhc3MoICJ1aS1kcm9wcGFibGUiICk7DQoNCgl9LA0KDQoJX2FkZFRvTWFuYWdlcjogZnVuY3Rpb24oIHNjb3BlICkgew0KCQkvLyBBZGQgdGhlIHJlZmVyZW5jZSBhbmQgcG9zaXRpb25zIHRvIHRoZSBtYW5hZ2VyDQoJCSQudWkuZGRtYW5hZ2VyLmRyb3BwYWJsZXNbIHNjb3BlIF0gPSAkLnVpLmRkbWFuYWdlci5kcm9wcGFibGVzWyBzY29wZSBdIHx8IFtdOw0KCQkkLnVpLmRkbWFuYWdlci5kcm9wcGFibGVzWyBzY29wZSBdLnB1c2goIHRoaXMgKTsNCgl9LA0KDQoJX3NwbGljZTogZnVuY3Rpb24oIGRyb3AgKSB7DQoJCXZhciBpID0gMDsNCgkJZm9yICggOyBpIDwgZHJvcC5sZW5ndGg7IGkrKyApIHsNCgkJCWlmICggZHJvcFsgaSBdID09PSB0aGlzICkgew0KCQkJCWRyb3Auc3BsaWNlKCBpLCAxICk7DQoJCQl9DQoJCX0NCgl9LA0KDQoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgew0KCQl2YXIgZHJvcCA9ICQudWkuZGRtYW5hZ2VyLmRyb3BwYWJsZXNbIHRoaXMub3B0aW9ucy5zY29wZSBdOw0KDQoJCXRoaXMuX3NwbGljZSggZHJvcCApOw0KDQoJCXRoaXMuZWxlbWVudC5yZW1vdmVDbGFzcyggInVpLWRyb3BwYWJsZSB1aS1kcm9wcGFibGUtZGlzYWJsZWQiICk7DQoJfSwNCg0KCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgew0KDQoJCWlmICgga2V5ID09PSAiYWNjZXB0IiApIHsNCgkJCXRoaXMuYWNjZXB0ID0gJC5pc0Z1bmN0aW9uKCB2YWx1ZSApID8gdmFsdWUgOiBmdW5jdGlvbiggZCApIHsNCgkJCQlyZXR1cm4gZC5pcyggdmFsdWUgKTsNCgkJCX07DQoJCX0gZWxzZSBpZiAoIGtleSA9PT0gInNjb3BlIiApIHsNCgkJCXZhciBkcm9wID0gJC51aS5kZG1hbmFnZXIuZHJvcHBhYmxlc1sgdGhpcy5vcHRpb25zLnNjb3BlIF07DQoNCgkJCXRoaXMuX3NwbGljZSggZHJvcCApOw0KCQkJdGhpcy5fYWRkVG9NYW5hZ2VyKCB2YWx1ZSApOw0KCQl9DQoNCgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsNCgl9LA0KDQoJX2FjdGl2YXRlOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXZhciBkcmFnZ2FibGUgPSAkLnVpLmRkbWFuYWdlci5jdXJyZW50Ow0KCQlpZiAoIHRoaXMub3B0aW9ucy5hY3RpdmVDbGFzcyApIHsNCgkJCXRoaXMuZWxlbWVudC5hZGRDbGFzcyggdGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzICk7DQoJCX0NCgkJaWYgKCBkcmFnZ2FibGUgKXsNCgkJCXRoaXMuX3RyaWdnZXIoICJhY3RpdmF0ZSIsIGV2ZW50LCB0aGlzLnVpKCBkcmFnZ2FibGUgKSApOw0KCQl9DQoJfSwNCg0KCV9kZWFjdGl2YXRlOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXZhciBkcmFnZ2FibGUgPSAkLnVpLmRkbWFuYWdlci5jdXJyZW50Ow0KCQlpZiAoIHRoaXMub3B0aW9ucy5hY3RpdmVDbGFzcyApIHsNCgkJCXRoaXMuZWxlbWVudC5yZW1vdmVDbGFzcyggdGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzICk7DQoJCX0NCgkJaWYgKCBkcmFnZ2FibGUgKXsNCgkJCXRoaXMuX3RyaWdnZXIoICJkZWFjdGl2YXRlIiwgZXZlbnQsIHRoaXMudWkoIGRyYWdnYWJsZSApICk7DQoJCX0NCgl9LA0KDQoJX292ZXI6IGZ1bmN0aW9uKCBldmVudCApIHsNCg0KCQl2YXIgZHJhZ2dhYmxlID0gJC51aS5kZG1hbmFnZXIuY3VycmVudDsNCg0KCQkvLyBCYWlsIGlmIGRyYWdnYWJsZSBhbmQgZHJvcHBhYmxlIGFyZSBzYW1lIGVsZW1lbnQNCgkJaWYgKCAhZHJhZ2dhYmxlIHx8ICggZHJhZ2dhYmxlLmN1cnJlbnRJdGVtIHx8IGRyYWdnYWJsZS5lbGVtZW50IClbIDAgXSA9PT0gdGhpcy5lbGVtZW50WyAwIF0gKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQlpZiAoIHRoaXMuYWNjZXB0LmNhbGwoIHRoaXMuZWxlbWVudFsgMCBdLCAoIGRyYWdnYWJsZS5jdXJyZW50SXRlbSB8fCBkcmFnZ2FibGUuZWxlbWVudCApICkgKSB7DQoJCQlpZiAoIHRoaXMub3B0aW9ucy5ob3ZlckNsYXNzICkgew0KCQkJCXRoaXMuZWxlbWVudC5hZGRDbGFzcyggdGhpcy5vcHRpb25zLmhvdmVyQ2xhc3MgKTsNCgkJCX0NCgkJCXRoaXMuX3RyaWdnZXIoICJvdmVyIiwgZXZlbnQsIHRoaXMudWkoIGRyYWdnYWJsZSApICk7DQoJCX0NCg0KCX0sDQoNCglfb3V0OiBmdW5jdGlvbiggZXZlbnQgKSB7DQoNCgkJdmFyIGRyYWdnYWJsZSA9ICQudWkuZGRtYW5hZ2VyLmN1cnJlbnQ7DQoNCgkJLy8gQmFpbCBpZiBkcmFnZ2FibGUgYW5kIGRyb3BwYWJsZSBhcmUgc2FtZSBlbGVtZW50DQoJCWlmICggIWRyYWdnYWJsZSB8fCAoIGRyYWdnYWJsZS5jdXJyZW50SXRlbSB8fCBkcmFnZ2FibGUuZWxlbWVudCApWyAwIF0gPT09IHRoaXMuZWxlbWVudFsgMCBdICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJaWYgKCB0aGlzLmFjY2VwdC5jYWxsKCB0aGlzLmVsZW1lbnRbIDAgXSwgKCBkcmFnZ2FibGUuY3VycmVudEl0ZW0gfHwgZHJhZ2dhYmxlLmVsZW1lbnQgKSApICkgew0KCQkJaWYgKCB0aGlzLm9wdGlvbnMuaG92ZXJDbGFzcyApIHsNCgkJCQl0aGlzLmVsZW1lbnQucmVtb3ZlQ2xhc3MoIHRoaXMub3B0aW9ucy5ob3ZlckNsYXNzICk7DQoJCQl9DQoJCQl0aGlzLl90cmlnZ2VyKCAib3V0IiwgZXZlbnQsIHRoaXMudWkoIGRyYWdnYWJsZSApICk7DQoJCX0NCg0KCX0sDQoNCglfZHJvcDogZnVuY3Rpb24oIGV2ZW50LCBjdXN0b20gKSB7DQoNCgkJdmFyIGRyYWdnYWJsZSA9IGN1c3RvbSB8fCAkLnVpLmRkbWFuYWdlci5jdXJyZW50LA0KCQkJY2hpbGRyZW5JbnRlcnNlY3Rpb24gPSBmYWxzZTsNCg0KCQkvLyBCYWlsIGlmIGRyYWdnYWJsZSBhbmQgZHJvcHBhYmxlIGFyZSBzYW1lIGVsZW1lbnQNCgkJaWYgKCAhZHJhZ2dhYmxlIHx8ICggZHJhZ2dhYmxlLmN1cnJlbnRJdGVtIHx8IGRyYWdnYWJsZS5lbGVtZW50IClbIDAgXSA9PT0gdGhpcy5lbGVtZW50WyAwIF0gKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCg0KCQl0aGlzLmVsZW1lbnQuZmluZCggIjpkYXRhKHVpLWRyb3BwYWJsZSkiICkubm90KCAiLnVpLWRyYWdnYWJsZS1kcmFnZ2luZyIgKS5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJdmFyIGluc3QgPSAkKCB0aGlzICkuZHJvcHBhYmxlKCAiaW5zdGFuY2UiICk7DQoJCQlpZiAoDQoJCQkJaW5zdC5vcHRpb25zLmdyZWVkeSAmJg0KCQkJCSFpbnN0Lm9wdGlvbnMuZGlzYWJsZWQgJiYNCgkJCQlpbnN0Lm9wdGlvbnMuc2NvcGUgPT09IGRyYWdnYWJsZS5vcHRpb25zLnNjb3BlICYmDQoJCQkJaW5zdC5hY2NlcHQuY2FsbCggaW5zdC5lbGVtZW50WyAwIF0sICggZHJhZ2dhYmxlLmN1cnJlbnRJdGVtIHx8IGRyYWdnYWJsZS5lbGVtZW50ICkgKSAmJg0KCQkJCSQudWkuaW50ZXJzZWN0KCBkcmFnZ2FibGUsICQuZXh0ZW5kKCBpbnN0LCB7IG9mZnNldDogaW5zdC5lbGVtZW50Lm9mZnNldCgpIH0gKSwgaW5zdC5vcHRpb25zLnRvbGVyYW5jZSwgZXZlbnQgKQ0KCQkJKSB7IGNoaWxkcmVuSW50ZXJzZWN0aW9uID0gdHJ1ZTsgcmV0dXJuIGZhbHNlOyB9DQoJCX0pOw0KCQlpZiAoIGNoaWxkcmVuSW50ZXJzZWN0aW9uICkgew0KCQkJcmV0dXJuIGZhbHNlOw0KCQl9DQoNCgkJaWYgKCB0aGlzLmFjY2VwdC5jYWxsKCB0aGlzLmVsZW1lbnRbIDAgXSwgKCBkcmFnZ2FibGUuY3VycmVudEl0ZW0gfHwgZHJhZ2dhYmxlLmVsZW1lbnQgKSApICkgew0KCQkJaWYgKCB0aGlzLm9wdGlvbnMuYWN0aXZlQ2xhc3MgKSB7DQoJCQkJdGhpcy5lbGVtZW50LnJlbW92ZUNsYXNzKCB0aGlzLm9wdGlvbnMuYWN0aXZlQ2xhc3MgKTsNCgkJCX0NCgkJCWlmICggdGhpcy5vcHRpb25zLmhvdmVyQ2xhc3MgKSB7DQoJCQkJdGhpcy5lbGVtZW50LnJlbW92ZUNsYXNzKCB0aGlzLm9wdGlvbnMuaG92ZXJDbGFzcyApOw0KCQkJfQ0KCQkJdGhpcy5fdHJpZ2dlciggImRyb3AiLCBldmVudCwgdGhpcy51aSggZHJhZ2dhYmxlICkgKTsNCgkJCXJldHVybiB0aGlzLmVsZW1lbnQ7DQoJCX0NCg0KCQlyZXR1cm4gZmFsc2U7DQoNCgl9LA0KDQoJdWk6IGZ1bmN0aW9uKCBjICkgew0KCQlyZXR1cm4gew0KCQkJZHJhZ2dhYmxlOiAoIGMuY3VycmVudEl0ZW0gfHwgYy5lbGVtZW50ICksDQoJCQloZWxwZXI6IGMuaGVscGVyLA0KCQkJcG9zaXRpb246IGMucG9zaXRpb24sDQoJCQlvZmZzZXQ6IGMucG9zaXRpb25BYnMNCgkJfTsNCgl9DQoNCn0pOw0KDQokLnVpLmludGVyc2VjdCA9IChmdW5jdGlvbigpIHsNCglmdW5jdGlvbiBpc092ZXJBeGlzKCB4LCByZWZlcmVuY2UsIHNpemUgKSB7DQoJCXJldHVybiAoIHggPj0gcmVmZXJlbmNlICkgJiYgKCB4IDwgKCByZWZlcmVuY2UgKyBzaXplICkgKTsNCgl9DQoNCglyZXR1cm4gZnVuY3Rpb24oIGRyYWdnYWJsZSwgZHJvcHBhYmxlLCB0b2xlcmFuY2VNb2RlLCBldmVudCApIHsNCg0KCQlpZiAoICFkcm9wcGFibGUub2Zmc2V0ICkgew0KCQkJcmV0dXJuIGZhbHNlOw0KCQl9DQoNCgkJdmFyIHgxID0gKCBkcmFnZ2FibGUucG9zaXRpb25BYnMgfHwgZHJhZ2dhYmxlLnBvc2l0aW9uLmFic29sdXRlICkubGVmdCArIGRyYWdnYWJsZS5tYXJnaW5zLmxlZnQsDQoJCQl5MSA9ICggZHJhZ2dhYmxlLnBvc2l0aW9uQWJzIHx8IGRyYWdnYWJsZS5wb3NpdGlvbi5hYnNvbHV0ZSApLnRvcCArIGRyYWdnYWJsZS5tYXJnaW5zLnRvcCwNCgkJCXgyID0geDEgKyBkcmFnZ2FibGUuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgsDQoJCQl5MiA9IHkxICsgZHJhZ2dhYmxlLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCwNCgkJCWwgPSBkcm9wcGFibGUub2Zmc2V0LmxlZnQsDQoJCQl0ID0gZHJvcHBhYmxlLm9mZnNldC50b3AsDQoJCQlyID0gbCArIGRyb3BwYWJsZS5wcm9wb3J0aW9ucygpLndpZHRoLA0KCQkJYiA9IHQgKyBkcm9wcGFibGUucHJvcG9ydGlvbnMoKS5oZWlnaHQ7DQoNCgkJc3dpdGNoICggdG9sZXJhbmNlTW9kZSApIHsNCgkJY2FzZSAiZml0IjoNCgkJCXJldHVybiAoIGwgPD0geDEgJiYgeDIgPD0gciAmJiB0IDw9IHkxICYmIHkyIDw9IGIgKTsNCgkJY2FzZSAiaW50ZXJzZWN0IjoNCgkJCXJldHVybiAoIGwgPCB4MSArICggZHJhZ2dhYmxlLmhlbHBlclByb3BvcnRpb25zLndpZHRoIC8gMiApICYmIC8vIFJpZ2h0IEhhbGYNCgkJCQl4MiAtICggZHJhZ2dhYmxlLmhlbHBlclByb3BvcnRpb25zLndpZHRoIC8gMiApIDwgciAmJiAvLyBMZWZ0IEhhbGYNCgkJCQl0IDwgeTEgKyAoIGRyYWdnYWJsZS5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLyAyICkgJiYgLy8gQm90dG9tIEhhbGYNCgkJCQl5MiAtICggZHJhZ2dhYmxlLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCAvIDIgKSA8IGIgKTsgLy8gVG9wIEhhbGYNCgkJY2FzZSAicG9pbnRlciI6DQoJCQlyZXR1cm4gaXNPdmVyQXhpcyggZXZlbnQucGFnZVksIHQsIGRyb3BwYWJsZS5wcm9wb3J0aW9ucygpLmhlaWdodCApICYmIGlzT3ZlckF4aXMoIGV2ZW50LnBhZ2VYLCBsLCBkcm9wcGFibGUucHJvcG9ydGlvbnMoKS53aWR0aCApOw0KCQljYXNlICJ0b3VjaCI6DQoJCQlyZXR1cm4gKA0KCQkJCSggeTEgPj0gdCAmJiB5MSA8PSBiICkgfHwgLy8gVG9wIGVkZ2UgdG91Y2hpbmcNCgkJCQkoIHkyID49IHQgJiYgeTIgPD0gYiApIHx8IC8vIEJvdHRvbSBlZGdlIHRvdWNoaW5nDQoJCQkJKCB5MSA8IHQgJiYgeTIgPiBiICkgLy8gU3Vycm91bmRlZCB2ZXJ0aWNhbGx5DQoJCQkpICYmICgNCgkJCQkoIHgxID49IGwgJiYgeDEgPD0gciApIHx8IC8vIExlZnQgZWRnZSB0b3VjaGluZw0KCQkJCSggeDIgPj0gbCAmJiB4MiA8PSByICkgfHwgLy8gUmlnaHQgZWRnZSB0b3VjaGluZw0KCQkJCSggeDEgPCBsICYmIHgyID4gciApIC8vIFN1cnJvdW5kZWQgaG9yaXpvbnRhbGx5DQoJCQkpOw0KCQlkZWZhdWx0Og0KCQkJcmV0dXJuIGZhbHNlOw0KCQl9DQoJfTsNCn0pKCk7DQoNCi8qDQoJVGhpcyBtYW5hZ2VyIHRyYWNrcyBvZmZzZXRzIG9mIGRyYWdnYWJsZXMgYW5kIGRyb3BwYWJsZXMNCiovDQokLnVpLmRkbWFuYWdlciA9IHsNCgljdXJyZW50OiBudWxsLA0KCWRyb3BwYWJsZXM6IHsgImRlZmF1bHQiOiBbXSB9LA0KCXByZXBhcmVPZmZzZXRzOiBmdW5jdGlvbiggdCwgZXZlbnQgKSB7DQoNCgkJdmFyIGksIGosDQoJCQltID0gJC51aS5kZG1hbmFnZXIuZHJvcHBhYmxlc1sgdC5vcHRpb25zLnNjb3BlIF0gfHwgW10sDQoJCQl0eXBlID0gZXZlbnQgPyBldmVudC50eXBlIDogbnVsbCwgLy8gd29ya2Fyb3VuZCBmb3IgIzIzMTcNCgkJCWxpc3QgPSAoIHQuY3VycmVudEl0ZW0gfHwgdC5lbGVtZW50ICkuZmluZCggIjpkYXRhKHVpLWRyb3BwYWJsZSkiICkuYWRkQmFjaygpOw0KDQoJCWRyb3BwYWJsZXNMb29wOiBmb3IgKCBpID0gMDsgaSA8IG0ubGVuZ3RoOyBpKysgKSB7DQoNCgkJCS8vIE5vIGRpc2FibGVkIGFuZCBub24tYWNjZXB0ZWQNCgkJCWlmICggbVsgaSBdLm9wdGlvbnMuZGlzYWJsZWQgfHwgKCB0ICYmICFtWyBpIF0uYWNjZXB0LmNhbGwoIG1bIGkgXS5lbGVtZW50WyAwIF0sICggdC5jdXJyZW50SXRlbSB8fCB0LmVsZW1lbnQgKSApICkgKSB7DQoJCQkJY29udGludWU7DQoJCQl9DQoNCgkJCS8vIEZpbHRlciBvdXQgZWxlbWVudHMgaW4gdGhlIGN1cnJlbnQgZHJhZ2dlZCBpdGVtDQoJCQlmb3IgKCBqID0gMDsgaiA8IGxpc3QubGVuZ3RoOyBqKysgKSB7DQoJCQkJaWYgKCBsaXN0WyBqIF0gPT09IG1bIGkgXS5lbGVtZW50WyAwIF0gKSB7DQoJCQkJCW1bIGkgXS5wcm9wb3J0aW9ucygpLmhlaWdodCA9IDA7DQoJCQkJCWNvbnRpbnVlIGRyb3BwYWJsZXNMb29wOw0KCQkJCX0NCgkJCX0NCg0KCQkJbVsgaSBdLnZpc2libGUgPSBtWyBpIF0uZWxlbWVudC5jc3MoICJkaXNwbGF5IiApICE9PSAibm9uZSI7DQoJCQlpZiAoICFtWyBpIF0udmlzaWJsZSApIHsNCgkJCQljb250aW51ZTsNCgkJCX0NCg0KCQkJLy8gQWN0aXZhdGUgdGhlIGRyb3BwYWJsZSBpZiB1c2VkIGRpcmVjdGx5IGZyb20gZHJhZ2dhYmxlcw0KCQkJaWYgKCB0eXBlID09PSAibW91c2Vkb3duIiApIHsNCgkJCQltWyBpIF0uX2FjdGl2YXRlLmNhbGwoIG1bIGkgXSwgZXZlbnQgKTsNCgkJCX0NCg0KCQkJbVsgaSBdLm9mZnNldCA9IG1bIGkgXS5lbGVtZW50Lm9mZnNldCgpOw0KCQkJbVsgaSBdLnByb3BvcnRpb25zKHsgd2lkdGg6IG1bIGkgXS5lbGVtZW50WyAwIF0ub2Zmc2V0V2lkdGgsIGhlaWdodDogbVsgaSBdLmVsZW1lbnRbIDAgXS5vZmZzZXRIZWlnaHQgfSk7DQoNCgkJfQ0KDQoJfSwNCglkcm9wOiBmdW5jdGlvbiggZHJhZ2dhYmxlLCBldmVudCApIHsNCg0KCQl2YXIgZHJvcHBlZCA9IGZhbHNlOw0KCQkvLyBDcmVhdGUgYSBjb3B5IG9mIHRoZSBkcm9wcGFibGVzIGluIGNhc2UgdGhlIGxpc3QgY2hhbmdlcyBkdXJpbmcgdGhlIGRyb3AgKCM5MTE2KQ0KCQkkLmVhY2goICggJC51aS5kZG1hbmFnZXIuZHJvcHBhYmxlc1sgZHJhZ2dhYmxlLm9wdGlvbnMuc2NvcGUgXSB8fCBbXSApLnNsaWNlKCksIGZ1bmN0aW9uKCkgew0KDQoJCQlpZiAoICF0aGlzLm9wdGlvbnMgKSB7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KCQkJaWYgKCAhdGhpcy5vcHRpb25zLmRpc2FibGVkICYmIHRoaXMudmlzaWJsZSAmJiAkLnVpLmludGVyc2VjdCggZHJhZ2dhYmxlLCB0aGlzLCB0aGlzLm9wdGlvbnMudG9sZXJhbmNlLCBldmVudCApICkgew0KCQkJCWRyb3BwZWQgPSB0aGlzLl9kcm9wLmNhbGwoIHRoaXMsIGV2ZW50ICkgfHwgZHJvcHBlZDsNCgkJCX0NCg0KCQkJaWYgKCAhdGhpcy5vcHRpb25zLmRpc2FibGVkICYmIHRoaXMudmlzaWJsZSAmJiB0aGlzLmFjY2VwdC5jYWxsKCB0aGlzLmVsZW1lbnRbIDAgXSwgKCBkcmFnZ2FibGUuY3VycmVudEl0ZW0gfHwgZHJhZ2dhYmxlLmVsZW1lbnQgKSApICkgew0KCQkJCXRoaXMuaXNvdXQgPSB0cnVlOw0KCQkJCXRoaXMuaXNvdmVyID0gZmFsc2U7DQoJCQkJdGhpcy5fZGVhY3RpdmF0ZS5jYWxsKCB0aGlzLCBldmVudCApOw0KCQkJfQ0KDQoJCX0pOw0KCQlyZXR1cm4gZHJvcHBlZDsNCg0KCX0sDQoJZHJhZ1N0YXJ0OiBmdW5jdGlvbiggZHJhZ2dhYmxlLCBldmVudCApIHsNCgkJLy8gTGlzdGVuIGZvciBzY3JvbGxpbmcgc28gdGhhdCBpZiB0aGUgZHJhZ2dpbmcgY2F1c2VzIHNjcm9sbGluZyB0aGUgcG9zaXRpb24gb2YgdGhlIGRyb3BwYWJsZXMgY2FuIGJlIHJlY2FsY3VsYXRlZCAoc2VlICM1MDAzKQ0KCQlkcmFnZ2FibGUuZWxlbWVudC5wYXJlbnRzVW50aWwoICJib2R5IiApLmJpbmQoICJzY3JvbGwuZHJvcHBhYmxlIiwgZnVuY3Rpb24oKSB7DQoJCQlpZiAoICFkcmFnZ2FibGUub3B0aW9ucy5yZWZyZXNoUG9zaXRpb25zICkgew0KCQkJCSQudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKCBkcmFnZ2FibGUsIGV2ZW50ICk7DQoJCQl9DQoJCX0pOw0KCX0sDQoJZHJhZzogZnVuY3Rpb24oIGRyYWdnYWJsZSwgZXZlbnQgKSB7DQoNCgkJLy8gSWYgeW91IGhhdmUgYSBoaWdobHkgZHluYW1pYyBwYWdlLCB5b3UgbWlnaHQgdHJ5IHRoaXMgb3B0aW9uLiBJdCByZW5kZXJzIHBvc2l0aW9ucyBldmVyeSB0aW1lIHlvdSBtb3ZlIHRoZSBtb3VzZS4NCgkJaWYgKCBkcmFnZ2FibGUub3B0aW9ucy5yZWZyZXNoUG9zaXRpb25zICkgew0KCQkJJC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHMoIGRyYWdnYWJsZSwgZXZlbnQgKTsNCgkJfQ0KDQoJCS8vIFJ1biB0aHJvdWdoIGFsbCBkcm9wcGFibGVzIGFuZCBjaGVjayB0aGVpciBwb3NpdGlvbnMgYmFzZWQgb24gc3BlY2lmaWMgdG9sZXJhbmNlIG9wdGlvbnMNCgkJJC5lYWNoKCAkLnVpLmRkbWFuYWdlci5kcm9wcGFibGVzWyBkcmFnZ2FibGUub3B0aW9ucy5zY29wZSBdIHx8IFtdLCBmdW5jdGlvbigpIHsNCg0KCQkJaWYgKCB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgfHwgdGhpcy5ncmVlZHlDaGlsZCB8fCAhdGhpcy52aXNpYmxlICkgew0KCQkJCXJldHVybjsNCgkJCX0NCg0KCQkJdmFyIHBhcmVudEluc3RhbmNlLCBzY29wZSwgcGFyZW50LA0KCQkJCWludGVyc2VjdHMgPSAkLnVpLmludGVyc2VjdCggZHJhZ2dhYmxlLCB0aGlzLCB0aGlzLm9wdGlvbnMudG9sZXJhbmNlLCBldmVudCApLA0KCQkJCWMgPSAhaW50ZXJzZWN0cyAmJiB0aGlzLmlzb3ZlciA/ICJpc291dCIgOiAoIGludGVyc2VjdHMgJiYgIXRoaXMuaXNvdmVyID8gImlzb3ZlciIgOiBudWxsICk7DQoJCQlpZiAoICFjICkgew0KCQkJCXJldHVybjsNCgkJCX0NCg0KCQkJaWYgKCB0aGlzLm9wdGlvbnMuZ3JlZWR5ICkgew0KCQkJCS8vIGZpbmQgZHJvcHBhYmxlIHBhcmVudHMgd2l0aCBzYW1lIHNjb3BlDQoJCQkJc2NvcGUgPSB0aGlzLm9wdGlvbnMuc2NvcGU7DQoJCQkJcGFyZW50ID0gdGhpcy5lbGVtZW50LnBhcmVudHMoICI6ZGF0YSh1aS1kcm9wcGFibGUpIiApLmZpbHRlcihmdW5jdGlvbigpIHsNCgkJCQkJcmV0dXJuICQoIHRoaXMgKS5kcm9wcGFibGUoICJpbnN0YW5jZSIgKS5vcHRpb25zLnNjb3BlID09PSBzY29wZTsNCgkJCQl9KTsNCg0KCQkJCWlmICggcGFyZW50Lmxlbmd0aCApIHsNCgkJCQkJcGFyZW50SW5zdGFuY2UgPSAkKCBwYXJlbnRbIDAgXSApLmRyb3BwYWJsZSggImluc3RhbmNlIiApOw0KCQkJCQlwYXJlbnRJbnN0YW5jZS5ncmVlZHlDaGlsZCA9ICggYyA9PT0gImlzb3ZlciIgKTsNCgkJCQl9DQoJCQl9DQoNCgkJCS8vIHdlIGp1c3QgbW92ZWQgaW50byBhIGdyZWVkeSBjaGlsZA0KCQkJaWYgKCBwYXJlbnRJbnN0YW5jZSAmJiBjID09PSAiaXNvdmVyIiApIHsNCgkJCQlwYXJlbnRJbnN0YW5jZS5pc292ZXIgPSBmYWxzZTsNCgkJCQlwYXJlbnRJbnN0YW5jZS5pc291dCA9IHRydWU7DQoJCQkJcGFyZW50SW5zdGFuY2UuX291dC5jYWxsKCBwYXJlbnRJbnN0YW5jZSwgZXZlbnQgKTsNCgkJCX0NCg0KCQkJdGhpc1sgYyBdID0gdHJ1ZTsNCgkJCXRoaXNbYyA9PT0gImlzb3V0IiA/ICJpc292ZXIiIDogImlzb3V0Il0gPSBmYWxzZTsNCgkJCXRoaXNbYyA9PT0gImlzb3ZlciIgPyAiX292ZXIiIDogIl9vdXQiXS5jYWxsKCB0aGlzLCBldmVudCApOw0KDQoJCQkvLyB3ZSBqdXN0IG1vdmVkIG91dCBvZiBhIGdyZWVkeSBjaGlsZA0KCQkJaWYgKCBwYXJlbnRJbnN0YW5jZSAmJiBjID09PSAiaXNvdXQiICkgew0KCQkJCXBhcmVudEluc3RhbmNlLmlzb3V0ID0gZmFsc2U7DQoJCQkJcGFyZW50SW5zdGFuY2UuaXNvdmVyID0gdHJ1ZTsNCgkJCQlwYXJlbnRJbnN0YW5jZS5fb3Zlci5jYWxsKCBwYXJlbnRJbnN0YW5jZSwgZXZlbnQgKTsNCgkJCX0NCgkJfSk7DQoNCgl9LA0KCWRyYWdTdG9wOiBmdW5jdGlvbiggZHJhZ2dhYmxlLCBldmVudCApIHsNCgkJZHJhZ2dhYmxlLmVsZW1lbnQucGFyZW50c1VudGlsKCAiYm9keSIgKS51bmJpbmQoICJzY3JvbGwuZHJvcHBhYmxlIiApOw0KCQkvLyBDYWxsIHByZXBhcmVPZmZzZXRzIG9uZSBmaW5hbCB0aW1lIHNpbmNlIElFIGRvZXMgbm90IGZpcmUgcmV0dXJuIHNjcm9sbCBldmVudHMgd2hlbiBvdmVyZmxvdyB3YXMgY2F1c2VkIGJ5IGRyYWcgKHNlZSAjNTAwMykNCgkJaWYgKCAhZHJhZ2dhYmxlLm9wdGlvbnMucmVmcmVzaFBvc2l0aW9ucyApIHsNCgkJCSQudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKCBkcmFnZ2FibGUsIGV2ZW50ICk7DQoJCX0NCgl9DQp9Ow0KDQp2YXIgZHJvcHBhYmxlID0gJC51aS5kcm9wcGFibGU7DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgRWZmZWN0cyAxLjExLjINCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgMjAxNCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKg0KICogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vY2F0ZWdvcnkvZWZmZWN0cy1jb3JlLw0KICovDQoNCg0KdmFyIGRhdGFTcGFjZSA9ICJ1aS1lZmZlY3RzLSIsDQoNCgkvLyBDcmVhdGUgYSBsb2NhbCBqUXVlcnkgYmVjYXVzZSBqUXVlcnkgQ29sb3IgcmVsaWVzIG9uIGl0IGFuZCB0aGUNCgkvLyBnbG9iYWwgbWF5IG5vdCBleGlzdCB3aXRoIEFNRCBhbmQgYSBjdXN0b20gYnVpbGQgKCMxMDE5OSkNCglqUXVlcnkgPSAkOw0KDQokLmVmZmVjdHMgPSB7DQoJZWZmZWN0OiB7fQ0KfTsNCg0KLyohDQogKiBqUXVlcnkgQ29sb3IgQW5pbWF0aW9ucyB2Mi4xLjINCiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5LWNvbG9yDQogKg0KICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICoNCiAqIERhdGU6IFdlZCBKYW4gMTYgMDg6NDc6MDkgMjAxMyAtMDYwMA0KICovDQooZnVuY3Rpb24oIGpRdWVyeSwgdW5kZWZpbmVkICkgew0KDQoJdmFyIHN0ZXBIb29rcyA9ICJiYWNrZ3JvdW5kQ29sb3IgYm9yZGVyQm90dG9tQ29sb3IgYm9yZGVyTGVmdENvbG9yIGJvcmRlclJpZ2h0Q29sb3IgYm9yZGVyVG9wQ29sb3IgY29sb3IgY29sdW1uUnVsZUNvbG9yIG91dGxpbmVDb2xvciB0ZXh0RGVjb3JhdGlvbkNvbG9yIHRleHRFbXBoYXNpc0NvbG9yIiwNCg0KCS8vIHBsdXNlcXVhbHMgdGVzdCBmb3IgKz0gMTAwIC09IDEwMA0KCXJwbHVzZXF1YWxzID0gL14oW1wtK10pPVxzKihcZCtcLj9cZCopLywNCgkvLyBhIHNldCBvZiBSRSdzIHRoYXQgY2FuIG1hdGNoIHN0cmluZ3MgYW5kIGdlbmVyYXRlIGNvbG9yIHR1cGxlcy4NCglzdHJpbmdQYXJzZXJzID0gWyB7DQoJCQlyZTogL3JnYmE/XChccyooXGR7MSwzfSlccyosXHMqKFxkezEsM30pXHMqLFxzKihcZHsxLDN9KVxzKig/OixccyooXGQ/KD86XC5cZCspPylccyopP1wpLywNCgkJCXBhcnNlOiBmdW5jdGlvbiggZXhlY1Jlc3VsdCApIHsNCgkJCQlyZXR1cm4gWw0KCQkJCQlleGVjUmVzdWx0WyAxIF0sDQoJCQkJCWV4ZWNSZXN1bHRbIDIgXSwNCgkJCQkJZXhlY1Jlc3VsdFsgMyBdLA0KCQkJCQlleGVjUmVzdWx0WyA0IF0NCgkJCQldOw0KCQkJfQ0KCQl9LCB7DQoJCQlyZTogL3JnYmE/XChccyooXGQrKD86XC5cZCspPylcJVxzKixccyooXGQrKD86XC5cZCspPylcJVxzKixccyooXGQrKD86XC5cZCspPylcJVxzKig/OixccyooXGQ/KD86XC5cZCspPylccyopP1wpLywNCgkJCXBhcnNlOiBmdW5jdGlvbiggZXhlY1Jlc3VsdCApIHsNCgkJCQlyZXR1cm4gWw0KCQkJCQlleGVjUmVzdWx0WyAxIF0gKiAyLjU1LA0KCQkJCQlleGVjUmVzdWx0WyAyIF0gKiAyLjU1LA0KCQkJCQlleGVjUmVzdWx0WyAzIF0gKiAyLjU1LA0KCQkJCQlleGVjUmVzdWx0WyA0IF0NCgkJCQldOw0KCQkJfQ0KCQl9LCB7DQoJCQkvLyB0aGlzIHJlZ2V4IGlnbm9yZXMgQS1GIGJlY2F1c2UgaXQncyBjb21wYXJlZCBhZ2FpbnN0IGFuIGFscmVhZHkgbG93ZXJjYXNlZCBzdHJpbmcNCgkJCXJlOiAvIyhbYS1mMC05XXsyfSkoW2EtZjAtOV17Mn0pKFthLWYwLTldezJ9KS8sDQoJCQlwYXJzZTogZnVuY3Rpb24oIGV4ZWNSZXN1bHQgKSB7DQoJCQkJcmV0dXJuIFsNCgkJCQkJcGFyc2VJbnQoIGV4ZWNSZXN1bHRbIDEgXSwgMTYgKSwNCgkJCQkJcGFyc2VJbnQoIGV4ZWNSZXN1bHRbIDIgXSwgMTYgKSwNCgkJCQkJcGFyc2VJbnQoIGV4ZWNSZXN1bHRbIDMgXSwgMTYgKQ0KCQkJCV07DQoJCQl9DQoJCX0sIHsNCgkJCS8vIHRoaXMgcmVnZXggaWdub3JlcyBBLUYgYmVjYXVzZSBpdCdzIGNvbXBhcmVkIGFnYWluc3QgYW4gYWxyZWFkeSBsb3dlcmNhc2VkIHN0cmluZw0KCQkJcmU6IC8jKFthLWYwLTldKShbYS1mMC05XSkoW2EtZjAtOV0pLywNCgkJCXBhcnNlOiBmdW5jdGlvbiggZXhlY1Jlc3VsdCApIHsNCgkJCQlyZXR1cm4gWw0KCQkJCQlwYXJzZUludCggZXhlY1Jlc3VsdFsgMSBdICsgZXhlY1Jlc3VsdFsgMSBdLCAxNiApLA0KCQkJCQlwYXJzZUludCggZXhlY1Jlc3VsdFsgMiBdICsgZXhlY1Jlc3VsdFsgMiBdLCAxNiApLA0KCQkJCQlwYXJzZUludCggZXhlY1Jlc3VsdFsgMyBdICsgZXhlY1Jlc3VsdFsgMyBdLCAxNiApDQoJCQkJXTsNCgkJCX0NCgkJfSwgew0KCQkJcmU6IC9oc2xhP1woXHMqKFxkKyg/OlwuXGQrKT8pXHMqLFxzKihcZCsoPzpcLlxkKyk/KVwlXHMqLFxzKihcZCsoPzpcLlxkKyk/KVwlXHMqKD86LFxzKihcZD8oPzpcLlxkKyk/KVxzKik/XCkvLA0KCQkJc3BhY2U6ICJoc2xhIiwNCgkJCXBhcnNlOiBmdW5jdGlvbiggZXhlY1Jlc3VsdCApIHsNCgkJCQlyZXR1cm4gWw0KCQkJCQlleGVjUmVzdWx0WyAxIF0sDQoJCQkJCWV4ZWNSZXN1bHRbIDIgXSAvIDEwMCwNCgkJCQkJZXhlY1Jlc3VsdFsgMyBdIC8gMTAwLA0KCQkJCQlleGVjUmVzdWx0WyA0IF0NCgkJCQldOw0KCQkJfQ0KCQl9IF0sDQoNCgkvLyBqUXVlcnkuQ29sb3IoICkNCgljb2xvciA9IGpRdWVyeS5Db2xvciA9IGZ1bmN0aW9uKCBjb2xvciwgZ3JlZW4sIGJsdWUsIGFscGhhICkgew0KCQlyZXR1cm4gbmV3IGpRdWVyeS5Db2xvci5mbi5wYXJzZSggY29sb3IsIGdyZWVuLCBibHVlLCBhbHBoYSApOw0KCX0sDQoJc3BhY2VzID0gew0KCQlyZ2JhOiB7DQoJCQlwcm9wczogew0KCQkJCXJlZDogew0KCQkJCQlpZHg6IDAsDQoJCQkJCXR5cGU6ICJieXRlIg0KCQkJCX0sDQoJCQkJZ3JlZW46IHsNCgkJCQkJaWR4OiAxLA0KCQkJCQl0eXBlOiAiYnl0ZSINCgkJCQl9LA0KCQkJCWJsdWU6IHsNCgkJCQkJaWR4OiAyLA0KCQkJCQl0eXBlOiAiYnl0ZSINCgkJCQl9DQoJCQl9DQoJCX0sDQoNCgkJaHNsYTogew0KCQkJcHJvcHM6IHsNCgkJCQlodWU6IHsNCgkJCQkJaWR4OiAwLA0KCQkJCQl0eXBlOiAiZGVncmVlcyINCgkJCQl9LA0KCQkJCXNhdHVyYXRpb246IHsNCgkJCQkJaWR4OiAxLA0KCQkJCQl0eXBlOiAicGVyY2VudCINCgkJCQl9LA0KCQkJCWxpZ2h0bmVzczogew0KCQkJCQlpZHg6IDIsDQoJCQkJCXR5cGU6ICJwZXJjZW50Ig0KCQkJCX0NCgkJCX0NCgkJfQ0KCX0sDQoJcHJvcFR5cGVzID0gew0KCQkiYnl0ZSI6IHsNCgkJCWZsb29yOiB0cnVlLA0KCQkJbWF4OiAyNTUNCgkJfSwNCgkJInBlcmNlbnQiOiB7DQoJCQltYXg6IDENCgkJfSwNCgkJImRlZ3JlZXMiOiB7DQoJCQltb2Q6IDM2MCwNCgkJCWZsb29yOiB0cnVlDQoJCX0NCgl9LA0KCXN1cHBvcnQgPSBjb2xvci5zdXBwb3J0ID0ge30sDQoNCgkvLyBlbGVtZW50IGZvciBzdXBwb3J0IHRlc3RzDQoJc3VwcG9ydEVsZW0gPSBqUXVlcnkoICI8cD4iIClbIDAgXSwNCg0KCS8vIGNvbG9ycyA9IGpRdWVyeS5Db2xvci5uYW1lcw0KCWNvbG9ycywNCg0KCS8vIGxvY2FsIGFsaWFzZXMgb2YgZnVuY3Rpb25zIGNhbGxlZCBvZnRlbg0KCWVhY2ggPSBqUXVlcnkuZWFjaDsNCg0KLy8gZGV0ZXJtaW5lIHJnYmEgc3VwcG9ydCBpbW1lZGlhdGVseQ0Kc3VwcG9ydEVsZW0uc3R5bGUuY3NzVGV4dCA9ICJiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMSwxLDEsLjUpIjsNCnN1cHBvcnQucmdiYSA9IHN1cHBvcnRFbGVtLnN0eWxlLmJhY2tncm91bmRDb2xvci5pbmRleE9mKCAicmdiYSIgKSA+IC0xOw0KDQovLyBkZWZpbmUgY2FjaGUgbmFtZSBhbmQgYWxwaGEgcHJvcGVydGllcw0KLy8gZm9yIHJnYmEgYW5kIGhzbGEgc3BhY2VzDQplYWNoKCBzcGFjZXMsIGZ1bmN0aW9uKCBzcGFjZU5hbWUsIHNwYWNlICkgew0KCXNwYWNlLmNhY2hlID0gIl8iICsgc3BhY2VOYW1lOw0KCXNwYWNlLnByb3BzLmFscGhhID0gew0KCQlpZHg6IDMsDQoJCXR5cGU6ICJwZXJjZW50IiwNCgkJZGVmOiAxDQoJfTsNCn0pOw0KDQpmdW5jdGlvbiBjbGFtcCggdmFsdWUsIHByb3AsIGFsbG93RW1wdHkgKSB7DQoJdmFyIHR5cGUgPSBwcm9wVHlwZXNbIHByb3AudHlwZSBdIHx8IHt9Ow0KDQoJaWYgKCB2YWx1ZSA9PSBudWxsICkgew0KCQlyZXR1cm4gKGFsbG93RW1wdHkgfHwgIXByb3AuZGVmKSA/IG51bGwgOiBwcm9wLmRlZjsNCgl9DQoNCgkvLyB+fiBpcyBhbiBzaG9ydCB3YXkgb2YgZG9pbmcgZmxvb3IgZm9yIHBvc2l0aXZlIG51bWJlcnMNCgl2YWx1ZSA9IHR5cGUuZmxvb3IgPyB+fnZhbHVlIDogcGFyc2VGbG9hdCggdmFsdWUgKTsNCg0KCS8vIElFIHdpbGwgcGFzcyBpbiBlbXB0eSBzdHJpbmdzIGFzIHZhbHVlIGZvciBhbHBoYSwNCgkvLyB3aGljaCB3aWxsIGhpdCB0aGlzIGNhc2UNCglpZiAoIGlzTmFOKCB2YWx1ZSApICkgew0KCQlyZXR1cm4gcHJvcC5kZWY7DQoJfQ0KDQoJaWYgKCB0eXBlLm1vZCApIHsNCgkJLy8gd2UgYWRkIG1vZCBiZWZvcmUgbW9kZGluZyB0byBtYWtlIHN1cmUgdGhhdCBuZWdhdGl2ZXMgdmFsdWVzDQoJCS8vIGdldCBjb252ZXJ0ZWQgcHJvcGVybHk6IC0xMCAtPiAzNTANCgkJcmV0dXJuICh2YWx1ZSArIHR5cGUubW9kKSAlIHR5cGUubW9kOw0KCX0NCg0KCS8vIGZvciBub3cgYWxsIHByb3BlcnR5IHR5cGVzIHdpdGhvdXQgbW9kIGhhdmUgbWluIGFuZCBtYXgNCglyZXR1cm4gMCA+IHZhbHVlID8gMCA6IHR5cGUubWF4IDwgdmFsdWUgPyB0eXBlLm1heCA6IHZhbHVlOw0KfQ0KDQpmdW5jdGlvbiBzdHJpbmdQYXJzZSggc3RyaW5nICkgew0KCXZhciBpbnN0ID0gY29sb3IoKSwNCgkJcmdiYSA9IGluc3QuX3JnYmEgPSBbXTsNCg0KCXN0cmluZyA9IHN0cmluZy50b0xvd2VyQ2FzZSgpOw0KDQoJZWFjaCggc3RyaW5nUGFyc2VycywgZnVuY3Rpb24oIGksIHBhcnNlciApIHsNCgkJdmFyIHBhcnNlZCwNCgkJCW1hdGNoID0gcGFyc2VyLnJlLmV4ZWMoIHN0cmluZyApLA0KCQkJdmFsdWVzID0gbWF0Y2ggJiYgcGFyc2VyLnBhcnNlKCBtYXRjaCApLA0KCQkJc3BhY2VOYW1lID0gcGFyc2VyLnNwYWNlIHx8ICJyZ2JhIjsNCg0KCQlpZiAoIHZhbHVlcyApIHsNCgkJCXBhcnNlZCA9IGluc3RbIHNwYWNlTmFtZSBdKCB2YWx1ZXMgKTsNCg0KCQkJLy8gaWYgdGhpcyB3YXMgYW4gcmdiYSBwYXJzZSB0aGUgYXNzaWdubWVudCBtaWdodCBoYXBwZW4gdHdpY2UNCgkJCS8vIG9oIHdlbGwuLi4uDQoJCQlpbnN0WyBzcGFjZXNbIHNwYWNlTmFtZSBdLmNhY2hlIF0gPSBwYXJzZWRbIHNwYWNlc1sgc3BhY2VOYW1lIF0uY2FjaGUgXTsNCgkJCXJnYmEgPSBpbnN0Ll9yZ2JhID0gcGFyc2VkLl9yZ2JhOw0KDQoJCQkvLyBleGl0IGVhY2goIHN0cmluZ1BhcnNlcnMgKSBoZXJlIGJlY2F1c2Ugd2UgbWF0Y2hlZA0KCQkJcmV0dXJuIGZhbHNlOw0KCQl9DQoJfSk7DQoNCgkvLyBGb3VuZCBhIHN0cmluZ1BhcnNlciB0aGF0IGhhbmRsZWQgaXQNCglpZiAoIHJnYmEubGVuZ3RoICkgew0KDQoJCS8vIGlmIHRoaXMgY2FtZSBmcm9tIGEgcGFyc2VkIHN0cmluZywgZm9yY2UgInRyYW5zcGFyZW50IiB3aGVuIGFscGhhIGlzIDANCgkJLy8gY2hyb21lLCAoYW5kIG1heWJlIG90aGVycykgcmV0dXJuICJ0cmFuc3BhcmVudCIgYXMgcmdiYSgwLDAsMCwwKQ0KCQlpZiAoIHJnYmEuam9pbigpID09PSAiMCwwLDAsMCIgKSB7DQoJCQlqUXVlcnkuZXh0ZW5kKCByZ2JhLCBjb2xvcnMudHJhbnNwYXJlbnQgKTsNCgkJfQ0KCQlyZXR1cm4gaW5zdDsNCgl9DQoNCgkvLyBuYW1lZCBjb2xvcnMNCglyZXR1cm4gY29sb3JzWyBzdHJpbmcgXTsNCn0NCg0KY29sb3IuZm4gPSBqUXVlcnkuZXh0ZW5kKCBjb2xvci5wcm90b3R5cGUsIHsNCglwYXJzZTogZnVuY3Rpb24oIHJlZCwgZ3JlZW4sIGJsdWUsIGFscGhhICkgew0KCQlpZiAoIHJlZCA9PT0gdW5kZWZpbmVkICkgew0KCQkJdGhpcy5fcmdiYSA9IFsgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCBdOw0KCQkJcmV0dXJuIHRoaXM7DQoJCX0NCgkJaWYgKCByZWQuanF1ZXJ5IHx8IHJlZC5ub2RlVHlwZSApIHsNCgkJCXJlZCA9IGpRdWVyeSggcmVkICkuY3NzKCBncmVlbiApOw0KCQkJZ3JlZW4gPSB1bmRlZmluZWQ7DQoJCX0NCg0KCQl2YXIgaW5zdCA9IHRoaXMsDQoJCQl0eXBlID0galF1ZXJ5LnR5cGUoIHJlZCApLA0KCQkJcmdiYSA9IHRoaXMuX3JnYmEgPSBbXTsNCg0KCQkvLyBtb3JlIHRoYW4gMSBhcmd1bWVudCBzcGVjaWZpZWQgLSBhc3N1bWUgKCByZWQsIGdyZWVuLCBibHVlLCBhbHBoYSApDQoJCWlmICggZ3JlZW4gIT09IHVuZGVmaW5lZCApIHsNCgkJCXJlZCA9IFsgcmVkLCBncmVlbiwgYmx1ZSwgYWxwaGEgXTsNCgkJCXR5cGUgPSAiYXJyYXkiOw0KCQl9DQoNCgkJaWYgKCB0eXBlID09PSAic3RyaW5nIiApIHsNCgkJCXJldHVybiB0aGlzLnBhcnNlKCBzdHJpbmdQYXJzZSggcmVkICkgfHwgY29sb3JzLl9kZWZhdWx0ICk7DQoJCX0NCg0KCQlpZiAoIHR5cGUgPT09ICJhcnJheSIgKSB7DQoJCQllYWNoKCBzcGFjZXMucmdiYS5wcm9wcywgZnVuY3Rpb24oIGtleSwgcHJvcCApIHsNCgkJCQlyZ2JhWyBwcm9wLmlkeCBdID0gY2xhbXAoIHJlZFsgcHJvcC5pZHggXSwgcHJvcCApOw0KCQkJfSk7DQoJCQlyZXR1cm4gdGhpczsNCgkJfQ0KDQoJCWlmICggdHlwZSA9PT0gIm9iamVjdCIgKSB7DQoJCQlpZiAoIHJlZCBpbnN0YW5jZW9mIGNvbG9yICkgew0KCQkJCWVhY2goIHNwYWNlcywgZnVuY3Rpb24oIHNwYWNlTmFtZSwgc3BhY2UgKSB7DQoJCQkJCWlmICggcmVkWyBzcGFjZS5jYWNoZSBdICkgew0KCQkJCQkJaW5zdFsgc3BhY2UuY2FjaGUgXSA9IHJlZFsgc3BhY2UuY2FjaGUgXS5zbGljZSgpOw0KCQkJCQl9DQoJCQkJfSk7DQoJCQl9IGVsc2Ugew0KCQkJCWVhY2goIHNwYWNlcywgZnVuY3Rpb24oIHNwYWNlTmFtZSwgc3BhY2UgKSB7DQoJCQkJCXZhciBjYWNoZSA9IHNwYWNlLmNhY2hlOw0KCQkJCQllYWNoKCBzcGFjZS5wcm9wcywgZnVuY3Rpb24oIGtleSwgcHJvcCApIHsNCg0KCQkJCQkJLy8gaWYgdGhlIGNhY2hlIGRvZXNuJ3QgZXhpc3QsIGFuZCB3ZSBrbm93IGhvdyB0byBjb252ZXJ0DQoJCQkJCQlpZiAoICFpbnN0WyBjYWNoZSBdICYmIHNwYWNlLnRvICkgew0KDQoJCQkJCQkJLy8gaWYgdGhlIHZhbHVlIHdhcyBudWxsLCB3ZSBkb24ndCBuZWVkIHRvIGNvcHkgaXQNCgkJCQkJCQkvLyBpZiB0aGUga2V5IHdhcyBhbHBoYSwgd2UgZG9uJ3QgbmVlZCB0byBjb3B5IGl0IGVpdGhlcg0KCQkJCQkJCWlmICgga2V5ID09PSAiYWxwaGEiIHx8IHJlZFsga2V5IF0gPT0gbnVsbCApIHsNCgkJCQkJCQkJcmV0dXJuOw0KCQkJCQkJCX0NCgkJCQkJCQlpbnN0WyBjYWNoZSBdID0gc3BhY2UudG8oIGluc3QuX3JnYmEgKTsNCgkJCQkJCX0NCg0KCQkJCQkJLy8gdGhpcyBpcyB0aGUgb25seSBjYXNlIHdoZXJlIHdlIGFsbG93IG51bGxzIGZvciBBTEwgcHJvcGVydGllcy4NCgkJCQkJCS8vIGNhbGwgY2xhbXAgd2l0aCBhbHdheXNBbGxvd0VtcHR5DQoJCQkJCQlpbnN0WyBjYWNoZSBdWyBwcm9wLmlkeCBdID0gY2xhbXAoIHJlZFsga2V5IF0sIHByb3AsIHRydWUgKTsNCgkJCQkJfSk7DQoNCgkJCQkJLy8gZXZlcnl0aGluZyBkZWZpbmVkIGJ1dCBhbHBoYT8NCgkJCQkJaWYgKCBpbnN0WyBjYWNoZSBdICYmIGpRdWVyeS5pbkFycmF5KCBudWxsLCBpbnN0WyBjYWNoZSBdLnNsaWNlKCAwLCAzICkgKSA8IDAgKSB7DQoJCQkJCQkvLyB1c2UgdGhlIGRlZmF1bHQgb2YgMQ0KCQkJCQkJaW5zdFsgY2FjaGUgXVsgMyBdID0gMTsNCgkJCQkJCWlmICggc3BhY2UuZnJvbSApIHsNCgkJCQkJCQlpbnN0Ll9yZ2JhID0gc3BhY2UuZnJvbSggaW5zdFsgY2FjaGUgXSApOw0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJfSk7DQoJCQl9DQoJCQlyZXR1cm4gdGhpczsNCgkJfQ0KCX0sDQoJaXM6IGZ1bmN0aW9uKCBjb21wYXJlICkgew0KCQl2YXIgaXMgPSBjb2xvciggY29tcGFyZSApLA0KCQkJc2FtZSA9IHRydWUsDQoJCQlpbnN0ID0gdGhpczsNCg0KCQllYWNoKCBzcGFjZXMsIGZ1bmN0aW9uKCBfLCBzcGFjZSApIHsNCgkJCXZhciBsb2NhbENhY2hlLA0KCQkJCWlzQ2FjaGUgPSBpc1sgc3BhY2UuY2FjaGUgXTsNCgkJCWlmIChpc0NhY2hlKSB7DQoJCQkJbG9jYWxDYWNoZSA9IGluc3RbIHNwYWNlLmNhY2hlIF0gfHwgc3BhY2UudG8gJiYgc3BhY2UudG8oIGluc3QuX3JnYmEgKSB8fCBbXTsNCgkJCQllYWNoKCBzcGFjZS5wcm9wcywgZnVuY3Rpb24oIF8sIHByb3AgKSB7DQoJCQkJCWlmICggaXNDYWNoZVsgcHJvcC5pZHggXSAhPSBudWxsICkgew0KCQkJCQkJc2FtZSA9ICggaXNDYWNoZVsgcHJvcC5pZHggXSA9PT0gbG9jYWxDYWNoZVsgcHJvcC5pZHggXSApOw0KCQkJCQkJcmV0dXJuIHNhbWU7DQoJCQkJCX0NCgkJCQl9KTsNCgkJCX0NCgkJCXJldHVybiBzYW1lOw0KCQl9KTsNCgkJcmV0dXJuIHNhbWU7DQoJfSwNCglfc3BhY2U6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdXNlZCA9IFtdLA0KCQkJaW5zdCA9IHRoaXM7DQoJCWVhY2goIHNwYWNlcywgZnVuY3Rpb24oIHNwYWNlTmFtZSwgc3BhY2UgKSB7DQoJCQlpZiAoIGluc3RbIHNwYWNlLmNhY2hlIF0gKSB7DQoJCQkJdXNlZC5wdXNoKCBzcGFjZU5hbWUgKTsNCgkJCX0NCgkJfSk7DQoJCXJldHVybiB1c2VkLnBvcCgpOw0KCX0sDQoJdHJhbnNpdGlvbjogZnVuY3Rpb24oIG90aGVyLCBkaXN0YW5jZSApIHsNCgkJdmFyIGVuZCA9IGNvbG9yKCBvdGhlciApLA0KCQkJc3BhY2VOYW1lID0gZW5kLl9zcGFjZSgpLA0KCQkJc3BhY2UgPSBzcGFjZXNbIHNwYWNlTmFtZSBdLA0KCQkJc3RhcnRDb2xvciA9IHRoaXMuYWxwaGEoKSA9PT0gMCA/IGNvbG9yKCAidHJhbnNwYXJlbnQiICkgOiB0aGlzLA0KCQkJc3RhcnQgPSBzdGFydENvbG9yWyBzcGFjZS5jYWNoZSBdIHx8IHNwYWNlLnRvKCBzdGFydENvbG9yLl9yZ2JhICksDQoJCQlyZXN1bHQgPSBzdGFydC5zbGljZSgpOw0KDQoJCWVuZCA9IGVuZFsgc3BhY2UuY2FjaGUgXTsNCgkJZWFjaCggc3BhY2UucHJvcHMsIGZ1bmN0aW9uKCBrZXksIHByb3AgKSB7DQoJCQl2YXIgaW5kZXggPSBwcm9wLmlkeCwNCgkJCQlzdGFydFZhbHVlID0gc3RhcnRbIGluZGV4IF0sDQoJCQkJZW5kVmFsdWUgPSBlbmRbIGluZGV4IF0sDQoJCQkJdHlwZSA9IHByb3BUeXBlc1sgcHJvcC50eXBlIF0gfHwge307DQoNCgkJCS8vIGlmIG51bGwsIGRvbid0IG92ZXJyaWRlIHN0YXJ0IHZhbHVlDQoJCQlpZiAoIGVuZFZhbHVlID09PSBudWxsICkgew0KCQkJCXJldHVybjsNCgkJCX0NCgkJCS8vIGlmIG51bGwgLSB1c2UgZW5kDQoJCQlpZiAoIHN0YXJ0VmFsdWUgPT09IG51bGwgKSB7DQoJCQkJcmVzdWx0WyBpbmRleCBdID0gZW5kVmFsdWU7DQoJCQl9IGVsc2Ugew0KCQkJCWlmICggdHlwZS5tb2QgKSB7DQoJCQkJCWlmICggZW5kVmFsdWUgLSBzdGFydFZhbHVlID4gdHlwZS5tb2QgLyAyICkgew0KCQkJCQkJc3RhcnRWYWx1ZSArPSB0eXBlLm1vZDsNCgkJCQkJfSBlbHNlIGlmICggc3RhcnRWYWx1ZSAtIGVuZFZhbHVlID4gdHlwZS5tb2QgLyAyICkgew0KCQkJCQkJc3RhcnRWYWx1ZSAtPSB0eXBlLm1vZDsNCgkJCQkJfQ0KCQkJCX0NCgkJCQlyZXN1bHRbIGluZGV4IF0gPSBjbGFtcCggKCBlbmRWYWx1ZSAtIHN0YXJ0VmFsdWUgKSAqIGRpc3RhbmNlICsgc3RhcnRWYWx1ZSwgcHJvcCApOw0KCQkJfQ0KCQl9KTsNCgkJcmV0dXJuIHRoaXNbIHNwYWNlTmFtZSBdKCByZXN1bHQgKTsNCgl9LA0KCWJsZW5kOiBmdW5jdGlvbiggb3BhcXVlICkgew0KCQkvLyBpZiB3ZSBhcmUgYWxyZWFkeSBvcGFxdWUgLSByZXR1cm4gb3Vyc2VsZg0KCQlpZiAoIHRoaXMuX3JnYmFbIDMgXSA9PT0gMSApIHsNCgkJCXJldHVybiB0aGlzOw0KCQl9DQoNCgkJdmFyIHJnYiA9IHRoaXMuX3JnYmEuc2xpY2UoKSwNCgkJCWEgPSByZ2IucG9wKCksDQoJCQlibGVuZCA9IGNvbG9yKCBvcGFxdWUgKS5fcmdiYTsNCg0KCQlyZXR1cm4gY29sb3IoIGpRdWVyeS5tYXAoIHJnYiwgZnVuY3Rpb24oIHYsIGkgKSB7DQoJCQlyZXR1cm4gKCAxIC0gYSApICogYmxlbmRbIGkgXSArIGEgKiB2Ow0KCQl9KSk7DQoJfSwNCgl0b1JnYmFTdHJpbmc6IGZ1bmN0aW9uKCkgew0KCQl2YXIgcHJlZml4ID0gInJnYmEoIiwNCgkJCXJnYmEgPSBqUXVlcnkubWFwKCB0aGlzLl9yZ2JhLCBmdW5jdGlvbiggdiwgaSApIHsNCgkJCQlyZXR1cm4gdiA9PSBudWxsID8gKCBpID4gMiA/IDEgOiAwICkgOiB2Ow0KCQkJfSk7DQoNCgkJaWYgKCByZ2JhWyAzIF0gPT09IDEgKSB7DQoJCQlyZ2JhLnBvcCgpOw0KCQkJcHJlZml4ID0gInJnYigiOw0KCQl9DQoNCgkJcmV0dXJuIHByZWZpeCArIHJnYmEuam9pbigpICsgIikiOw0KCX0sDQoJdG9Ic2xhU3RyaW5nOiBmdW5jdGlvbigpIHsNCgkJdmFyIHByZWZpeCA9ICJoc2xhKCIsDQoJCQloc2xhID0galF1ZXJ5Lm1hcCggdGhpcy5oc2xhKCksIGZ1bmN0aW9uKCB2LCBpICkgew0KCQkJCWlmICggdiA9PSBudWxsICkgew0KCQkJCQl2ID0gaSA+IDIgPyAxIDogMDsNCgkJCQl9DQoNCgkJCQkvLyBjYXRjaCAxIGFuZCAyDQoJCQkJaWYgKCBpICYmIGkgPCAzICkgew0KCQkJCQl2ID0gTWF0aC5yb3VuZCggdiAqIDEwMCApICsgIiUiOw0KCQkJCX0NCgkJCQlyZXR1cm4gdjsNCgkJCX0pOw0KDQoJCWlmICggaHNsYVsgMyBdID09PSAxICkgew0KCQkJaHNsYS5wb3AoKTsNCgkJCXByZWZpeCA9ICJoc2woIjsNCgkJfQ0KCQlyZXR1cm4gcHJlZml4ICsgaHNsYS5qb2luKCkgKyAiKSI7DQoJfSwNCgl0b0hleFN0cmluZzogZnVuY3Rpb24oIGluY2x1ZGVBbHBoYSApIHsNCgkJdmFyIHJnYmEgPSB0aGlzLl9yZ2JhLnNsaWNlKCksDQoJCQlhbHBoYSA9IHJnYmEucG9wKCk7DQoNCgkJaWYgKCBpbmNsdWRlQWxwaGEgKSB7DQoJCQlyZ2JhLnB1c2goIH5+KCBhbHBoYSAqIDI1NSApICk7DQoJCX0NCg0KCQlyZXR1cm4gIiMiICsgalF1ZXJ5Lm1hcCggcmdiYSwgZnVuY3Rpb24oIHYgKSB7DQoNCgkJCS8vIGRlZmF1bHQgdG8gMCB3aGVuIG51bGxzIGV4aXN0DQoJCQl2ID0gKCB2IHx8IDAgKS50b1N0cmluZyggMTYgKTsNCgkJCXJldHVybiB2Lmxlbmd0aCA9PT0gMSA/ICIwIiArIHYgOiB2Ow0KCQl9KS5qb2luKCIiKTsNCgl9LA0KCXRvU3RyaW5nOiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuIHRoaXMuX3JnYmFbIDMgXSA9PT0gMCA/ICJ0cmFuc3BhcmVudCIgOiB0aGlzLnRvUmdiYVN0cmluZygpOw0KCX0NCn0pOw0KY29sb3IuZm4ucGFyc2UucHJvdG90eXBlID0gY29sb3IuZm47DQoNCi8vIGhzbGEgY29udmVyc2lvbnMgYWRhcHRlZCBmcm9tOg0KLy8gaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9tYWFzaGFhY2svc291cmNlL2Jyb3dzZS9wYWNrYWdlcy9ncmFwaGljcy90cnVuay9zcmMvZ3JhcGhpY3MvY29sb3JzL0hVRTJSR0IuYXM/cj01MDIxDQoNCmZ1bmN0aW9uIGh1ZTJyZ2IoIHAsIHEsIGggKSB7DQoJaCA9ICggaCArIDEgKSAlIDE7DQoJaWYgKCBoICogNiA8IDEgKSB7DQoJCXJldHVybiBwICsgKCBxIC0gcCApICogaCAqIDY7DQoJfQ0KCWlmICggaCAqIDIgPCAxKSB7DQoJCXJldHVybiBxOw0KCX0NCglpZiAoIGggKiAzIDwgMiApIHsNCgkJcmV0dXJuIHAgKyAoIHEgLSBwICkgKiAoICggMiAvIDMgKSAtIGggKSAqIDY7DQoJfQ0KCXJldHVybiBwOw0KfQ0KDQpzcGFjZXMuaHNsYS50byA9IGZ1bmN0aW9uKCByZ2JhICkgew0KCWlmICggcmdiYVsgMCBdID09IG51bGwgfHwgcmdiYVsgMSBdID09IG51bGwgfHwgcmdiYVsgMiBdID09IG51bGwgKSB7DQoJCXJldHVybiBbIG51bGwsIG51bGwsIG51bGwsIHJnYmFbIDMgXSBdOw0KCX0NCgl2YXIgciA9IHJnYmFbIDAgXSAvIDI1NSwNCgkJZyA9IHJnYmFbIDEgXSAvIDI1NSwNCgkJYiA9IHJnYmFbIDIgXSAvIDI1NSwNCgkJYSA9IHJnYmFbIDMgXSwNCgkJbWF4ID0gTWF0aC5tYXgoIHIsIGcsIGIgKSwNCgkJbWluID0gTWF0aC5taW4oIHIsIGcsIGIgKSwNCgkJZGlmZiA9IG1heCAtIG1pbiwNCgkJYWRkID0gbWF4ICsgbWluLA0KCQlsID0gYWRkICogMC41LA0KCQloLCBzOw0KDQoJaWYgKCBtaW4gPT09IG1heCApIHsNCgkJaCA9IDA7DQoJfSBlbHNlIGlmICggciA9PT0gbWF4ICkgew0KCQloID0gKCA2MCAqICggZyAtIGIgKSAvIGRpZmYgKSArIDM2MDsNCgl9IGVsc2UgaWYgKCBnID09PSBtYXggKSB7DQoJCWggPSAoIDYwICogKCBiIC0gciApIC8gZGlmZiApICsgMTIwOw0KCX0gZWxzZSB7DQoJCWggPSAoIDYwICogKCByIC0gZyApIC8gZGlmZiApICsgMjQwOw0KCX0NCg0KCS8vIGNocm9tYSAoZGlmZikgPT0gMCBtZWFucyBncmV5c2NhbGUgd2hpY2gsIGJ5IGRlZmluaXRpb24sIHNhdHVyYXRpb24gPSAwJQ0KCS8vIG90aGVyd2lzZSwgc2F0dXJhdGlvbiBpcyBiYXNlZCBvbiB0aGUgcmF0aW8gb2YgY2hyb21hIChkaWZmKSB0byBsaWdodG5lc3MgKGFkZCkNCglpZiAoIGRpZmYgPT09IDAgKSB7DQoJCXMgPSAwOw0KCX0gZWxzZSBpZiAoIGwgPD0gMC41ICkgew0KCQlzID0gZGlmZiAvIGFkZDsNCgl9IGVsc2Ugew0KCQlzID0gZGlmZiAvICggMiAtIGFkZCApOw0KCX0NCglyZXR1cm4gWyBNYXRoLnJvdW5kKGgpICUgMzYwLCBzLCBsLCBhID09IG51bGwgPyAxIDogYSBdOw0KfTsNCg0Kc3BhY2VzLmhzbGEuZnJvbSA9IGZ1bmN0aW9uKCBoc2xhICkgew0KCWlmICggaHNsYVsgMCBdID09IG51bGwgfHwgaHNsYVsgMSBdID09IG51bGwgfHwgaHNsYVsgMiBdID09IG51bGwgKSB7DQoJCXJldHVybiBbIG51bGwsIG51bGwsIG51bGwsIGhzbGFbIDMgXSBdOw0KCX0NCgl2YXIgaCA9IGhzbGFbIDAgXSAvIDM2MCwNCgkJcyA9IGhzbGFbIDEgXSwNCgkJbCA9IGhzbGFbIDIgXSwNCgkJYSA9IGhzbGFbIDMgXSwNCgkJcSA9IGwgPD0gMC41ID8gbCAqICggMSArIHMgKSA6IGwgKyBzIC0gbCAqIHMsDQoJCXAgPSAyICogbCAtIHE7DQoNCglyZXR1cm4gWw0KCQlNYXRoLnJvdW5kKCBodWUycmdiKCBwLCBxLCBoICsgKCAxIC8gMyApICkgKiAyNTUgKSwNCgkJTWF0aC5yb3VuZCggaHVlMnJnYiggcCwgcSwgaCApICogMjU1ICksDQoJCU1hdGgucm91bmQoIGh1ZTJyZ2IoIHAsIHEsIGggLSAoIDEgLyAzICkgKSAqIDI1NSApLA0KCQlhDQoJXTsNCn07DQoNCmVhY2goIHNwYWNlcywgZnVuY3Rpb24oIHNwYWNlTmFtZSwgc3BhY2UgKSB7DQoJdmFyIHByb3BzID0gc3BhY2UucHJvcHMsDQoJCWNhY2hlID0gc3BhY2UuY2FjaGUsDQoJCXRvID0gc3BhY2UudG8sDQoJCWZyb20gPSBzcGFjZS5mcm9tOw0KDQoJLy8gbWFrZXMgcmdiYSgpIGFuZCBoc2xhKCkNCgljb2xvci5mblsgc3BhY2VOYW1lIF0gPSBmdW5jdGlvbiggdmFsdWUgKSB7DQoNCgkJLy8gZ2VuZXJhdGUgYSBjYWNoZSBmb3IgdGhpcyBzcGFjZSBpZiBpdCBkb2Vzbid0IGV4aXN0DQoJCWlmICggdG8gJiYgIXRoaXNbIGNhY2hlIF0gKSB7DQoJCQl0aGlzWyBjYWNoZSBdID0gdG8oIHRoaXMuX3JnYmEgKTsNCgkJfQ0KCQlpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgKSB7DQoJCQlyZXR1cm4gdGhpc1sgY2FjaGUgXS5zbGljZSgpOw0KCQl9DQoNCgkJdmFyIHJldCwNCgkJCXR5cGUgPSBqUXVlcnkudHlwZSggdmFsdWUgKSwNCgkJCWFyciA9ICggdHlwZSA9PT0gImFycmF5IiB8fCB0eXBlID09PSAib2JqZWN0IiApID8gdmFsdWUgOiBhcmd1bWVudHMsDQoJCQlsb2NhbCA9IHRoaXNbIGNhY2hlIF0uc2xpY2UoKTsNCg0KCQllYWNoKCBwcm9wcywgZnVuY3Rpb24oIGtleSwgcHJvcCApIHsNCgkJCXZhciB2YWwgPSBhcnJbIHR5cGUgPT09ICJvYmplY3QiID8ga2V5IDogcHJvcC5pZHggXTsNCgkJCWlmICggdmFsID09IG51bGwgKSB7DQoJCQkJdmFsID0gbG9jYWxbIHByb3AuaWR4IF07DQoJCQl9DQoJCQlsb2NhbFsgcHJvcC5pZHggXSA9IGNsYW1wKCB2YWwsIHByb3AgKTsNCgkJfSk7DQoNCgkJaWYgKCBmcm9tICkgew0KCQkJcmV0ID0gY29sb3IoIGZyb20oIGxvY2FsICkgKTsNCgkJCXJldFsgY2FjaGUgXSA9IGxvY2FsOw0KCQkJcmV0dXJuIHJldDsNCgkJfSBlbHNlIHsNCgkJCXJldHVybiBjb2xvciggbG9jYWwgKTsNCgkJfQ0KCX07DQoNCgkvLyBtYWtlcyByZWQoKSBncmVlbigpIGJsdWUoKSBhbHBoYSgpIGh1ZSgpIHNhdHVyYXRpb24oKSBsaWdodG5lc3MoKQ0KCWVhY2goIHByb3BzLCBmdW5jdGlvbigga2V5LCBwcm9wICkgew0KCQkvLyBhbHBoYSBpcyBpbmNsdWRlZCBpbiBtb3JlIHRoYW4gb25lIHNwYWNlDQoJCWlmICggY29sb3IuZm5bIGtleSBdICkgew0KCQkJcmV0dXJuOw0KCQl9DQoJCWNvbG9yLmZuWyBrZXkgXSA9IGZ1bmN0aW9uKCB2YWx1ZSApIHsNCgkJCXZhciB2dHlwZSA9IGpRdWVyeS50eXBlKCB2YWx1ZSApLA0KCQkJCWZuID0gKCBrZXkgPT09ICJhbHBoYSIgPyAoIHRoaXMuX2hzbGEgPyAiaHNsYSIgOiAicmdiYSIgKSA6IHNwYWNlTmFtZSApLA0KCQkJCWxvY2FsID0gdGhpc1sgZm4gXSgpLA0KCQkJCWN1ciA9IGxvY2FsWyBwcm9wLmlkeCBdLA0KCQkJCW1hdGNoOw0KDQoJCQlpZiAoIHZ0eXBlID09PSAidW5kZWZpbmVkIiApIHsNCgkJCQlyZXR1cm4gY3VyOw0KCQkJfQ0KDQoJCQlpZiAoIHZ0eXBlID09PSAiZnVuY3Rpb24iICkgew0KCQkJCXZhbHVlID0gdmFsdWUuY2FsbCggdGhpcywgY3VyICk7DQoJCQkJdnR5cGUgPSBqUXVlcnkudHlwZSggdmFsdWUgKTsNCgkJCX0NCgkJCWlmICggdmFsdWUgPT0gbnVsbCAmJiBwcm9wLmVtcHR5ICkgew0KCQkJCXJldHVybiB0aGlzOw0KCQkJfQ0KCQkJaWYgKCB2dHlwZSA9PT0gInN0cmluZyIgKSB7DQoJCQkJbWF0Y2ggPSBycGx1c2VxdWFscy5leGVjKCB2YWx1ZSApOw0KCQkJCWlmICggbWF0Y2ggKSB7DQoJCQkJCXZhbHVlID0gY3VyICsgcGFyc2VGbG9hdCggbWF0Y2hbIDIgXSApICogKCBtYXRjaFsgMSBdID09PSAiKyIgPyAxIDogLTEgKTsNCgkJCQl9DQoJCQl9DQoJCQlsb2NhbFsgcHJvcC5pZHggXSA9IHZhbHVlOw0KCQkJcmV0dXJuIHRoaXNbIGZuIF0oIGxvY2FsICk7DQoJCX07DQoJfSk7DQp9KTsNCg0KLy8gYWRkIGNzc0hvb2sgYW5kIC5meC5zdGVwIGZ1bmN0aW9uIGZvciBlYWNoIG5hbWVkIGhvb2suDQovLyBhY2NlcHQgYSBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nIG9mIHByb3BlcnRpZXMNCmNvbG9yLmhvb2sgPSBmdW5jdGlvbiggaG9vayApIHsNCgl2YXIgaG9va3MgPSBob29rLnNwbGl0KCAiICIgKTsNCgllYWNoKCBob29rcywgZnVuY3Rpb24oIGksIGhvb2sgKSB7DQoJCWpRdWVyeS5jc3NIb29rc1sgaG9vayBdID0gew0KCQkJc2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7DQoJCQkJdmFyIHBhcnNlZCwgY3VyRWxlbSwNCgkJCQkJYmFja2dyb3VuZENvbG9yID0gIiI7DQoNCgkJCQlpZiAoIHZhbHVlICE9PSAidHJhbnNwYXJlbnQiICYmICggalF1ZXJ5LnR5cGUoIHZhbHVlICkgIT09ICJzdHJpbmciIHx8ICggcGFyc2VkID0gc3RyaW5nUGFyc2UoIHZhbHVlICkgKSApICkgew0KCQkJCQl2YWx1ZSA9IGNvbG9yKCBwYXJzZWQgfHwgdmFsdWUgKTsNCgkJCQkJaWYgKCAhc3VwcG9ydC5yZ2JhICYmIHZhbHVlLl9yZ2JhWyAzIF0gIT09IDEgKSB7DQoJCQkJCQljdXJFbGVtID0gaG9vayA9PT0gImJhY2tncm91bmRDb2xvciIgPyBlbGVtLnBhcmVudE5vZGUgOiBlbGVtOw0KCQkJCQkJd2hpbGUgKA0KCQkJCQkJCShiYWNrZ3JvdW5kQ29sb3IgPT09ICIiIHx8IGJhY2tncm91bmRDb2xvciA9PT0gInRyYW5zcGFyZW50IikgJiYNCgkJCQkJCQljdXJFbGVtICYmIGN1ckVsZW0uc3R5bGUNCgkJCQkJCSkgew0KCQkJCQkJCXRyeSB7DQoJCQkJCQkJCWJhY2tncm91bmRDb2xvciA9IGpRdWVyeS5jc3MoIGN1ckVsZW0sICJiYWNrZ3JvdW5kQ29sb3IiICk7DQoJCQkJCQkJCWN1ckVsZW0gPSBjdXJFbGVtLnBhcmVudE5vZGU7DQoJCQkJCQkJfSBjYXRjaCAoIGUgKSB7DQoJCQkJCQkJfQ0KCQkJCQkJfQ0KDQoJCQkJCQl2YWx1ZSA9IHZhbHVlLmJsZW5kKCBiYWNrZ3JvdW5kQ29sb3IgJiYgYmFja2dyb3VuZENvbG9yICE9PSAidHJhbnNwYXJlbnQiID8NCgkJCQkJCQliYWNrZ3JvdW5kQ29sb3IgOg0KCQkJCQkJCSJfZGVmYXVsdCIgKTsNCgkJCQkJfQ0KDQoJCQkJCXZhbHVlID0gdmFsdWUudG9SZ2JhU3RyaW5nKCk7DQoJCQkJfQ0KCQkJCXRyeSB7DQoJCQkJCWVsZW0uc3R5bGVbIGhvb2sgXSA9IHZhbHVlOw0KCQkJCX0gY2F0Y2ggKCBlICkgew0KCQkJCQkvLyB3cmFwcGVkIHRvIHByZXZlbnQgSUUgZnJvbSB0aHJvd2luZyBlcnJvcnMgb24gImludmFsaWQiIHZhbHVlcyBsaWtlICdhdXRvJyBvciAnaW5oZXJpdCcNCgkJCQl9DQoJCQl9DQoJCX07DQoJCWpRdWVyeS5meC5zdGVwWyBob29rIF0gPSBmdW5jdGlvbiggZnggKSB7DQoJCQlpZiAoICFmeC5jb2xvckluaXQgKSB7DQoJCQkJZnguc3RhcnQgPSBjb2xvciggZnguZWxlbSwgaG9vayApOw0KCQkJCWZ4LmVuZCA9IGNvbG9yKCBmeC5lbmQgKTsNCgkJCQlmeC5jb2xvckluaXQgPSB0cnVlOw0KCQkJfQ0KCQkJalF1ZXJ5LmNzc0hvb2tzWyBob29rIF0uc2V0KCBmeC5lbGVtLCBmeC5zdGFydC50cmFuc2l0aW9uKCBmeC5lbmQsIGZ4LnBvcyApICk7DQoJCX07DQoJfSk7DQoNCn07DQoNCmNvbG9yLmhvb2soIHN0ZXBIb29rcyApOw0KDQpqUXVlcnkuY3NzSG9va3MuYm9yZGVyQ29sb3IgPSB7DQoJZXhwYW5kOiBmdW5jdGlvbiggdmFsdWUgKSB7DQoJCXZhciBleHBhbmRlZCA9IHt9Ow0KDQoJCWVhY2goIFsgIlRvcCIsICJSaWdodCIsICJCb3R0b20iLCAiTGVmdCIgXSwgZnVuY3Rpb24oIGksIHBhcnQgKSB7DQoJCQlleHBhbmRlZFsgImJvcmRlciIgKyBwYXJ0ICsgIkNvbG9yIiBdID0gdmFsdWU7DQoJCX0pOw0KCQlyZXR1cm4gZXhwYW5kZWQ7DQoJfQ0KfTsNCg0KLy8gQmFzaWMgY29sb3IgbmFtZXMgb25seS4NCi8vIFVzYWdlIG9mIGFueSBvZiB0aGUgb3RoZXIgY29sb3IgbmFtZXMgcmVxdWlyZXMgYWRkaW5nIHlvdXJzZWxmIG9yIGluY2x1ZGluZw0KLy8ganF1ZXJ5LmNvbG9yLnN2Zy1uYW1lcy5qcy4NCmNvbG9ycyA9IGpRdWVyeS5Db2xvci5uYW1lcyA9IHsNCgkvLyA0LjEuIEJhc2ljIGNvbG9yIGtleXdvcmRzDQoJYXF1YTogIiMwMGZmZmYiLA0KCWJsYWNrOiAiIzAwMDAwMCIsDQoJYmx1ZTogIiMwMDAwZmYiLA0KCWZ1Y2hzaWE6ICIjZmYwMGZmIiwNCglncmF5OiAiIzgwODA4MCIsDQoJZ3JlZW46ICIjMDA4MDAwIiwNCglsaW1lOiAiIzAwZmYwMCIsDQoJbWFyb29uOiAiIzgwMDAwMCIsDQoJbmF2eTogIiMwMDAwODAiLA0KCW9saXZlOiAiIzgwODAwMCIsDQoJcHVycGxlOiAiIzgwMDA4MCIsDQoJcmVkOiAiI2ZmMDAwMCIsDQoJc2lsdmVyOiAiI2MwYzBjMCIsDQoJdGVhbDogIiMwMDgwODAiLA0KCXdoaXRlOiAiI2ZmZmZmZiIsDQoJeWVsbG93OiAiI2ZmZmYwMCIsDQoNCgkvLyA0LjIuMy4gInRyYW5zcGFyZW50IiBjb2xvciBrZXl3b3JkDQoJdHJhbnNwYXJlbnQ6IFsgbnVsbCwgbnVsbCwgbnVsbCwgMCBdLA0KDQoJX2RlZmF1bHQ6ICIjZmZmZmZmIg0KfTsNCg0KfSkoIGpRdWVyeSApOw0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiBDTEFTUyBBTklNQVRJT05TICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQooZnVuY3Rpb24oKSB7DQoNCnZhciBjbGFzc0FuaW1hdGlvbkFjdGlvbnMgPSBbICJhZGQiLCAicmVtb3ZlIiwgInRvZ2dsZSIgXSwNCglzaG9ydGhhbmRTdHlsZXMgPSB7DQoJCWJvcmRlcjogMSwNCgkJYm9yZGVyQm90dG9tOiAxLA0KCQlib3JkZXJDb2xvcjogMSwNCgkJYm9yZGVyTGVmdDogMSwNCgkJYm9yZGVyUmlnaHQ6IDEsDQoJCWJvcmRlclRvcDogMSwNCgkJYm9yZGVyV2lkdGg6IDEsDQoJCW1hcmdpbjogMSwNCgkJcGFkZGluZzogMQ0KCX07DQoNCiQuZWFjaChbICJib3JkZXJMZWZ0U3R5bGUiLCAiYm9yZGVyUmlnaHRTdHlsZSIsICJib3JkZXJCb3R0b21TdHlsZSIsICJib3JkZXJUb3BTdHlsZSIgXSwgZnVuY3Rpb24oIF8sIHByb3AgKSB7DQoJJC5meC5zdGVwWyBwcm9wIF0gPSBmdW5jdGlvbiggZnggKSB7DQoJCWlmICggZnguZW5kICE9PSAibm9uZSIgJiYgIWZ4LnNldEF0dHIgfHwgZngucG9zID09PSAxICYmICFmeC5zZXRBdHRyICkgew0KCQkJalF1ZXJ5LnN0eWxlKCBmeC5lbGVtLCBwcm9wLCBmeC5lbmQgKTsNCgkJCWZ4LnNldEF0dHIgPSB0cnVlOw0KCQl9DQoJfTsNCn0pOw0KDQpmdW5jdGlvbiBnZXRFbGVtZW50U3R5bGVzKCBlbGVtICkgew0KCXZhciBrZXksIGxlbiwNCgkJc3R5bGUgPSBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgPw0KCQkJZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGUoIGVsZW0sIG51bGwgKSA6DQoJCQllbGVtLmN1cnJlbnRTdHlsZSwNCgkJc3R5bGVzID0ge307DQoNCglpZiAoIHN0eWxlICYmIHN0eWxlLmxlbmd0aCAmJiBzdHlsZVsgMCBdICYmIHN0eWxlWyBzdHlsZVsgMCBdIF0gKSB7DQoJCWxlbiA9IHN0eWxlLmxlbmd0aDsNCgkJd2hpbGUgKCBsZW4tLSApIHsNCgkJCWtleSA9IHN0eWxlWyBsZW4gXTsNCgkJCWlmICggdHlwZW9mIHN0eWxlWyBrZXkgXSA9PT0gInN0cmluZyIgKSB7DQoJCQkJc3R5bGVzWyAkLmNhbWVsQ2FzZSgga2V5ICkgXSA9IHN0eWxlWyBrZXkgXTsNCgkJCX0NCgkJfQ0KCS8vIHN1cHBvcnQ6IE9wZXJhLCBJRSA8OQ0KCX0gZWxzZSB7DQoJCWZvciAoIGtleSBpbiBzdHlsZSApIHsNCgkJCWlmICggdHlwZW9mIHN0eWxlWyBrZXkgXSA9PT0gInN0cmluZyIgKSB7DQoJCQkJc3R5bGVzWyBrZXkgXSA9IHN0eWxlWyBrZXkgXTsNCgkJCX0NCgkJfQ0KCX0NCg0KCXJldHVybiBzdHlsZXM7DQp9DQoNCmZ1bmN0aW9uIHN0eWxlRGlmZmVyZW5jZSggb2xkU3R5bGUsIG5ld1N0eWxlICkgew0KCXZhciBkaWZmID0ge30sDQoJCW5hbWUsIHZhbHVlOw0KDQoJZm9yICggbmFtZSBpbiBuZXdTdHlsZSApIHsNCgkJdmFsdWUgPSBuZXdTdHlsZVsgbmFtZSBdOw0KCQlpZiAoIG9sZFN0eWxlWyBuYW1lIF0gIT09IHZhbHVlICkgew0KCQkJaWYgKCAhc2hvcnRoYW5kU3R5bGVzWyBuYW1lIF0gKSB7DQoJCQkJaWYgKCAkLmZ4LnN0ZXBbIG5hbWUgXSB8fCAhaXNOYU4oIHBhcnNlRmxvYXQoIHZhbHVlICkgKSApIHsNCgkJCQkJZGlmZlsgbmFtZSBdID0gdmFsdWU7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJfQ0KDQoJcmV0dXJuIGRpZmY7DQp9DQoNCi8vIHN1cHBvcnQ6IGpRdWVyeSA8MS44DQppZiAoICEkLmZuLmFkZEJhY2sgKSB7DQoJJC5mbi5hZGRCYWNrID0gZnVuY3Rpb24oIHNlbGVjdG9yICkgew0KCQlyZXR1cm4gdGhpcy5hZGQoIHNlbGVjdG9yID09IG51bGwgPw0KCQkJdGhpcy5wcmV2T2JqZWN0IDogdGhpcy5wcmV2T2JqZWN0LmZpbHRlciggc2VsZWN0b3IgKQ0KCQkpOw0KCX07DQp9DQoNCiQuZWZmZWN0cy5hbmltYXRlQ2xhc3MgPSBmdW5jdGlvbiggdmFsdWUsIGR1cmF0aW9uLCBlYXNpbmcsIGNhbGxiYWNrICkgew0KCXZhciBvID0gJC5zcGVlZCggZHVyYXRpb24sIGVhc2luZywgY2FsbGJhY2sgKTsNCg0KCXJldHVybiB0aGlzLnF1ZXVlKCBmdW5jdGlvbigpIHsNCgkJdmFyIGFuaW1hdGVkID0gJCggdGhpcyApLA0KCQkJYmFzZUNsYXNzID0gYW5pbWF0ZWQuYXR0ciggImNsYXNzIiApIHx8ICIiLA0KCQkJYXBwbHlDbGFzc0NoYW5nZSwNCgkJCWFsbEFuaW1hdGlvbnMgPSBvLmNoaWxkcmVuID8gYW5pbWF0ZWQuZmluZCggIioiICkuYWRkQmFjaygpIDogYW5pbWF0ZWQ7DQoNCgkJLy8gbWFwIHRoZSBhbmltYXRlZCBvYmplY3RzIHRvIHN0b3JlIHRoZSBvcmlnaW5hbCBzdHlsZXMuDQoJCWFsbEFuaW1hdGlvbnMgPSBhbGxBbmltYXRpb25zLm1hcChmdW5jdGlvbigpIHsNCgkJCXZhciBlbCA9ICQoIHRoaXMgKTsNCgkJCXJldHVybiB7DQoJCQkJZWw6IGVsLA0KCQkJCXN0YXJ0OiBnZXRFbGVtZW50U3R5bGVzKCB0aGlzICkNCgkJCX07DQoJCX0pOw0KDQoJCS8vIGFwcGx5IGNsYXNzIGNoYW5nZQ0KCQlhcHBseUNsYXNzQ2hhbmdlID0gZnVuY3Rpb24oKSB7DQoJCQkkLmVhY2goIGNsYXNzQW5pbWF0aW9uQWN0aW9ucywgZnVuY3Rpb24oaSwgYWN0aW9uKSB7DQoJCQkJaWYgKCB2YWx1ZVsgYWN0aW9uIF0gKSB7DQoJCQkJCWFuaW1hdGVkWyBhY3Rpb24gKyAiQ2xhc3MiIF0oIHZhbHVlWyBhY3Rpb24gXSApOw0KCQkJCX0NCgkJCX0pOw0KCQl9Ow0KCQlhcHBseUNsYXNzQ2hhbmdlKCk7DQoNCgkJLy8gbWFwIGFsbCBhbmltYXRlZCBvYmplY3RzIGFnYWluIC0gY2FsY3VsYXRlIG5ldyBzdHlsZXMgYW5kIGRpZmYNCgkJYWxsQW5pbWF0aW9ucyA9IGFsbEFuaW1hdGlvbnMubWFwKGZ1bmN0aW9uKCkgew0KCQkJdGhpcy5lbmQgPSBnZXRFbGVtZW50U3R5bGVzKCB0aGlzLmVsWyAwIF0gKTsNCgkJCXRoaXMuZGlmZiA9IHN0eWxlRGlmZmVyZW5jZSggdGhpcy5zdGFydCwgdGhpcy5lbmQgKTsNCgkJCXJldHVybiB0aGlzOw0KCQl9KTsNCg0KCQkvLyBhcHBseSBvcmlnaW5hbCBjbGFzcw0KCQlhbmltYXRlZC5hdHRyKCAiY2xhc3MiLCBiYXNlQ2xhc3MgKTsNCg0KCQkvLyBtYXAgYWxsIGFuaW1hdGVkIG9iamVjdHMgYWdhaW4gLSB0aGlzIHRpbWUgY29sbGVjdGluZyBhIHByb21pc2UNCgkJYWxsQW5pbWF0aW9ucyA9IGFsbEFuaW1hdGlvbnMubWFwKGZ1bmN0aW9uKCkgew0KCQkJdmFyIHN0eWxlSW5mbyA9IHRoaXMsDQoJCQkJZGZkID0gJC5EZWZlcnJlZCgpLA0KCQkJCW9wdHMgPSAkLmV4dGVuZCh7fSwgbywgew0KCQkJCQlxdWV1ZTogZmFsc2UsDQoJCQkJCWNvbXBsZXRlOiBmdW5jdGlvbigpIHsNCgkJCQkJCWRmZC5yZXNvbHZlKCBzdHlsZUluZm8gKTsNCgkJCQkJfQ0KCQkJCX0pOw0KDQoJCQl0aGlzLmVsLmFuaW1hdGUoIHRoaXMuZGlmZiwgb3B0cyApOw0KCQkJcmV0dXJuIGRmZC5wcm9taXNlKCk7DQoJCX0pOw0KDQoJCS8vIG9uY2UgYWxsIGFuaW1hdGlvbnMgaGF2ZSBjb21wbGV0ZWQ6DQoJCSQud2hlbi5hcHBseSggJCwgYWxsQW5pbWF0aW9ucy5nZXQoKSApLmRvbmUoZnVuY3Rpb24oKSB7DQoNCgkJCS8vIHNldCB0aGUgZmluYWwgY2xhc3MNCgkJCWFwcGx5Q2xhc3NDaGFuZ2UoKTsNCg0KCQkJLy8gZm9yIGVhY2ggYW5pbWF0ZWQgZWxlbWVudCwNCgkJCS8vIGNsZWFyIGFsbCBjc3MgcHJvcGVydGllcyB0aGF0IHdlcmUgYW5pbWF0ZWQNCgkJCSQuZWFjaCggYXJndW1lbnRzLCBmdW5jdGlvbigpIHsNCgkJCQl2YXIgZWwgPSB0aGlzLmVsOw0KCQkJCSQuZWFjaCggdGhpcy5kaWZmLCBmdW5jdGlvbihrZXkpIHsNCgkJCQkJZWwuY3NzKCBrZXksICIiICk7DQoJCQkJfSk7DQoJCQl9KTsNCg0KCQkJLy8gdGhpcyBpcyBndWFybnRlZWQgdG8gYmUgdGhlcmUgaWYgeW91IHVzZSBqUXVlcnkuc3BlZWQoKQ0KCQkJLy8gaXQgYWxzbyBoYW5kbGVzIGRlcXVldWluZyB0aGUgbmV4dCBhbmltLi4uDQoJCQlvLmNvbXBsZXRlLmNhbGwoIGFuaW1hdGVkWyAwIF0gKTsNCgkJfSk7DQoJfSk7DQp9Ow0KDQokLmZuLmV4dGVuZCh7DQoJYWRkQ2xhc3M6IChmdW5jdGlvbiggb3JpZyApIHsNCgkJcmV0dXJuIGZ1bmN0aW9uKCBjbGFzc05hbWVzLCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHsNCgkJCXJldHVybiBzcGVlZCA/DQoJCQkJJC5lZmZlY3RzLmFuaW1hdGVDbGFzcy5jYWxsKCB0aGlzLA0KCQkJCQl7IGFkZDogY2xhc3NOYW1lcyB9LCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIDoNCgkJCQlvcmlnLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsNCgkJfTsNCgl9KSggJC5mbi5hZGRDbGFzcyApLA0KDQoJcmVtb3ZlQ2xhc3M6IChmdW5jdGlvbiggb3JpZyApIHsNCgkJcmV0dXJuIGZ1bmN0aW9uKCBjbGFzc05hbWVzLCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHsNCgkJCXJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMSA/DQoJCQkJJC5lZmZlY3RzLmFuaW1hdGVDbGFzcy5jYWxsKCB0aGlzLA0KCQkJCQl7IHJlbW92ZTogY2xhc3NOYW1lcyB9LCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIDoNCgkJCQlvcmlnLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsNCgkJfTsNCgl9KSggJC5mbi5yZW1vdmVDbGFzcyApLA0KDQoJdG9nZ2xlQ2xhc3M6IChmdW5jdGlvbiggb3JpZyApIHsNCgkJcmV0dXJuIGZ1bmN0aW9uKCBjbGFzc05hbWVzLCBmb3JjZSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7DQoJCQlpZiAoIHR5cGVvZiBmb3JjZSA9PT0gImJvb2xlYW4iIHx8IGZvcmNlID09PSB1bmRlZmluZWQgKSB7DQoJCQkJaWYgKCAhc3BlZWQgKSB7DQoJCQkJCS8vIHdpdGhvdXQgc3BlZWQgcGFyYW1ldGVyDQoJCQkJCXJldHVybiBvcmlnLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsNCgkJCQl9IGVsc2Ugew0KCQkJCQlyZXR1cm4gJC5lZmZlY3RzLmFuaW1hdGVDbGFzcy5jYWxsKCB0aGlzLA0KCQkJCQkJKGZvcmNlID8geyBhZGQ6IGNsYXNzTmFtZXMgfSA6IHsgcmVtb3ZlOiBjbGFzc05hbWVzIH0pLA0KCQkJCQkJc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTsNCgkJCQl9DQoJCQl9IGVsc2Ugew0KCQkJCS8vIHdpdGhvdXQgZm9yY2UgcGFyYW1ldGVyDQoJCQkJcmV0dXJuICQuZWZmZWN0cy5hbmltYXRlQ2xhc3MuY2FsbCggdGhpcywNCgkJCQkJeyB0b2dnbGU6IGNsYXNzTmFtZXMgfSwgZm9yY2UsIHNwZWVkLCBlYXNpbmcgKTsNCgkJCX0NCgkJfTsNCgl9KSggJC5mbi50b2dnbGVDbGFzcyApLA0KDQoJc3dpdGNoQ2xhc3M6IGZ1bmN0aW9uKCByZW1vdmUsIGFkZCwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2spIHsNCgkJcmV0dXJuICQuZWZmZWN0cy5hbmltYXRlQ2xhc3MuY2FsbCggdGhpcywgew0KCQkJYWRkOiBhZGQsDQoJCQlyZW1vdmU6IHJlbW92ZQ0KCQl9LCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApOw0KCX0NCn0pOw0KDQp9KSgpOw0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqIEVGRkVDVFMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoNCihmdW5jdGlvbigpIHsNCg0KJC5leHRlbmQoICQuZWZmZWN0cywgew0KCXZlcnNpb246ICIxLjExLjIiLA0KDQoJLy8gU2F2ZXMgYSBzZXQgb2YgcHJvcGVydGllcyBpbiBhIGRhdGEgc3RvcmFnZQ0KCXNhdmU6IGZ1bmN0aW9uKCBlbGVtZW50LCBzZXQgKSB7DQoJCWZvciAoIHZhciBpID0gMDsgaSA8IHNldC5sZW5ndGg7IGkrKyApIHsNCgkJCWlmICggc2V0WyBpIF0gIT09IG51bGwgKSB7DQoJCQkJZWxlbWVudC5kYXRhKCBkYXRhU3BhY2UgKyBzZXRbIGkgXSwgZWxlbWVudFsgMCBdLnN0eWxlWyBzZXRbIGkgXSBdICk7DQoJCQl9DQoJCX0NCgl9LA0KDQoJLy8gUmVzdG9yZXMgYSBzZXQgb2YgcHJldmlvdXNseSBzYXZlZCBwcm9wZXJ0aWVzIGZyb20gYSBkYXRhIHN0b3JhZ2UNCglyZXN0b3JlOiBmdW5jdGlvbiggZWxlbWVudCwgc2V0ICkgew0KCQl2YXIgdmFsLCBpOw0KCQlmb3IgKCBpID0gMDsgaSA8IHNldC5sZW5ndGg7IGkrKyApIHsNCgkJCWlmICggc2V0WyBpIF0gIT09IG51bGwgKSB7DQoJCQkJdmFsID0gZWxlbWVudC5kYXRhKCBkYXRhU3BhY2UgKyBzZXRbIGkgXSApOw0KCQkJCS8vIHN1cHBvcnQ6IGpRdWVyeSAxLjYuMg0KCQkJCS8vIGh0dHA6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0Lzk5MTcNCgkJCQkvLyBqUXVlcnkgMS42LjIgaW5jb3JyZWN0bHkgcmV0dXJucyB1bmRlZmluZWQgZm9yIGFueSBmYWxzeSB2YWx1ZS4NCgkJCQkvLyBXZSBjYW4ndCBkaWZmZXJlbnRpYXRlIGJldHdlZW4gIiIgYW5kIDAgaGVyZSwgc28gd2UganVzdCBhc3N1bWUNCgkJCQkvLyBlbXB0eSBzdHJpbmcgc2luY2UgaXQncyBsaWtlbHkgdG8gYmUgYSBtb3JlIGNvbW1vbiB2YWx1ZS4uLg0KCQkJCWlmICggdmFsID09PSB1bmRlZmluZWQgKSB7DQoJCQkJCXZhbCA9ICIiOw0KCQkJCX0NCgkJCQllbGVtZW50LmNzcyggc2V0WyBpIF0sIHZhbCApOw0KCQkJfQ0KCQl9DQoJfSwNCg0KCXNldE1vZGU6IGZ1bmN0aW9uKCBlbCwgbW9kZSApIHsNCgkJaWYgKG1vZGUgPT09ICJ0b2dnbGUiKSB7DQoJCQltb2RlID0gZWwuaXMoICI6aGlkZGVuIiApID8gInNob3ciIDogImhpZGUiOw0KCQl9DQoJCXJldHVybiBtb2RlOw0KCX0sDQoNCgkvLyBUcmFuc2xhdGVzIGEgW3RvcCxsZWZ0XSBhcnJheSBpbnRvIGEgYmFzZWxpbmUgdmFsdWUNCgkvLyB0aGlzIHNob3VsZCBiZSBhIGxpdHRsZSBtb3JlIGZsZXhpYmxlIGluIHRoZSBmdXR1cmUgdG8gaGFuZGxlIGEgc3RyaW5nICYgaGFzaA0KCWdldEJhc2VsaW5lOiBmdW5jdGlvbiggb3JpZ2luLCBvcmlnaW5hbCApIHsNCgkJdmFyIHksIHg7DQoJCXN3aXRjaCAoIG9yaWdpblsgMCBdICkgew0KCQkJY2FzZSAidG9wIjogeSA9IDA7IGJyZWFrOw0KCQkJY2FzZSAibWlkZGxlIjogeSA9IDAuNTsgYnJlYWs7DQoJCQljYXNlICJib3R0b20iOiB5ID0gMTsgYnJlYWs7DQoJCQlkZWZhdWx0OiB5ID0gb3JpZ2luWyAwIF0gLyBvcmlnaW5hbC5oZWlnaHQ7DQoJCX0NCgkJc3dpdGNoICggb3JpZ2luWyAxIF0gKSB7DQoJCQljYXNlICJsZWZ0IjogeCA9IDA7IGJyZWFrOw0KCQkJY2FzZSAiY2VudGVyIjogeCA9IDAuNTsgYnJlYWs7DQoJCQljYXNlICJyaWdodCI6IHggPSAxOyBicmVhazsNCgkJCWRlZmF1bHQ6IHggPSBvcmlnaW5bIDEgXSAvIG9yaWdpbmFsLndpZHRoOw0KCQl9DQoJCXJldHVybiB7DQoJCQl4OiB4LA0KCQkJeTogeQ0KCQl9Ow0KCX0sDQoNCgkvLyBXcmFwcyB0aGUgZWxlbWVudCBhcm91bmQgYSB3cmFwcGVyIHRoYXQgY29waWVzIHBvc2l0aW9uIHByb3BlcnRpZXMNCgljcmVhdGVXcmFwcGVyOiBmdW5jdGlvbiggZWxlbWVudCApIHsNCg0KCQkvLyBpZiB0aGUgZWxlbWVudCBpcyBhbHJlYWR5IHdyYXBwZWQsIHJldHVybiBpdA0KCQlpZiAoIGVsZW1lbnQucGFyZW50KCkuaXMoICIudWktZWZmZWN0cy13cmFwcGVyIiApKSB7DQoJCQlyZXR1cm4gZWxlbWVudC5wYXJlbnQoKTsNCgkJfQ0KDQoJCS8vIHdyYXAgdGhlIGVsZW1lbnQNCgkJdmFyIHByb3BzID0gew0KCQkJCXdpZHRoOiBlbGVtZW50Lm91dGVyV2lkdGgodHJ1ZSksDQoJCQkJaGVpZ2h0OiBlbGVtZW50Lm91dGVySGVpZ2h0KHRydWUpLA0KCQkJCSJmbG9hdCI6IGVsZW1lbnQuY3NzKCAiZmxvYXQiICkNCgkJCX0sDQoJCQl3cmFwcGVyID0gJCggIjxkaXY+PC9kaXY+IiApDQoJCQkJLmFkZENsYXNzKCAidWktZWZmZWN0cy13cmFwcGVyIiApDQoJCQkJLmNzcyh7DQoJCQkJCWZvbnRTaXplOiAiMTAwJSIsDQoJCQkJCWJhY2tncm91bmQ6ICJ0cmFuc3BhcmVudCIsDQoJCQkJCWJvcmRlcjogIm5vbmUiLA0KCQkJCQltYXJnaW46IDAsDQoJCQkJCXBhZGRpbmc6IDANCgkJCQl9KSwNCgkJCS8vIFN0b3JlIHRoZSBzaXplIGluIGNhc2Ugd2lkdGgvaGVpZ2h0IGFyZSBkZWZpbmVkIGluICUgLSBGaXhlcyAjNTI0NQ0KCQkJc2l6ZSA9IHsNCgkJCQl3aWR0aDogZWxlbWVudC53aWR0aCgpLA0KCQkJCWhlaWdodDogZWxlbWVudC5oZWlnaHQoKQ0KCQkJfSwNCgkJCWFjdGl2ZSA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7DQoNCgkJLy8gc3VwcG9ydDogRmlyZWZveA0KCQkvLyBGaXJlZm94IGluY29ycmVjdGx5IGV4cG9zZXMgYW5vbnltb3VzIGNvbnRlbnQNCgkJLy8gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NTYxNjY0DQoJCXRyeSB7DQoJCQlhY3RpdmUuaWQ7DQoJCX0gY2F0Y2ggKCBlICkgew0KCQkJYWN0aXZlID0gZG9jdW1lbnQuYm9keTsNCgkJfQ0KDQoJCWVsZW1lbnQud3JhcCggd3JhcHBlciApOw0KDQoJCS8vIEZpeGVzICM3NTk1IC0gRWxlbWVudHMgbG9zZSBmb2N1cyB3aGVuIHdyYXBwZWQuDQoJCWlmICggZWxlbWVudFsgMCBdID09PSBhY3RpdmUgfHwgJC5jb250YWlucyggZWxlbWVudFsgMCBdLCBhY3RpdmUgKSApIHsNCgkJCSQoIGFjdGl2ZSApLmZvY3VzKCk7DQoJCX0NCg0KCQl3cmFwcGVyID0gZWxlbWVudC5wYXJlbnQoKTsgLy9Ib3RmaXggZm9yIGpRdWVyeSAxLjQgc2luY2Ugc29tZSBjaGFuZ2UgaW4gd3JhcCgpIHNlZW1zIHRvIGFjdHVhbGx5IGxvc2UgdGhlIHJlZmVyZW5jZSB0byB0aGUgd3JhcHBlZCBlbGVtZW50DQoNCgkJLy8gdHJhbnNmZXIgcG9zaXRpb25pbmcgcHJvcGVydGllcyB0byB0aGUgd3JhcHBlcg0KCQlpZiAoIGVsZW1lbnQuY3NzKCAicG9zaXRpb24iICkgPT09ICJzdGF0aWMiICkgew0KCQkJd3JhcHBlci5jc3MoeyBwb3NpdGlvbjogInJlbGF0aXZlIiB9KTsNCgkJCWVsZW1lbnQuY3NzKHsgcG9zaXRpb246ICJyZWxhdGl2ZSIgfSk7DQoJCX0gZWxzZSB7DQoJCQkkLmV4dGVuZCggcHJvcHMsIHsNCgkJCQlwb3NpdGlvbjogZWxlbWVudC5jc3MoICJwb3NpdGlvbiIgKSwNCgkJCQl6SW5kZXg6IGVsZW1lbnQuY3NzKCAiei1pbmRleCIgKQ0KCQkJfSk7DQoJCQkkLmVhY2goWyAidG9wIiwgImxlZnQiLCAiYm90dG9tIiwgInJpZ2h0IiBdLCBmdW5jdGlvbihpLCBwb3MpIHsNCgkJCQlwcm9wc1sgcG9zIF0gPSBlbGVtZW50LmNzcyggcG9zICk7DQoJCQkJaWYgKCBpc05hTiggcGFyc2VJbnQoIHByb3BzWyBwb3MgXSwgMTAgKSApICkgew0KCQkJCQlwcm9wc1sgcG9zIF0gPSAiYXV0byI7DQoJCQkJfQ0KCQkJfSk7DQoJCQllbGVtZW50LmNzcyh7DQoJCQkJcG9zaXRpb246ICJyZWxhdGl2ZSIsDQoJCQkJdG9wOiAwLA0KCQkJCWxlZnQ6IDAsDQoJCQkJcmlnaHQ6ICJhdXRvIiwNCgkJCQlib3R0b206ICJhdXRvIg0KCQkJfSk7DQoJCX0NCgkJZWxlbWVudC5jc3Moc2l6ZSk7DQoNCgkJcmV0dXJuIHdyYXBwZXIuY3NzKCBwcm9wcyApLnNob3coKTsNCgl9LA0KDQoJcmVtb3ZlV3JhcHBlcjogZnVuY3Rpb24oIGVsZW1lbnQgKSB7DQoJCXZhciBhY3RpdmUgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50Ow0KDQoJCWlmICggZWxlbWVudC5wYXJlbnQoKS5pcyggIi51aS1lZmZlY3RzLXdyYXBwZXIiICkgKSB7DQoJCQllbGVtZW50LnBhcmVudCgpLnJlcGxhY2VXaXRoKCBlbGVtZW50ICk7DQoNCgkJCS8vIEZpeGVzICM3NTk1IC0gRWxlbWVudHMgbG9zZSBmb2N1cyB3aGVuIHdyYXBwZWQuDQoJCQlpZiAoIGVsZW1lbnRbIDAgXSA9PT0gYWN0aXZlIHx8ICQuY29udGFpbnMoIGVsZW1lbnRbIDAgXSwgYWN0aXZlICkgKSB7DQoJCQkJJCggYWN0aXZlICkuZm9jdXMoKTsNCgkJCX0NCgkJfQ0KDQoJCXJldHVybiBlbGVtZW50Ow0KCX0sDQoNCglzZXRUcmFuc2l0aW9uOiBmdW5jdGlvbiggZWxlbWVudCwgbGlzdCwgZmFjdG9yLCB2YWx1ZSApIHsNCgkJdmFsdWUgPSB2YWx1ZSB8fCB7fTsNCgkJJC5lYWNoKCBsaXN0LCBmdW5jdGlvbiggaSwgeCApIHsNCgkJCXZhciB1bml0ID0gZWxlbWVudC5jc3NVbml0KCB4ICk7DQoJCQlpZiAoIHVuaXRbIDAgXSA+IDAgKSB7DQoJCQkJdmFsdWVbIHggXSA9IHVuaXRbIDAgXSAqIGZhY3RvciArIHVuaXRbIDEgXTsNCgkJCX0NCgkJfSk7DQoJCXJldHVybiB2YWx1ZTsNCgl9DQp9KTsNCg0KLy8gcmV0dXJuIGFuIGVmZmVjdCBvcHRpb25zIG9iamVjdCBmb3IgdGhlIGdpdmVuIHBhcmFtZXRlcnM6DQpmdW5jdGlvbiBfbm9ybWFsaXplQXJndW1lbnRzKCBlZmZlY3QsIG9wdGlvbnMsIHNwZWVkLCBjYWxsYmFjayApIHsNCg0KCS8vIGFsbG93IHBhc3NpbmcgYWxsIG9wdGlvbnMgYXMgdGhlIGZpcnN0IHBhcmFtZXRlcg0KCWlmICggJC5pc1BsYWluT2JqZWN0KCBlZmZlY3QgKSApIHsNCgkJb3B0aW9ucyA9IGVmZmVjdDsNCgkJZWZmZWN0ID0gZWZmZWN0LmVmZmVjdDsNCgl9DQoNCgkvLyBjb252ZXJ0IHRvIGFuIG9iamVjdA0KCWVmZmVjdCA9IHsgZWZmZWN0OiBlZmZlY3QgfTsNCg0KCS8vIGNhdGNoIChlZmZlY3QsIG51bGwsIC4uLikNCglpZiAoIG9wdGlvbnMgPT0gbnVsbCApIHsNCgkJb3B0aW9ucyA9IHt9Ow0KCX0NCg0KCS8vIGNhdGNoIChlZmZlY3QsIGNhbGxiYWNrKQ0KCWlmICggJC5pc0Z1bmN0aW9uKCBvcHRpb25zICkgKSB7DQoJCWNhbGxiYWNrID0gb3B0aW9uczsNCgkJc3BlZWQgPSBudWxsOw0KCQlvcHRpb25zID0ge307DQoJfQ0KDQoJLy8gY2F0Y2ggKGVmZmVjdCwgc3BlZWQsID8pDQoJaWYgKCB0eXBlb2Ygb3B0aW9ucyA9PT0gIm51bWJlciIgfHwgJC5meC5zcGVlZHNbIG9wdGlvbnMgXSApIHsNCgkJY2FsbGJhY2sgPSBzcGVlZDsNCgkJc3BlZWQgPSBvcHRpb25zOw0KCQlvcHRpb25zID0ge307DQoJfQ0KDQoJLy8gY2F0Y2ggKGVmZmVjdCwgb3B0aW9ucywgY2FsbGJhY2spDQoJaWYgKCAkLmlzRnVuY3Rpb24oIHNwZWVkICkgKSB7DQoJCWNhbGxiYWNrID0gc3BlZWQ7DQoJCXNwZWVkID0gbnVsbDsNCgl9DQoNCgkvLyBhZGQgb3B0aW9ucyB0byBlZmZlY3QNCglpZiAoIG9wdGlvbnMgKSB7DQoJCSQuZXh0ZW5kKCBlZmZlY3QsIG9wdGlvbnMgKTsNCgl9DQoNCglzcGVlZCA9IHNwZWVkIHx8IG9wdGlvbnMuZHVyYXRpb247DQoJZWZmZWN0LmR1cmF0aW9uID0gJC5meC5vZmYgPyAwIDoNCgkJdHlwZW9mIHNwZWVkID09PSAibnVtYmVyIiA/IHNwZWVkIDoNCgkJc3BlZWQgaW4gJC5meC5zcGVlZHMgPyAkLmZ4LnNwZWVkc1sgc3BlZWQgXSA6DQoJCSQuZnguc3BlZWRzLl9kZWZhdWx0Ow0KDQoJZWZmZWN0LmNvbXBsZXRlID0gY2FsbGJhY2sgfHwgb3B0aW9ucy5jb21wbGV0ZTsNCg0KCXJldHVybiBlZmZlY3Q7DQp9DQoNCmZ1bmN0aW9uIHN0YW5kYXJkQW5pbWF0aW9uT3B0aW9uKCBvcHRpb24gKSB7DQoJLy8gVmFsaWQgc3RhbmRhcmQgc3BlZWRzIChub3RoaW5nLCBudW1iZXIsIG5hbWVkIHNwZWVkKQ0KCWlmICggIW9wdGlvbiB8fCB0eXBlb2Ygb3B0aW9uID09PSAibnVtYmVyIiB8fCAkLmZ4LnNwZWVkc1sgb3B0aW9uIF0gKSB7DQoJCXJldHVybiB0cnVlOw0KCX0NCg0KCS8vIEludmFsaWQgc3RyaW5ncyAtIHRyZWF0IGFzICJub3JtYWwiIHNwZWVkDQoJaWYgKCB0eXBlb2Ygb3B0aW9uID09PSAic3RyaW5nIiAmJiAhJC5lZmZlY3RzLmVmZmVjdFsgb3B0aW9uIF0gKSB7DQoJCXJldHVybiB0cnVlOw0KCX0NCg0KCS8vIENvbXBsZXRlIGNhbGxiYWNrDQoJaWYgKCAkLmlzRnVuY3Rpb24oIG9wdGlvbiApICkgew0KCQlyZXR1cm4gdHJ1ZTsNCgl9DQoNCgkvLyBPcHRpb25zIGhhc2ggKGJ1dCBub3QgbmFtaW5nIGFuIGVmZmVjdCkNCglpZiAoIHR5cGVvZiBvcHRpb24gPT09ICJvYmplY3QiICYmICFvcHRpb24uZWZmZWN0ICkgew0KCQlyZXR1cm4gdHJ1ZTsNCgl9DQoNCgkvLyBEaWRuJ3QgbWF0Y2ggYW55IHN0YW5kYXJkIEFQSQ0KCXJldHVybiBmYWxzZTsNCn0NCg0KJC5mbi5leHRlbmQoew0KCWVmZmVjdDogZnVuY3Rpb24oIC8qIGVmZmVjdCwgb3B0aW9ucywgc3BlZWQsIGNhbGxiYWNrICovICkgew0KCQl2YXIgYXJncyA9IF9ub3JtYWxpemVBcmd1bWVudHMuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApLA0KCQkJbW9kZSA9IGFyZ3MubW9kZSwNCgkJCXF1ZXVlID0gYXJncy5xdWV1ZSwNCgkJCWVmZmVjdE1ldGhvZCA9ICQuZWZmZWN0cy5lZmZlY3RbIGFyZ3MuZWZmZWN0IF07DQoNCgkJaWYgKCAkLmZ4Lm9mZiB8fCAhZWZmZWN0TWV0aG9kICkgew0KCQkJLy8gZGVsZWdhdGUgdG8gdGhlIG9yaWdpbmFsIG1ldGhvZCAoZS5nLiwgLnNob3coKSkgaWYgcG9zc2libGUNCgkJCWlmICggbW9kZSApIHsNCgkJCQlyZXR1cm4gdGhpc1sgbW9kZSBdKCBhcmdzLmR1cmF0aW9uLCBhcmdzLmNvbXBsZXRlICk7DQoJCQl9IGVsc2Ugew0KCQkJCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkgew0KCQkJCQlpZiAoIGFyZ3MuY29tcGxldGUgKSB7DQoJCQkJCQlhcmdzLmNvbXBsZXRlLmNhbGwoIHRoaXMgKTsNCgkJCQkJfQ0KCQkJCX0pOw0KCQkJfQ0KCQl9DQoNCgkJZnVuY3Rpb24gcnVuKCBuZXh0ICkgew0KCQkJdmFyIGVsZW0gPSAkKCB0aGlzICksDQoJCQkJY29tcGxldGUgPSBhcmdzLmNvbXBsZXRlLA0KCQkJCW1vZGUgPSBhcmdzLm1vZGU7DQoNCgkJCWZ1bmN0aW9uIGRvbmUoKSB7DQoJCQkJaWYgKCAkLmlzRnVuY3Rpb24oIGNvbXBsZXRlICkgKSB7DQoJCQkJCWNvbXBsZXRlLmNhbGwoIGVsZW1bMF0gKTsNCgkJCQl9DQoJCQkJaWYgKCAkLmlzRnVuY3Rpb24oIG5leHQgKSApIHsNCgkJCQkJbmV4dCgpOw0KCQkJCX0NCgkJCX0NCg0KCQkJLy8gSWYgdGhlIGVsZW1lbnQgYWxyZWFkeSBoYXMgdGhlIGNvcnJlY3QgZmluYWwgc3RhdGUsIGRlbGVnYXRlIHRvDQoJCQkvLyB0aGUgY29yZSBtZXRob2RzIHNvIHRoZSBpbnRlcm5hbCB0cmFja2luZyBvZiAib2xkZGlzcGxheSIgd29ya3MuDQoJCQlpZiAoIGVsZW0uaXMoICI6aGlkZGVuIiApID8gbW9kZSA9PT0gImhpZGUiIDogbW9kZSA9PT0gInNob3ciICkgew0KCQkJCWVsZW1bIG1vZGUgXSgpOw0KCQkJCWRvbmUoKTsNCgkJCX0gZWxzZSB7DQoJCQkJZWZmZWN0TWV0aG9kLmNhbGwoIGVsZW1bMF0sIGFyZ3MsIGRvbmUgKTsNCgkJCX0NCgkJfQ0KDQoJCXJldHVybiBxdWV1ZSA9PT0gZmFsc2UgPyB0aGlzLmVhY2goIHJ1biApIDogdGhpcy5xdWV1ZSggcXVldWUgfHwgImZ4IiwgcnVuICk7DQoJfSwNCg0KCXNob3c6IChmdW5jdGlvbiggb3JpZyApIHsNCgkJcmV0dXJuIGZ1bmN0aW9uKCBvcHRpb24gKSB7DQoJCQlpZiAoIHN0YW5kYXJkQW5pbWF0aW9uT3B0aW9uKCBvcHRpb24gKSApIHsNCgkJCQlyZXR1cm4gb3JpZy5hcHBseSggdGhpcywgYXJndW1lbnRzICk7DQoJCQl9IGVsc2Ugew0KCQkJCXZhciBhcmdzID0gX25vcm1hbGl6ZUFyZ3VtZW50cy5hcHBseSggdGhpcywgYXJndW1lbnRzICk7DQoJCQkJYXJncy5tb2RlID0gInNob3ciOw0KCQkJCXJldHVybiB0aGlzLmVmZmVjdC5jYWxsKCB0aGlzLCBhcmdzICk7DQoJCQl9DQoJCX07DQoJfSkoICQuZm4uc2hvdyApLA0KDQoJaGlkZTogKGZ1bmN0aW9uKCBvcmlnICkgew0KCQlyZXR1cm4gZnVuY3Rpb24oIG9wdGlvbiApIHsNCgkJCWlmICggc3RhbmRhcmRBbmltYXRpb25PcHRpb24oIG9wdGlvbiApICkgew0KCQkJCXJldHVybiBvcmlnLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsNCgkJCX0gZWxzZSB7DQoJCQkJdmFyIGFyZ3MgPSBfbm9ybWFsaXplQXJndW1lbnRzLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsNCgkJCQlhcmdzLm1vZGUgPSAiaGlkZSI7DQoJCQkJcmV0dXJuIHRoaXMuZWZmZWN0LmNhbGwoIHRoaXMsIGFyZ3MgKTsNCgkJCX0NCgkJfTsNCgl9KSggJC5mbi5oaWRlICksDQoNCgl0b2dnbGU6IChmdW5jdGlvbiggb3JpZyApIHsNCgkJcmV0dXJuIGZ1bmN0aW9uKCBvcHRpb24gKSB7DQoJCQlpZiAoIHN0YW5kYXJkQW5pbWF0aW9uT3B0aW9uKCBvcHRpb24gKSB8fCB0eXBlb2Ygb3B0aW9uID09PSAiYm9vbGVhbiIgKSB7DQoJCQkJcmV0dXJuIG9yaWcuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOw0KCQkJfSBlbHNlIHsNCgkJCQl2YXIgYXJncyA9IF9ub3JtYWxpemVBcmd1bWVudHMuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOw0KCQkJCWFyZ3MubW9kZSA9ICJ0b2dnbGUiOw0KCQkJCXJldHVybiB0aGlzLmVmZmVjdC5jYWxsKCB0aGlzLCBhcmdzICk7DQoJCQl9DQoJCX07DQoJfSkoICQuZm4udG9nZ2xlICksDQoNCgkvLyBoZWxwZXIgZnVuY3Rpb25zDQoJY3NzVW5pdDogZnVuY3Rpb24oa2V5KSB7DQoJCXZhciBzdHlsZSA9IHRoaXMuY3NzKCBrZXkgKSwNCgkJCXZhbCA9IFtdOw0KDQoJCSQuZWFjaCggWyAiZW0iLCAicHgiLCAiJSIsICJwdCIgXSwgZnVuY3Rpb24oIGksIHVuaXQgKSB7DQoJCQlpZiAoIHN0eWxlLmluZGV4T2YoIHVuaXQgKSA+IDAgKSB7DQoJCQkJdmFsID0gWyBwYXJzZUZsb2F0KCBzdHlsZSApLCB1bml0IF07DQoJCQl9DQoJCX0pOw0KCQlyZXR1cm4gdmFsOw0KCX0NCn0pOw0KDQp9KSgpOw0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqIEVBU0lORyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoNCihmdW5jdGlvbigpIHsNCg0KLy8gYmFzZWQgb24gZWFzaW5nIGVxdWF0aW9ucyBmcm9tIFJvYmVydCBQZW5uZXIgKGh0dHA6Ly93d3cucm9iZXJ0cGVubmVyLmNvbS9lYXNpbmcpDQoNCnZhciBiYXNlRWFzaW5ncyA9IHt9Ow0KDQokLmVhY2goIFsgIlF1YWQiLCAiQ3ViaWMiLCAiUXVhcnQiLCAiUXVpbnQiLCAiRXhwbyIgXSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7DQoJYmFzZUVhc2luZ3NbIG5hbWUgXSA9IGZ1bmN0aW9uKCBwICkgew0KCQlyZXR1cm4gTWF0aC5wb3coIHAsIGkgKyAyICk7DQoJfTsNCn0pOw0KDQokLmV4dGVuZCggYmFzZUVhc2luZ3MsIHsNCglTaW5lOiBmdW5jdGlvbiggcCApIHsNCgkJcmV0dXJuIDEgLSBNYXRoLmNvcyggcCAqIE1hdGguUEkgLyAyICk7DQoJfSwNCglDaXJjOiBmdW5jdGlvbiggcCApIHsNCgkJcmV0dXJuIDEgLSBNYXRoLnNxcnQoIDEgLSBwICogcCApOw0KCX0sDQoJRWxhc3RpYzogZnVuY3Rpb24oIHAgKSB7DQoJCXJldHVybiBwID09PSAwIHx8IHAgPT09IDEgPyBwIDoNCgkJCS1NYXRoLnBvdyggMiwgOCAqIChwIC0gMSkgKSAqIE1hdGguc2luKCAoIChwIC0gMSkgKiA4MCAtIDcuNSApICogTWF0aC5QSSAvIDE1ICk7DQoJfSwNCglCYWNrOiBmdW5jdGlvbiggcCApIHsNCgkJcmV0dXJuIHAgKiBwICogKCAzICogcCAtIDIgKTsNCgl9LA0KCUJvdW5jZTogZnVuY3Rpb24oIHAgKSB7DQoJCXZhciBwb3cyLA0KCQkJYm91bmNlID0gNDsNCg0KCQl3aGlsZSAoIHAgPCAoICggcG93MiA9IE1hdGgucG93KCAyLCAtLWJvdW5jZSApICkgLSAxICkgLyAxMSApIHt9DQoJCXJldHVybiAxIC8gTWF0aC5wb3coIDQsIDMgLSBib3VuY2UgKSAtIDcuNTYyNSAqIE1hdGgucG93KCAoIHBvdzIgKiAzIC0gMiApIC8gMjIgLSBwLCAyICk7DQoJfQ0KfSk7DQoNCiQuZWFjaCggYmFzZUVhc2luZ3MsIGZ1bmN0aW9uKCBuYW1lLCBlYXNlSW4gKSB7DQoJJC5lYXNpbmdbICJlYXNlSW4iICsgbmFtZSBdID0gZWFzZUluOw0KCSQuZWFzaW5nWyAiZWFzZU91dCIgKyBuYW1lIF0gPSBmdW5jdGlvbiggcCApIHsNCgkJcmV0dXJuIDEgLSBlYXNlSW4oIDEgLSBwICk7DQoJfTsNCgkkLmVhc2luZ1sgImVhc2VJbk91dCIgKyBuYW1lIF0gPSBmdW5jdGlvbiggcCApIHsNCgkJcmV0dXJuIHAgPCAwLjUgPw0KCQkJZWFzZUluKCBwICogMiApIC8gMiA6DQoJCQkxIC0gZWFzZUluKCBwICogLTIgKyAyICkgLyAyOw0KCX07DQp9KTsNCg0KfSkoKTsNCg0KdmFyIGVmZmVjdCA9ICQuZWZmZWN0czsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBFZmZlY3RzIEJsaW5kIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9ibGluZC1lZmZlY3QvDQogKi8NCg0KDQp2YXIgZWZmZWN0QmxpbmQgPSAkLmVmZmVjdHMuZWZmZWN0LmJsaW5kID0gZnVuY3Rpb24oIG8sIGRvbmUgKSB7DQoJLy8gQ3JlYXRlIGVsZW1lbnQNCgl2YXIgZWwgPSAkKCB0aGlzICksDQoJCXJ2ZXJ0aWNhbCA9IC91cHxkb3dufHZlcnRpY2FsLywNCgkJcnBvc2l0aXZlbW90aW9uID0gL3VwfGxlZnR8dmVydGljYWx8aG9yaXpvbnRhbC8sDQoJCXByb3BzID0gWyAicG9zaXRpb24iLCAidG9wIiwgImJvdHRvbSIsICJsZWZ0IiwgInJpZ2h0IiwgImhlaWdodCIsICJ3aWR0aCIgXSwNCgkJbW9kZSA9ICQuZWZmZWN0cy5zZXRNb2RlKCBlbCwgby5tb2RlIHx8ICJoaWRlIiApLA0KCQlkaXJlY3Rpb24gPSBvLmRpcmVjdGlvbiB8fCAidXAiLA0KCQl2ZXJ0aWNhbCA9IHJ2ZXJ0aWNhbC50ZXN0KCBkaXJlY3Rpb24gKSwNCgkJcmVmID0gdmVydGljYWwgPyAiaGVpZ2h0IiA6ICJ3aWR0aCIsDQoJCXJlZjIgPSB2ZXJ0aWNhbCA/ICJ0b3AiIDogImxlZnQiLA0KCQltb3Rpb24gPSBycG9zaXRpdmVtb3Rpb24udGVzdCggZGlyZWN0aW9uICksDQoJCWFuaW1hdGlvbiA9IHt9LA0KCQlzaG93ID0gbW9kZSA9PT0gInNob3ciLA0KCQl3cmFwcGVyLCBkaXN0YW5jZSwgbWFyZ2luOw0KDQoJLy8gaWYgYWxyZWFkeSB3cmFwcGVkLCB0aGUgd3JhcHBlcidzIHByb3BlcnRpZXMgYXJlIG15IHByb3BlcnR5LiAjNjI0NQ0KCWlmICggZWwucGFyZW50KCkuaXMoICIudWktZWZmZWN0cy13cmFwcGVyIiApICkgew0KCQkkLmVmZmVjdHMuc2F2ZSggZWwucGFyZW50KCksIHByb3BzICk7DQoJfSBlbHNlIHsNCgkJJC5lZmZlY3RzLnNhdmUoIGVsLCBwcm9wcyApOw0KCX0NCgllbC5zaG93KCk7DQoJd3JhcHBlciA9ICQuZWZmZWN0cy5jcmVhdGVXcmFwcGVyKCBlbCApLmNzcyh7DQoJCW92ZXJmbG93OiAiaGlkZGVuIg0KCX0pOw0KDQoJZGlzdGFuY2UgPSB3cmFwcGVyWyByZWYgXSgpOw0KCW1hcmdpbiA9IHBhcnNlRmxvYXQoIHdyYXBwZXIuY3NzKCByZWYyICkgKSB8fCAwOw0KDQoJYW5pbWF0aW9uWyByZWYgXSA9IHNob3cgPyBkaXN0YW5jZSA6IDA7DQoJaWYgKCAhbW90aW9uICkgew0KCQllbA0KCQkJLmNzcyggdmVydGljYWwgPyAiYm90dG9tIiA6ICJyaWdodCIsIDAgKQ0KCQkJLmNzcyggdmVydGljYWwgPyAidG9wIiA6ICJsZWZ0IiwgImF1dG8iICkNCgkJCS5jc3MoeyBwb3NpdGlvbjogImFic29sdXRlIiB9KTsNCg0KCQlhbmltYXRpb25bIHJlZjIgXSA9IHNob3cgPyBtYXJnaW4gOiBkaXN0YW5jZSArIG1hcmdpbjsNCgl9DQoNCgkvLyBzdGFydCBhdCAwIGlmIHdlIGFyZSBzaG93aW5nDQoJaWYgKCBzaG93ICkgew0KCQl3cmFwcGVyLmNzcyggcmVmLCAwICk7DQoJCWlmICggIW1vdGlvbiApIHsNCgkJCXdyYXBwZXIuY3NzKCByZWYyLCBtYXJnaW4gKyBkaXN0YW5jZSApOw0KCQl9DQoJfQ0KDQoJLy8gQW5pbWF0ZQ0KCXdyYXBwZXIuYW5pbWF0ZSggYW5pbWF0aW9uLCB7DQoJCWR1cmF0aW9uOiBvLmR1cmF0aW9uLA0KCQllYXNpbmc6IG8uZWFzaW5nLA0KCQlxdWV1ZTogZmFsc2UsDQoJCWNvbXBsZXRlOiBmdW5jdGlvbigpIHsNCgkJCWlmICggbW9kZSA9PT0gImhpZGUiICkgew0KCQkJCWVsLmhpZGUoKTsNCgkJCX0NCgkJCSQuZWZmZWN0cy5yZXN0b3JlKCBlbCwgcHJvcHMgKTsNCgkJCSQuZWZmZWN0cy5yZW1vdmVXcmFwcGVyKCBlbCApOw0KCQkJZG9uZSgpOw0KCQl9DQoJfSk7DQp9Ow0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIEVmZmVjdHMgQm91bmNlIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9ib3VuY2UtZWZmZWN0Lw0KICovDQoNCg0KdmFyIGVmZmVjdEJvdW5jZSA9ICQuZWZmZWN0cy5lZmZlY3QuYm91bmNlID0gZnVuY3Rpb24oIG8sIGRvbmUgKSB7DQoJdmFyIGVsID0gJCggdGhpcyApLA0KCQlwcm9wcyA9IFsgInBvc2l0aW9uIiwgInRvcCIsICJib3R0b20iLCAibGVmdCIsICJyaWdodCIsICJoZWlnaHQiLCAid2lkdGgiIF0sDQoNCgkJLy8gZGVmYXVsdHM6DQoJCW1vZGUgPSAkLmVmZmVjdHMuc2V0TW9kZSggZWwsIG8ubW9kZSB8fCAiZWZmZWN0IiApLA0KCQloaWRlID0gbW9kZSA9PT0gImhpZGUiLA0KCQlzaG93ID0gbW9kZSA9PT0gInNob3ciLA0KCQlkaXJlY3Rpb24gPSBvLmRpcmVjdGlvbiB8fCAidXAiLA0KCQlkaXN0YW5jZSA9IG8uZGlzdGFuY2UsDQoJCXRpbWVzID0gby50aW1lcyB8fCA1LA0KDQoJCS8vIG51bWJlciBvZiBpbnRlcm5hbCBhbmltYXRpb25zDQoJCWFuaW1zID0gdGltZXMgKiAyICsgKCBzaG93IHx8IGhpZGUgPyAxIDogMCApLA0KCQlzcGVlZCA9IG8uZHVyYXRpb24gLyBhbmltcywNCgkJZWFzaW5nID0gby5lYXNpbmcsDQoNCgkJLy8gdXRpbGl0eToNCgkJcmVmID0gKCBkaXJlY3Rpb24gPT09ICJ1cCIgfHwgZGlyZWN0aW9uID09PSAiZG93biIgKSA/ICJ0b3AiIDogImxlZnQiLA0KCQltb3Rpb24gPSAoIGRpcmVjdGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09ICJsZWZ0IiApLA0KCQlpLA0KCQl1cEFuaW0sDQoJCWRvd25BbmltLA0KDQoJCS8vIHdlIHdpbGwgbmVlZCB0byByZS1hc3NlbWJsZSB0aGUgcXVldWUgdG8gc3RhY2sgb3VyIGFuaW1hdGlvbnMgaW4gcGxhY2UNCgkJcXVldWUgPSBlbC5xdWV1ZSgpLA0KCQlxdWV1ZWxlbiA9IHF1ZXVlLmxlbmd0aDsNCg0KCS8vIEF2b2lkIHRvdWNoaW5nIG9wYWNpdHkgdG8gcHJldmVudCBjbGVhclR5cGUgYW5kIFBORyBpc3N1ZXMgaW4gSUUNCglpZiAoIHNob3cgfHwgaGlkZSApIHsNCgkJcHJvcHMucHVzaCggIm9wYWNpdHkiICk7DQoJfQ0KDQoJJC5lZmZlY3RzLnNhdmUoIGVsLCBwcm9wcyApOw0KCWVsLnNob3coKTsNCgkkLmVmZmVjdHMuY3JlYXRlV3JhcHBlciggZWwgKTsgLy8gQ3JlYXRlIFdyYXBwZXINCg0KCS8vIGRlZmF1bHQgZGlzdGFuY2UgZm9yIHRoZSBCSUdHRVNUIGJvdW5jZSBpcyB0aGUgb3V0ZXIgRGlzdGFuY2UgLyAzDQoJaWYgKCAhZGlzdGFuY2UgKSB7DQoJCWRpc3RhbmNlID0gZWxbIHJlZiA9PT0gInRvcCIgPyAib3V0ZXJIZWlnaHQiIDogIm91dGVyV2lkdGgiIF0oKSAvIDM7DQoJfQ0KDQoJaWYgKCBzaG93ICkgew0KCQlkb3duQW5pbSA9IHsgb3BhY2l0eTogMSB9Ow0KCQlkb3duQW5pbVsgcmVmIF0gPSAwOw0KDQoJCS8vIGlmIHdlIGFyZSBzaG93aW5nLCBmb3JjZSBvcGFjaXR5IDAgYW5kIHNldCB0aGUgaW5pdGlhbCBwb3NpdGlvbg0KCQkvLyB0aGVuIGRvIHRoZSAiZmlyc3QiIGFuaW1hdGlvbg0KCQllbC5jc3MoICJvcGFjaXR5IiwgMCApDQoJCQkuY3NzKCByZWYsIG1vdGlvbiA/IC1kaXN0YW5jZSAqIDIgOiBkaXN0YW5jZSAqIDIgKQ0KCQkJLmFuaW1hdGUoIGRvd25BbmltLCBzcGVlZCwgZWFzaW5nICk7DQoJfQ0KDQoJLy8gc3RhcnQgYXQgdGhlIHNtYWxsZXN0IGRpc3RhbmNlIGlmIHdlIGFyZSBoaWRpbmcNCglpZiAoIGhpZGUgKSB7DQoJCWRpc3RhbmNlID0gZGlzdGFuY2UgLyBNYXRoLnBvdyggMiwgdGltZXMgLSAxICk7DQoJfQ0KDQoJZG93bkFuaW0gPSB7fTsNCglkb3duQW5pbVsgcmVmIF0gPSAwOw0KCS8vIEJvdW5jZXMgdXAvZG93bi9sZWZ0L3JpZ2h0IHRoZW4gYmFjayB0byAwIC0tIHRpbWVzICogMiBhbmltYXRpb25zIGhhcHBlbiBoZXJlDQoJZm9yICggaSA9IDA7IGkgPCB0aW1lczsgaSsrICkgew0KCQl1cEFuaW0gPSB7fTsNCgkJdXBBbmltWyByZWYgXSA9ICggbW90aW9uID8gIi09IiA6ICIrPSIgKSArIGRpc3RhbmNlOw0KDQoJCWVsLmFuaW1hdGUoIHVwQW5pbSwgc3BlZWQsIGVhc2luZyApDQoJCQkuYW5pbWF0ZSggZG93bkFuaW0sIHNwZWVkLCBlYXNpbmcgKTsNCg0KCQlkaXN0YW5jZSA9IGhpZGUgPyBkaXN0YW5jZSAqIDIgOiBkaXN0YW5jZSAvIDI7DQoJfQ0KDQoJLy8gTGFzdCBCb3VuY2Ugd2hlbiBIaWRpbmcNCglpZiAoIGhpZGUgKSB7DQoJCXVwQW5pbSA9IHsgb3BhY2l0eTogMCB9Ow0KCQl1cEFuaW1bIHJlZiBdID0gKCBtb3Rpb24gPyAiLT0iIDogIis9IiApICsgZGlzdGFuY2U7DQoNCgkJZWwuYW5pbWF0ZSggdXBBbmltLCBzcGVlZCwgZWFzaW5nICk7DQoJfQ0KDQoJZWwucXVldWUoZnVuY3Rpb24oKSB7DQoJCWlmICggaGlkZSApIHsNCgkJCWVsLmhpZGUoKTsNCgkJfQ0KCQkkLmVmZmVjdHMucmVzdG9yZSggZWwsIHByb3BzICk7DQoJCSQuZWZmZWN0cy5yZW1vdmVXcmFwcGVyKCBlbCApOw0KCQlkb25lKCk7DQoJfSk7DQoNCgkvLyBpbmplY3QgYWxsIHRoZSBhbmltYXRpb25zIHdlIGp1c3QgcXVldWVkIHRvIGJlIGZpcnN0IGluIGxpbmUgKGFmdGVyICJpbnByb2dyZXNzIikNCglpZiAoIHF1ZXVlbGVuID4gMSkgew0KCQlxdWV1ZS5zcGxpY2UuYXBwbHkoIHF1ZXVlLA0KCQkJWyAxLCAwIF0uY29uY2F0KCBxdWV1ZS5zcGxpY2UoIHF1ZXVlbGVuLCBhbmltcyArIDEgKSApICk7DQoJfQ0KCWVsLmRlcXVldWUoKTsNCg0KfTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBFZmZlY3RzIENsaXAgMS4xMS4yDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICoNCiAqIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2NsaXAtZWZmZWN0Lw0KICovDQoNCg0KdmFyIGVmZmVjdENsaXAgPSAkLmVmZmVjdHMuZWZmZWN0LmNsaXAgPSBmdW5jdGlvbiggbywgZG9uZSApIHsNCgkvLyBDcmVhdGUgZWxlbWVudA0KCXZhciBlbCA9ICQoIHRoaXMgKSwNCgkJcHJvcHMgPSBbICJwb3NpdGlvbiIsICJ0b3AiLCAiYm90dG9tIiwgImxlZnQiLCAicmlnaHQiLCAiaGVpZ2h0IiwgIndpZHRoIiBdLA0KCQltb2RlID0gJC5lZmZlY3RzLnNldE1vZGUoIGVsLCBvLm1vZGUgfHwgImhpZGUiICksDQoJCXNob3cgPSBtb2RlID09PSAic2hvdyIsDQoJCWRpcmVjdGlvbiA9IG8uZGlyZWN0aW9uIHx8ICJ2ZXJ0aWNhbCIsDQoJCXZlcnQgPSBkaXJlY3Rpb24gPT09ICJ2ZXJ0aWNhbCIsDQoJCXNpemUgPSB2ZXJ0ID8gImhlaWdodCIgOiAid2lkdGgiLA0KCQlwb3NpdGlvbiA9IHZlcnQgPyAidG9wIiA6ICJsZWZ0IiwNCgkJYW5pbWF0aW9uID0ge30sDQoJCXdyYXBwZXIsIGFuaW1hdGUsIGRpc3RhbmNlOw0KDQoJLy8gU2F2ZSAmIFNob3cNCgkkLmVmZmVjdHMuc2F2ZSggZWwsIHByb3BzICk7DQoJZWwuc2hvdygpOw0KDQoJLy8gQ3JlYXRlIFdyYXBwZXINCgl3cmFwcGVyID0gJC5lZmZlY3RzLmNyZWF0ZVdyYXBwZXIoIGVsICkuY3NzKHsNCgkJb3ZlcmZsb3c6ICJoaWRkZW4iDQoJfSk7DQoJYW5pbWF0ZSA9ICggZWxbMF0udGFnTmFtZSA9PT0gIklNRyIgKSA/IHdyYXBwZXIgOiBlbDsNCglkaXN0YW5jZSA9IGFuaW1hdGVbIHNpemUgXSgpOw0KDQoJLy8gU2hpZnQNCglpZiAoIHNob3cgKSB7DQoJCWFuaW1hdGUuY3NzKCBzaXplLCAwICk7DQoJCWFuaW1hdGUuY3NzKCBwb3NpdGlvbiwgZGlzdGFuY2UgLyAyICk7DQoJfQ0KDQoJLy8gQ3JlYXRlIEFuaW1hdGlvbiBPYmplY3Q6DQoJYW5pbWF0aW9uWyBzaXplIF0gPSBzaG93ID8gZGlzdGFuY2UgOiAwOw0KCWFuaW1hdGlvblsgcG9zaXRpb24gXSA9IHNob3cgPyAwIDogZGlzdGFuY2UgLyAyOw0KDQoJLy8gQW5pbWF0ZQ0KCWFuaW1hdGUuYW5pbWF0ZSggYW5pbWF0aW9uLCB7DQoJCXF1ZXVlOiBmYWxzZSwNCgkJZHVyYXRpb246IG8uZHVyYXRpb24sDQoJCWVhc2luZzogby5lYXNpbmcsDQoJCWNvbXBsZXRlOiBmdW5jdGlvbigpIHsNCgkJCWlmICggIXNob3cgKSB7DQoJCQkJZWwuaGlkZSgpOw0KCQkJfQ0KCQkJJC5lZmZlY3RzLnJlc3RvcmUoIGVsLCBwcm9wcyApOw0KCQkJJC5lZmZlY3RzLnJlbW92ZVdyYXBwZXIoIGVsICk7DQoJCQlkb25lKCk7DQoJCX0NCgl9KTsNCg0KfTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBFZmZlY3RzIERyb3AgMS4xMS4yDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICoNCiAqIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2Ryb3AtZWZmZWN0Lw0KICovDQoNCg0KdmFyIGVmZmVjdERyb3AgPSAkLmVmZmVjdHMuZWZmZWN0LmRyb3AgPSBmdW5jdGlvbiggbywgZG9uZSApIHsNCg0KCXZhciBlbCA9ICQoIHRoaXMgKSwNCgkJcHJvcHMgPSBbICJwb3NpdGlvbiIsICJ0b3AiLCAiYm90dG9tIiwgImxlZnQiLCAicmlnaHQiLCAib3BhY2l0eSIsICJoZWlnaHQiLCAid2lkdGgiIF0sDQoJCW1vZGUgPSAkLmVmZmVjdHMuc2V0TW9kZSggZWwsIG8ubW9kZSB8fCAiaGlkZSIgKSwNCgkJc2hvdyA9IG1vZGUgPT09ICJzaG93IiwNCgkJZGlyZWN0aW9uID0gby5kaXJlY3Rpb24gfHwgImxlZnQiLA0KCQlyZWYgPSAoIGRpcmVjdGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09ICJkb3duIiApID8gInRvcCIgOiAibGVmdCIsDQoJCW1vdGlvbiA9ICggZGlyZWN0aW9uID09PSAidXAiIHx8IGRpcmVjdGlvbiA9PT0gImxlZnQiICkgPyAicG9zIiA6ICJuZWciLA0KCQlhbmltYXRpb24gPSB7DQoJCQlvcGFjaXR5OiBzaG93ID8gMSA6IDANCgkJfSwNCgkJZGlzdGFuY2U7DQoNCgkvLyBBZGp1c3QNCgkkLmVmZmVjdHMuc2F2ZSggZWwsIHByb3BzICk7DQoJZWwuc2hvdygpOw0KCSQuZWZmZWN0cy5jcmVhdGVXcmFwcGVyKCBlbCApOw0KDQoJZGlzdGFuY2UgPSBvLmRpc3RhbmNlIHx8IGVsWyByZWYgPT09ICJ0b3AiID8gIm91dGVySGVpZ2h0IiA6ICJvdXRlcldpZHRoIiBdKCB0cnVlICkgLyAyOw0KDQoJaWYgKCBzaG93ICkgew0KCQllbA0KCQkJLmNzcyggIm9wYWNpdHkiLCAwICkNCgkJCS5jc3MoIHJlZiwgbW90aW9uID09PSAicG9zIiA/IC1kaXN0YW5jZSA6IGRpc3RhbmNlICk7DQoJfQ0KDQoJLy8gQW5pbWF0aW9uDQoJYW5pbWF0aW9uWyByZWYgXSA9ICggc2hvdyA/DQoJCSggbW90aW9uID09PSAicG9zIiA/ICIrPSIgOiAiLT0iICkgOg0KCQkoIG1vdGlvbiA9PT0gInBvcyIgPyAiLT0iIDogIis9IiApICkgKw0KCQlkaXN0YW5jZTsNCg0KCS8vIEFuaW1hdGUNCgllbC5hbmltYXRlKCBhbmltYXRpb24sIHsNCgkJcXVldWU6IGZhbHNlLA0KCQlkdXJhdGlvbjogby5kdXJhdGlvbiwNCgkJZWFzaW5nOiBvLmVhc2luZywNCgkJY29tcGxldGU6IGZ1bmN0aW9uKCkgew0KCQkJaWYgKCBtb2RlID09PSAiaGlkZSIgKSB7DQoJCQkJZWwuaGlkZSgpOw0KCQkJfQ0KCQkJJC5lZmZlY3RzLnJlc3RvcmUoIGVsLCBwcm9wcyApOw0KCQkJJC5lZmZlY3RzLnJlbW92ZVdyYXBwZXIoIGVsICk7DQoJCQlkb25lKCk7DQoJCX0NCgl9KTsNCn07DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgRWZmZWN0cyBFeHBsb2RlIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9leHBsb2RlLWVmZmVjdC8NCiAqLw0KDQoNCnZhciBlZmZlY3RFeHBsb2RlID0gJC5lZmZlY3RzLmVmZmVjdC5leHBsb2RlID0gZnVuY3Rpb24oIG8sIGRvbmUgKSB7DQoNCgl2YXIgcm93cyA9IG8ucGllY2VzID8gTWF0aC5yb3VuZCggTWF0aC5zcXJ0KCBvLnBpZWNlcyApICkgOiAzLA0KCQljZWxscyA9IHJvd3MsDQoJCWVsID0gJCggdGhpcyApLA0KCQltb2RlID0gJC5lZmZlY3RzLnNldE1vZGUoIGVsLCBvLm1vZGUgfHwgImhpZGUiICksDQoJCXNob3cgPSBtb2RlID09PSAic2hvdyIsDQoNCgkJLy8gc2hvdyBhbmQgdGhlbiB2aXNpYmlsaXR5OmhpZGRlbiB0aGUgZWxlbWVudCBiZWZvcmUgY2FsY3VsYXRpbmcgb2Zmc2V0DQoJCW9mZnNldCA9IGVsLnNob3coKS5jc3MoICJ2aXNpYmlsaXR5IiwgImhpZGRlbiIgKS5vZmZzZXQoKSwNCg0KCQkvLyB3aWR0aCBhbmQgaGVpZ2h0IG9mIGEgcGllY2UNCgkJd2lkdGggPSBNYXRoLmNlaWwoIGVsLm91dGVyV2lkdGgoKSAvIGNlbGxzICksDQoJCWhlaWdodCA9IE1hdGguY2VpbCggZWwub3V0ZXJIZWlnaHQoKSAvIHJvd3MgKSwNCgkJcGllY2VzID0gW10sDQoNCgkJLy8gbG9vcA0KCQlpLCBqLCBsZWZ0LCB0b3AsIG14LCBteTsNCg0KCS8vIGNoaWxkcmVuIGFuaW1hdGUgY29tcGxldGU6DQoJZnVuY3Rpb24gY2hpbGRDb21wbGV0ZSgpIHsNCgkJcGllY2VzLnB1c2goIHRoaXMgKTsNCgkJaWYgKCBwaWVjZXMubGVuZ3RoID09PSByb3dzICogY2VsbHMgKSB7DQoJCQlhbmltQ29tcGxldGUoKTsNCgkJfQ0KCX0NCg0KCS8vIGNsb25lIHRoZSBlbGVtZW50IGZvciBlYWNoIHJvdyBhbmQgY2VsbC4NCglmb3IgKCBpID0gMDsgaSA8IHJvd3MgOyBpKysgKSB7IC8vID09PT4NCgkJdG9wID0gb2Zmc2V0LnRvcCArIGkgKiBoZWlnaHQ7DQoJCW15ID0gaSAtICggcm93cyAtIDEgKSAvIDIgOw0KDQoJCWZvciAoIGogPSAwOyBqIDwgY2VsbHMgOyBqKysgKSB7IC8vIHx8fA0KCQkJbGVmdCA9IG9mZnNldC5sZWZ0ICsgaiAqIHdpZHRoOw0KCQkJbXggPSBqIC0gKCBjZWxscyAtIDEgKSAvIDIgOw0KDQoJCQkvLyBDcmVhdGUgYSBjbG9uZSBvZiB0aGUgbm93IGhpZGRlbiBtYWluIGVsZW1lbnQgdGhhdCB3aWxsIGJlIGFic29sdXRlIHBvc2l0aW9uZWQNCgkJCS8vIHdpdGhpbiBhIHdyYXBwZXIgZGl2IG9mZiB0aGUgLWxlZnQgYW5kIC10b3AgZXF1YWwgdG8gc2l6ZSBvZiBvdXIgcGllY2VzDQoJCQllbA0KCQkJCS5jbG9uZSgpDQoJCQkJLmFwcGVuZFRvKCAiYm9keSIgKQ0KCQkJCS53cmFwKCAiPGRpdj48L2Rpdj4iICkNCgkJCQkuY3NzKHsNCgkJCQkJcG9zaXRpb246ICJhYnNvbHV0ZSIsDQoJCQkJCXZpc2liaWxpdHk6ICJ2aXNpYmxlIiwNCgkJCQkJbGVmdDogLWogKiB3aWR0aCwNCgkJCQkJdG9wOiAtaSAqIGhlaWdodA0KCQkJCX0pDQoNCgkJCS8vIHNlbGVjdCB0aGUgd3JhcHBlciAtIG1ha2UgaXQgb3ZlcmZsb3c6IGhpZGRlbiBhbmQgYWJzb2x1dGUgcG9zaXRpb25lZCBiYXNlZCBvbg0KCQkJLy8gd2hlcmUgdGhlIG9yaWdpbmFsIHdhcyBsb2NhdGVkICtsZWZ0IGFuZCArdG9wIGVxdWFsIHRvIHRoZSBzaXplIG9mIHBpZWNlcw0KCQkJCS5wYXJlbnQoKQ0KCQkJCS5hZGRDbGFzcyggInVpLWVmZmVjdHMtZXhwbG9kZSIgKQ0KCQkJCS5jc3Moew0KCQkJCQlwb3NpdGlvbjogImFic29sdXRlIiwNCgkJCQkJb3ZlcmZsb3c6ICJoaWRkZW4iLA0KCQkJCQl3aWR0aDogd2lkdGgsDQoJCQkJCWhlaWdodDogaGVpZ2h0LA0KCQkJCQlsZWZ0OiBsZWZ0ICsgKCBzaG93ID8gbXggKiB3aWR0aCA6IDAgKSwNCgkJCQkJdG9wOiB0b3AgKyAoIHNob3cgPyBteSAqIGhlaWdodCA6IDAgKSwNCgkJCQkJb3BhY2l0eTogc2hvdyA/IDAgOiAxDQoJCQkJfSkuYW5pbWF0ZSh7DQoJCQkJCWxlZnQ6IGxlZnQgKyAoIHNob3cgPyAwIDogbXggKiB3aWR0aCApLA0KCQkJCQl0b3A6IHRvcCArICggc2hvdyA/IDAgOiBteSAqIGhlaWdodCApLA0KCQkJCQlvcGFjaXR5OiBzaG93ID8gMSA6IDANCgkJCQl9LCBvLmR1cmF0aW9uIHx8IDUwMCwgby5lYXNpbmcsIGNoaWxkQ29tcGxldGUgKTsNCgkJfQ0KCX0NCg0KCWZ1bmN0aW9uIGFuaW1Db21wbGV0ZSgpIHsNCgkJZWwuY3NzKHsNCgkJCXZpc2liaWxpdHk6ICJ2aXNpYmxlIg0KCQl9KTsNCgkJJCggcGllY2VzICkucmVtb3ZlKCk7DQoJCWlmICggIXNob3cgKSB7DQoJCQllbC5oaWRlKCk7DQoJCX0NCgkJZG9uZSgpOw0KCX0NCn07DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgRWZmZWN0cyBGYWRlIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9mYWRlLWVmZmVjdC8NCiAqLw0KDQoNCnZhciBlZmZlY3RGYWRlID0gJC5lZmZlY3RzLmVmZmVjdC5mYWRlID0gZnVuY3Rpb24oIG8sIGRvbmUgKSB7DQoJdmFyIGVsID0gJCggdGhpcyApLA0KCQltb2RlID0gJC5lZmZlY3RzLnNldE1vZGUoIGVsLCBvLm1vZGUgfHwgInRvZ2dsZSIgKTsNCg0KCWVsLmFuaW1hdGUoew0KCQlvcGFjaXR5OiBtb2RlDQoJfSwgew0KCQlxdWV1ZTogZmFsc2UsDQoJCWR1cmF0aW9uOiBvLmR1cmF0aW9uLA0KCQllYXNpbmc6IG8uZWFzaW5nLA0KCQljb21wbGV0ZTogZG9uZQ0KCX0pOw0KfTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBFZmZlY3RzIEZvbGQgMS4xMS4yDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICoNCiAqIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2ZvbGQtZWZmZWN0Lw0KICovDQoNCg0KdmFyIGVmZmVjdEZvbGQgPSAkLmVmZmVjdHMuZWZmZWN0LmZvbGQgPSBmdW5jdGlvbiggbywgZG9uZSApIHsNCg0KCS8vIENyZWF0ZSBlbGVtZW50DQoJdmFyIGVsID0gJCggdGhpcyApLA0KCQlwcm9wcyA9IFsgInBvc2l0aW9uIiwgInRvcCIsICJib3R0b20iLCAibGVmdCIsICJyaWdodCIsICJoZWlnaHQiLCAid2lkdGgiIF0sDQoJCW1vZGUgPSAkLmVmZmVjdHMuc2V0TW9kZSggZWwsIG8ubW9kZSB8fCAiaGlkZSIgKSwNCgkJc2hvdyA9IG1vZGUgPT09ICJzaG93IiwNCgkJaGlkZSA9IG1vZGUgPT09ICJoaWRlIiwNCgkJc2l6ZSA9IG8uc2l6ZSB8fCAxNSwNCgkJcGVyY2VudCA9IC8oWzAtOV0rKSUvLmV4ZWMoIHNpemUgKSwNCgkJaG9yaXpGaXJzdCA9ICEhby5ob3JpekZpcnN0LA0KCQl3aWR0aEZpcnN0ID0gc2hvdyAhPT0gaG9yaXpGaXJzdCwNCgkJcmVmID0gd2lkdGhGaXJzdCA/IFsgIndpZHRoIiwgImhlaWdodCIgXSA6IFsgImhlaWdodCIsICJ3aWR0aCIgXSwNCgkJZHVyYXRpb24gPSBvLmR1cmF0aW9uIC8gMiwNCgkJd3JhcHBlciwgZGlzdGFuY2UsDQoJCWFuaW1hdGlvbjEgPSB7fSwNCgkJYW5pbWF0aW9uMiA9IHt9Ow0KDQoJJC5lZmZlY3RzLnNhdmUoIGVsLCBwcm9wcyApOw0KCWVsLnNob3coKTsNCg0KCS8vIENyZWF0ZSBXcmFwcGVyDQoJd3JhcHBlciA9ICQuZWZmZWN0cy5jcmVhdGVXcmFwcGVyKCBlbCApLmNzcyh7DQoJCW92ZXJmbG93OiAiaGlkZGVuIg0KCX0pOw0KCWRpc3RhbmNlID0gd2lkdGhGaXJzdCA/DQoJCVsgd3JhcHBlci53aWR0aCgpLCB3cmFwcGVyLmhlaWdodCgpIF0gOg0KCQlbIHdyYXBwZXIuaGVpZ2h0KCksIHdyYXBwZXIud2lkdGgoKSBdOw0KDQoJaWYgKCBwZXJjZW50ICkgew0KCQlzaXplID0gcGFyc2VJbnQoIHBlcmNlbnRbIDEgXSwgMTAgKSAvIDEwMCAqIGRpc3RhbmNlWyBoaWRlID8gMCA6IDEgXTsNCgl9DQoJaWYgKCBzaG93ICkgew0KCQl3cmFwcGVyLmNzcyggaG9yaXpGaXJzdCA/IHsNCgkJCWhlaWdodDogMCwNCgkJCXdpZHRoOiBzaXplDQoJCX0gOiB7DQoJCQloZWlnaHQ6IHNpemUsDQoJCQl3aWR0aDogMA0KCQl9KTsNCgl9DQoNCgkvLyBBbmltYXRpb24NCglhbmltYXRpb24xWyByZWZbIDAgXSBdID0gc2hvdyA/IGRpc3RhbmNlWyAwIF0gOiBzaXplOw0KCWFuaW1hdGlvbjJbIHJlZlsgMSBdIF0gPSBzaG93ID8gZGlzdGFuY2VbIDEgXSA6IDA7DQoNCgkvLyBBbmltYXRlDQoJd3JhcHBlcg0KCQkuYW5pbWF0ZSggYW5pbWF0aW9uMSwgZHVyYXRpb24sIG8uZWFzaW5nICkNCgkJLmFuaW1hdGUoIGFuaW1hdGlvbjIsIGR1cmF0aW9uLCBvLmVhc2luZywgZnVuY3Rpb24oKSB7DQoJCQlpZiAoIGhpZGUgKSB7DQoJCQkJZWwuaGlkZSgpOw0KCQkJfQ0KCQkJJC5lZmZlY3RzLnJlc3RvcmUoIGVsLCBwcm9wcyApOw0KCQkJJC5lZmZlY3RzLnJlbW92ZVdyYXBwZXIoIGVsICk7DQoJCQlkb25lKCk7DQoJCX0pOw0KDQp9Ow0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIEVmZmVjdHMgSGlnaGxpZ2h0IDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9oaWdobGlnaHQtZWZmZWN0Lw0KICovDQoNCg0KdmFyIGVmZmVjdEhpZ2hsaWdodCA9ICQuZWZmZWN0cy5lZmZlY3QuaGlnaGxpZ2h0ID0gZnVuY3Rpb24oIG8sIGRvbmUgKSB7DQoJdmFyIGVsZW0gPSAkKCB0aGlzICksDQoJCXByb3BzID0gWyAiYmFja2dyb3VuZEltYWdlIiwgImJhY2tncm91bmRDb2xvciIsICJvcGFjaXR5IiBdLA0KCQltb2RlID0gJC5lZmZlY3RzLnNldE1vZGUoIGVsZW0sIG8ubW9kZSB8fCAic2hvdyIgKSwNCgkJYW5pbWF0aW9uID0gew0KCQkJYmFja2dyb3VuZENvbG9yOiBlbGVtLmNzcyggImJhY2tncm91bmRDb2xvciIgKQ0KCQl9Ow0KDQoJaWYgKG1vZGUgPT09ICJoaWRlIikgew0KCQlhbmltYXRpb24ub3BhY2l0eSA9IDA7DQoJfQ0KDQoJJC5lZmZlY3RzLnNhdmUoIGVsZW0sIHByb3BzICk7DQoNCgllbGVtDQoJCS5zaG93KCkNCgkJLmNzcyh7DQoJCQliYWNrZ3JvdW5kSW1hZ2U6ICJub25lIiwNCgkJCWJhY2tncm91bmRDb2xvcjogby5jb2xvciB8fCAiI2ZmZmY5OSINCgkJfSkNCgkJLmFuaW1hdGUoIGFuaW1hdGlvbiwgew0KCQkJcXVldWU6IGZhbHNlLA0KCQkJZHVyYXRpb246IG8uZHVyYXRpb24sDQoJCQllYXNpbmc6IG8uZWFzaW5nLA0KCQkJY29tcGxldGU6IGZ1bmN0aW9uKCkgew0KCQkJCWlmICggbW9kZSA9PT0gImhpZGUiICkgew0KCQkJCQllbGVtLmhpZGUoKTsNCgkJCQl9DQoJCQkJJC5lZmZlY3RzLnJlc3RvcmUoIGVsZW0sIHByb3BzICk7DQoJCQkJZG9uZSgpOw0KCQkJfQ0KCQl9KTsNCn07DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgRWZmZWN0cyBTaXplIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9zaXplLWVmZmVjdC8NCiAqLw0KDQoNCnZhciBlZmZlY3RTaXplID0gJC5lZmZlY3RzLmVmZmVjdC5zaXplID0gZnVuY3Rpb24oIG8sIGRvbmUgKSB7DQoNCgkvLyBDcmVhdGUgZWxlbWVudA0KCXZhciBvcmlnaW5hbCwgYmFzZWxpbmUsIGZhY3RvciwNCgkJZWwgPSAkKCB0aGlzICksDQoJCXByb3BzMCA9IFsgInBvc2l0aW9uIiwgInRvcCIsICJib3R0b20iLCAibGVmdCIsICJyaWdodCIsICJ3aWR0aCIsICJoZWlnaHQiLCAib3ZlcmZsb3ciLCAib3BhY2l0eSIgXSwNCg0KCQkvLyBBbHdheXMgcmVzdG9yZQ0KCQlwcm9wczEgPSBbICJwb3NpdGlvbiIsICJ0b3AiLCAiYm90dG9tIiwgImxlZnQiLCAicmlnaHQiLCAib3ZlcmZsb3ciLCAib3BhY2l0eSIgXSwNCg0KCQkvLyBDb3B5IGZvciBjaGlsZHJlbg0KCQlwcm9wczIgPSBbICJ3aWR0aCIsICJoZWlnaHQiLCAib3ZlcmZsb3ciIF0sDQoJCWNQcm9wcyA9IFsgImZvbnRTaXplIiBdLA0KCQl2UHJvcHMgPSBbICJib3JkZXJUb3BXaWR0aCIsICJib3JkZXJCb3R0b21XaWR0aCIsICJwYWRkaW5nVG9wIiwgInBhZGRpbmdCb3R0b20iIF0sDQoJCWhQcm9wcyA9IFsgImJvcmRlckxlZnRXaWR0aCIsICJib3JkZXJSaWdodFdpZHRoIiwgInBhZGRpbmdMZWZ0IiwgInBhZGRpbmdSaWdodCIgXSwNCg0KCQkvLyBTZXQgb3B0aW9ucw0KCQltb2RlID0gJC5lZmZlY3RzLnNldE1vZGUoIGVsLCBvLm1vZGUgfHwgImVmZmVjdCIgKSwNCgkJcmVzdG9yZSA9IG8ucmVzdG9yZSB8fCBtb2RlICE9PSAiZWZmZWN0IiwNCgkJc2NhbGUgPSBvLnNjYWxlIHx8ICJib3RoIiwNCgkJb3JpZ2luID0gby5vcmlnaW4gfHwgWyAibWlkZGxlIiwgImNlbnRlciIgXSwNCgkJcG9zaXRpb24gPSBlbC5jc3MoICJwb3NpdGlvbiIgKSwNCgkJcHJvcHMgPSByZXN0b3JlID8gcHJvcHMwIDogcHJvcHMxLA0KCQl6ZXJvID0gew0KCQkJaGVpZ2h0OiAwLA0KCQkJd2lkdGg6IDAsDQoJCQlvdXRlckhlaWdodDogMCwNCgkJCW91dGVyV2lkdGg6IDANCgkJfTsNCg0KCWlmICggbW9kZSA9PT0gInNob3ciICkgew0KCQllbC5zaG93KCk7DQoJfQ0KCW9yaWdpbmFsID0gew0KCQloZWlnaHQ6IGVsLmhlaWdodCgpLA0KCQl3aWR0aDogZWwud2lkdGgoKSwNCgkJb3V0ZXJIZWlnaHQ6IGVsLm91dGVySGVpZ2h0KCksDQoJCW91dGVyV2lkdGg6IGVsLm91dGVyV2lkdGgoKQ0KCX07DQoNCglpZiAoIG8ubW9kZSA9PT0gInRvZ2dsZSIgJiYgbW9kZSA9PT0gInNob3ciICkgew0KCQllbC5mcm9tID0gby50byB8fCB6ZXJvOw0KCQllbC50byA9IG8uZnJvbSB8fCBvcmlnaW5hbDsNCgl9IGVsc2Ugew0KCQllbC5mcm9tID0gby5mcm9tIHx8ICggbW9kZSA9PT0gInNob3ciID8gemVybyA6IG9yaWdpbmFsICk7DQoJCWVsLnRvID0gby50byB8fCAoIG1vZGUgPT09ICJoaWRlIiA/IHplcm8gOiBvcmlnaW5hbCApOw0KCX0NCg0KCS8vIFNldCBzY2FsaW5nIGZhY3Rvcg0KCWZhY3RvciA9IHsNCgkJZnJvbTogew0KCQkJeTogZWwuZnJvbS5oZWlnaHQgLyBvcmlnaW5hbC5oZWlnaHQsDQoJCQl4OiBlbC5mcm9tLndpZHRoIC8gb3JpZ2luYWwud2lkdGgNCgkJfSwNCgkJdG86IHsNCgkJCXk6IGVsLnRvLmhlaWdodCAvIG9yaWdpbmFsLmhlaWdodCwNCgkJCXg6IGVsLnRvLndpZHRoIC8gb3JpZ2luYWwud2lkdGgNCgkJfQ0KCX07DQoNCgkvLyBTY2FsZSB0aGUgY3NzIGJveA0KCWlmICggc2NhbGUgPT09ICJib3giIHx8IHNjYWxlID09PSAiYm90aCIgKSB7DQoNCgkJLy8gVmVydGljYWwgcHJvcHMgc2NhbGluZw0KCQlpZiAoIGZhY3Rvci5mcm9tLnkgIT09IGZhY3Rvci50by55ICkgew0KCQkJcHJvcHMgPSBwcm9wcy5jb25jYXQoIHZQcm9wcyApOw0KCQkJZWwuZnJvbSA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBlbCwgdlByb3BzLCBmYWN0b3IuZnJvbS55LCBlbC5mcm9tICk7DQoJCQllbC50byA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBlbCwgdlByb3BzLCBmYWN0b3IudG8ueSwgZWwudG8gKTsNCgkJfQ0KDQoJCS8vIEhvcml6b250YWwgcHJvcHMgc2NhbGluZw0KCQlpZiAoIGZhY3Rvci5mcm9tLnggIT09IGZhY3Rvci50by54ICkgew0KCQkJcHJvcHMgPSBwcm9wcy5jb25jYXQoIGhQcm9wcyApOw0KCQkJZWwuZnJvbSA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBlbCwgaFByb3BzLCBmYWN0b3IuZnJvbS54LCBlbC5mcm9tICk7DQoJCQllbC50byA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBlbCwgaFByb3BzLCBmYWN0b3IudG8ueCwgZWwudG8gKTsNCgkJfQ0KCX0NCg0KCS8vIFNjYWxlIHRoZSBjb250ZW50DQoJaWYgKCBzY2FsZSA9PT0gImNvbnRlbnQiIHx8IHNjYWxlID09PSAiYm90aCIgKSB7DQoNCgkJLy8gVmVydGljYWwgcHJvcHMgc2NhbGluZw0KCQlpZiAoIGZhY3Rvci5mcm9tLnkgIT09IGZhY3Rvci50by55ICkgew0KCQkJcHJvcHMgPSBwcm9wcy5jb25jYXQoIGNQcm9wcyApLmNvbmNhdCggcHJvcHMyICk7DQoJCQllbC5mcm9tID0gJC5lZmZlY3RzLnNldFRyYW5zaXRpb24oIGVsLCBjUHJvcHMsIGZhY3Rvci5mcm9tLnksIGVsLmZyb20gKTsNCgkJCWVsLnRvID0gJC5lZmZlY3RzLnNldFRyYW5zaXRpb24oIGVsLCBjUHJvcHMsIGZhY3Rvci50by55LCBlbC50byApOw0KCQl9DQoJfQ0KDQoJJC5lZmZlY3RzLnNhdmUoIGVsLCBwcm9wcyApOw0KCWVsLnNob3coKTsNCgkkLmVmZmVjdHMuY3JlYXRlV3JhcHBlciggZWwgKTsNCgllbC5jc3MoICJvdmVyZmxvdyIsICJoaWRkZW4iICkuY3NzKCBlbC5mcm9tICk7DQoNCgkvLyBBZGp1c3QNCglpZiAob3JpZ2luKSB7IC8vIENhbGN1bGF0ZSBiYXNlbGluZSBzaGlmdHMNCgkJYmFzZWxpbmUgPSAkLmVmZmVjdHMuZ2V0QmFzZWxpbmUoIG9yaWdpbiwgb3JpZ2luYWwgKTsNCgkJZWwuZnJvbS50b3AgPSAoIG9yaWdpbmFsLm91dGVySGVpZ2h0IC0gZWwub3V0ZXJIZWlnaHQoKSApICogYmFzZWxpbmUueTsNCgkJZWwuZnJvbS5sZWZ0ID0gKCBvcmlnaW5hbC5vdXRlcldpZHRoIC0gZWwub3V0ZXJXaWR0aCgpICkgKiBiYXNlbGluZS54Ow0KCQllbC50by50b3AgPSAoIG9yaWdpbmFsLm91dGVySGVpZ2h0IC0gZWwudG8ub3V0ZXJIZWlnaHQgKSAqIGJhc2VsaW5lLnk7DQoJCWVsLnRvLmxlZnQgPSAoIG9yaWdpbmFsLm91dGVyV2lkdGggLSBlbC50by5vdXRlcldpZHRoICkgKiBiYXNlbGluZS54Ow0KCX0NCgllbC5jc3MoIGVsLmZyb20gKTsgLy8gc2V0IHRvcCAmIGxlZnQNCg0KCS8vIEFuaW1hdGUNCglpZiAoIHNjYWxlID09PSAiY29udGVudCIgfHwgc2NhbGUgPT09ICJib3RoIiApIHsgLy8gU2NhbGUgdGhlIGNoaWxkcmVuDQoNCgkJLy8gQWRkIG1hcmdpbnMvZm9udC1zaXplDQoJCXZQcm9wcyA9IHZQcm9wcy5jb25jYXQoWyAibWFyZ2luVG9wIiwgIm1hcmdpbkJvdHRvbSIgXSkuY29uY2F0KGNQcm9wcyk7DQoJCWhQcm9wcyA9IGhQcm9wcy5jb25jYXQoWyAibWFyZ2luTGVmdCIsICJtYXJnaW5SaWdodCIgXSk7DQoJCXByb3BzMiA9IHByb3BzMC5jb25jYXQodlByb3BzKS5jb25jYXQoaFByb3BzKTsNCg0KCQllbC5maW5kKCAiKlt3aWR0aF0iICkuZWFjaCggZnVuY3Rpb24oKSB7DQoJCQl2YXIgY2hpbGQgPSAkKCB0aGlzICksDQoJCQkJY19vcmlnaW5hbCA9IHsNCgkJCQkJaGVpZ2h0OiBjaGlsZC5oZWlnaHQoKSwNCgkJCQkJd2lkdGg6IGNoaWxkLndpZHRoKCksDQoJCQkJCW91dGVySGVpZ2h0OiBjaGlsZC5vdXRlckhlaWdodCgpLA0KCQkJCQlvdXRlcldpZHRoOiBjaGlsZC5vdXRlcldpZHRoKCkNCgkJCQl9Ow0KCQkJaWYgKHJlc3RvcmUpIHsNCgkJCQkkLmVmZmVjdHMuc2F2ZShjaGlsZCwgcHJvcHMyKTsNCgkJCX0NCg0KCQkJY2hpbGQuZnJvbSA9IHsNCgkJCQloZWlnaHQ6IGNfb3JpZ2luYWwuaGVpZ2h0ICogZmFjdG9yLmZyb20ueSwNCgkJCQl3aWR0aDogY19vcmlnaW5hbC53aWR0aCAqIGZhY3Rvci5mcm9tLngsDQoJCQkJb3V0ZXJIZWlnaHQ6IGNfb3JpZ2luYWwub3V0ZXJIZWlnaHQgKiBmYWN0b3IuZnJvbS55LA0KCQkJCW91dGVyV2lkdGg6IGNfb3JpZ2luYWwub3V0ZXJXaWR0aCAqIGZhY3Rvci5mcm9tLngNCgkJCX07DQoJCQljaGlsZC50byA9IHsNCgkJCQloZWlnaHQ6IGNfb3JpZ2luYWwuaGVpZ2h0ICogZmFjdG9yLnRvLnksDQoJCQkJd2lkdGg6IGNfb3JpZ2luYWwud2lkdGggKiBmYWN0b3IudG8ueCwNCgkJCQlvdXRlckhlaWdodDogY19vcmlnaW5hbC5oZWlnaHQgKiBmYWN0b3IudG8ueSwNCgkJCQlvdXRlcldpZHRoOiBjX29yaWdpbmFsLndpZHRoICogZmFjdG9yLnRvLngNCgkJCX07DQoNCgkJCS8vIFZlcnRpY2FsIHByb3BzIHNjYWxpbmcNCgkJCWlmICggZmFjdG9yLmZyb20ueSAhPT0gZmFjdG9yLnRvLnkgKSB7DQoJCQkJY2hpbGQuZnJvbSA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBjaGlsZCwgdlByb3BzLCBmYWN0b3IuZnJvbS55LCBjaGlsZC5mcm9tICk7DQoJCQkJY2hpbGQudG8gPSAkLmVmZmVjdHMuc2V0VHJhbnNpdGlvbiggY2hpbGQsIHZQcm9wcywgZmFjdG9yLnRvLnksIGNoaWxkLnRvICk7DQoJCQl9DQoNCgkJCS8vIEhvcml6b250YWwgcHJvcHMgc2NhbGluZw0KCQkJaWYgKCBmYWN0b3IuZnJvbS54ICE9PSBmYWN0b3IudG8ueCApIHsNCgkJCQljaGlsZC5mcm9tID0gJC5lZmZlY3RzLnNldFRyYW5zaXRpb24oIGNoaWxkLCBoUHJvcHMsIGZhY3Rvci5mcm9tLngsIGNoaWxkLmZyb20gKTsNCgkJCQljaGlsZC50byA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBjaGlsZCwgaFByb3BzLCBmYWN0b3IudG8ueCwgY2hpbGQudG8gKTsNCgkJCX0NCg0KCQkJLy8gQW5pbWF0ZSBjaGlsZHJlbg0KCQkJY2hpbGQuY3NzKCBjaGlsZC5mcm9tICk7DQoJCQljaGlsZC5hbmltYXRlKCBjaGlsZC50bywgby5kdXJhdGlvbiwgby5lYXNpbmcsIGZ1bmN0aW9uKCkgew0KDQoJCQkJLy8gUmVzdG9yZSBjaGlsZHJlbg0KCQkJCWlmICggcmVzdG9yZSApIHsNCgkJCQkJJC5lZmZlY3RzLnJlc3RvcmUoIGNoaWxkLCBwcm9wczIgKTsNCgkJCQl9DQoJCQl9KTsNCgkJfSk7DQoJfQ0KDQoJLy8gQW5pbWF0ZQ0KCWVsLmFuaW1hdGUoIGVsLnRvLCB7DQoJCXF1ZXVlOiBmYWxzZSwNCgkJZHVyYXRpb246IG8uZHVyYXRpb24sDQoJCWVhc2luZzogby5lYXNpbmcsDQoJCWNvbXBsZXRlOiBmdW5jdGlvbigpIHsNCgkJCWlmICggZWwudG8ub3BhY2l0eSA9PT0gMCApIHsNCgkJCQllbC5jc3MoICJvcGFjaXR5IiwgZWwuZnJvbS5vcGFjaXR5ICk7DQoJCQl9DQoJCQlpZiAoIG1vZGUgPT09ICJoaWRlIiApIHsNCgkJCQllbC5oaWRlKCk7DQoJCQl9DQoJCQkkLmVmZmVjdHMucmVzdG9yZSggZWwsIHByb3BzICk7DQoJCQlpZiAoICFyZXN0b3JlICkgew0KDQoJCQkJLy8gd2UgbmVlZCB0byBjYWxjdWxhdGUgb3VyIG5ldyBwb3NpdGlvbmluZyBiYXNlZCBvbiB0aGUgc2NhbGluZw0KCQkJCWlmICggcG9zaXRpb24gPT09ICJzdGF0aWMiICkgew0KCQkJCQllbC5jc3Moew0KCQkJCQkJcG9zaXRpb246ICJyZWxhdGl2ZSIsDQoJCQkJCQl0b3A6IGVsLnRvLnRvcCwNCgkJCQkJCWxlZnQ6IGVsLnRvLmxlZnQNCgkJCQkJfSk7DQoJCQkJfSBlbHNlIHsNCgkJCQkJJC5lYWNoKFsgInRvcCIsICJsZWZ0IiBdLCBmdW5jdGlvbiggaWR4LCBwb3MgKSB7DQoJCQkJCQllbC5jc3MoIHBvcywgZnVuY3Rpb24oIF8sIHN0ciApIHsNCgkJCQkJCQl2YXIgdmFsID0gcGFyc2VJbnQoIHN0ciwgMTAgKSwNCgkJCQkJCQkJdG9SZWYgPSBpZHggPyBlbC50by5sZWZ0IDogZWwudG8udG9wOw0KDQoJCQkJCQkJLy8gaWYgb3JpZ2luYWwgd2FzICJhdXRvIiwgcmVjYWxjdWxhdGUgdGhlIG5ldyB2YWx1ZSBmcm9tIHdyYXBwZXINCgkJCQkJCQlpZiAoIHN0ciA9PT0gImF1dG8iICkgew0KCQkJCQkJCQlyZXR1cm4gdG9SZWYgKyAicHgiOw0KCQkJCQkJCX0NCg0KCQkJCQkJCXJldHVybiB2YWwgKyB0b1JlZiArICJweCI7DQoJCQkJCQl9KTsNCgkJCQkJfSk7DQoJCQkJfQ0KCQkJfQ0KDQoJCQkkLmVmZmVjdHMucmVtb3ZlV3JhcHBlciggZWwgKTsNCgkJCWRvbmUoKTsNCgkJfQ0KCX0pOw0KDQp9Ow0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIEVmZmVjdHMgU2NhbGUgMS4xMS4yDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICoNCiAqIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3NjYWxlLWVmZmVjdC8NCiAqLw0KDQoNCnZhciBlZmZlY3RTY2FsZSA9ICQuZWZmZWN0cy5lZmZlY3Quc2NhbGUgPSBmdW5jdGlvbiggbywgZG9uZSApIHsNCg0KCS8vIENyZWF0ZSBlbGVtZW50DQoJdmFyIGVsID0gJCggdGhpcyApLA0KCQlvcHRpb25zID0gJC5leHRlbmQoIHRydWUsIHt9LCBvICksDQoJCW1vZGUgPSAkLmVmZmVjdHMuc2V0TW9kZSggZWwsIG8ubW9kZSB8fCAiZWZmZWN0IiApLA0KCQlwZXJjZW50ID0gcGFyc2VJbnQoIG8ucGVyY2VudCwgMTAgKSB8fA0KCQkJKCBwYXJzZUludCggby5wZXJjZW50LCAxMCApID09PSAwID8gMCA6ICggbW9kZSA9PT0gImhpZGUiID8gMCA6IDEwMCApICksDQoJCWRpcmVjdGlvbiA9IG8uZGlyZWN0aW9uIHx8ICJib3RoIiwNCgkJb3JpZ2luID0gby5vcmlnaW4sDQoJCW9yaWdpbmFsID0gew0KCQkJaGVpZ2h0OiBlbC5oZWlnaHQoKSwNCgkJCXdpZHRoOiBlbC53aWR0aCgpLA0KCQkJb3V0ZXJIZWlnaHQ6IGVsLm91dGVySGVpZ2h0KCksDQoJCQlvdXRlcldpZHRoOiBlbC5vdXRlcldpZHRoKCkNCgkJfSwNCgkJZmFjdG9yID0gew0KCQkJeTogZGlyZWN0aW9uICE9PSAiaG9yaXpvbnRhbCIgPyAocGVyY2VudCAvIDEwMCkgOiAxLA0KCQkJeDogZGlyZWN0aW9uICE9PSAidmVydGljYWwiID8gKHBlcmNlbnQgLyAxMDApIDogMQ0KCQl9Ow0KDQoJLy8gV2UgYXJlIGdvaW5nIHRvIHBhc3MgdGhpcyBlZmZlY3QgdG8gdGhlIHNpemUgZWZmZWN0Og0KCW9wdGlvbnMuZWZmZWN0ID0gInNpemUiOw0KCW9wdGlvbnMucXVldWUgPSBmYWxzZTsNCglvcHRpb25zLmNvbXBsZXRlID0gZG9uZTsNCg0KCS8vIFNldCBkZWZhdWx0IG9yaWdpbiBhbmQgcmVzdG9yZSBmb3Igc2hvdy9oaWRlDQoJaWYgKCBtb2RlICE9PSAiZWZmZWN0IiApIHsNCgkJb3B0aW9ucy5vcmlnaW4gPSBvcmlnaW4gfHwgWyAibWlkZGxlIiwgImNlbnRlciIgXTsNCgkJb3B0aW9ucy5yZXN0b3JlID0gdHJ1ZTsNCgl9DQoNCglvcHRpb25zLmZyb20gPSBvLmZyb20gfHwgKCBtb2RlID09PSAic2hvdyIgPyB7DQoJCWhlaWdodDogMCwNCgkJd2lkdGg6IDAsDQoJCW91dGVySGVpZ2h0OiAwLA0KCQlvdXRlcldpZHRoOiAwDQoJfSA6IG9yaWdpbmFsICk7DQoJb3B0aW9ucy50byA9IHsNCgkJaGVpZ2h0OiBvcmlnaW5hbC5oZWlnaHQgKiBmYWN0b3IueSwNCgkJd2lkdGg6IG9yaWdpbmFsLndpZHRoICogZmFjdG9yLngsDQoJCW91dGVySGVpZ2h0OiBvcmlnaW5hbC5vdXRlckhlaWdodCAqIGZhY3Rvci55LA0KCQlvdXRlcldpZHRoOiBvcmlnaW5hbC5vdXRlcldpZHRoICogZmFjdG9yLngNCgl9Ow0KDQoJLy8gRmFkZSBvcHRpb24gdG8gc3VwcG9ydCBwdWZmDQoJaWYgKCBvcHRpb25zLmZhZGUgKSB7DQoJCWlmICggbW9kZSA9PT0gInNob3ciICkgew0KCQkJb3B0aW9ucy5mcm9tLm9wYWNpdHkgPSAwOw0KCQkJb3B0aW9ucy50by5vcGFjaXR5ID0gMTsNCgkJfQ0KCQlpZiAoIG1vZGUgPT09ICJoaWRlIiApIHsNCgkJCW9wdGlvbnMuZnJvbS5vcGFjaXR5ID0gMTsNCgkJCW9wdGlvbnMudG8ub3BhY2l0eSA9IDA7DQoJCX0NCgl9DQoNCgkvLyBBbmltYXRlDQoJZWwuZWZmZWN0KCBvcHRpb25zICk7DQoNCn07DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgRWZmZWN0cyBQdWZmIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9wdWZmLWVmZmVjdC8NCiAqLw0KDQoNCnZhciBlZmZlY3RQdWZmID0gJC5lZmZlY3RzLmVmZmVjdC5wdWZmID0gZnVuY3Rpb24oIG8sIGRvbmUgKSB7DQoJdmFyIGVsZW0gPSAkKCB0aGlzICksDQoJCW1vZGUgPSAkLmVmZmVjdHMuc2V0TW9kZSggZWxlbSwgby5tb2RlIHx8ICJoaWRlIiApLA0KCQloaWRlID0gbW9kZSA9PT0gImhpZGUiLA0KCQlwZXJjZW50ID0gcGFyc2VJbnQoIG8ucGVyY2VudCwgMTAgKSB8fCAxNTAsDQoJCWZhY3RvciA9IHBlcmNlbnQgLyAxMDAsDQoJCW9yaWdpbmFsID0gew0KCQkJaGVpZ2h0OiBlbGVtLmhlaWdodCgpLA0KCQkJd2lkdGg6IGVsZW0ud2lkdGgoKSwNCgkJCW91dGVySGVpZ2h0OiBlbGVtLm91dGVySGVpZ2h0KCksDQoJCQlvdXRlcldpZHRoOiBlbGVtLm91dGVyV2lkdGgoKQ0KCQl9Ow0KDQoJJC5leHRlbmQoIG8sIHsNCgkJZWZmZWN0OiAic2NhbGUiLA0KCQlxdWV1ZTogZmFsc2UsDQoJCWZhZGU6IHRydWUsDQoJCW1vZGU6IG1vZGUsDQoJCWNvbXBsZXRlOiBkb25lLA0KCQlwZXJjZW50OiBoaWRlID8gcGVyY2VudCA6IDEwMCwNCgkJZnJvbTogaGlkZSA/DQoJCQlvcmlnaW5hbCA6DQoJCQl7DQoJCQkJaGVpZ2h0OiBvcmlnaW5hbC5oZWlnaHQgKiBmYWN0b3IsDQoJCQkJd2lkdGg6IG9yaWdpbmFsLndpZHRoICogZmFjdG9yLA0KCQkJCW91dGVySGVpZ2h0OiBvcmlnaW5hbC5vdXRlckhlaWdodCAqIGZhY3RvciwNCgkJCQlvdXRlcldpZHRoOiBvcmlnaW5hbC5vdXRlcldpZHRoICogZmFjdG9yDQoJCQl9DQoJfSk7DQoNCgllbGVtLmVmZmVjdCggbyApOw0KfTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBFZmZlY3RzIFB1bHNhdGUgMS4xMS4yDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICoNCiAqIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3B1bHNhdGUtZWZmZWN0Lw0KICovDQoNCg0KdmFyIGVmZmVjdFB1bHNhdGUgPSAkLmVmZmVjdHMuZWZmZWN0LnB1bHNhdGUgPSBmdW5jdGlvbiggbywgZG9uZSApIHsNCgl2YXIgZWxlbSA9ICQoIHRoaXMgKSwNCgkJbW9kZSA9ICQuZWZmZWN0cy5zZXRNb2RlKCBlbGVtLCBvLm1vZGUgfHwgInNob3ciICksDQoJCXNob3cgPSBtb2RlID09PSAic2hvdyIsDQoJCWhpZGUgPSBtb2RlID09PSAiaGlkZSIsDQoJCXNob3doaWRlID0gKCBzaG93IHx8IG1vZGUgPT09ICJoaWRlIiApLA0KDQoJCS8vIHNob3dpbmcgb3IgaGlkaW5nIGxlYXZlcyBvZiB0aGUgImxhc3QiIGFuaW1hdGlvbg0KCQlhbmltcyA9ICggKCBvLnRpbWVzIHx8IDUgKSAqIDIgKSArICggc2hvd2hpZGUgPyAxIDogMCApLA0KCQlkdXJhdGlvbiA9IG8uZHVyYXRpb24gLyBhbmltcywNCgkJYW5pbWF0ZVRvID0gMCwNCgkJcXVldWUgPSBlbGVtLnF1ZXVlKCksDQoJCXF1ZXVlbGVuID0gcXVldWUubGVuZ3RoLA0KCQlpOw0KDQoJaWYgKCBzaG93IHx8ICFlbGVtLmlzKCI6dmlzaWJsZSIpKSB7DQoJCWVsZW0uY3NzKCAib3BhY2l0eSIsIDAgKS5zaG93KCk7DQoJCWFuaW1hdGVUbyA9IDE7DQoJfQ0KDQoJLy8gYW5pbXMgLSAxIG9wYWNpdHkgInRvZ2dsZXMiDQoJZm9yICggaSA9IDE7IGkgPCBhbmltczsgaSsrICkgew0KCQllbGVtLmFuaW1hdGUoew0KCQkJb3BhY2l0eTogYW5pbWF0ZVRvDQoJCX0sIGR1cmF0aW9uLCBvLmVhc2luZyApOw0KCQlhbmltYXRlVG8gPSAxIC0gYW5pbWF0ZVRvOw0KCX0NCg0KCWVsZW0uYW5pbWF0ZSh7DQoJCW9wYWNpdHk6IGFuaW1hdGVUbw0KCX0sIGR1cmF0aW9uLCBvLmVhc2luZyk7DQoNCgllbGVtLnF1ZXVlKGZ1bmN0aW9uKCkgew0KCQlpZiAoIGhpZGUgKSB7DQoJCQllbGVtLmhpZGUoKTsNCgkJfQ0KCQlkb25lKCk7DQoJfSk7DQoNCgkvLyBXZSBqdXN0IHF1ZXVlZCB1cCAiYW5pbXMiIGFuaW1hdGlvbnMsIHdlIG5lZWQgdG8gcHV0IHRoZW0gbmV4dCBpbiB0aGUgcXVldWUNCglpZiAoIHF1ZXVlbGVuID4gMSApIHsNCgkJcXVldWUuc3BsaWNlLmFwcGx5KCBxdWV1ZSwNCgkJCVsgMSwgMCBdLmNvbmNhdCggcXVldWUuc3BsaWNlKCBxdWV1ZWxlbiwgYW5pbXMgKyAxICkgKSApOw0KCX0NCgllbGVtLmRlcXVldWUoKTsNCn07DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgRWZmZWN0cyBTaGFrZSAxLjExLjINCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgMjAxNCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKg0KICogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vc2hha2UtZWZmZWN0Lw0KICovDQoNCg0KdmFyIGVmZmVjdFNoYWtlID0gJC5lZmZlY3RzLmVmZmVjdC5zaGFrZSA9IGZ1bmN0aW9uKCBvLCBkb25lICkgew0KDQoJdmFyIGVsID0gJCggdGhpcyApLA0KCQlwcm9wcyA9IFsgInBvc2l0aW9uIiwgInRvcCIsICJib3R0b20iLCAibGVmdCIsICJyaWdodCIsICJoZWlnaHQiLCAid2lkdGgiIF0sDQoJCW1vZGUgPSAkLmVmZmVjdHMuc2V0TW9kZSggZWwsIG8ubW9kZSB8fCAiZWZmZWN0IiApLA0KCQlkaXJlY3Rpb24gPSBvLmRpcmVjdGlvbiB8fCAibGVmdCIsDQoJCWRpc3RhbmNlID0gby5kaXN0YW5jZSB8fCAyMCwNCgkJdGltZXMgPSBvLnRpbWVzIHx8IDMsDQoJCWFuaW1zID0gdGltZXMgKiAyICsgMSwNCgkJc3BlZWQgPSBNYXRoLnJvdW5kKCBvLmR1cmF0aW9uIC8gYW5pbXMgKSwNCgkJcmVmID0gKGRpcmVjdGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09ICJkb3duIikgPyAidG9wIiA6ICJsZWZ0IiwNCgkJcG9zaXRpdmVNb3Rpb24gPSAoZGlyZWN0aW9uID09PSAidXAiIHx8IGRpcmVjdGlvbiA9PT0gImxlZnQiKSwNCgkJYW5pbWF0aW9uID0ge30sDQoJCWFuaW1hdGlvbjEgPSB7fSwNCgkJYW5pbWF0aW9uMiA9IHt9LA0KCQlpLA0KDQoJCS8vIHdlIHdpbGwgbmVlZCB0byByZS1hc3NlbWJsZSB0aGUgcXVldWUgdG8gc3RhY2sgb3VyIGFuaW1hdGlvbnMgaW4gcGxhY2UNCgkJcXVldWUgPSBlbC5xdWV1ZSgpLA0KCQlxdWV1ZWxlbiA9IHF1ZXVlLmxlbmd0aDsNCg0KCSQuZWZmZWN0cy5zYXZlKCBlbCwgcHJvcHMgKTsNCgllbC5zaG93KCk7DQoJJC5lZmZlY3RzLmNyZWF0ZVdyYXBwZXIoIGVsICk7DQoNCgkvLyBBbmltYXRpb24NCglhbmltYXRpb25bIHJlZiBdID0gKCBwb3NpdGl2ZU1vdGlvbiA/ICItPSIgOiAiKz0iICkgKyBkaXN0YW5jZTsNCglhbmltYXRpb24xWyByZWYgXSA9ICggcG9zaXRpdmVNb3Rpb24gPyAiKz0iIDogIi09IiApICsgZGlzdGFuY2UgKiAyOw0KCWFuaW1hdGlvbjJbIHJlZiBdID0gKCBwb3NpdGl2ZU1vdGlvbiA/ICItPSIgOiAiKz0iICkgKyBkaXN0YW5jZSAqIDI7DQoNCgkvLyBBbmltYXRlDQoJZWwuYW5pbWF0ZSggYW5pbWF0aW9uLCBzcGVlZCwgby5lYXNpbmcgKTsNCg0KCS8vIFNoYWtlcw0KCWZvciAoIGkgPSAxOyBpIDwgdGltZXM7IGkrKyApIHsNCgkJZWwuYW5pbWF0ZSggYW5pbWF0aW9uMSwgc3BlZWQsIG8uZWFzaW5nICkuYW5pbWF0ZSggYW5pbWF0aW9uMiwgc3BlZWQsIG8uZWFzaW5nICk7DQoJfQ0KCWVsDQoJCS5hbmltYXRlKCBhbmltYXRpb24xLCBzcGVlZCwgby5lYXNpbmcgKQ0KCQkuYW5pbWF0ZSggYW5pbWF0aW9uLCBzcGVlZCAvIDIsIG8uZWFzaW5nICkNCgkJLnF1ZXVlKGZ1bmN0aW9uKCkgew0KCQkJaWYgKCBtb2RlID09PSAiaGlkZSIgKSB7DQoJCQkJZWwuaGlkZSgpOw0KCQkJfQ0KCQkJJC5lZmZlY3RzLnJlc3RvcmUoIGVsLCBwcm9wcyApOw0KCQkJJC5lZmZlY3RzLnJlbW92ZVdyYXBwZXIoIGVsICk7DQoJCQlkb25lKCk7DQoJCX0pOw0KDQoJLy8gaW5qZWN0IGFsbCB0aGUgYW5pbWF0aW9ucyB3ZSBqdXN0IHF1ZXVlZCB0byBiZSBmaXJzdCBpbiBsaW5lIChhZnRlciAiaW5wcm9ncmVzcyIpDQoJaWYgKCBxdWV1ZWxlbiA+IDEpIHsNCgkJcXVldWUuc3BsaWNlLmFwcGx5KCBxdWV1ZSwNCgkJCVsgMSwgMCBdLmNvbmNhdCggcXVldWUuc3BsaWNlKCBxdWV1ZWxlbiwgYW5pbXMgKyAxICkgKSApOw0KCX0NCgllbC5kZXF1ZXVlKCk7DQoNCn07DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgRWZmZWN0cyBTbGlkZSAxLjExLjINCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgMjAxNCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKg0KICogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vc2xpZGUtZWZmZWN0Lw0KICovDQoNCg0KdmFyIGVmZmVjdFNsaWRlID0gJC5lZmZlY3RzLmVmZmVjdC5zbGlkZSA9IGZ1bmN0aW9uKCBvLCBkb25lICkgew0KDQoJLy8gQ3JlYXRlIGVsZW1lbnQNCgl2YXIgZWwgPSAkKCB0aGlzICksDQoJCXByb3BzID0gWyAicG9zaXRpb24iLCAidG9wIiwgImJvdHRvbSIsICJsZWZ0IiwgInJpZ2h0IiwgIndpZHRoIiwgImhlaWdodCIgXSwNCgkJbW9kZSA9ICQuZWZmZWN0cy5zZXRNb2RlKCBlbCwgby5tb2RlIHx8ICJzaG93IiApLA0KCQlzaG93ID0gbW9kZSA9PT0gInNob3ciLA0KCQlkaXJlY3Rpb24gPSBvLmRpcmVjdGlvbiB8fCAibGVmdCIsDQoJCXJlZiA9IChkaXJlY3Rpb24gPT09ICJ1cCIgfHwgZGlyZWN0aW9uID09PSAiZG93biIpID8gInRvcCIgOiAibGVmdCIsDQoJCXBvc2l0aXZlTW90aW9uID0gKGRpcmVjdGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09ICJsZWZ0IiksDQoJCWRpc3RhbmNlLA0KCQlhbmltYXRpb24gPSB7fTsNCg0KCS8vIEFkanVzdA0KCSQuZWZmZWN0cy5zYXZlKCBlbCwgcHJvcHMgKTsNCgllbC5zaG93KCk7DQoJZGlzdGFuY2UgPSBvLmRpc3RhbmNlIHx8IGVsWyByZWYgPT09ICJ0b3AiID8gIm91dGVySGVpZ2h0IiA6ICJvdXRlcldpZHRoIiBdKCB0cnVlICk7DQoNCgkkLmVmZmVjdHMuY3JlYXRlV3JhcHBlciggZWwgKS5jc3Moew0KCQlvdmVyZmxvdzogImhpZGRlbiINCgl9KTsNCg0KCWlmICggc2hvdyApIHsNCgkJZWwuY3NzKCByZWYsIHBvc2l0aXZlTW90aW9uID8gKGlzTmFOKGRpc3RhbmNlKSA/ICItIiArIGRpc3RhbmNlIDogLWRpc3RhbmNlKSA6IGRpc3RhbmNlICk7DQoJfQ0KDQoJLy8gQW5pbWF0aW9uDQoJYW5pbWF0aW9uWyByZWYgXSA9ICggc2hvdyA/DQoJCSggcG9zaXRpdmVNb3Rpb24gPyAiKz0iIDogIi09IikgOg0KCQkoIHBvc2l0aXZlTW90aW9uID8gIi09IiA6ICIrPSIpKSArDQoJCWRpc3RhbmNlOw0KDQoJLy8gQW5pbWF0ZQ0KCWVsLmFuaW1hdGUoIGFuaW1hdGlvbiwgew0KCQlxdWV1ZTogZmFsc2UsDQoJCWR1cmF0aW9uOiBvLmR1cmF0aW9uLA0KCQllYXNpbmc6IG8uZWFzaW5nLA0KCQljb21wbGV0ZTogZnVuY3Rpb24oKSB7DQoJCQlpZiAoIG1vZGUgPT09ICJoaWRlIiApIHsNCgkJCQllbC5oaWRlKCk7DQoJCQl9DQoJCQkkLmVmZmVjdHMucmVzdG9yZSggZWwsIHByb3BzICk7DQoJCQkkLmVmZmVjdHMucmVtb3ZlV3JhcHBlciggZWwgKTsNCgkJCWRvbmUoKTsNCgkJfQ0KCX0pOw0KfTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBFZmZlY3RzIFRyYW5zZmVyIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS90cmFuc2Zlci1lZmZlY3QvDQogKi8NCg0KDQp2YXIgZWZmZWN0VHJhbnNmZXIgPSAkLmVmZmVjdHMuZWZmZWN0LnRyYW5zZmVyID0gZnVuY3Rpb24oIG8sIGRvbmUgKSB7DQoJdmFyIGVsZW0gPSAkKCB0aGlzICksDQoJCXRhcmdldCA9ICQoIG8udG8gKSwNCgkJdGFyZ2V0Rml4ZWQgPSB0YXJnZXQuY3NzKCAicG9zaXRpb24iICkgPT09ICJmaXhlZCIsDQoJCWJvZHkgPSAkKCJib2R5IiksDQoJCWZpeFRvcCA9IHRhcmdldEZpeGVkID8gYm9keS5zY3JvbGxUb3AoKSA6IDAsDQoJCWZpeExlZnQgPSB0YXJnZXRGaXhlZCA/IGJvZHkuc2Nyb2xsTGVmdCgpIDogMCwNCgkJZW5kUG9zaXRpb24gPSB0YXJnZXQub2Zmc2V0KCksDQoJCWFuaW1hdGlvbiA9IHsNCgkJCXRvcDogZW5kUG9zaXRpb24udG9wIC0gZml4VG9wLA0KCQkJbGVmdDogZW5kUG9zaXRpb24ubGVmdCAtIGZpeExlZnQsDQoJCQloZWlnaHQ6IHRhcmdldC5pbm5lckhlaWdodCgpLA0KCQkJd2lkdGg6IHRhcmdldC5pbm5lcldpZHRoKCkNCgkJfSwNCgkJc3RhcnRQb3NpdGlvbiA9IGVsZW0ub2Zmc2V0KCksDQoJCXRyYW5zZmVyID0gJCggIjxkaXYgY2xhc3M9J3VpLWVmZmVjdHMtdHJhbnNmZXInPjwvZGl2PiIgKQ0KCQkJLmFwcGVuZFRvKCBkb2N1bWVudC5ib2R5ICkNCgkJCS5hZGRDbGFzcyggby5jbGFzc05hbWUgKQ0KCQkJLmNzcyh7DQoJCQkJdG9wOiBzdGFydFBvc2l0aW9uLnRvcCAtIGZpeFRvcCwNCgkJCQlsZWZ0OiBzdGFydFBvc2l0aW9uLmxlZnQgLSBmaXhMZWZ0LA0KCQkJCWhlaWdodDogZWxlbS5pbm5lckhlaWdodCgpLA0KCQkJCXdpZHRoOiBlbGVtLmlubmVyV2lkdGgoKSwNCgkJCQlwb3NpdGlvbjogdGFyZ2V0Rml4ZWQgPyAiZml4ZWQiIDogImFic29sdXRlIg0KCQkJfSkNCgkJCS5hbmltYXRlKCBhbmltYXRpb24sIG8uZHVyYXRpb24sIG8uZWFzaW5nLCBmdW5jdGlvbigpIHsNCgkJCQl0cmFuc2Zlci5yZW1vdmUoKTsNCgkJCQlkb25lKCk7DQoJCQl9KTsNCn07DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgUHJvZ3Jlc3NiYXIgMS4xMS4yDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICoNCiAqIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3Byb2dyZXNzYmFyLw0KICovDQoNCg0KdmFyIHByb2dyZXNzYmFyID0gJC53aWRnZXQoICJ1aS5wcm9ncmVzc2JhciIsIHsNCgl2ZXJzaW9uOiAiMS4xMS4yIiwNCglvcHRpb25zOiB7DQoJCW1heDogMTAwLA0KCQl2YWx1ZTogMCwNCg0KCQljaGFuZ2U6IG51bGwsDQoJCWNvbXBsZXRlOiBudWxsDQoJfSwNCg0KCW1pbjogMCwNCg0KCV9jcmVhdGU6IGZ1bmN0aW9uKCkgew0KCQkvLyBDb25zdHJhaW4gaW5pdGlhbCB2YWx1ZQ0KCQl0aGlzLm9sZFZhbHVlID0gdGhpcy5vcHRpb25zLnZhbHVlID0gdGhpcy5fY29uc3RyYWluZWRWYWx1ZSgpOw0KDQoJCXRoaXMuZWxlbWVudA0KCQkJLmFkZENsYXNzKCAidWktcHJvZ3Jlc3NiYXIgdWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWNvcm5lci1hbGwiICkNCgkJCS5hdHRyKHsNCgkJCQkvLyBPbmx5IHNldCBzdGF0aWMgdmFsdWVzLCBhcmlhLXZhbHVlbm93IGFuZCBhcmlhLXZhbHVlbWF4IGFyZQ0KCQkJCS8vIHNldCBpbnNpZGUgX3JlZnJlc2hWYWx1ZSgpDQoJCQkJcm9sZTogInByb2dyZXNzYmFyIiwNCgkJCQkiYXJpYS12YWx1ZW1pbiI6IHRoaXMubWluDQoJCQl9KTsNCg0KCQl0aGlzLnZhbHVlRGl2ID0gJCggIjxkaXYgY2xhc3M9J3VpLXByb2dyZXNzYmFyLXZhbHVlIHVpLXdpZGdldC1oZWFkZXIgdWktY29ybmVyLWxlZnQnPjwvZGl2PiIgKQ0KCQkJLmFwcGVuZFRvKCB0aGlzLmVsZW1lbnQgKTsNCg0KCQl0aGlzLl9yZWZyZXNoVmFsdWUoKTsNCgl9LA0KDQoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLmVsZW1lbnQNCgkJCS5yZW1vdmVDbGFzcyggInVpLXByb2dyZXNzYmFyIHVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCB1aS1jb3JuZXItYWxsIiApDQoJCQkucmVtb3ZlQXR0ciggInJvbGUiICkNCgkJCS5yZW1vdmVBdHRyKCAiYXJpYS12YWx1ZW1pbiIgKQ0KCQkJLnJlbW92ZUF0dHIoICJhcmlhLXZhbHVlbWF4IiApDQoJCQkucmVtb3ZlQXR0ciggImFyaWEtdmFsdWVub3ciICk7DQoNCgkJdGhpcy52YWx1ZURpdi5yZW1vdmUoKTsNCgl9LA0KDQoJdmFsdWU6IGZ1bmN0aW9uKCBuZXdWYWx1ZSApIHsNCgkJaWYgKCBuZXdWYWx1ZSA9PT0gdW5kZWZpbmVkICkgew0KCQkJcmV0dXJuIHRoaXMub3B0aW9ucy52YWx1ZTsNCgkJfQ0KDQoJCXRoaXMub3B0aW9ucy52YWx1ZSA9IHRoaXMuX2NvbnN0cmFpbmVkVmFsdWUoIG5ld1ZhbHVlICk7DQoJCXRoaXMuX3JlZnJlc2hWYWx1ZSgpOw0KCX0sDQoNCglfY29uc3RyYWluZWRWYWx1ZTogZnVuY3Rpb24oIG5ld1ZhbHVlICkgew0KCQlpZiAoIG5ld1ZhbHVlID09PSB1bmRlZmluZWQgKSB7DQoJCQluZXdWYWx1ZSA9IHRoaXMub3B0aW9ucy52YWx1ZTsNCgkJfQ0KDQoJCXRoaXMuaW5kZXRlcm1pbmF0ZSA9IG5ld1ZhbHVlID09PSBmYWxzZTsNCg0KCQkvLyBzYW5pdGl6ZSB2YWx1ZQ0KCQlpZiAoIHR5cGVvZiBuZXdWYWx1ZSAhPT0gIm51bWJlciIgKSB7DQoJCQluZXdWYWx1ZSA9IDA7DQoJCX0NCg0KCQlyZXR1cm4gdGhpcy5pbmRldGVybWluYXRlID8gZmFsc2UgOg0KCQkJTWF0aC5taW4oIHRoaXMub3B0aW9ucy5tYXgsIE1hdGgubWF4KCB0aGlzLm1pbiwgbmV3VmFsdWUgKSApOw0KCX0sDQoNCglfc2V0T3B0aW9uczogZnVuY3Rpb24oIG9wdGlvbnMgKSB7DQoJCS8vIEVuc3VyZSAidmFsdWUiIG9wdGlvbiBpcyBzZXQgYWZ0ZXIgb3RoZXIgdmFsdWVzIChsaWtlIG1heCkNCgkJdmFyIHZhbHVlID0gb3B0aW9ucy52YWx1ZTsNCgkJZGVsZXRlIG9wdGlvbnMudmFsdWU7DQoNCgkJdGhpcy5fc3VwZXIoIG9wdGlvbnMgKTsNCg0KCQl0aGlzLm9wdGlvbnMudmFsdWUgPSB0aGlzLl9jb25zdHJhaW5lZFZhbHVlKCB2YWx1ZSApOw0KCQl0aGlzLl9yZWZyZXNoVmFsdWUoKTsNCgl9LA0KDQoJX3NldE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7DQoJCWlmICgga2V5ID09PSAibWF4IiApIHsNCgkJCS8vIERvbid0IGFsbG93IGEgbWF4IGxlc3MgdGhhbiBtaW4NCgkJCXZhbHVlID0gTWF0aC5tYXgoIHRoaXMubWluLCB2YWx1ZSApOw0KCQl9DQoJCWlmICgga2V5ID09PSAiZGlzYWJsZWQiICkgew0KCQkJdGhpcy5lbGVtZW50DQoJCQkJLnRvZ2dsZUNsYXNzKCAidWktc3RhdGUtZGlzYWJsZWQiLCAhIXZhbHVlICkNCgkJCQkuYXR0ciggImFyaWEtZGlzYWJsZWQiLCB2YWx1ZSApOw0KCQl9DQoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7DQoJfSwNCg0KCV9wZXJjZW50YWdlOiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuIHRoaXMuaW5kZXRlcm1pbmF0ZSA/IDEwMCA6IDEwMCAqICggdGhpcy5vcHRpb25zLnZhbHVlIC0gdGhpcy5taW4gKSAvICggdGhpcy5vcHRpb25zLm1heCAtIHRoaXMubWluICk7DQoJfSwNCg0KCV9yZWZyZXNoVmFsdWU6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdmFsdWUgPSB0aGlzLm9wdGlvbnMudmFsdWUsDQoJCQlwZXJjZW50YWdlID0gdGhpcy5fcGVyY2VudGFnZSgpOw0KDQoJCXRoaXMudmFsdWVEaXYNCgkJCS50b2dnbGUoIHRoaXMuaW5kZXRlcm1pbmF0ZSB8fCB2YWx1ZSA+IHRoaXMubWluICkNCgkJCS50b2dnbGVDbGFzcyggInVpLWNvcm5lci1yaWdodCIsIHZhbHVlID09PSB0aGlzLm9wdGlvbnMubWF4ICkNCgkJCS53aWR0aCggcGVyY2VudGFnZS50b0ZpeGVkKDApICsgIiUiICk7DQoNCgkJdGhpcy5lbGVtZW50LnRvZ2dsZUNsYXNzKCAidWktcHJvZ3Jlc3NiYXItaW5kZXRlcm1pbmF0ZSIsIHRoaXMuaW5kZXRlcm1pbmF0ZSApOw0KDQoJCWlmICggdGhpcy5pbmRldGVybWluYXRlICkgew0KCQkJdGhpcy5lbGVtZW50LnJlbW92ZUF0dHIoICJhcmlhLXZhbHVlbm93IiApOw0KCQkJaWYgKCAhdGhpcy5vdmVybGF5RGl2ICkgew0KCQkJCXRoaXMub3ZlcmxheURpdiA9ICQoICI8ZGl2IGNsYXNzPSd1aS1wcm9ncmVzc2Jhci1vdmVybGF5Jz48L2Rpdj4iICkuYXBwZW5kVG8oIHRoaXMudmFsdWVEaXYgKTsNCgkJCX0NCgkJfSBlbHNlIHsNCgkJCXRoaXMuZWxlbWVudC5hdHRyKHsNCgkJCQkiYXJpYS12YWx1ZW1heCI6IHRoaXMub3B0aW9ucy5tYXgsDQoJCQkJImFyaWEtdmFsdWVub3ciOiB2YWx1ZQ0KCQkJfSk7DQoJCQlpZiAoIHRoaXMub3ZlcmxheURpdiApIHsNCgkJCQl0aGlzLm92ZXJsYXlEaXYucmVtb3ZlKCk7DQoJCQkJdGhpcy5vdmVybGF5RGl2ID0gbnVsbDsNCgkJCX0NCgkJfQ0KDQoJCWlmICggdGhpcy5vbGRWYWx1ZSAhPT0gdmFsdWUgKSB7DQoJCQl0aGlzLm9sZFZhbHVlID0gdmFsdWU7DQoJCQl0aGlzLl90cmlnZ2VyKCAiY2hhbmdlIiApOw0KCQl9DQoJCWlmICggdmFsdWUgPT09IHRoaXMub3B0aW9ucy5tYXggKSB7DQoJCQl0aGlzLl90cmlnZ2VyKCAiY29tcGxldGUiICk7DQoJCX0NCgl9DQp9KTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBTZWxlY3RhYmxlIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9zZWxlY3RhYmxlLw0KICovDQoNCg0KdmFyIHNlbGVjdGFibGUgPSAkLndpZGdldCgidWkuc2VsZWN0YWJsZSIsICQudWkubW91c2UsIHsNCgl2ZXJzaW9uOiAiMS4xMS4yIiwNCglvcHRpb25zOiB7DQoJCWFwcGVuZFRvOiAiYm9keSIsDQoJCWF1dG9SZWZyZXNoOiB0cnVlLA0KCQlkaXN0YW5jZTogMCwNCgkJZmlsdGVyOiAiKiIsDQoJCXRvbGVyYW5jZTogInRvdWNoIiwNCg0KCQkvLyBjYWxsYmFja3MNCgkJc2VsZWN0ZWQ6IG51bGwsDQoJCXNlbGVjdGluZzogbnVsbCwNCgkJc3RhcnQ6IG51bGwsDQoJCXN0b3A6IG51bGwsDQoJCXVuc2VsZWN0ZWQ6IG51bGwsDQoJCXVuc2VsZWN0aW5nOiBudWxsDQoJfSwNCglfY3JlYXRlOiBmdW5jdGlvbigpIHsNCgkJdmFyIHNlbGVjdGVlcywNCgkJCXRoYXQgPSB0aGlzOw0KDQoJCXRoaXMuZWxlbWVudC5hZGRDbGFzcygidWktc2VsZWN0YWJsZSIpOw0KDQoJCXRoaXMuZHJhZ2dlZCA9IGZhbHNlOw0KDQoJCS8vIGNhY2hlIHNlbGVjdGVlIGNoaWxkcmVuIGJhc2VkIG9uIGZpbHRlcg0KCQl0aGlzLnJlZnJlc2ggPSBmdW5jdGlvbigpIHsNCgkJCXNlbGVjdGVlcyA9ICQodGhhdC5vcHRpb25zLmZpbHRlciwgdGhhdC5lbGVtZW50WzBdKTsNCgkJCXNlbGVjdGVlcy5hZGRDbGFzcygidWktc2VsZWN0ZWUiKTsNCgkJCXNlbGVjdGVlcy5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJCXZhciAkdGhpcyA9ICQodGhpcyksDQoJCQkJCXBvcyA9ICR0aGlzLm9mZnNldCgpOw0KCQkJCSQuZGF0YSh0aGlzLCAic2VsZWN0YWJsZS1pdGVtIiwgew0KCQkJCQllbGVtZW50OiB0aGlzLA0KCQkJCQkkZWxlbWVudDogJHRoaXMsDQoJCQkJCWxlZnQ6IHBvcy5sZWZ0LA0KCQkJCQl0b3A6IHBvcy50b3AsDQoJCQkJCXJpZ2h0OiBwb3MubGVmdCArICR0aGlzLm91dGVyV2lkdGgoKSwNCgkJCQkJYm90dG9tOiBwb3MudG9wICsgJHRoaXMub3V0ZXJIZWlnaHQoKSwNCgkJCQkJc3RhcnRzZWxlY3RlZDogZmFsc2UsDQoJCQkJCXNlbGVjdGVkOiAkdGhpcy5oYXNDbGFzcygidWktc2VsZWN0ZWQiKSwNCgkJCQkJc2VsZWN0aW5nOiAkdGhpcy5oYXNDbGFzcygidWktc2VsZWN0aW5nIiksDQoJCQkJCXVuc2VsZWN0aW5nOiAkdGhpcy5oYXNDbGFzcygidWktdW5zZWxlY3RpbmciKQ0KCQkJCX0pOw0KCQkJfSk7DQoJCX07DQoJCXRoaXMucmVmcmVzaCgpOw0KDQoJCXRoaXMuc2VsZWN0ZWVzID0gc2VsZWN0ZWVzLmFkZENsYXNzKCJ1aS1zZWxlY3RlZSIpOw0KDQoJCXRoaXMuX21vdXNlSW5pdCgpOw0KDQoJCXRoaXMuaGVscGVyID0gJCgiPGRpdiBjbGFzcz0ndWktc2VsZWN0YWJsZS1oZWxwZXInPjwvZGl2PiIpOw0KCX0sDQoNCglfZGVzdHJveTogZnVuY3Rpb24oKSB7DQoJCXRoaXMuc2VsZWN0ZWVzDQoJCQkucmVtb3ZlQ2xhc3MoInVpLXNlbGVjdGVlIikNCgkJCS5yZW1vdmVEYXRhKCJzZWxlY3RhYmxlLWl0ZW0iKTsNCgkJdGhpcy5lbGVtZW50DQoJCQkucmVtb3ZlQ2xhc3MoInVpLXNlbGVjdGFibGUgdWktc2VsZWN0YWJsZS1kaXNhYmxlZCIpOw0KCQl0aGlzLl9tb3VzZURlc3Ryb3koKTsNCgl9LA0KDQoJX21vdXNlU3RhcnQ6IGZ1bmN0aW9uKGV2ZW50KSB7DQoJCXZhciB0aGF0ID0gdGhpcywNCgkJCW9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7DQoNCgkJdGhpcy5vcG9zID0gWyBldmVudC5wYWdlWCwgZXZlbnQucGFnZVkgXTsNCg0KCQlpZiAodGhpcy5vcHRpb25zLmRpc2FibGVkKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQl0aGlzLnNlbGVjdGVlcyA9ICQob3B0aW9ucy5maWx0ZXIsIHRoaXMuZWxlbWVudFswXSk7DQoNCgkJdGhpcy5fdHJpZ2dlcigic3RhcnQiLCBldmVudCk7DQoNCgkJJChvcHRpb25zLmFwcGVuZFRvKS5hcHBlbmQodGhpcy5oZWxwZXIpOw0KCQkvLyBwb3NpdGlvbiBoZWxwZXIgKGxhc3NvKQ0KCQl0aGlzLmhlbHBlci5jc3Moew0KCQkJImxlZnQiOiBldmVudC5wYWdlWCwNCgkJCSJ0b3AiOiBldmVudC5wYWdlWSwNCgkJCSJ3aWR0aCI6IDAsDQoJCQkiaGVpZ2h0IjogMA0KCQl9KTsNCg0KCQlpZiAob3B0aW9ucy5hdXRvUmVmcmVzaCkgew0KCQkJdGhpcy5yZWZyZXNoKCk7DQoJCX0NCg0KCQl0aGlzLnNlbGVjdGVlcy5maWx0ZXIoIi51aS1zZWxlY3RlZCIpLmVhY2goZnVuY3Rpb24oKSB7DQoJCQl2YXIgc2VsZWN0ZWUgPSAkLmRhdGEodGhpcywgInNlbGVjdGFibGUtaXRlbSIpOw0KCQkJc2VsZWN0ZWUuc3RhcnRzZWxlY3RlZCA9IHRydWU7DQoJCQlpZiAoIWV2ZW50Lm1ldGFLZXkgJiYgIWV2ZW50LmN0cmxLZXkpIHsNCgkJCQlzZWxlY3RlZS4kZWxlbWVudC5yZW1vdmVDbGFzcygidWktc2VsZWN0ZWQiKTsNCgkJCQlzZWxlY3RlZS5zZWxlY3RlZCA9IGZhbHNlOw0KCQkJCXNlbGVjdGVlLiRlbGVtZW50LmFkZENsYXNzKCJ1aS11bnNlbGVjdGluZyIpOw0KCQkJCXNlbGVjdGVlLnVuc2VsZWN0aW5nID0gdHJ1ZTsNCgkJCQkvLyBzZWxlY3RhYmxlIFVOU0VMRUNUSU5HIGNhbGxiYWNrDQoJCQkJdGhhdC5fdHJpZ2dlcigidW5zZWxlY3RpbmciLCBldmVudCwgew0KCQkJCQl1bnNlbGVjdGluZzogc2VsZWN0ZWUuZWxlbWVudA0KCQkJCX0pOw0KCQkJfQ0KCQl9KTsNCg0KCQkkKGV2ZW50LnRhcmdldCkucGFyZW50cygpLmFkZEJhY2soKS5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJdmFyIGRvU2VsZWN0LA0KCQkJCXNlbGVjdGVlID0gJC5kYXRhKHRoaXMsICJzZWxlY3RhYmxlLWl0ZW0iKTsNCgkJCWlmIChzZWxlY3RlZSkgew0KCQkJCWRvU2VsZWN0ID0gKCFldmVudC5tZXRhS2V5ICYmICFldmVudC5jdHJsS2V5KSB8fCAhc2VsZWN0ZWUuJGVsZW1lbnQuaGFzQ2xhc3MoInVpLXNlbGVjdGVkIik7DQoJCQkJc2VsZWN0ZWUuJGVsZW1lbnQNCgkJCQkJLnJlbW92ZUNsYXNzKGRvU2VsZWN0ID8gInVpLXVuc2VsZWN0aW5nIiA6ICJ1aS1zZWxlY3RlZCIpDQoJCQkJCS5hZGRDbGFzcyhkb1NlbGVjdCA/ICJ1aS1zZWxlY3RpbmciIDogInVpLXVuc2VsZWN0aW5nIik7DQoJCQkJc2VsZWN0ZWUudW5zZWxlY3RpbmcgPSAhZG9TZWxlY3Q7DQoJCQkJc2VsZWN0ZWUuc2VsZWN0aW5nID0gZG9TZWxlY3Q7DQoJCQkJc2VsZWN0ZWUuc2VsZWN0ZWQgPSBkb1NlbGVjdDsNCgkJCQkvLyBzZWxlY3RhYmxlIChVTilTRUxFQ1RJTkcgY2FsbGJhY2sNCgkJCQlpZiAoZG9TZWxlY3QpIHsNCgkJCQkJdGhhdC5fdHJpZ2dlcigic2VsZWN0aW5nIiwgZXZlbnQsIHsNCgkJCQkJCXNlbGVjdGluZzogc2VsZWN0ZWUuZWxlbWVudA0KCQkJCQl9KTsNCgkJCQl9IGVsc2Ugew0KCQkJCQl0aGF0Ll90cmlnZ2VyKCJ1bnNlbGVjdGluZyIsIGV2ZW50LCB7DQoJCQkJCQl1bnNlbGVjdGluZzogc2VsZWN0ZWUuZWxlbWVudA0KCQkJCQl9KTsNCgkJCQl9DQoJCQkJcmV0dXJuIGZhbHNlOw0KCQkJfQ0KCQl9KTsNCg0KCX0sDQoNCglfbW91c2VEcmFnOiBmdW5jdGlvbihldmVudCkgew0KDQoJCXRoaXMuZHJhZ2dlZCA9IHRydWU7DQoNCgkJaWYgKHRoaXMub3B0aW9ucy5kaXNhYmxlZCkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJdmFyIHRtcCwNCgkJCXRoYXQgPSB0aGlzLA0KCQkJb3B0aW9ucyA9IHRoaXMub3B0aW9ucywNCgkJCXgxID0gdGhpcy5vcG9zWzBdLA0KCQkJeTEgPSB0aGlzLm9wb3NbMV0sDQoJCQl4MiA9IGV2ZW50LnBhZ2VYLA0KCQkJeTIgPSBldmVudC5wYWdlWTsNCg0KCQlpZiAoeDEgPiB4MikgeyB0bXAgPSB4MjsgeDIgPSB4MTsgeDEgPSB0bXA7IH0NCgkJaWYgKHkxID4geTIpIHsgdG1wID0geTI7IHkyID0geTE7IHkxID0gdG1wOyB9DQoJCXRoaXMuaGVscGVyLmNzcyh7IGxlZnQ6IHgxLCB0b3A6IHkxLCB3aWR0aDogeDIgLSB4MSwgaGVpZ2h0OiB5MiAtIHkxIH0pOw0KDQoJCXRoaXMuc2VsZWN0ZWVzLmVhY2goZnVuY3Rpb24oKSB7DQoJCQl2YXIgc2VsZWN0ZWUgPSAkLmRhdGEodGhpcywgInNlbGVjdGFibGUtaXRlbSIpLA0KCQkJCWhpdCA9IGZhbHNlOw0KDQoJCQkvL3ByZXZlbnQgaGVscGVyIGZyb20gYmVpbmcgc2VsZWN0ZWQgaWYgYXBwZW5kVG86IHNlbGVjdGFibGUNCgkJCWlmICghc2VsZWN0ZWUgfHwgc2VsZWN0ZWUuZWxlbWVudCA9PT0gdGhhdC5lbGVtZW50WzBdKSB7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KDQoJCQlpZiAob3B0aW9ucy50b2xlcmFuY2UgPT09ICJ0b3VjaCIpIHsNCgkJCQloaXQgPSAoICEoc2VsZWN0ZWUubGVmdCA+IHgyIHx8IHNlbGVjdGVlLnJpZ2h0IDwgeDEgfHwgc2VsZWN0ZWUudG9wID4geTIgfHwgc2VsZWN0ZWUuYm90dG9tIDwgeTEpICk7DQoJCQl9IGVsc2UgaWYgKG9wdGlvbnMudG9sZXJhbmNlID09PSAiZml0Iikgew0KCQkJCWhpdCA9IChzZWxlY3RlZS5sZWZ0ID4geDEgJiYgc2VsZWN0ZWUucmlnaHQgPCB4MiAmJiBzZWxlY3RlZS50b3AgPiB5MSAmJiBzZWxlY3RlZS5ib3R0b20gPCB5Mik7DQoJCQl9DQoNCgkJCWlmIChoaXQpIHsNCgkJCQkvLyBTRUxFQ1QNCgkJCQlpZiAoc2VsZWN0ZWUuc2VsZWN0ZWQpIHsNCgkJCQkJc2VsZWN0ZWUuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoInVpLXNlbGVjdGVkIik7DQoJCQkJCXNlbGVjdGVlLnNlbGVjdGVkID0gZmFsc2U7DQoJCQkJfQ0KCQkJCWlmIChzZWxlY3RlZS51bnNlbGVjdGluZykgew0KCQkJCQlzZWxlY3RlZS4kZWxlbWVudC5yZW1vdmVDbGFzcygidWktdW5zZWxlY3RpbmciKTsNCgkJCQkJc2VsZWN0ZWUudW5zZWxlY3RpbmcgPSBmYWxzZTsNCgkJCQl9DQoJCQkJaWYgKCFzZWxlY3RlZS5zZWxlY3RpbmcpIHsNCgkJCQkJc2VsZWN0ZWUuJGVsZW1lbnQuYWRkQ2xhc3MoInVpLXNlbGVjdGluZyIpOw0KCQkJCQlzZWxlY3RlZS5zZWxlY3RpbmcgPSB0cnVlOw0KCQkJCQkvLyBzZWxlY3RhYmxlIFNFTEVDVElORyBjYWxsYmFjaw0KCQkJCQl0aGF0Ll90cmlnZ2VyKCJzZWxlY3RpbmciLCBldmVudCwgew0KCQkJCQkJc2VsZWN0aW5nOiBzZWxlY3RlZS5lbGVtZW50DQoJCQkJCX0pOw0KCQkJCX0NCgkJCX0gZWxzZSB7DQoJCQkJLy8gVU5TRUxFQ1QNCgkJCQlpZiAoc2VsZWN0ZWUuc2VsZWN0aW5nKSB7DQoJCQkJCWlmICgoZXZlbnQubWV0YUtleSB8fCBldmVudC5jdHJsS2V5KSAmJiBzZWxlY3RlZS5zdGFydHNlbGVjdGVkKSB7DQoJCQkJCQlzZWxlY3RlZS4kZWxlbWVudC5yZW1vdmVDbGFzcygidWktc2VsZWN0aW5nIik7DQoJCQkJCQlzZWxlY3RlZS5zZWxlY3RpbmcgPSBmYWxzZTsNCgkJCQkJCXNlbGVjdGVlLiRlbGVtZW50LmFkZENsYXNzKCJ1aS1zZWxlY3RlZCIpOw0KCQkJCQkJc2VsZWN0ZWUuc2VsZWN0ZWQgPSB0cnVlOw0KCQkJCQl9IGVsc2Ugew0KCQkJCQkJc2VsZWN0ZWUuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoInVpLXNlbGVjdGluZyIpOw0KCQkJCQkJc2VsZWN0ZWUuc2VsZWN0aW5nID0gZmFsc2U7DQoJCQkJCQlpZiAoc2VsZWN0ZWUuc3RhcnRzZWxlY3RlZCkgew0KCQkJCQkJCXNlbGVjdGVlLiRlbGVtZW50LmFkZENsYXNzKCJ1aS11bnNlbGVjdGluZyIpOw0KCQkJCQkJCXNlbGVjdGVlLnVuc2VsZWN0aW5nID0gdHJ1ZTsNCgkJCQkJCX0NCgkJCQkJCS8vIHNlbGVjdGFibGUgVU5TRUxFQ1RJTkcgY2FsbGJhY2sNCgkJCQkJCXRoYXQuX3RyaWdnZXIoInVuc2VsZWN0aW5nIiwgZXZlbnQsIHsNCgkJCQkJCQl1bnNlbGVjdGluZzogc2VsZWN0ZWUuZWxlbWVudA0KCQkJCQkJfSk7DQoJCQkJCX0NCgkJCQl9DQoJCQkJaWYgKHNlbGVjdGVlLnNlbGVjdGVkKSB7DQoJCQkJCWlmICghZXZlbnQubWV0YUtleSAmJiAhZXZlbnQuY3RybEtleSAmJiAhc2VsZWN0ZWUuc3RhcnRzZWxlY3RlZCkgew0KCQkJCQkJc2VsZWN0ZWUuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoInVpLXNlbGVjdGVkIik7DQoJCQkJCQlzZWxlY3RlZS5zZWxlY3RlZCA9IGZhbHNlOw0KDQoJCQkJCQlzZWxlY3RlZS4kZWxlbWVudC5hZGRDbGFzcygidWktdW5zZWxlY3RpbmciKTsNCgkJCQkJCXNlbGVjdGVlLnVuc2VsZWN0aW5nID0gdHJ1ZTsNCgkJCQkJCS8vIHNlbGVjdGFibGUgVU5TRUxFQ1RJTkcgY2FsbGJhY2sNCgkJCQkJCXRoYXQuX3RyaWdnZXIoInVuc2VsZWN0aW5nIiwgZXZlbnQsIHsNCgkJCQkJCQl1bnNlbGVjdGluZzogc2VsZWN0ZWUuZWxlbWVudA0KCQkJCQkJfSk7DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0pOw0KDQoJCXJldHVybiBmYWxzZTsNCgl9LA0KDQoJX21vdXNlU3RvcDogZnVuY3Rpb24oZXZlbnQpIHsNCgkJdmFyIHRoYXQgPSB0aGlzOw0KDQoJCXRoaXMuZHJhZ2dlZCA9IGZhbHNlOw0KDQoJCSQoIi51aS11bnNlbGVjdGluZyIsIHRoaXMuZWxlbWVudFswXSkuZWFjaChmdW5jdGlvbigpIHsNCgkJCXZhciBzZWxlY3RlZSA9ICQuZGF0YSh0aGlzLCAic2VsZWN0YWJsZS1pdGVtIik7DQoJCQlzZWxlY3RlZS4kZWxlbWVudC5yZW1vdmVDbGFzcygidWktdW5zZWxlY3RpbmciKTsNCgkJCXNlbGVjdGVlLnVuc2VsZWN0aW5nID0gZmFsc2U7DQoJCQlzZWxlY3RlZS5zdGFydHNlbGVjdGVkID0gZmFsc2U7DQoJCQl0aGF0Ll90cmlnZ2VyKCJ1bnNlbGVjdGVkIiwgZXZlbnQsIHsNCgkJCQl1bnNlbGVjdGVkOiBzZWxlY3RlZS5lbGVtZW50DQoJCQl9KTsNCgkJfSk7DQoJCSQoIi51aS1zZWxlY3RpbmciLCB0aGlzLmVsZW1lbnRbMF0pLmVhY2goZnVuY3Rpb24oKSB7DQoJCQl2YXIgc2VsZWN0ZWUgPSAkLmRhdGEodGhpcywgInNlbGVjdGFibGUtaXRlbSIpOw0KCQkJc2VsZWN0ZWUuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoInVpLXNlbGVjdGluZyIpLmFkZENsYXNzKCJ1aS1zZWxlY3RlZCIpOw0KCQkJc2VsZWN0ZWUuc2VsZWN0aW5nID0gZmFsc2U7DQoJCQlzZWxlY3RlZS5zZWxlY3RlZCA9IHRydWU7DQoJCQlzZWxlY3RlZS5zdGFydHNlbGVjdGVkID0gdHJ1ZTsNCgkJCXRoYXQuX3RyaWdnZXIoInNlbGVjdGVkIiwgZXZlbnQsIHsNCgkJCQlzZWxlY3RlZDogc2VsZWN0ZWUuZWxlbWVudA0KCQkJfSk7DQoJCX0pOw0KCQl0aGlzLl90cmlnZ2VyKCJzdG9wIiwgZXZlbnQpOw0KDQoJCXRoaXMuaGVscGVyLnJlbW92ZSgpOw0KDQoJCXJldHVybiBmYWxzZTsNCgl9DQoNCn0pOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIFNlbGVjdG1lbnUgMS4xMS4yDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICoNCiAqIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3NlbGVjdG1lbnUNCiAqLw0KDQoNCnZhciBzZWxlY3RtZW51ID0gJC53aWRnZXQoICJ1aS5zZWxlY3RtZW51Iiwgew0KCXZlcnNpb246ICIxLjExLjIiLA0KCWRlZmF1bHRFbGVtZW50OiAiPHNlbGVjdD4iLA0KCW9wdGlvbnM6IHsNCgkJYXBwZW5kVG86IG51bGwsDQoJCWRpc2FibGVkOiBudWxsLA0KCQlpY29uczogew0KCQkJYnV0dG9uOiAidWktaWNvbi10cmlhbmdsZS0xLXMiDQoJCX0sDQoJCXBvc2l0aW9uOiB7DQoJCQlteTogImxlZnQgdG9wIiwNCgkJCWF0OiAibGVmdCBib3R0b20iLA0KCQkJY29sbGlzaW9uOiAibm9uZSINCgkJfSwNCgkJd2lkdGg6IG51bGwsDQoNCgkJLy8gY2FsbGJhY2tzDQoJCWNoYW5nZTogbnVsbCwNCgkJY2xvc2U6IG51bGwsDQoJCWZvY3VzOiBudWxsLA0KCQlvcGVuOiBudWxsLA0KCQlzZWxlY3Q6IG51bGwNCgl9LA0KDQoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7DQoJCXZhciBzZWxlY3RtZW51SWQgPSB0aGlzLmVsZW1lbnQudW5pcXVlSWQoKS5hdHRyKCAiaWQiICk7DQoJCXRoaXMuaWRzID0gew0KCQkJZWxlbWVudDogc2VsZWN0bWVudUlkLA0KCQkJYnV0dG9uOiBzZWxlY3RtZW51SWQgKyAiLWJ1dHRvbiIsDQoJCQltZW51OiBzZWxlY3RtZW51SWQgKyAiLW1lbnUiDQoJCX07DQoNCgkJdGhpcy5fZHJhd0J1dHRvbigpOw0KCQl0aGlzLl9kcmF3TWVudSgpOw0KDQoJCWlmICggdGhpcy5vcHRpb25zLmRpc2FibGVkICkgew0KCQkJdGhpcy5kaXNhYmxlKCk7DQoJCX0NCgl9LA0KDQoJX2RyYXdCdXR0b246IGZ1bmN0aW9uKCkgew0KCQl2YXIgdGhhdCA9IHRoaXMsDQoJCQl0YWJpbmRleCA9IHRoaXMuZWxlbWVudC5hdHRyKCAidGFiaW5kZXgiICk7DQoNCgkJLy8gQXNzb2NpYXRlIGV4aXN0aW5nIGxhYmVsIHdpdGggdGhlIG5ldyBidXR0b24NCgkJdGhpcy5sYWJlbCA9ICQoICJsYWJlbFtmb3I9JyIgKyB0aGlzLmlkcy5lbGVtZW50ICsgIiddIiApLmF0dHIoICJmb3IiLCB0aGlzLmlkcy5idXR0b24gKTsNCgkJdGhpcy5fb24oIHRoaXMubGFiZWwsIHsNCgkJCWNsaWNrOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQkJdGhpcy5idXR0b24uZm9jdXMoKTsNCgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQkJfQ0KCQl9KTsNCg0KCQkvLyBIaWRlIG9yaWdpbmFsIHNlbGVjdCBlbGVtZW50DQoJCXRoaXMuZWxlbWVudC5oaWRlKCk7DQoNCgkJLy8gQ3JlYXRlIGJ1dHRvbg0KCQl0aGlzLmJ1dHRvbiA9ICQoICI8c3Bhbj4iLCB7DQoJCQkiY2xhc3MiOiAidWktc2VsZWN0bWVudS1idXR0b24gdWktd2lkZ2V0IHVpLXN0YXRlLWRlZmF1bHQgdWktY29ybmVyLWFsbCIsDQoJCQl0YWJpbmRleDogdGFiaW5kZXggfHwgdGhpcy5vcHRpb25zLmRpc2FibGVkID8gLTEgOiAwLA0KCQkJaWQ6IHRoaXMuaWRzLmJ1dHRvbiwNCgkJCXJvbGU6ICJjb21ib2JveCIsDQoJCQkiYXJpYS1leHBhbmRlZCI6ICJmYWxzZSIsDQoJCQkiYXJpYS1hdXRvY29tcGxldGUiOiAibGlzdCIsDQoJCQkiYXJpYS1vd25zIjogdGhpcy5pZHMubWVudSwNCgkJCSJhcmlhLWhhc3BvcHVwIjogInRydWUiDQoJCX0pDQoJCQkuaW5zZXJ0QWZ0ZXIoIHRoaXMuZWxlbWVudCApOw0KDQoJCSQoICI8c3Bhbj4iLCB7DQoJCQkiY2xhc3MiOiAidWktaWNvbiAiICsgdGhpcy5vcHRpb25zLmljb25zLmJ1dHRvbg0KCQl9KQ0KCQkJLnByZXBlbmRUbyggdGhpcy5idXR0b24gKTsNCg0KCQl0aGlzLmJ1dHRvblRleHQgPSAkKCAiPHNwYW4+Iiwgew0KCQkJImNsYXNzIjogInVpLXNlbGVjdG1lbnUtdGV4dCINCgkJfSkNCgkJCS5hcHBlbmRUbyggdGhpcy5idXR0b24gKTsNCg0KCQl0aGlzLl9zZXRUZXh0KCB0aGlzLmJ1dHRvblRleHQsIHRoaXMuZWxlbWVudC5maW5kKCAib3B0aW9uOnNlbGVjdGVkIiApLnRleHQoKSApOw0KCQl0aGlzLl9yZXNpemVCdXR0b24oKTsNCg0KCQl0aGlzLl9vbiggdGhpcy5idXR0b24sIHRoaXMuX2J1dHRvbkV2ZW50cyApOw0KCQl0aGlzLmJ1dHRvbi5vbmUoICJmb2N1c2luIiwgZnVuY3Rpb24oKSB7DQoNCgkJCS8vIERlbGF5IHJlbmRlcmluZyB0aGUgbWVudSBpdGVtcyB1bnRpbCB0aGUgYnV0dG9uIHJlY2VpdmVzIGZvY3VzLg0KCQkJLy8gVGhlIG1lbnUgbWF5IGhhdmUgYWxyZWFkeSBiZWVuIHJlbmRlcmVkIHZpYSBhIHByb2dyYW1tYXRpYyBvcGVuLg0KCQkJaWYgKCAhdGhhdC5tZW51SXRlbXMgKSB7DQoJCQkJdGhhdC5fcmVmcmVzaE1lbnUoKTsNCgkJCX0NCgkJfSk7DQoJCXRoaXMuX2hvdmVyYWJsZSggdGhpcy5idXR0b24gKTsNCgkJdGhpcy5fZm9jdXNhYmxlKCB0aGlzLmJ1dHRvbiApOw0KCX0sDQoNCglfZHJhd01lbnU6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdGhhdCA9IHRoaXM7DQoNCgkJLy8gQ3JlYXRlIG1lbnUNCgkJdGhpcy5tZW51ID0gJCggIjx1bD4iLCB7DQoJCQkiYXJpYS1oaWRkZW4iOiAidHJ1ZSIsDQoJCQkiYXJpYS1sYWJlbGxlZGJ5IjogdGhpcy5pZHMuYnV0dG9uLA0KCQkJaWQ6IHRoaXMuaWRzLm1lbnUNCgkJfSk7DQoNCgkJLy8gV3JhcCBtZW51DQoJCXRoaXMubWVudVdyYXAgPSAkKCAiPGRpdj4iLCB7DQoJCQkiY2xhc3MiOiAidWktc2VsZWN0bWVudS1tZW51IHVpLWZyb250Ig0KCQl9KQ0KCQkJLmFwcGVuZCggdGhpcy5tZW51ICkNCgkJCS5hcHBlbmRUbyggdGhpcy5fYXBwZW5kVG8oKSApOw0KDQoJCS8vIEluaXRpYWxpemUgbWVudSB3aWRnZXQNCgkJdGhpcy5tZW51SW5zdGFuY2UgPSB0aGlzLm1lbnUNCgkJCS5tZW51KHsNCgkJCQlyb2xlOiAibGlzdGJveCIsDQoJCQkJc2VsZWN0OiBmdW5jdGlvbiggZXZlbnQsIHVpICkgew0KCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KDQoJCQkJCS8vIHN1cHBvcnQ6IElFOA0KCQkJCQkvLyBJZiB0aGUgaXRlbSB3YXMgc2VsZWN0ZWQgdmlhIGEgY2xpY2ssIHRoZSB0ZXh0IHNlbGVjdGlvbg0KCQkJCQkvLyB3aWxsIGJlIGRlc3Ryb3llZCBpbiBJRQ0KCQkJCQl0aGF0Ll9zZXRTZWxlY3Rpb24oKTsNCg0KCQkJCQl0aGF0Ll9zZWxlY3QoIHVpLml0ZW0uZGF0YSggInVpLXNlbGVjdG1lbnUtaXRlbSIgKSwgZXZlbnQgKTsNCgkJCQl9LA0KCQkJCWZvY3VzOiBmdW5jdGlvbiggZXZlbnQsIHVpICkgew0KCQkJCQl2YXIgaXRlbSA9IHVpLml0ZW0uZGF0YSggInVpLXNlbGVjdG1lbnUtaXRlbSIgKTsNCg0KCQkJCQkvLyBQcmV2ZW50IGluaXRhbCBmb2N1cyBmcm9tIGZpcmluZyBhbmQgY2hlY2sgaWYgaXRzIGEgbmV3bHkgZm9jdXNlZCBpdGVtDQoJCQkJCWlmICggdGhhdC5mb2N1c0luZGV4ICE9IG51bGwgJiYgaXRlbS5pbmRleCAhPT0gdGhhdC5mb2N1c0luZGV4ICkgew0KCQkJCQkJdGhhdC5fdHJpZ2dlciggImZvY3VzIiwgZXZlbnQsIHsgaXRlbTogaXRlbSB9ICk7DQoJCQkJCQlpZiAoICF0aGF0LmlzT3BlbiApIHsNCgkJCQkJCQl0aGF0Ll9zZWxlY3QoIGl0ZW0sIGV2ZW50ICk7DQoJCQkJCQl9DQoJCQkJCX0NCgkJCQkJdGhhdC5mb2N1c0luZGV4ID0gaXRlbS5pbmRleDsNCg0KCQkJCQl0aGF0LmJ1dHRvbi5hdHRyKCAiYXJpYS1hY3RpdmVkZXNjZW5kYW50IiwNCgkJCQkJCXRoYXQubWVudUl0ZW1zLmVxKCBpdGVtLmluZGV4ICkuYXR0ciggImlkIiApICk7DQoJCQkJfQ0KCQkJfSkNCgkJCS5tZW51KCAiaW5zdGFuY2UiICk7DQoNCgkJLy8gQWRqdXN0IG1lbnUgc3R5bGVzIHRvIGRyb3Bkb3duDQoJCXRoaXMubWVudQ0KCQkJLmFkZENsYXNzKCAidWktY29ybmVyLWJvdHRvbSIgKQ0KCQkJLnJlbW92ZUNsYXNzKCAidWktY29ybmVyLWFsbCIgKTsNCg0KCQkvLyBEb24ndCBjbG9zZSB0aGUgbWVudSBvbiBtb3VzZWxlYXZlDQoJCXRoaXMubWVudUluc3RhbmNlLl9vZmYoIHRoaXMubWVudSwgIm1vdXNlbGVhdmUiICk7DQoNCgkJLy8gQ2FuY2VsIHRoZSBtZW51J3MgY29sbGFwc2VBbGwgb24gZG9jdW1lbnQgY2xpY2sNCgkJdGhpcy5tZW51SW5zdGFuY2UuX2Nsb3NlT25Eb2N1bWVudENsaWNrID0gZnVuY3Rpb24oKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX07DQoNCgkJLy8gU2VsZWN0cyBvZnRlbiBjb250YWluIGVtcHR5IGl0ZW1zLCBidXQgbmV2ZXIgY29udGFpbiBkaXZpZGVycw0KCQl0aGlzLm1lbnVJbnN0YW5jZS5faXNEaXZpZGVyID0gZnVuY3Rpb24oKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX07DQoJfSwNCg0KCXJlZnJlc2g6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLl9yZWZyZXNoTWVudSgpOw0KCQl0aGlzLl9zZXRUZXh0KCB0aGlzLmJ1dHRvblRleHQsIHRoaXMuX2dldFNlbGVjdGVkSXRlbSgpLnRleHQoKSApOw0KCQlpZiAoICF0aGlzLm9wdGlvbnMud2lkdGggKSB7DQoJCQl0aGlzLl9yZXNpemVCdXR0b24oKTsNCgkJfQ0KCX0sDQoNCglfcmVmcmVzaE1lbnU6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLm1lbnUuZW1wdHkoKTsNCg0KCQl2YXIgaXRlbSwNCgkJCW9wdGlvbnMgPSB0aGlzLmVsZW1lbnQuZmluZCggIm9wdGlvbiIgKTsNCg0KCQlpZiAoICFvcHRpb25zLmxlbmd0aCApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCXRoaXMuX3BhcnNlT3B0aW9ucyggb3B0aW9ucyApOw0KCQl0aGlzLl9yZW5kZXJNZW51KCB0aGlzLm1lbnUsIHRoaXMuaXRlbXMgKTsNCg0KCQl0aGlzLm1lbnVJbnN0YW5jZS5yZWZyZXNoKCk7DQoJCXRoaXMubWVudUl0ZW1zID0gdGhpcy5tZW51LmZpbmQoICJsaSIgKS5ub3QoICIudWktc2VsZWN0bWVudS1vcHRncm91cCIgKTsNCg0KCQlpdGVtID0gdGhpcy5fZ2V0U2VsZWN0ZWRJdGVtKCk7DQoNCgkJLy8gVXBkYXRlIHRoZSBtZW51IHRvIGhhdmUgdGhlIGNvcnJlY3QgaXRlbSBmb2N1c2VkDQoJCXRoaXMubWVudUluc3RhbmNlLmZvY3VzKCBudWxsLCBpdGVtICk7DQoJCXRoaXMuX3NldEFyaWEoIGl0ZW0uZGF0YSggInVpLXNlbGVjdG1lbnUtaXRlbSIgKSApOw0KDQoJCS8vIFNldCBkaXNhYmxlZCBzdGF0ZQ0KCQl0aGlzLl9zZXRPcHRpb24oICJkaXNhYmxlZCIsIHRoaXMuZWxlbWVudC5wcm9wKCAiZGlzYWJsZWQiICkgKTsNCgl9LA0KDQoJb3BlbjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQlpZiAoIHRoaXMub3B0aW9ucy5kaXNhYmxlZCApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCS8vIElmIHRoaXMgaXMgdGhlIGZpcnN0IHRpbWUgdGhlIG1lbnUgaXMgYmVpbmcgb3BlbmVkLCByZW5kZXIgdGhlIGl0ZW1zDQoJCWlmICggIXRoaXMubWVudUl0ZW1zICkgew0KCQkJdGhpcy5fcmVmcmVzaE1lbnUoKTsNCgkJfSBlbHNlIHsNCg0KCQkJLy8gTWVudSBjbGVhcnMgZm9jdXMgb24gY2xvc2UsIHJlc2V0IGZvY3VzIHRvIHNlbGVjdGVkIGl0ZW0NCgkJCXRoaXMubWVudS5maW5kKCAiLnVpLXN0YXRlLWZvY3VzIiApLnJlbW92ZUNsYXNzKCAidWktc3RhdGUtZm9jdXMiICk7DQoJCQl0aGlzLm1lbnVJbnN0YW5jZS5mb2N1cyggbnVsbCwgdGhpcy5fZ2V0U2VsZWN0ZWRJdGVtKCkgKTsNCgkJfQ0KDQoJCXRoaXMuaXNPcGVuID0gdHJ1ZTsNCgkJdGhpcy5fdG9nZ2xlQXR0cigpOw0KCQl0aGlzLl9yZXNpemVNZW51KCk7DQoJCXRoaXMuX3Bvc2l0aW9uKCk7DQoNCgkJdGhpcy5fb24oIHRoaXMuZG9jdW1lbnQsIHRoaXMuX2RvY3VtZW50Q2xpY2sgKTsNCg0KCQl0aGlzLl90cmlnZ2VyKCAib3BlbiIsIGV2ZW50ICk7DQoJfSwNCg0KCV9wb3NpdGlvbjogZnVuY3Rpb24oKSB7DQoJCXRoaXMubWVudVdyYXAucG9zaXRpb24oICQuZXh0ZW5kKCB7IG9mOiB0aGlzLmJ1dHRvbiB9LCB0aGlzLm9wdGlvbnMucG9zaXRpb24gKSApOw0KCX0sDQoNCgljbG9zZTogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQlpZiAoICF0aGlzLmlzT3BlbiApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCXRoaXMuaXNPcGVuID0gZmFsc2U7DQoJCXRoaXMuX3RvZ2dsZUF0dHIoKTsNCg0KCQl0aGlzLnJhbmdlID0gbnVsbDsNCgkJdGhpcy5fb2ZmKCB0aGlzLmRvY3VtZW50ICk7DQoNCgkJdGhpcy5fdHJpZ2dlciggImNsb3NlIiwgZXZlbnQgKTsNCgl9LA0KDQoJd2lkZ2V0OiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuIHRoaXMuYnV0dG9uOw0KCX0sDQoNCgltZW51V2lkZ2V0OiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuIHRoaXMubWVudTsNCgl9LA0KDQoJX3JlbmRlck1lbnU6IGZ1bmN0aW9uKCB1bCwgaXRlbXMgKSB7DQoJCXZhciB0aGF0ID0gdGhpcywNCgkJCWN1cnJlbnRPcHRncm91cCA9ICIiOw0KDQoJCSQuZWFjaCggaXRlbXMsIGZ1bmN0aW9uKCBpbmRleCwgaXRlbSApIHsNCgkJCWlmICggaXRlbS5vcHRncm91cCAhPT0gY3VycmVudE9wdGdyb3VwICkgew0KCQkJCSQoICI8bGk+Iiwgew0KCQkJCQkiY2xhc3MiOiAidWktc2VsZWN0bWVudS1vcHRncm91cCB1aS1tZW51LWRpdmlkZXIiICsNCgkJCQkJCSggaXRlbS5lbGVtZW50LnBhcmVudCggIm9wdGdyb3VwIiApLnByb3AoICJkaXNhYmxlZCIgKSA/DQoJCQkJCQkJIiB1aS1zdGF0ZS1kaXNhYmxlZCIgOg0KCQkJCQkJCSIiICksDQoJCQkJCXRleHQ6IGl0ZW0ub3B0Z3JvdXANCgkJCQl9KQ0KCQkJCQkuYXBwZW5kVG8oIHVsICk7DQoNCgkJCQljdXJyZW50T3B0Z3JvdXAgPSBpdGVtLm9wdGdyb3VwOw0KCQkJfQ0KDQoJCQl0aGF0Ll9yZW5kZXJJdGVtRGF0YSggdWwsIGl0ZW0gKTsNCgkJfSk7DQoJfSwNCg0KCV9yZW5kZXJJdGVtRGF0YTogZnVuY3Rpb24oIHVsLCBpdGVtICkgew0KCQlyZXR1cm4gdGhpcy5fcmVuZGVySXRlbSggdWwsIGl0ZW0gKS5kYXRhKCAidWktc2VsZWN0bWVudS1pdGVtIiwgaXRlbSApOw0KCX0sDQoNCglfcmVuZGVySXRlbTogZnVuY3Rpb24oIHVsLCBpdGVtICkgew0KCQl2YXIgbGkgPSAkKCAiPGxpPiIgKTsNCg0KCQlpZiAoIGl0ZW0uZGlzYWJsZWQgKSB7DQoJCQlsaS5hZGRDbGFzcyggInVpLXN0YXRlLWRpc2FibGVkIiApOw0KCQl9DQoJCXRoaXMuX3NldFRleHQoIGxpLCBpdGVtLmxhYmVsICk7DQoNCgkJcmV0dXJuIGxpLmFwcGVuZFRvKCB1bCApOw0KCX0sDQoNCglfc2V0VGV4dDogZnVuY3Rpb24oIGVsZW1lbnQsIHZhbHVlICkgew0KCQlpZiAoIHZhbHVlICkgew0KCQkJZWxlbWVudC50ZXh0KCB2YWx1ZSApOw0KCQl9IGVsc2Ugew0KCQkJZWxlbWVudC5odG1sKCAiJiMxNjA7IiApOw0KCQl9DQoJfSwNCg0KCV9tb3ZlOiBmdW5jdGlvbiggZGlyZWN0aW9uLCBldmVudCApIHsNCgkJdmFyIGl0ZW0sIG5leHQsDQoJCQlmaWx0ZXIgPSAiLnVpLW1lbnUtaXRlbSI7DQoNCgkJaWYgKCB0aGlzLmlzT3BlbiApIHsNCgkJCWl0ZW0gPSB0aGlzLm1lbnVJdGVtcy5lcSggdGhpcy5mb2N1c0luZGV4ICk7DQoJCX0gZWxzZSB7DQoJCQlpdGVtID0gdGhpcy5tZW51SXRlbXMuZXEoIHRoaXMuZWxlbWVudFsgMCBdLnNlbGVjdGVkSW5kZXggKTsNCgkJCWZpbHRlciArPSAiOm5vdCgudWktc3RhdGUtZGlzYWJsZWQpIjsNCgkJfQ0KDQoJCWlmICggZGlyZWN0aW9uID09PSAiZmlyc3QiIHx8IGRpcmVjdGlvbiA9PT0gImxhc3QiICkgew0KCQkJbmV4dCA9IGl0ZW1bIGRpcmVjdGlvbiA9PT0gImZpcnN0IiA/ICJwcmV2QWxsIiA6ICJuZXh0QWxsIiBdKCBmaWx0ZXIgKS5lcSggLTEgKTsNCgkJfSBlbHNlIHsNCgkJCW5leHQgPSBpdGVtWyBkaXJlY3Rpb24gKyAiQWxsIiBdKCBmaWx0ZXIgKS5lcSggMCApOw0KCQl9DQoNCgkJaWYgKCBuZXh0Lmxlbmd0aCApIHsNCgkJCXRoaXMubWVudUluc3RhbmNlLmZvY3VzKCBldmVudCwgbmV4dCApOw0KCQl9DQoJfSwNCg0KCV9nZXRTZWxlY3RlZEl0ZW06IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy5tZW51SXRlbXMuZXEoIHRoaXMuZWxlbWVudFsgMCBdLnNlbGVjdGVkSW5kZXggKTsNCgl9LA0KDQoJX3RvZ2dsZTogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl0aGlzWyB0aGlzLmlzT3BlbiA/ICJjbG9zZSIgOiAib3BlbiIgXSggZXZlbnQgKTsNCgl9LA0KDQoJX3NldFNlbGVjdGlvbjogZnVuY3Rpb24oKSB7DQoJCXZhciBzZWxlY3Rpb247DQoNCgkJaWYgKCAhdGhpcy5yYW5nZSApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCWlmICggd2luZG93LmdldFNlbGVjdGlvbiApIHsNCgkJCXNlbGVjdGlvbiA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTsNCgkJCXNlbGVjdGlvbi5yZW1vdmVBbGxSYW5nZXMoKTsNCgkJCXNlbGVjdGlvbi5hZGRSYW5nZSggdGhpcy5yYW5nZSApOw0KDQoJCS8vIHN1cHBvcnQ6IElFOA0KCQl9IGVsc2Ugew0KCQkJdGhpcy5yYW5nZS5zZWxlY3QoKTsNCgkJfQ0KDQoJCS8vIHN1cHBvcnQ6IElFDQoJCS8vIFNldHRpbmcgdGhlIHRleHQgc2VsZWN0aW9uIGtpbGxzIHRoZSBidXR0b24gZm9jdXMgaW4gSUUsIGJ1dA0KCQkvLyByZXN0b3JpbmcgdGhlIGZvY3VzIGRvZXNuJ3Qga2lsbCB0aGUgc2VsZWN0aW9uLg0KCQl0aGlzLmJ1dHRvbi5mb2N1cygpOw0KCX0sDQoNCglfZG9jdW1lbnRDbGljazogew0KCQltb3VzZWRvd246IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCWlmICggIXRoaXMuaXNPcGVuICkgew0KCQkJCXJldHVybjsNCgkJCX0NCg0KCQkJaWYgKCAhJCggZXZlbnQudGFyZ2V0ICkuY2xvc2VzdCggIi51aS1zZWxlY3RtZW51LW1lbnUsICMiICsgdGhpcy5pZHMuYnV0dG9uICkubGVuZ3RoICkgew0KCQkJCXRoaXMuY2xvc2UoIGV2ZW50ICk7DQoJCQl9DQoJCX0NCgl9LA0KDQoJX2J1dHRvbkV2ZW50czogew0KDQoJCS8vIFByZXZlbnQgdGV4dCBzZWxlY3Rpb24gZnJvbSBiZWluZyByZXNldCB3aGVuIGludGVyYWN0aW5nIHdpdGggdGhlIHNlbGVjdG1lbnUgKCMxMDE0NCkNCgkJbW91c2Vkb3duOiBmdW5jdGlvbigpIHsNCgkJCXZhciBzZWxlY3Rpb247DQoNCgkJCWlmICggd2luZG93LmdldFNlbGVjdGlvbiApIHsNCgkJCQlzZWxlY3Rpb24gPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7DQoJCQkJaWYgKCBzZWxlY3Rpb24ucmFuZ2VDb3VudCApIHsNCgkJCQkJdGhpcy5yYW5nZSA9IHNlbGVjdGlvbi5nZXRSYW5nZUF0KCAwICk7DQoJCQkJfQ0KDQoJCQkvLyBzdXBwb3J0OiBJRTgNCgkJCX0gZWxzZSB7DQoJCQkJdGhpcy5yYW5nZSA9IGRvY3VtZW50LnNlbGVjdGlvbi5jcmVhdGVSYW5nZSgpOw0KCQkJfQ0KCQl9LA0KDQoJCWNsaWNrOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQl0aGlzLl9zZXRTZWxlY3Rpb24oKTsNCgkJCXRoaXMuX3RvZ2dsZSggZXZlbnQgKTsNCgkJfSwNCg0KCQlrZXlkb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQl2YXIgcHJldmVudERlZmF1bHQgPSB0cnVlOw0KCQkJc3dpdGNoICggZXZlbnQua2V5Q29kZSApIHsNCgkJCQljYXNlICQudWkua2V5Q29kZS5UQUI6DQoJCQkJY2FzZSAkLnVpLmtleUNvZGUuRVNDQVBFOg0KCQkJCQl0aGlzLmNsb3NlKCBldmVudCApOw0KCQkJCQlwcmV2ZW50RGVmYXVsdCA9IGZhbHNlOw0KCQkJCQlicmVhazsNCgkJCQljYXNlICQudWkua2V5Q29kZS5FTlRFUjoNCgkJCQkJaWYgKCB0aGlzLmlzT3BlbiApIHsNCgkJCQkJCXRoaXMuX3NlbGVjdEZvY3VzZWRJdGVtKCBldmVudCApOw0KCQkJCQl9DQoJCQkJCWJyZWFrOw0KCQkJCWNhc2UgJC51aS5rZXlDb2RlLlVQOg0KCQkJCQlpZiAoIGV2ZW50LmFsdEtleSApIHsNCgkJCQkJCXRoaXMuX3RvZ2dsZSggZXZlbnQgKTsNCgkJCQkJfSBlbHNlIHsNCgkJCQkJCXRoaXMuX21vdmUoICJwcmV2IiwgZXZlbnQgKTsNCgkJCQkJfQ0KCQkJCQlicmVhazsNCgkJCQljYXNlICQudWkua2V5Q29kZS5ET1dOOg0KCQkJCQlpZiAoIGV2ZW50LmFsdEtleSApIHsNCgkJCQkJCXRoaXMuX3RvZ2dsZSggZXZlbnQgKTsNCgkJCQkJfSBlbHNlIHsNCgkJCQkJCXRoaXMuX21vdmUoICJuZXh0IiwgZXZlbnQgKTsNCgkJCQkJfQ0KCQkJCQlicmVhazsNCgkJCQljYXNlICQudWkua2V5Q29kZS5TUEFDRToNCgkJCQkJaWYgKCB0aGlzLmlzT3BlbiApIHsNCgkJCQkJCXRoaXMuX3NlbGVjdEZvY3VzZWRJdGVtKCBldmVudCApOw0KCQkJCQl9IGVsc2Ugew0KCQkJCQkJdGhpcy5fdG9nZ2xlKCBldmVudCApOw0KCQkJCQl9DQoJCQkJCWJyZWFrOw0KCQkJCWNhc2UgJC51aS5rZXlDb2RlLkxFRlQ6DQoJCQkJCXRoaXMuX21vdmUoICJwcmV2IiwgZXZlbnQgKTsNCgkJCQkJYnJlYWs7DQoJCQkJY2FzZSAkLnVpLmtleUNvZGUuUklHSFQ6DQoJCQkJCXRoaXMuX21vdmUoICJuZXh0IiwgZXZlbnQgKTsNCgkJCQkJYnJlYWs7DQoJCQkJY2FzZSAkLnVpLmtleUNvZGUuSE9NRToNCgkJCQljYXNlICQudWkua2V5Q29kZS5QQUdFX1VQOg0KCQkJCQl0aGlzLl9tb3ZlKCAiZmlyc3QiLCBldmVudCApOw0KCQkJCQlicmVhazsNCgkJCQljYXNlICQudWkua2V5Q29kZS5FTkQ6DQoJCQkJY2FzZSAkLnVpLmtleUNvZGUuUEFHRV9ET1dOOg0KCQkJCQl0aGlzLl9tb3ZlKCAibGFzdCIsIGV2ZW50ICk7DQoJCQkJCWJyZWFrOw0KCQkJCWRlZmF1bHQ6DQoJCQkJCXRoaXMubWVudS50cmlnZ2VyKCBldmVudCApOw0KCQkJCQlwcmV2ZW50RGVmYXVsdCA9IGZhbHNlOw0KCQkJfQ0KDQoJCQlpZiAoIHByZXZlbnREZWZhdWx0ICkgew0KCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQoJCQl9DQoJCX0NCgl9LA0KDQoJX3NlbGVjdEZvY3VzZWRJdGVtOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXZhciBpdGVtID0gdGhpcy5tZW51SXRlbXMuZXEoIHRoaXMuZm9jdXNJbmRleCApOw0KCQlpZiAoICFpdGVtLmhhc0NsYXNzKCAidWktc3RhdGUtZGlzYWJsZWQiICkgKSB7DQoJCQl0aGlzLl9zZWxlY3QoIGl0ZW0uZGF0YSggInVpLXNlbGVjdG1lbnUtaXRlbSIgKSwgZXZlbnQgKTsNCgkJfQ0KCX0sDQoNCglfc2VsZWN0OiBmdW5jdGlvbiggaXRlbSwgZXZlbnQgKSB7DQoJCXZhciBvbGRJbmRleCA9IHRoaXMuZWxlbWVudFsgMCBdLnNlbGVjdGVkSW5kZXg7DQoNCgkJLy8gQ2hhbmdlIG5hdGl2ZSBzZWxlY3QgZWxlbWVudA0KCQl0aGlzLmVsZW1lbnRbIDAgXS5zZWxlY3RlZEluZGV4ID0gaXRlbS5pbmRleDsNCgkJdGhpcy5fc2V0VGV4dCggdGhpcy5idXR0b25UZXh0LCBpdGVtLmxhYmVsICk7DQoJCXRoaXMuX3NldEFyaWEoIGl0ZW0gKTsNCgkJdGhpcy5fdHJpZ2dlciggInNlbGVjdCIsIGV2ZW50LCB7IGl0ZW06IGl0ZW0gfSApOw0KDQoJCWlmICggaXRlbS5pbmRleCAhPT0gb2xkSW5kZXggKSB7DQoJCQl0aGlzLl90cmlnZ2VyKCAiY2hhbmdlIiwgZXZlbnQsIHsgaXRlbTogaXRlbSB9ICk7DQoJCX0NCg0KCQl0aGlzLmNsb3NlKCBldmVudCApOw0KCX0sDQoNCglfc2V0QXJpYTogZnVuY3Rpb24oIGl0ZW0gKSB7DQoJCXZhciBpZCA9IHRoaXMubWVudUl0ZW1zLmVxKCBpdGVtLmluZGV4ICkuYXR0ciggImlkIiApOw0KDQoJCXRoaXMuYnV0dG9uLmF0dHIoew0KCQkJImFyaWEtbGFiZWxsZWRieSI6IGlkLA0KCQkJImFyaWEtYWN0aXZlZGVzY2VuZGFudCI6IGlkDQoJCX0pOw0KCQl0aGlzLm1lbnUuYXR0ciggImFyaWEtYWN0aXZlZGVzY2VuZGFudCIsIGlkICk7DQoJfSwNCg0KCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgew0KCQlpZiAoIGtleSA9PT0gImljb25zIiApIHsNCgkJCXRoaXMuYnV0dG9uLmZpbmQoICJzcGFuLnVpLWljb24iICkNCgkJCQkucmVtb3ZlQ2xhc3MoIHRoaXMub3B0aW9ucy5pY29ucy5idXR0b24gKQ0KCQkJCS5hZGRDbGFzcyggdmFsdWUuYnV0dG9uICk7DQoJCX0NCg0KCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOw0KDQoJCWlmICgga2V5ID09PSAiYXBwZW5kVG8iICkgew0KCQkJdGhpcy5tZW51V3JhcC5hcHBlbmRUbyggdGhpcy5fYXBwZW5kVG8oKSApOw0KCQl9DQoNCgkJaWYgKCBrZXkgPT09ICJkaXNhYmxlZCIgKSB7DQoJCQl0aGlzLm1lbnVJbnN0YW5jZS5vcHRpb24oICJkaXNhYmxlZCIsIHZhbHVlICk7DQoJCQl0aGlzLmJ1dHRvbg0KCQkJCS50b2dnbGVDbGFzcyggInVpLXN0YXRlLWRpc2FibGVkIiwgdmFsdWUgKQ0KCQkJCS5hdHRyKCAiYXJpYS1kaXNhYmxlZCIsIHZhbHVlICk7DQoNCgkJCXRoaXMuZWxlbWVudC5wcm9wKCAiZGlzYWJsZWQiLCB2YWx1ZSApOw0KCQkJaWYgKCB2YWx1ZSApIHsNCgkJCQl0aGlzLmJ1dHRvbi5hdHRyKCAidGFiaW5kZXgiLCAtMSApOw0KCQkJCXRoaXMuY2xvc2UoKTsNCgkJCX0gZWxzZSB7DQoJCQkJdGhpcy5idXR0b24uYXR0ciggInRhYmluZGV4IiwgMCApOw0KCQkJfQ0KCQl9DQoNCgkJaWYgKCBrZXkgPT09ICJ3aWR0aCIgKSB7DQoJCQl0aGlzLl9yZXNpemVCdXR0b24oKTsNCgkJfQ0KCX0sDQoNCglfYXBwZW5kVG86IGZ1bmN0aW9uKCkgew0KCQl2YXIgZWxlbWVudCA9IHRoaXMub3B0aW9ucy5hcHBlbmRUbzsNCg0KCQlpZiAoIGVsZW1lbnQgKSB7DQoJCQllbGVtZW50ID0gZWxlbWVudC5qcXVlcnkgfHwgZWxlbWVudC5ub2RlVHlwZSA/DQoJCQkJJCggZWxlbWVudCApIDoNCgkJCQl0aGlzLmRvY3VtZW50LmZpbmQoIGVsZW1lbnQgKS5lcSggMCApOw0KCQl9DQoNCgkJaWYgKCAhZWxlbWVudCB8fCAhZWxlbWVudFsgMCBdICkgew0KCQkJZWxlbWVudCA9IHRoaXMuZWxlbWVudC5jbG9zZXN0KCAiLnVpLWZyb250IiApOw0KCQl9DQoNCgkJaWYgKCAhZWxlbWVudC5sZW5ndGggKSB7DQoJCQllbGVtZW50ID0gdGhpcy5kb2N1bWVudFsgMCBdLmJvZHk7DQoJCX0NCg0KCQlyZXR1cm4gZWxlbWVudDsNCgl9LA0KDQoJX3RvZ2dsZUF0dHI6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLmJ1dHRvbg0KCQkJLnRvZ2dsZUNsYXNzKCAidWktY29ybmVyLXRvcCIsIHRoaXMuaXNPcGVuICkNCgkJCS50b2dnbGVDbGFzcyggInVpLWNvcm5lci1hbGwiLCAhdGhpcy5pc09wZW4gKQ0KCQkJLmF0dHIoICJhcmlhLWV4cGFuZGVkIiwgdGhpcy5pc09wZW4gKTsNCgkJdGhpcy5tZW51V3JhcC50b2dnbGVDbGFzcyggInVpLXNlbGVjdG1lbnUtb3BlbiIsIHRoaXMuaXNPcGVuICk7DQoJCXRoaXMubWVudS5hdHRyKCAiYXJpYS1oaWRkZW4iLCAhdGhpcy5pc09wZW4gKTsNCgl9LA0KDQoJX3Jlc2l6ZUJ1dHRvbjogZnVuY3Rpb24oKSB7DQoJCXZhciB3aWR0aCA9IHRoaXMub3B0aW9ucy53aWR0aDsNCg0KCQlpZiAoICF3aWR0aCApIHsNCgkJCXdpZHRoID0gdGhpcy5lbGVtZW50LnNob3coKS5vdXRlcldpZHRoKCk7DQoJCQl0aGlzLmVsZW1lbnQuaGlkZSgpOw0KCQl9DQoNCgkJdGhpcy5idXR0b24ub3V0ZXJXaWR0aCggd2lkdGggKTsNCgl9LA0KDQoJX3Jlc2l6ZU1lbnU6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLm1lbnUub3V0ZXJXaWR0aCggTWF0aC5tYXgoDQoJCQl0aGlzLmJ1dHRvbi5vdXRlcldpZHRoKCksDQoNCgkJCS8vIHN1cHBvcnQ6IElFMTANCgkJCS8vIElFMTAgd3JhcHMgbG9uZyB0ZXh0IChwb3NzaWJseSBhIHJvdW5kaW5nIGJ1ZykNCgkJCS8vIHNvIHdlIGFkZCAxcHggdG8gYXZvaWQgdGhlIHdyYXBwaW5nDQoJCQl0aGlzLm1lbnUud2lkdGgoICIiICkub3V0ZXJXaWR0aCgpICsgMQ0KCQkpICk7DQoJfSwNCg0KCV9nZXRDcmVhdGVPcHRpb25zOiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuIHsgZGlzYWJsZWQ6IHRoaXMuZWxlbWVudC5wcm9wKCAiZGlzYWJsZWQiICkgfTsNCgl9LA0KDQoJX3BhcnNlT3B0aW9uczogZnVuY3Rpb24oIG9wdGlvbnMgKSB7DQoJCXZhciBkYXRhID0gW107DQoJCW9wdGlvbnMuZWFjaChmdW5jdGlvbiggaW5kZXgsIGl0ZW0gKSB7DQoJCQl2YXIgb3B0aW9uID0gJCggaXRlbSApLA0KCQkJCW9wdGdyb3VwID0gb3B0aW9uLnBhcmVudCggIm9wdGdyb3VwIiApOw0KCQkJZGF0YS5wdXNoKHsNCgkJCQllbGVtZW50OiBvcHRpb24sDQoJCQkJaW5kZXg6IGluZGV4LA0KCQkJCXZhbHVlOiBvcHRpb24uYXR0ciggInZhbHVlIiApLA0KCQkJCWxhYmVsOiBvcHRpb24udGV4dCgpLA0KCQkJCW9wdGdyb3VwOiBvcHRncm91cC5hdHRyKCAibGFiZWwiICkgfHwgIiIsDQoJCQkJZGlzYWJsZWQ6IG9wdGdyb3VwLnByb3AoICJkaXNhYmxlZCIgKSB8fCBvcHRpb24ucHJvcCggImRpc2FibGVkIiApDQoJCQl9KTsNCgkJfSk7DQoJCXRoaXMuaXRlbXMgPSBkYXRhOw0KCX0sDQoNCglfZGVzdHJveTogZnVuY3Rpb24oKSB7DQoJCXRoaXMubWVudVdyYXAucmVtb3ZlKCk7DQoJCXRoaXMuYnV0dG9uLnJlbW92ZSgpOw0KCQl0aGlzLmVsZW1lbnQuc2hvdygpOw0KCQl0aGlzLmVsZW1lbnQucmVtb3ZlVW5pcXVlSWQoKTsNCgkJdGhpcy5sYWJlbC5hdHRyKCAiZm9yIiwgdGhpcy5pZHMuZWxlbWVudCApOw0KCX0NCn0pOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIFNsaWRlciAxLjExLjINCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgMjAxNCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKg0KICogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vc2xpZGVyLw0KICovDQoNCg0KdmFyIHNsaWRlciA9ICQud2lkZ2V0KCAidWkuc2xpZGVyIiwgJC51aS5tb3VzZSwgew0KCXZlcnNpb246ICIxLjExLjIiLA0KCXdpZGdldEV2ZW50UHJlZml4OiAic2xpZGUiLA0KDQoJb3B0aW9uczogew0KCQlhbmltYXRlOiBmYWxzZSwNCgkJZGlzdGFuY2U6IDAsDQoJCW1heDogMTAwLA0KCQltaW46IDAsDQoJCW9yaWVudGF0aW9uOiAiaG9yaXpvbnRhbCIsDQoJCXJhbmdlOiBmYWxzZSwNCgkJc3RlcDogMSwNCgkJdmFsdWU6IDAsDQoJCXZhbHVlczogbnVsbCwNCg0KCQkvLyBjYWxsYmFja3MNCgkJY2hhbmdlOiBudWxsLA0KCQlzbGlkZTogbnVsbCwNCgkJc3RhcnQ6IG51bGwsDQoJCXN0b3A6IG51bGwNCgl9LA0KDQoJLy8gbnVtYmVyIG9mIHBhZ2VzIGluIGEgc2xpZGVyDQoJLy8gKGhvdyBtYW55IHRpbWVzIGNhbiB5b3UgcGFnZSB1cC9kb3duIHRvIGdvIHRocm91Z2ggdGhlIHdob2xlIHJhbmdlKQ0KCW51bVBhZ2VzOiA1LA0KDQoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7DQoJCXRoaXMuX2tleVNsaWRpbmcgPSBmYWxzZTsNCgkJdGhpcy5fbW91c2VTbGlkaW5nID0gZmFsc2U7DQoJCXRoaXMuX2FuaW1hdGVPZmYgPSB0cnVlOw0KCQl0aGlzLl9oYW5kbGVJbmRleCA9IG51bGw7DQoJCXRoaXMuX2RldGVjdE9yaWVudGF0aW9uKCk7DQoJCXRoaXMuX21vdXNlSW5pdCgpOw0KCQl0aGlzLl9jYWxjdWxhdGVOZXdNYXgoKTsNCg0KCQl0aGlzLmVsZW1lbnQNCgkJCS5hZGRDbGFzcyggInVpLXNsaWRlciIgKw0KCQkJCSIgdWktc2xpZGVyLSIgKyB0aGlzLm9yaWVudGF0aW9uICsNCgkJCQkiIHVpLXdpZGdldCIgKw0KCQkJCSIgdWktd2lkZ2V0LWNvbnRlbnQiICsNCgkJCQkiIHVpLWNvcm5lci1hbGwiKTsNCg0KCQl0aGlzLl9yZWZyZXNoKCk7DQoJCXRoaXMuX3NldE9wdGlvbiggImRpc2FibGVkIiwgdGhpcy5vcHRpb25zLmRpc2FibGVkICk7DQoNCgkJdGhpcy5fYW5pbWF0ZU9mZiA9IGZhbHNlOw0KCX0sDQoNCglfcmVmcmVzaDogZnVuY3Rpb24oKSB7DQoJCXRoaXMuX2NyZWF0ZVJhbmdlKCk7DQoJCXRoaXMuX2NyZWF0ZUhhbmRsZXMoKTsNCgkJdGhpcy5fc2V0dXBFdmVudHMoKTsNCgkJdGhpcy5fcmVmcmVzaFZhbHVlKCk7DQoJfSwNCg0KCV9jcmVhdGVIYW5kbGVzOiBmdW5jdGlvbigpIHsNCgkJdmFyIGksIGhhbmRsZUNvdW50LA0KCQkJb3B0aW9ucyA9IHRoaXMub3B0aW9ucywNCgkJCWV4aXN0aW5nSGFuZGxlcyA9IHRoaXMuZWxlbWVudC5maW5kKCAiLnVpLXNsaWRlci1oYW5kbGUiICkuYWRkQ2xhc3MoICJ1aS1zdGF0ZS1kZWZhdWx0IHVpLWNvcm5lci1hbGwiICksDQoJCQloYW5kbGUgPSAiPHNwYW4gY2xhc3M9J3VpLXNsaWRlci1oYW5kbGUgdWktc3RhdGUtZGVmYXVsdCB1aS1jb3JuZXItYWxsJyB0YWJpbmRleD0nMCc+PC9zcGFuPiIsDQoJCQloYW5kbGVzID0gW107DQoNCgkJaGFuZGxlQ291bnQgPSAoIG9wdGlvbnMudmFsdWVzICYmIG9wdGlvbnMudmFsdWVzLmxlbmd0aCApIHx8IDE7DQoNCgkJaWYgKCBleGlzdGluZ0hhbmRsZXMubGVuZ3RoID4gaGFuZGxlQ291bnQgKSB7DQoJCQlleGlzdGluZ0hhbmRsZXMuc2xpY2UoIGhhbmRsZUNvdW50ICkucmVtb3ZlKCk7DQoJCQlleGlzdGluZ0hhbmRsZXMgPSBleGlzdGluZ0hhbmRsZXMuc2xpY2UoIDAsIGhhbmRsZUNvdW50ICk7DQoJCX0NCg0KCQlmb3IgKCBpID0gZXhpc3RpbmdIYW5kbGVzLmxlbmd0aDsgaSA8IGhhbmRsZUNvdW50OyBpKysgKSB7DQoJCQloYW5kbGVzLnB1c2goIGhhbmRsZSApOw0KCQl9DQoNCgkJdGhpcy5oYW5kbGVzID0gZXhpc3RpbmdIYW5kbGVzLmFkZCggJCggaGFuZGxlcy5qb2luKCAiIiApICkuYXBwZW5kVG8oIHRoaXMuZWxlbWVudCApICk7DQoNCgkJdGhpcy5oYW5kbGUgPSB0aGlzLmhhbmRsZXMuZXEoIDAgKTsNCg0KCQl0aGlzLmhhbmRsZXMuZWFjaChmdW5jdGlvbiggaSApIHsNCgkJCSQoIHRoaXMgKS5kYXRhKCAidWktc2xpZGVyLWhhbmRsZS1pbmRleCIsIGkgKTsNCgkJfSk7DQoJfSwNCg0KCV9jcmVhdGVSYW5nZTogZnVuY3Rpb24oKSB7DQoJCXZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zLA0KCQkJY2xhc3NlcyA9ICIiOw0KDQoJCWlmICggb3B0aW9ucy5yYW5nZSApIHsNCgkJCWlmICggb3B0aW9ucy5yYW5nZSA9PT0gdHJ1ZSApIHsNCgkJCQlpZiAoICFvcHRpb25zLnZhbHVlcyApIHsNCgkJCQkJb3B0aW9ucy52YWx1ZXMgPSBbIHRoaXMuX3ZhbHVlTWluKCksIHRoaXMuX3ZhbHVlTWluKCkgXTsNCgkJCQl9IGVsc2UgaWYgKCBvcHRpb25zLnZhbHVlcy5sZW5ndGggJiYgb3B0aW9ucy52YWx1ZXMubGVuZ3RoICE9PSAyICkgew0KCQkJCQlvcHRpb25zLnZhbHVlcyA9IFsgb3B0aW9ucy52YWx1ZXNbMF0sIG9wdGlvbnMudmFsdWVzWzBdIF07DQoJCQkJfSBlbHNlIGlmICggJC5pc0FycmF5KCBvcHRpb25zLnZhbHVlcyApICkgew0KCQkJCQlvcHRpb25zLnZhbHVlcyA9IG9wdGlvbnMudmFsdWVzLnNsaWNlKDApOw0KCQkJCX0NCgkJCX0NCg0KCQkJaWYgKCAhdGhpcy5yYW5nZSB8fCAhdGhpcy5yYW5nZS5sZW5ndGggKSB7DQoJCQkJdGhpcy5yYW5nZSA9ICQoICI8ZGl2PjwvZGl2PiIgKQ0KCQkJCQkuYXBwZW5kVG8oIHRoaXMuZWxlbWVudCApOw0KDQoJCQkJY2xhc3NlcyA9ICJ1aS1zbGlkZXItcmFuZ2UiICsNCgkJCQkvLyBub3RlOiB0aGlzIGlzbid0IHRoZSBtb3N0IGZpdHRpbmdseSBzZW1hbnRpYyBmcmFtZXdvcmsgY2xhc3MgZm9yIHRoaXMgZWxlbWVudCwNCgkJCQkvLyBidXQgd29ya2VkIGJlc3QgdmlzdWFsbHkgd2l0aCBhIHZhcmlldHkgb2YgdGhlbWVzDQoJCQkJIiB1aS13aWRnZXQtaGVhZGVyIHVpLWNvcm5lci1hbGwiOw0KCQkJfSBlbHNlIHsNCgkJCQl0aGlzLnJhbmdlLnJlbW92ZUNsYXNzKCAidWktc2xpZGVyLXJhbmdlLW1pbiB1aS1zbGlkZXItcmFuZ2UtbWF4IiApDQoJCQkJCS8vIEhhbmRsZSByYW5nZSBzd2l0Y2hpbmcgZnJvbSB0cnVlIHRvIG1pbi9tYXgNCgkJCQkJLmNzcyh7DQoJCQkJCQkibGVmdCI6ICIiLA0KCQkJCQkJImJvdHRvbSI6ICIiDQoJCQkJCX0pOw0KCQkJfQ0KDQoJCQl0aGlzLnJhbmdlLmFkZENsYXNzKCBjbGFzc2VzICsNCgkJCQkoICggb3B0aW9ucy5yYW5nZSA9PT0gIm1pbiIgfHwgb3B0aW9ucy5yYW5nZSA9PT0gIm1heCIgKSA/ICIgdWktc2xpZGVyLXJhbmdlLSIgKyBvcHRpb25zLnJhbmdlIDogIiIgKSApOw0KCQl9IGVsc2Ugew0KCQkJaWYgKCB0aGlzLnJhbmdlICkgew0KCQkJCXRoaXMucmFuZ2UucmVtb3ZlKCk7DQoJCQl9DQoJCQl0aGlzLnJhbmdlID0gbnVsbDsNCgkJfQ0KCX0sDQoNCglfc2V0dXBFdmVudHM6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLl9vZmYoIHRoaXMuaGFuZGxlcyApOw0KCQl0aGlzLl9vbiggdGhpcy5oYW5kbGVzLCB0aGlzLl9oYW5kbGVFdmVudHMgKTsNCgkJdGhpcy5faG92ZXJhYmxlKCB0aGlzLmhhbmRsZXMgKTsNCgkJdGhpcy5fZm9jdXNhYmxlKCB0aGlzLmhhbmRsZXMgKTsNCgl9LA0KDQoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLmhhbmRsZXMucmVtb3ZlKCk7DQoJCWlmICggdGhpcy5yYW5nZSApIHsNCgkJCXRoaXMucmFuZ2UucmVtb3ZlKCk7DQoJCX0NCg0KCQl0aGlzLmVsZW1lbnQNCgkJCS5yZW1vdmVDbGFzcyggInVpLXNsaWRlciIgKw0KCQkJCSIgdWktc2xpZGVyLWhvcml6b250YWwiICsNCgkJCQkiIHVpLXNsaWRlci12ZXJ0aWNhbCIgKw0KCQkJCSIgdWktd2lkZ2V0IiArDQoJCQkJIiB1aS13aWRnZXQtY29udGVudCIgKw0KCQkJCSIgdWktY29ybmVyLWFsbCIgKTsNCg0KCQl0aGlzLl9tb3VzZURlc3Ryb3koKTsNCgl9LA0KDQoJX21vdXNlQ2FwdHVyZTogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl2YXIgcG9zaXRpb24sIG5vcm1WYWx1ZSwgZGlzdGFuY2UsIGNsb3Nlc3RIYW5kbGUsIGluZGV4LCBhbGxvd2VkLCBvZmZzZXQsIG1vdXNlT3ZlckhhbmRsZSwNCgkJCXRoYXQgPSB0aGlzLA0KCQkJbyA9IHRoaXMub3B0aW9uczsNCg0KCQlpZiAoIG8uZGlzYWJsZWQgKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCg0KCQl0aGlzLmVsZW1lbnRTaXplID0gew0KCQkJd2lkdGg6IHRoaXMuZWxlbWVudC5vdXRlcldpZHRoKCksDQoJCQloZWlnaHQ6IHRoaXMuZWxlbWVudC5vdXRlckhlaWdodCgpDQoJCX07DQoJCXRoaXMuZWxlbWVudE9mZnNldCA9IHRoaXMuZWxlbWVudC5vZmZzZXQoKTsNCg0KCQlwb3NpdGlvbiA9IHsgeDogZXZlbnQucGFnZVgsIHk6IGV2ZW50LnBhZ2VZIH07DQoJCW5vcm1WYWx1ZSA9IHRoaXMuX25vcm1WYWx1ZUZyb21Nb3VzZSggcG9zaXRpb24gKTsNCgkJZGlzdGFuY2UgPSB0aGlzLl92YWx1ZU1heCgpIC0gdGhpcy5fdmFsdWVNaW4oKSArIDE7DQoJCXRoaXMuaGFuZGxlcy5lYWNoKGZ1bmN0aW9uKCBpICkgew0KCQkJdmFyIHRoaXNEaXN0YW5jZSA9IE1hdGguYWJzKCBub3JtVmFsdWUgLSB0aGF0LnZhbHVlcyhpKSApOw0KCQkJaWYgKCggZGlzdGFuY2UgPiB0aGlzRGlzdGFuY2UgKSB8fA0KCQkJCSggZGlzdGFuY2UgPT09IHRoaXNEaXN0YW5jZSAmJg0KCQkJCQkoaSA9PT0gdGhhdC5fbGFzdENoYW5nZWRWYWx1ZSB8fCB0aGF0LnZhbHVlcyhpKSA9PT0gby5taW4gKSkpIHsNCgkJCQlkaXN0YW5jZSA9IHRoaXNEaXN0YW5jZTsNCgkJCQljbG9zZXN0SGFuZGxlID0gJCggdGhpcyApOw0KCQkJCWluZGV4ID0gaTsNCgkJCX0NCgkJfSk7DQoNCgkJYWxsb3dlZCA9IHRoaXMuX3N0YXJ0KCBldmVudCwgaW5kZXggKTsNCgkJaWYgKCBhbGxvd2VkID09PSBmYWxzZSApIHsNCgkJCXJldHVybiBmYWxzZTsNCgkJfQ0KCQl0aGlzLl9tb3VzZVNsaWRpbmcgPSB0cnVlOw0KDQoJCXRoaXMuX2hhbmRsZUluZGV4ID0gaW5kZXg7DQoNCgkJY2xvc2VzdEhhbmRsZQ0KCQkJLmFkZENsYXNzKCAidWktc3RhdGUtYWN0aXZlIiApDQoJCQkuZm9jdXMoKTsNCg0KCQlvZmZzZXQgPSBjbG9zZXN0SGFuZGxlLm9mZnNldCgpOw0KCQltb3VzZU92ZXJIYW5kbGUgPSAhJCggZXZlbnQudGFyZ2V0ICkucGFyZW50cygpLmFkZEJhY2soKS5pcyggIi51aS1zbGlkZXItaGFuZGxlIiApOw0KCQl0aGlzLl9jbGlja09mZnNldCA9IG1vdXNlT3ZlckhhbmRsZSA/IHsgbGVmdDogMCwgdG9wOiAwIH0gOiB7DQoJCQlsZWZ0OiBldmVudC5wYWdlWCAtIG9mZnNldC5sZWZ0IC0gKCBjbG9zZXN0SGFuZGxlLndpZHRoKCkgLyAyICksDQoJCQl0b3A6IGV2ZW50LnBhZ2VZIC0gb2Zmc2V0LnRvcCAtDQoJCQkJKCBjbG9zZXN0SGFuZGxlLmhlaWdodCgpIC8gMiApIC0NCgkJCQkoIHBhcnNlSW50KCBjbG9zZXN0SGFuZGxlLmNzcygiYm9yZGVyVG9wV2lkdGgiKSwgMTAgKSB8fCAwICkgLQ0KCQkJCSggcGFyc2VJbnQoIGNsb3Nlc3RIYW5kbGUuY3NzKCJib3JkZXJCb3R0b21XaWR0aCIpLCAxMCApIHx8IDApICsNCgkJCQkoIHBhcnNlSW50KCBjbG9zZXN0SGFuZGxlLmNzcygibWFyZ2luVG9wIiksIDEwICkgfHwgMCkNCgkJfTsNCg0KCQlpZiAoICF0aGlzLmhhbmRsZXMuaGFzQ2xhc3MoICJ1aS1zdGF0ZS1ob3ZlciIgKSApIHsNCgkJCXRoaXMuX3NsaWRlKCBldmVudCwgaW5kZXgsIG5vcm1WYWx1ZSApOw0KCQl9DQoJCXRoaXMuX2FuaW1hdGVPZmYgPSB0cnVlOw0KCQlyZXR1cm4gdHJ1ZTsNCgl9LA0KDQoJX21vdXNlU3RhcnQ6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdHJ1ZTsNCgl9LA0KDQoJX21vdXNlRHJhZzogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl2YXIgcG9zaXRpb24gPSB7IHg6IGV2ZW50LnBhZ2VYLCB5OiBldmVudC5wYWdlWSB9LA0KCQkJbm9ybVZhbHVlID0gdGhpcy5fbm9ybVZhbHVlRnJvbU1vdXNlKCBwb3NpdGlvbiApOw0KDQoJCXRoaXMuX3NsaWRlKCBldmVudCwgdGhpcy5faGFuZGxlSW5kZXgsIG5vcm1WYWx1ZSApOw0KDQoJCXJldHVybiBmYWxzZTsNCgl9LA0KDQoJX21vdXNlU3RvcDogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl0aGlzLmhhbmRsZXMucmVtb3ZlQ2xhc3MoICJ1aS1zdGF0ZS1hY3RpdmUiICk7DQoJCXRoaXMuX21vdXNlU2xpZGluZyA9IGZhbHNlOw0KDQoJCXRoaXMuX3N0b3AoIGV2ZW50LCB0aGlzLl9oYW5kbGVJbmRleCApOw0KCQl0aGlzLl9jaGFuZ2UoIGV2ZW50LCB0aGlzLl9oYW5kbGVJbmRleCApOw0KDQoJCXRoaXMuX2hhbmRsZUluZGV4ID0gbnVsbDsNCgkJdGhpcy5fY2xpY2tPZmZzZXQgPSBudWxsOw0KCQl0aGlzLl9hbmltYXRlT2ZmID0gZmFsc2U7DQoNCgkJcmV0dXJuIGZhbHNlOw0KCX0sDQoNCglfZGV0ZWN0T3JpZW50YXRpb246IGZ1bmN0aW9uKCkgew0KCQl0aGlzLm9yaWVudGF0aW9uID0gKCB0aGlzLm9wdGlvbnMub3JpZW50YXRpb24gPT09ICJ2ZXJ0aWNhbCIgKSA/ICJ2ZXJ0aWNhbCIgOiAiaG9yaXpvbnRhbCI7DQoJfSwNCg0KCV9ub3JtVmFsdWVGcm9tTW91c2U6IGZ1bmN0aW9uKCBwb3NpdGlvbiApIHsNCgkJdmFyIHBpeGVsVG90YWwsDQoJCQlwaXhlbE1vdXNlLA0KCQkJcGVyY2VudE1vdXNlLA0KCQkJdmFsdWVUb3RhbCwNCgkJCXZhbHVlTW91c2U7DQoNCgkJaWYgKCB0aGlzLm9yaWVudGF0aW9uID09PSAiaG9yaXpvbnRhbCIgKSB7DQoJCQlwaXhlbFRvdGFsID0gdGhpcy5lbGVtZW50U2l6ZS53aWR0aDsNCgkJCXBpeGVsTW91c2UgPSBwb3NpdGlvbi54IC0gdGhpcy5lbGVtZW50T2Zmc2V0LmxlZnQgLSAoIHRoaXMuX2NsaWNrT2Zmc2V0ID8gdGhpcy5fY2xpY2tPZmZzZXQubGVmdCA6IDAgKTsNCgkJfSBlbHNlIHsNCgkJCXBpeGVsVG90YWwgPSB0aGlzLmVsZW1lbnRTaXplLmhlaWdodDsNCgkJCXBpeGVsTW91c2UgPSBwb3NpdGlvbi55IC0gdGhpcy5lbGVtZW50T2Zmc2V0LnRvcCAtICggdGhpcy5fY2xpY2tPZmZzZXQgPyB0aGlzLl9jbGlja09mZnNldC50b3AgOiAwICk7DQoJCX0NCg0KCQlwZXJjZW50TW91c2UgPSAoIHBpeGVsTW91c2UgLyBwaXhlbFRvdGFsICk7DQoJCWlmICggcGVyY2VudE1vdXNlID4gMSApIHsNCgkJCXBlcmNlbnRNb3VzZSA9IDE7DQoJCX0NCgkJaWYgKCBwZXJjZW50TW91c2UgPCAwICkgew0KCQkJcGVyY2VudE1vdXNlID0gMDsNCgkJfQ0KCQlpZiAoIHRoaXMub3JpZW50YXRpb24gPT09ICJ2ZXJ0aWNhbCIgKSB7DQoJCQlwZXJjZW50TW91c2UgPSAxIC0gcGVyY2VudE1vdXNlOw0KCQl9DQoNCgkJdmFsdWVUb3RhbCA9IHRoaXMuX3ZhbHVlTWF4KCkgLSB0aGlzLl92YWx1ZU1pbigpOw0KCQl2YWx1ZU1vdXNlID0gdGhpcy5fdmFsdWVNaW4oKSArIHBlcmNlbnRNb3VzZSAqIHZhbHVlVG90YWw7DQoNCgkJcmV0dXJuIHRoaXMuX3RyaW1BbGlnblZhbHVlKCB2YWx1ZU1vdXNlICk7DQoJfSwNCg0KCV9zdGFydDogZnVuY3Rpb24oIGV2ZW50LCBpbmRleCApIHsNCgkJdmFyIHVpSGFzaCA9IHsNCgkJCWhhbmRsZTogdGhpcy5oYW5kbGVzWyBpbmRleCBdLA0KCQkJdmFsdWU6IHRoaXMudmFsdWUoKQ0KCQl9Ow0KCQlpZiAoIHRoaXMub3B0aW9ucy52YWx1ZXMgJiYgdGhpcy5vcHRpb25zLnZhbHVlcy5sZW5ndGggKSB7DQoJCQl1aUhhc2gudmFsdWUgPSB0aGlzLnZhbHVlcyggaW5kZXggKTsNCgkJCXVpSGFzaC52YWx1ZXMgPSB0aGlzLnZhbHVlcygpOw0KCQl9DQoJCXJldHVybiB0aGlzLl90cmlnZ2VyKCAic3RhcnQiLCBldmVudCwgdWlIYXNoICk7DQoJfSwNCg0KCV9zbGlkZTogZnVuY3Rpb24oIGV2ZW50LCBpbmRleCwgbmV3VmFsICkgew0KCQl2YXIgb3RoZXJWYWwsDQoJCQluZXdWYWx1ZXMsDQoJCQlhbGxvd2VkOw0KDQoJCWlmICggdGhpcy5vcHRpb25zLnZhbHVlcyAmJiB0aGlzLm9wdGlvbnMudmFsdWVzLmxlbmd0aCApIHsNCgkJCW90aGVyVmFsID0gdGhpcy52YWx1ZXMoIGluZGV4ID8gMCA6IDEgKTsNCg0KCQkJaWYgKCAoIHRoaXMub3B0aW9ucy52YWx1ZXMubGVuZ3RoID09PSAyICYmIHRoaXMub3B0aW9ucy5yYW5nZSA9PT0gdHJ1ZSApICYmDQoJCQkJCSggKCBpbmRleCA9PT0gMCAmJiBuZXdWYWwgPiBvdGhlclZhbCkgfHwgKCBpbmRleCA9PT0gMSAmJiBuZXdWYWwgPCBvdGhlclZhbCApICkNCgkJCQkpIHsNCgkJCQluZXdWYWwgPSBvdGhlclZhbDsNCgkJCX0NCg0KCQkJaWYgKCBuZXdWYWwgIT09IHRoaXMudmFsdWVzKCBpbmRleCApICkgew0KCQkJCW5ld1ZhbHVlcyA9IHRoaXMudmFsdWVzKCk7DQoJCQkJbmV3VmFsdWVzWyBpbmRleCBdID0gbmV3VmFsOw0KCQkJCS8vIEEgc2xpZGUgY2FuIGJlIGNhbmNlbGVkIGJ5IHJldHVybmluZyBmYWxzZSBmcm9tIHRoZSBzbGlkZSBjYWxsYmFjaw0KCQkJCWFsbG93ZWQgPSB0aGlzLl90cmlnZ2VyKCAic2xpZGUiLCBldmVudCwgew0KCQkJCQloYW5kbGU6IHRoaXMuaGFuZGxlc1sgaW5kZXggXSwNCgkJCQkJdmFsdWU6IG5ld1ZhbCwNCgkJCQkJdmFsdWVzOiBuZXdWYWx1ZXMNCgkJCQl9ICk7DQoJCQkJb3RoZXJWYWwgPSB0aGlzLnZhbHVlcyggaW5kZXggPyAwIDogMSApOw0KCQkJCWlmICggYWxsb3dlZCAhPT0gZmFsc2UgKSB7DQoJCQkJCXRoaXMudmFsdWVzKCBpbmRleCwgbmV3VmFsICk7DQoJCQkJfQ0KCQkJfQ0KCQl9IGVsc2Ugew0KCQkJaWYgKCBuZXdWYWwgIT09IHRoaXMudmFsdWUoKSApIHsNCgkJCQkvLyBBIHNsaWRlIGNhbiBiZSBjYW5jZWxlZCBieSByZXR1cm5pbmcgZmFsc2UgZnJvbSB0aGUgc2xpZGUgY2FsbGJhY2sNCgkJCQlhbGxvd2VkID0gdGhpcy5fdHJpZ2dlciggInNsaWRlIiwgZXZlbnQsIHsNCgkJCQkJaGFuZGxlOiB0aGlzLmhhbmRsZXNbIGluZGV4IF0sDQoJCQkJCXZhbHVlOiBuZXdWYWwNCgkJCQl9ICk7DQoJCQkJaWYgKCBhbGxvd2VkICE9PSBmYWxzZSApIHsNCgkJCQkJdGhpcy52YWx1ZSggbmV3VmFsICk7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJfSwNCg0KCV9zdG9wOiBmdW5jdGlvbiggZXZlbnQsIGluZGV4ICkgew0KCQl2YXIgdWlIYXNoID0gew0KCQkJaGFuZGxlOiB0aGlzLmhhbmRsZXNbIGluZGV4IF0sDQoJCQl2YWx1ZTogdGhpcy52YWx1ZSgpDQoJCX07DQoJCWlmICggdGhpcy5vcHRpb25zLnZhbHVlcyAmJiB0aGlzLm9wdGlvbnMudmFsdWVzLmxlbmd0aCApIHsNCgkJCXVpSGFzaC52YWx1ZSA9IHRoaXMudmFsdWVzKCBpbmRleCApOw0KCQkJdWlIYXNoLnZhbHVlcyA9IHRoaXMudmFsdWVzKCk7DQoJCX0NCg0KCQl0aGlzLl90cmlnZ2VyKCAic3RvcCIsIGV2ZW50LCB1aUhhc2ggKTsNCgl9LA0KDQoJX2NoYW5nZTogZnVuY3Rpb24oIGV2ZW50LCBpbmRleCApIHsNCgkJaWYgKCAhdGhpcy5fa2V5U2xpZGluZyAmJiAhdGhpcy5fbW91c2VTbGlkaW5nICkgew0KCQkJdmFyIHVpSGFzaCA9IHsNCgkJCQloYW5kbGU6IHRoaXMuaGFuZGxlc1sgaW5kZXggXSwNCgkJCQl2YWx1ZTogdGhpcy52YWx1ZSgpDQoJCQl9Ow0KCQkJaWYgKCB0aGlzLm9wdGlvbnMudmFsdWVzICYmIHRoaXMub3B0aW9ucy52YWx1ZXMubGVuZ3RoICkgew0KCQkJCXVpSGFzaC52YWx1ZSA9IHRoaXMudmFsdWVzKCBpbmRleCApOw0KCQkJCXVpSGFzaC52YWx1ZXMgPSB0aGlzLnZhbHVlcygpOw0KCQkJfQ0KDQoJCQkvL3N0b3JlIHRoZSBsYXN0IGNoYW5nZWQgdmFsdWUgaW5kZXggZm9yIHJlZmVyZW5jZSB3aGVuIGhhbmRsZXMgb3ZlcmxhcA0KCQkJdGhpcy5fbGFzdENoYW5nZWRWYWx1ZSA9IGluZGV4Ow0KDQoJCQl0aGlzLl90cmlnZ2VyKCAiY2hhbmdlIiwgZXZlbnQsIHVpSGFzaCApOw0KCQl9DQoJfSwNCg0KCXZhbHVlOiBmdW5jdGlvbiggbmV3VmFsdWUgKSB7DQoJCWlmICggYXJndW1lbnRzLmxlbmd0aCApIHsNCgkJCXRoaXMub3B0aW9ucy52YWx1ZSA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKCBuZXdWYWx1ZSApOw0KCQkJdGhpcy5fcmVmcmVzaFZhbHVlKCk7DQoJCQl0aGlzLl9jaGFuZ2UoIG51bGwsIDAgKTsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCXJldHVybiB0aGlzLl92YWx1ZSgpOw0KCX0sDQoNCgl2YWx1ZXM6IGZ1bmN0aW9uKCBpbmRleCwgbmV3VmFsdWUgKSB7DQoJCXZhciB2YWxzLA0KCQkJbmV3VmFsdWVzLA0KCQkJaTsNCg0KCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggPiAxICkgew0KCQkJdGhpcy5vcHRpb25zLnZhbHVlc1sgaW5kZXggXSA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKCBuZXdWYWx1ZSApOw0KCQkJdGhpcy5fcmVmcmVzaFZhbHVlKCk7DQoJCQl0aGlzLl9jaGFuZ2UoIG51bGwsIGluZGV4ICk7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7DQoJCQlpZiAoICQuaXNBcnJheSggYXJndW1lbnRzWyAwIF0gKSApIHsNCgkJCQl2YWxzID0gdGhpcy5vcHRpb25zLnZhbHVlczsNCgkJCQluZXdWYWx1ZXMgPSBhcmd1bWVudHNbIDAgXTsNCgkJCQlmb3IgKCBpID0gMDsgaSA8IHZhbHMubGVuZ3RoOyBpICs9IDEgKSB7DQoJCQkJCXZhbHNbIGkgXSA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKCBuZXdWYWx1ZXNbIGkgXSApOw0KCQkJCQl0aGlzLl9jaGFuZ2UoIG51bGwsIGkgKTsNCgkJCQl9DQoJCQkJdGhpcy5fcmVmcmVzaFZhbHVlKCk7DQoJCQl9IGVsc2Ugew0KCQkJCWlmICggdGhpcy5vcHRpb25zLnZhbHVlcyAmJiB0aGlzLm9wdGlvbnMudmFsdWVzLmxlbmd0aCApIHsNCgkJCQkJcmV0dXJuIHRoaXMuX3ZhbHVlcyggaW5kZXggKTsNCgkJCQl9IGVsc2Ugew0KCQkJCQlyZXR1cm4gdGhpcy52YWx1ZSgpOw0KCQkJCX0NCgkJCX0NCgkJfSBlbHNlIHsNCgkJCXJldHVybiB0aGlzLl92YWx1ZXMoKTsNCgkJfQ0KCX0sDQoNCglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsNCgkJdmFyIGksDQoJCQl2YWxzTGVuZ3RoID0gMDsNCg0KCQlpZiAoIGtleSA9PT0gInJhbmdlIiAmJiB0aGlzLm9wdGlvbnMucmFuZ2UgPT09IHRydWUgKSB7DQoJCQlpZiAoIHZhbHVlID09PSAibWluIiApIHsNCgkJCQl0aGlzLm9wdGlvbnMudmFsdWUgPSB0aGlzLl92YWx1ZXMoIDAgKTsNCgkJCQl0aGlzLm9wdGlvbnMudmFsdWVzID0gbnVsbDsNCgkJCX0gZWxzZSBpZiAoIHZhbHVlID09PSAibWF4IiApIHsNCgkJCQl0aGlzLm9wdGlvbnMudmFsdWUgPSB0aGlzLl92YWx1ZXMoIHRoaXMub3B0aW9ucy52YWx1ZXMubGVuZ3RoIC0gMSApOw0KCQkJCXRoaXMub3B0aW9ucy52YWx1ZXMgPSBudWxsOw0KCQkJfQ0KCQl9DQoNCgkJaWYgKCAkLmlzQXJyYXkoIHRoaXMub3B0aW9ucy52YWx1ZXMgKSApIHsNCgkJCXZhbHNMZW5ndGggPSB0aGlzLm9wdGlvbnMudmFsdWVzLmxlbmd0aDsNCgkJfQ0KDQoJCWlmICgga2V5ID09PSAiZGlzYWJsZWQiICkgew0KCQkJdGhpcy5lbGVtZW50LnRvZ2dsZUNsYXNzKCAidWktc3RhdGUtZGlzYWJsZWQiLCAhIXZhbHVlICk7DQoJCX0NCg0KCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOw0KDQoJCXN3aXRjaCAoIGtleSApIHsNCgkJCWNhc2UgIm9yaWVudGF0aW9uIjoNCgkJCQl0aGlzLl9kZXRlY3RPcmllbnRhdGlvbigpOw0KCQkJCXRoaXMuZWxlbWVudA0KCQkJCQkucmVtb3ZlQ2xhc3MoICJ1aS1zbGlkZXItaG9yaXpvbnRhbCB1aS1zbGlkZXItdmVydGljYWwiICkNCgkJCQkJLmFkZENsYXNzKCAidWktc2xpZGVyLSIgKyB0aGlzLm9yaWVudGF0aW9uICk7DQoJCQkJdGhpcy5fcmVmcmVzaFZhbHVlKCk7DQoNCgkJCQkvLyBSZXNldCBwb3NpdGlvbmluZyBmcm9tIHByZXZpb3VzIG9yaWVudGF0aW9uDQoJCQkJdGhpcy5oYW5kbGVzLmNzcyggdmFsdWUgPT09ICJob3Jpem9udGFsIiA/ICJib3R0b20iIDogImxlZnQiLCAiIiApOw0KCQkJCWJyZWFrOw0KCQkJY2FzZSAidmFsdWUiOg0KCQkJCXRoaXMuX2FuaW1hdGVPZmYgPSB0cnVlOw0KCQkJCXRoaXMuX3JlZnJlc2hWYWx1ZSgpOw0KCQkJCXRoaXMuX2NoYW5nZSggbnVsbCwgMCApOw0KCQkJCXRoaXMuX2FuaW1hdGVPZmYgPSBmYWxzZTsNCgkJCQlicmVhazsNCgkJCWNhc2UgInZhbHVlcyI6DQoJCQkJdGhpcy5fYW5pbWF0ZU9mZiA9IHRydWU7DQoJCQkJdGhpcy5fcmVmcmVzaFZhbHVlKCk7DQoJCQkJZm9yICggaSA9IDA7IGkgPCB2YWxzTGVuZ3RoOyBpICs9IDEgKSB7DQoJCQkJCXRoaXMuX2NoYW5nZSggbnVsbCwgaSApOw0KCQkJCX0NCgkJCQl0aGlzLl9hbmltYXRlT2ZmID0gZmFsc2U7DQoJCQkJYnJlYWs7DQoJCQljYXNlICJzdGVwIjoNCgkJCWNhc2UgIm1pbiI6DQoJCQljYXNlICJtYXgiOg0KCQkJCXRoaXMuX2FuaW1hdGVPZmYgPSB0cnVlOw0KCQkJCXRoaXMuX2NhbGN1bGF0ZU5ld01heCgpOw0KCQkJCXRoaXMuX3JlZnJlc2hWYWx1ZSgpOw0KCQkJCXRoaXMuX2FuaW1hdGVPZmYgPSBmYWxzZTsNCgkJCQlicmVhazsNCgkJCWNhc2UgInJhbmdlIjoNCgkJCQl0aGlzLl9hbmltYXRlT2ZmID0gdHJ1ZTsNCgkJCQl0aGlzLl9yZWZyZXNoKCk7DQoJCQkJdGhpcy5fYW5pbWF0ZU9mZiA9IGZhbHNlOw0KCQkJCWJyZWFrOw0KCQl9DQoJfSwNCg0KCS8vaW50ZXJuYWwgdmFsdWUgZ2V0dGVyDQoJLy8gX3ZhbHVlKCkgcmV0dXJucyB2YWx1ZSB0cmltbWVkIGJ5IG1pbiBhbmQgbWF4LCBhbGlnbmVkIGJ5IHN0ZXANCglfdmFsdWU6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdmFsID0gdGhpcy5vcHRpb25zLnZhbHVlOw0KCQl2YWwgPSB0aGlzLl90cmltQWxpZ25WYWx1ZSggdmFsICk7DQoNCgkJcmV0dXJuIHZhbDsNCgl9LA0KDQoJLy9pbnRlcm5hbCB2YWx1ZXMgZ2V0dGVyDQoJLy8gX3ZhbHVlcygpIHJldHVybnMgYXJyYXkgb2YgdmFsdWVzIHRyaW1tZWQgYnkgbWluIGFuZCBtYXgsIGFsaWduZWQgYnkgc3RlcA0KCS8vIF92YWx1ZXMoIGluZGV4ICkgcmV0dXJucyBzaW5nbGUgdmFsdWUgdHJpbW1lZCBieSBtaW4gYW5kIG1heCwgYWxpZ25lZCBieSBzdGVwDQoJX3ZhbHVlczogZnVuY3Rpb24oIGluZGV4ICkgew0KCQl2YXIgdmFsLA0KCQkJdmFscywNCgkJCWk7DQoNCgkJaWYgKCBhcmd1bWVudHMubGVuZ3RoICkgew0KCQkJdmFsID0gdGhpcy5vcHRpb25zLnZhbHVlc1sgaW5kZXggXTsNCgkJCXZhbCA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKCB2YWwgKTsNCg0KCQkJcmV0dXJuIHZhbDsNCgkJfSBlbHNlIGlmICggdGhpcy5vcHRpb25zLnZhbHVlcyAmJiB0aGlzLm9wdGlvbnMudmFsdWVzLmxlbmd0aCApIHsNCgkJCS8vIC5zbGljZSgpIGNyZWF0ZXMgYSBjb3B5IG9mIHRoZSBhcnJheQ0KCQkJLy8gdGhpcyBjb3B5IGdldHMgdHJpbW1lZCBieSBtaW4gYW5kIG1heCBhbmQgdGhlbiByZXR1cm5lZA0KCQkJdmFscyA9IHRoaXMub3B0aW9ucy52YWx1ZXMuc2xpY2UoKTsNCgkJCWZvciAoIGkgPSAwOyBpIDwgdmFscy5sZW5ndGg7IGkgKz0gMSkgew0KCQkJCXZhbHNbIGkgXSA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKCB2YWxzWyBpIF0gKTsNCgkJCX0NCg0KCQkJcmV0dXJuIHZhbHM7DQoJCX0gZWxzZSB7DQoJCQlyZXR1cm4gW107DQoJCX0NCgl9LA0KDQoJLy8gcmV0dXJucyB0aGUgc3RlcC1hbGlnbmVkIHZhbHVlIHRoYXQgdmFsIGlzIGNsb3Nlc3QgdG8sIGJldHdlZW4gKGluY2x1c2l2ZSkgbWluIGFuZCBtYXgNCglfdHJpbUFsaWduVmFsdWU6IGZ1bmN0aW9uKCB2YWwgKSB7DQoJCWlmICggdmFsIDw9IHRoaXMuX3ZhbHVlTWluKCkgKSB7DQoJCQlyZXR1cm4gdGhpcy5fdmFsdWVNaW4oKTsNCgkJfQ0KCQlpZiAoIHZhbCA+PSB0aGlzLl92YWx1ZU1heCgpICkgew0KCQkJcmV0dXJuIHRoaXMuX3ZhbHVlTWF4KCk7DQoJCX0NCgkJdmFyIHN0ZXAgPSAoIHRoaXMub3B0aW9ucy5zdGVwID4gMCApID8gdGhpcy5vcHRpb25zLnN0ZXAgOiAxLA0KCQkJdmFsTW9kU3RlcCA9ICh2YWwgLSB0aGlzLl92YWx1ZU1pbigpKSAlIHN0ZXAsDQoJCQlhbGlnblZhbHVlID0gdmFsIC0gdmFsTW9kU3RlcDsNCg0KCQlpZiAoIE1hdGguYWJzKHZhbE1vZFN0ZXApICogMiA+PSBzdGVwICkgew0KCQkJYWxpZ25WYWx1ZSArPSAoIHZhbE1vZFN0ZXAgPiAwICkgPyBzdGVwIDogKCAtc3RlcCApOw0KCQl9DQoNCgkJLy8gU2luY2UgSmF2YVNjcmlwdCBoYXMgcHJvYmxlbXMgd2l0aCBsYXJnZSBmbG9hdHMsIHJvdW5kDQoJCS8vIHRoZSBmaW5hbCB2YWx1ZSB0byA1IGRpZ2l0cyBhZnRlciB0aGUgZGVjaW1hbCBwb2ludCAoc2VlICM0MTI0KQ0KCQlyZXR1cm4gcGFyc2VGbG9hdCggYWxpZ25WYWx1ZS50b0ZpeGVkKDUpICk7DQoJfSwNCg0KCV9jYWxjdWxhdGVOZXdNYXg6IGZ1bmN0aW9uKCkgew0KCQl2YXIgcmVtYWluZGVyID0gKCB0aGlzLm9wdGlvbnMubWF4IC0gdGhpcy5fdmFsdWVNaW4oKSApICUgdGhpcy5vcHRpb25zLnN0ZXA7DQoJCXRoaXMubWF4ID0gdGhpcy5vcHRpb25zLm1heCAtIHJlbWFpbmRlcjsNCgl9LA0KDQoJX3ZhbHVlTWluOiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuIHRoaXMub3B0aW9ucy5taW47DQoJfSwNCg0KCV92YWx1ZU1heDogZnVuY3Rpb24oKSB7DQoJCXJldHVybiB0aGlzLm1heDsNCgl9LA0KDQoJX3JlZnJlc2hWYWx1ZTogZnVuY3Rpb24oKSB7DQoJCXZhciBsYXN0VmFsUGVyY2VudCwgdmFsUGVyY2VudCwgdmFsdWUsIHZhbHVlTWluLCB2YWx1ZU1heCwNCgkJCW9SYW5nZSA9IHRoaXMub3B0aW9ucy5yYW5nZSwNCgkJCW8gPSB0aGlzLm9wdGlvbnMsDQoJCQl0aGF0ID0gdGhpcywNCgkJCWFuaW1hdGUgPSAoICF0aGlzLl9hbmltYXRlT2ZmICkgPyBvLmFuaW1hdGUgOiBmYWxzZSwNCgkJCV9zZXQgPSB7fTsNCg0KCQlpZiAoIHRoaXMub3B0aW9ucy52YWx1ZXMgJiYgdGhpcy5vcHRpb25zLnZhbHVlcy5sZW5ndGggKSB7DQoJCQl0aGlzLmhhbmRsZXMuZWFjaChmdW5jdGlvbiggaSApIHsNCgkJCQl2YWxQZXJjZW50ID0gKCB0aGF0LnZhbHVlcyhpKSAtIHRoYXQuX3ZhbHVlTWluKCkgKSAvICggdGhhdC5fdmFsdWVNYXgoKSAtIHRoYXQuX3ZhbHVlTWluKCkgKSAqIDEwMDsNCgkJCQlfc2V0WyB0aGF0Lm9yaWVudGF0aW9uID09PSAiaG9yaXpvbnRhbCIgPyAibGVmdCIgOiAiYm90dG9tIiBdID0gdmFsUGVyY2VudCArICIlIjsNCgkJCQkkKCB0aGlzICkuc3RvcCggMSwgMSApWyBhbmltYXRlID8gImFuaW1hdGUiIDogImNzcyIgXSggX3NldCwgby5hbmltYXRlICk7DQoJCQkJaWYgKCB0aGF0Lm9wdGlvbnMucmFuZ2UgPT09IHRydWUgKSB7DQoJCQkJCWlmICggdGhhdC5vcmllbnRhdGlvbiA9PT0gImhvcml6b250YWwiICkgew0KCQkJCQkJaWYgKCBpID09PSAwICkgew0KCQkJCQkJCXRoYXQucmFuZ2Uuc3RvcCggMSwgMSApWyBhbmltYXRlID8gImFuaW1hdGUiIDogImNzcyIgXSggeyBsZWZ0OiB2YWxQZXJjZW50ICsgIiUiIH0sIG8uYW5pbWF0ZSApOw0KCQkJCQkJfQ0KCQkJCQkJaWYgKCBpID09PSAxICkgew0KCQkJCQkJCXRoYXQucmFuZ2VbIGFuaW1hdGUgPyAiYW5pbWF0ZSIgOiAiY3NzIiBdKCB7IHdpZHRoOiAoIHZhbFBlcmNlbnQgLSBsYXN0VmFsUGVyY2VudCApICsgIiUiIH0sIHsgcXVldWU6IGZhbHNlLCBkdXJhdGlvbjogby5hbmltYXRlIH0gKTsNCgkJCQkJCX0NCgkJCQkJfSBlbHNlIHsNCgkJCQkJCWlmICggaSA9PT0gMCApIHsNCgkJCQkJCQl0aGF0LnJhbmdlLnN0b3AoIDEsIDEgKVsgYW5pbWF0ZSA/ICJhbmltYXRlIiA6ICJjc3MiIF0oIHsgYm90dG9tOiAoIHZhbFBlcmNlbnQgKSArICIlIiB9LCBvLmFuaW1hdGUgKTsNCgkJCQkJCX0NCgkJCQkJCWlmICggaSA9PT0gMSApIHsNCgkJCQkJCQl0aGF0LnJhbmdlWyBhbmltYXRlID8gImFuaW1hdGUiIDogImNzcyIgXSggeyBoZWlnaHQ6ICggdmFsUGVyY2VudCAtIGxhc3RWYWxQZXJjZW50ICkgKyAiJSIgfSwgeyBxdWV1ZTogZmFsc2UsIGR1cmF0aW9uOiBvLmFuaW1hdGUgfSApOw0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJfQ0KCQkJCWxhc3RWYWxQZXJjZW50ID0gdmFsUGVyY2VudDsNCgkJCX0pOw0KCQl9IGVsc2Ugew0KCQkJdmFsdWUgPSB0aGlzLnZhbHVlKCk7DQoJCQl2YWx1ZU1pbiA9IHRoaXMuX3ZhbHVlTWluKCk7DQoJCQl2YWx1ZU1heCA9IHRoaXMuX3ZhbHVlTWF4KCk7DQoJCQl2YWxQZXJjZW50ID0gKCB2YWx1ZU1heCAhPT0gdmFsdWVNaW4gKSA/DQoJCQkJCSggdmFsdWUgLSB2YWx1ZU1pbiApIC8gKCB2YWx1ZU1heCAtIHZhbHVlTWluICkgKiAxMDAgOg0KCQkJCQkwOw0KCQkJX3NldFsgdGhpcy5vcmllbnRhdGlvbiA9PT0gImhvcml6b250YWwiID8gImxlZnQiIDogImJvdHRvbSIgXSA9IHZhbFBlcmNlbnQgKyAiJSI7DQoJCQl0aGlzLmhhbmRsZS5zdG9wKCAxLCAxIClbIGFuaW1hdGUgPyAiYW5pbWF0ZSIgOiAiY3NzIiBdKCBfc2V0LCBvLmFuaW1hdGUgKTsNCg0KCQkJaWYgKCBvUmFuZ2UgPT09ICJtaW4iICYmIHRoaXMub3JpZW50YXRpb24gPT09ICJob3Jpem9udGFsIiApIHsNCgkJCQl0aGlzLnJhbmdlLnN0b3AoIDEsIDEgKVsgYW5pbWF0ZSA/ICJhbmltYXRlIiA6ICJjc3MiIF0oIHsgd2lkdGg6IHZhbFBlcmNlbnQgKyAiJSIgfSwgby5hbmltYXRlICk7DQoJCQl9DQoJCQlpZiAoIG9SYW5nZSA9PT0gIm1heCIgJiYgdGhpcy5vcmllbnRhdGlvbiA9PT0gImhvcml6b250YWwiICkgew0KCQkJCXRoaXMucmFuZ2VbIGFuaW1hdGUgPyAiYW5pbWF0ZSIgOiAiY3NzIiBdKCB7IHdpZHRoOiAoIDEwMCAtIHZhbFBlcmNlbnQgKSArICIlIiB9LCB7IHF1ZXVlOiBmYWxzZSwgZHVyYXRpb246IG8uYW5pbWF0ZSB9ICk7DQoJCQl9DQoJCQlpZiAoIG9SYW5nZSA9PT0gIm1pbiIgJiYgdGhpcy5vcmllbnRhdGlvbiA9PT0gInZlcnRpY2FsIiApIHsNCgkJCQl0aGlzLnJhbmdlLnN0b3AoIDEsIDEgKVsgYW5pbWF0ZSA/ICJhbmltYXRlIiA6ICJjc3MiIF0oIHsgaGVpZ2h0OiB2YWxQZXJjZW50ICsgIiUiIH0sIG8uYW5pbWF0ZSApOw0KCQkJfQ0KCQkJaWYgKCBvUmFuZ2UgPT09ICJtYXgiICYmIHRoaXMub3JpZW50YXRpb24gPT09ICJ2ZXJ0aWNhbCIgKSB7DQoJCQkJdGhpcy5yYW5nZVsgYW5pbWF0ZSA/ICJhbmltYXRlIiA6ICJjc3MiIF0oIHsgaGVpZ2h0OiAoIDEwMCAtIHZhbFBlcmNlbnQgKSArICIlIiB9LCB7IHF1ZXVlOiBmYWxzZSwgZHVyYXRpb246IG8uYW5pbWF0ZSB9ICk7DQoJCQl9DQoJCX0NCgl9LA0KDQoJX2hhbmRsZUV2ZW50czogew0KCQlrZXlkb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQl2YXIgYWxsb3dlZCwgY3VyVmFsLCBuZXdWYWwsIHN0ZXAsDQoJCQkJaW5kZXggPSAkKCBldmVudC50YXJnZXQgKS5kYXRhKCAidWktc2xpZGVyLWhhbmRsZS1pbmRleCIgKTsNCg0KCQkJc3dpdGNoICggZXZlbnQua2V5Q29kZSApIHsNCgkJCQljYXNlICQudWkua2V5Q29kZS5IT01FOg0KCQkJCWNhc2UgJC51aS5rZXlDb2RlLkVORDoNCgkJCQljYXNlICQudWkua2V5Q29kZS5QQUdFX1VQOg0KCQkJCWNhc2UgJC51aS5rZXlDb2RlLlBBR0VfRE9XTjoNCgkJCQljYXNlICQudWkua2V5Q29kZS5VUDoNCgkJCQljYXNlICQudWkua2V5Q29kZS5SSUdIVDoNCgkJCQljYXNlICQudWkua2V5Q29kZS5ET1dOOg0KCQkJCWNhc2UgJC51aS5rZXlDb2RlLkxFRlQ6DQoJCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQoJCQkJCWlmICggIXRoaXMuX2tleVNsaWRpbmcgKSB7DQoJCQkJCQl0aGlzLl9rZXlTbGlkaW5nID0gdHJ1ZTsNCgkJCQkJCSQoIGV2ZW50LnRhcmdldCApLmFkZENsYXNzKCAidWktc3RhdGUtYWN0aXZlIiApOw0KCQkJCQkJYWxsb3dlZCA9IHRoaXMuX3N0YXJ0KCBldmVudCwgaW5kZXggKTsNCgkJCQkJCWlmICggYWxsb3dlZCA9PT0gZmFsc2UgKSB7DQoJCQkJCQkJcmV0dXJuOw0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJCWJyZWFrOw0KCQkJfQ0KDQoJCQlzdGVwID0gdGhpcy5vcHRpb25zLnN0ZXA7DQoJCQlpZiAoIHRoaXMub3B0aW9ucy52YWx1ZXMgJiYgdGhpcy5vcHRpb25zLnZhbHVlcy5sZW5ndGggKSB7DQoJCQkJY3VyVmFsID0gbmV3VmFsID0gdGhpcy52YWx1ZXMoIGluZGV4ICk7DQoJCQl9IGVsc2Ugew0KCQkJCWN1clZhbCA9IG5ld1ZhbCA9IHRoaXMudmFsdWUoKTsNCgkJCX0NCg0KCQkJc3dpdGNoICggZXZlbnQua2V5Q29kZSApIHsNCgkJCQljYXNlICQudWkua2V5Q29kZS5IT01FOg0KCQkJCQluZXdWYWwgPSB0aGlzLl92YWx1ZU1pbigpOw0KCQkJCQlicmVhazsNCgkJCQljYXNlICQudWkua2V5Q29kZS5FTkQ6DQoJCQkJCW5ld1ZhbCA9IHRoaXMuX3ZhbHVlTWF4KCk7DQoJCQkJCWJyZWFrOw0KCQkJCWNhc2UgJC51aS5rZXlDb2RlLlBBR0VfVVA6DQoJCQkJCW5ld1ZhbCA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKA0KCQkJCQkJY3VyVmFsICsgKCAoIHRoaXMuX3ZhbHVlTWF4KCkgLSB0aGlzLl92YWx1ZU1pbigpICkgLyB0aGlzLm51bVBhZ2VzICkNCgkJCQkJKTsNCgkJCQkJYnJlYWs7DQoJCQkJY2FzZSAkLnVpLmtleUNvZGUuUEFHRV9ET1dOOg0KCQkJCQluZXdWYWwgPSB0aGlzLl90cmltQWxpZ25WYWx1ZSgNCgkJCQkJCWN1clZhbCAtICggKHRoaXMuX3ZhbHVlTWF4KCkgLSB0aGlzLl92YWx1ZU1pbigpKSAvIHRoaXMubnVtUGFnZXMgKSApOw0KCQkJCQlicmVhazsNCgkJCQljYXNlICQudWkua2V5Q29kZS5VUDoNCgkJCQljYXNlICQudWkua2V5Q29kZS5SSUdIVDoNCgkJCQkJaWYgKCBjdXJWYWwgPT09IHRoaXMuX3ZhbHVlTWF4KCkgKSB7DQoJCQkJCQlyZXR1cm47DQoJCQkJCX0NCgkJCQkJbmV3VmFsID0gdGhpcy5fdHJpbUFsaWduVmFsdWUoIGN1clZhbCArIHN0ZXAgKTsNCgkJCQkJYnJlYWs7DQoJCQkJY2FzZSAkLnVpLmtleUNvZGUuRE9XTjoNCgkJCQljYXNlICQudWkua2V5Q29kZS5MRUZUOg0KCQkJCQlpZiAoIGN1clZhbCA9PT0gdGhpcy5fdmFsdWVNaW4oKSApIHsNCgkJCQkJCXJldHVybjsNCgkJCQkJfQ0KCQkJCQluZXdWYWwgPSB0aGlzLl90cmltQWxpZ25WYWx1ZSggY3VyVmFsIC0gc3RlcCApOw0KCQkJCQlicmVhazsNCgkJCX0NCg0KCQkJdGhpcy5fc2xpZGUoIGV2ZW50LCBpbmRleCwgbmV3VmFsICk7DQoJCX0sDQoJCWtleXVwOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQl2YXIgaW5kZXggPSAkKCBldmVudC50YXJnZXQgKS5kYXRhKCAidWktc2xpZGVyLWhhbmRsZS1pbmRleCIgKTsNCg0KCQkJaWYgKCB0aGlzLl9rZXlTbGlkaW5nICkgew0KCQkJCXRoaXMuX2tleVNsaWRpbmcgPSBmYWxzZTsNCgkJCQl0aGlzLl9zdG9wKCBldmVudCwgaW5kZXggKTsNCgkJCQl0aGlzLl9jaGFuZ2UoIGV2ZW50LCBpbmRleCApOw0KCQkJCSQoIGV2ZW50LnRhcmdldCApLnJlbW92ZUNsYXNzKCAidWktc3RhdGUtYWN0aXZlIiApOw0KCQkJfQ0KCQl9DQoJfQ0KfSk7DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgU29ydGFibGUgMS4xMS4yDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICoNCiAqIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3NvcnRhYmxlLw0KICovDQoNCg0KdmFyIHNvcnRhYmxlID0gJC53aWRnZXQoInVpLnNvcnRhYmxlIiwgJC51aS5tb3VzZSwgew0KCXZlcnNpb246ICIxLjExLjIiLA0KCXdpZGdldEV2ZW50UHJlZml4OiAic29ydCIsDQoJcmVhZHk6IGZhbHNlLA0KCW9wdGlvbnM6IHsNCgkJYXBwZW5kVG86ICJwYXJlbnQiLA0KCQlheGlzOiBmYWxzZSwNCgkJY29ubmVjdFdpdGg6IGZhbHNlLA0KCQljb250YWlubWVudDogZmFsc2UsDQoJCWN1cnNvcjogImF1dG8iLA0KCQljdXJzb3JBdDogZmFsc2UsDQoJCWRyb3BPbkVtcHR5OiB0cnVlLA0KCQlmb3JjZVBsYWNlaG9sZGVyU2l6ZTogZmFsc2UsDQoJCWZvcmNlSGVscGVyU2l6ZTogZmFsc2UsDQoJCWdyaWQ6IGZhbHNlLA0KCQloYW5kbGU6IGZhbHNlLA0KCQloZWxwZXI6ICJvcmlnaW5hbCIsDQoJCWl0ZW1zOiAiPiAqIiwNCgkJb3BhY2l0eTogZmFsc2UsDQoJCXBsYWNlaG9sZGVyOiBmYWxzZSwNCgkJcmV2ZXJ0OiBmYWxzZSwNCgkJc2Nyb2xsOiB0cnVlLA0KCQlzY3JvbGxTZW5zaXRpdml0eTogMjAsDQoJCXNjcm9sbFNwZWVkOiAyMCwNCgkJc2NvcGU6ICJkZWZhdWx0IiwNCgkJdG9sZXJhbmNlOiAiaW50ZXJzZWN0IiwNCgkJekluZGV4OiAxMDAwLA0KDQoJCS8vIGNhbGxiYWNrcw0KCQlhY3RpdmF0ZTogbnVsbCwNCgkJYmVmb3JlU3RvcDogbnVsbCwNCgkJY2hhbmdlOiBudWxsLA0KCQlkZWFjdGl2YXRlOiBudWxsLA0KCQlvdXQ6IG51bGwsDQoJCW92ZXI6IG51bGwsDQoJCXJlY2VpdmU6IG51bGwsDQoJCXJlbW92ZTogbnVsbCwNCgkJc29ydDogbnVsbCwNCgkJc3RhcnQ6IG51bGwsDQoJCXN0b3A6IG51bGwsDQoJCXVwZGF0ZTogbnVsbA0KCX0sDQoNCglfaXNPdmVyQXhpczogZnVuY3Rpb24oIHgsIHJlZmVyZW5jZSwgc2l6ZSApIHsNCgkJcmV0dXJuICggeCA+PSByZWZlcmVuY2UgKSAmJiAoIHggPCAoIHJlZmVyZW5jZSArIHNpemUgKSApOw0KCX0sDQoNCglfaXNGbG9hdGluZzogZnVuY3Rpb24oIGl0ZW0gKSB7DQoJCXJldHVybiAoL2xlZnR8cmlnaHQvKS50ZXN0KGl0ZW0uY3NzKCJmbG9hdCIpKSB8fCAoL2lubGluZXx0YWJsZS1jZWxsLykudGVzdChpdGVtLmNzcygiZGlzcGxheSIpKTsNCgl9LA0KDQoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7DQoNCgkJdmFyIG8gPSB0aGlzLm9wdGlvbnM7DQoJCXRoaXMuY29udGFpbmVyQ2FjaGUgPSB7fTsNCgkJdGhpcy5lbGVtZW50LmFkZENsYXNzKCJ1aS1zb3J0YWJsZSIpOw0KDQoJCS8vR2V0IHRoZSBpdGVtcw0KCQl0aGlzLnJlZnJlc2goKTsNCg0KCQkvL0xldCdzIGRldGVybWluZSBpZiB0aGUgaXRlbXMgYXJlIGJlaW5nIGRpc3BsYXllZCBob3Jpem9udGFsbHkNCgkJdGhpcy5mbG9hdGluZyA9IHRoaXMuaXRlbXMubGVuZ3RoID8gby5heGlzID09PSAieCIgfHwgdGhpcy5faXNGbG9hdGluZyh0aGlzLml0ZW1zWzBdLml0ZW0pIDogZmFsc2U7DQoNCgkJLy9MZXQncyBkZXRlcm1pbmUgdGhlIHBhcmVudCdzIG9mZnNldA0KCQl0aGlzLm9mZnNldCA9IHRoaXMuZWxlbWVudC5vZmZzZXQoKTsNCg0KCQkvL0luaXRpYWxpemUgbW91c2UgZXZlbnRzIGZvciBpbnRlcmFjdGlvbg0KCQl0aGlzLl9tb3VzZUluaXQoKTsNCg0KCQl0aGlzLl9zZXRIYW5kbGVDbGFzc05hbWUoKTsNCg0KCQkvL1dlJ3JlIHJlYWR5IHRvIGdvDQoJCXRoaXMucmVhZHkgPSB0cnVlOw0KDQoJfSwNCg0KCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgew0KCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOw0KDQoJCWlmICgga2V5ID09PSAiaGFuZGxlIiApIHsNCgkJCXRoaXMuX3NldEhhbmRsZUNsYXNzTmFtZSgpOw0KCQl9DQoJfSwNCg0KCV9zZXRIYW5kbGVDbGFzc05hbWU6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLmVsZW1lbnQuZmluZCggIi51aS1zb3J0YWJsZS1oYW5kbGUiICkucmVtb3ZlQ2xhc3MoICJ1aS1zb3J0YWJsZS1oYW5kbGUiICk7DQoJCSQuZWFjaCggdGhpcy5pdGVtcywgZnVuY3Rpb24oKSB7DQoJCQkoIHRoaXMuaW5zdGFuY2Uub3B0aW9ucy5oYW5kbGUgPw0KCQkJCXRoaXMuaXRlbS5maW5kKCB0aGlzLmluc3RhbmNlLm9wdGlvbnMuaGFuZGxlICkgOiB0aGlzLml0ZW0gKQ0KCQkJCS5hZGRDbGFzcyggInVpLXNvcnRhYmxlLWhhbmRsZSIgKTsNCgkJfSk7DQoJfSwNCg0KCV9kZXN0cm95OiBmdW5jdGlvbigpIHsNCgkJdGhpcy5lbGVtZW50DQoJCQkucmVtb3ZlQ2xhc3MoICJ1aS1zb3J0YWJsZSB1aS1zb3J0YWJsZS1kaXNhYmxlZCIgKQ0KCQkJLmZpbmQoICIudWktc29ydGFibGUtaGFuZGxlIiApDQoJCQkJLnJlbW92ZUNsYXNzKCAidWktc29ydGFibGUtaGFuZGxlIiApOw0KCQl0aGlzLl9tb3VzZURlc3Ryb3koKTsNCg0KCQlmb3IgKCB2YXIgaSA9IHRoaXMuaXRlbXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0gKSB7DQoJCQl0aGlzLml0ZW1zW2ldLml0ZW0ucmVtb3ZlRGF0YSh0aGlzLndpZGdldE5hbWUgKyAiLWl0ZW0iKTsNCgkJfQ0KDQoJCXJldHVybiB0aGlzOw0KCX0sDQoNCglfbW91c2VDYXB0dXJlOiBmdW5jdGlvbihldmVudCwgb3ZlcnJpZGVIYW5kbGUpIHsNCgkJdmFyIGN1cnJlbnRJdGVtID0gbnVsbCwNCgkJCXZhbGlkSGFuZGxlID0gZmFsc2UsDQoJCQl0aGF0ID0gdGhpczsNCg0KCQlpZiAodGhpcy5yZXZlcnRpbmcpIHsNCgkJCXJldHVybiBmYWxzZTsNCgkJfQ0KDQoJCWlmKHRoaXMub3B0aW9ucy5kaXNhYmxlZCB8fCB0aGlzLm9wdGlvbnMudHlwZSA9PT0gInN0YXRpYyIpIHsNCgkJCXJldHVybiBmYWxzZTsNCgkJfQ0KDQoJCS8vV2UgaGF2ZSB0byByZWZyZXNoIHRoZSBpdGVtcyBkYXRhIG9uY2UgZmlyc3QNCgkJdGhpcy5fcmVmcmVzaEl0ZW1zKGV2ZW50KTsNCg0KCQkvL0ZpbmQgb3V0IGlmIHRoZSBjbGlja2VkIG5vZGUgKG9yIG9uZSBvZiBpdHMgcGFyZW50cykgaXMgYSBhY3R1YWwgaXRlbSBpbiB0aGlzLml0ZW1zDQoJCSQoZXZlbnQudGFyZ2V0KS5wYXJlbnRzKCkuZWFjaChmdW5jdGlvbigpIHsNCgkJCWlmKCQuZGF0YSh0aGlzLCB0aGF0LndpZGdldE5hbWUgKyAiLWl0ZW0iKSA9PT0gdGhhdCkgew0KCQkJCWN1cnJlbnRJdGVtID0gJCh0aGlzKTsNCgkJCQlyZXR1cm4gZmFsc2U7DQoJCQl9DQoJCX0pOw0KCQlpZigkLmRhdGEoZXZlbnQudGFyZ2V0LCB0aGF0LndpZGdldE5hbWUgKyAiLWl0ZW0iKSA9PT0gdGhhdCkgew0KCQkJY3VycmVudEl0ZW0gPSAkKGV2ZW50LnRhcmdldCk7DQoJCX0NCg0KCQlpZighY3VycmVudEl0ZW0pIHsNCgkJCXJldHVybiBmYWxzZTsNCgkJfQ0KCQlpZih0aGlzLm9wdGlvbnMuaGFuZGxlICYmICFvdmVycmlkZUhhbmRsZSkgew0KCQkJJCh0aGlzLm9wdGlvbnMuaGFuZGxlLCBjdXJyZW50SXRlbSkuZmluZCgiKiIpLmFkZEJhY2soKS5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJCWlmKHRoaXMgPT09IGV2ZW50LnRhcmdldCkgew0KCQkJCQl2YWxpZEhhbmRsZSA9IHRydWU7DQoJCQkJfQ0KCQkJfSk7DQoJCQlpZighdmFsaWRIYW5kbGUpIHsNCgkJCQlyZXR1cm4gZmFsc2U7DQoJCQl9DQoJCX0NCg0KCQl0aGlzLmN1cnJlbnRJdGVtID0gY3VycmVudEl0ZW07DQoJCXRoaXMuX3JlbW92ZUN1cnJlbnRzRnJvbUl0ZW1zKCk7DQoJCXJldHVybiB0cnVlOw0KDQoJfSwNCg0KCV9tb3VzZVN0YXJ0OiBmdW5jdGlvbihldmVudCwgb3ZlcnJpZGVIYW5kbGUsIG5vQWN0aXZhdGlvbikgew0KDQoJCXZhciBpLCBib2R5LA0KCQkJbyA9IHRoaXMub3B0aW9uczsNCg0KCQl0aGlzLmN1cnJlbnRDb250YWluZXIgPSB0aGlzOw0KDQoJCS8vV2Ugb25seSBuZWVkIHRvIGNhbGwgcmVmcmVzaFBvc2l0aW9ucywgYmVjYXVzZSB0aGUgcmVmcmVzaEl0ZW1zIGNhbGwgaGFzIGJlZW4gbW92ZWQgdG8gbW91c2VDYXB0dXJlDQoJCXRoaXMucmVmcmVzaFBvc2l0aW9ucygpOw0KDQoJCS8vQ3JlYXRlIGFuZCBhcHBlbmQgdGhlIHZpc2libGUgaGVscGVyDQoJCXRoaXMuaGVscGVyID0gdGhpcy5fY3JlYXRlSGVscGVyKGV2ZW50KTsNCg0KCQkvL0NhY2hlIHRoZSBoZWxwZXIgc2l6ZQ0KCQl0aGlzLl9jYWNoZUhlbHBlclByb3BvcnRpb25zKCk7DQoNCgkJLyoNCgkJICogLSBQb3NpdGlvbiBnZW5lcmF0aW9uIC0NCgkJICogVGhpcyBibG9jayBnZW5lcmF0ZXMgZXZlcnl0aGluZyBwb3NpdGlvbiByZWxhdGVkIC0gaXQncyB0aGUgY29yZSBvZiBkcmFnZ2FibGVzLg0KCQkgKi8NCg0KCQkvL0NhY2hlIHRoZSBtYXJnaW5zIG9mIHRoZSBvcmlnaW5hbCBlbGVtZW50DQoJCXRoaXMuX2NhY2hlTWFyZ2lucygpOw0KDQoJCS8vR2V0IHRoZSBuZXh0IHNjcm9sbGluZyBwYXJlbnQNCgkJdGhpcy5zY3JvbGxQYXJlbnQgPSB0aGlzLmhlbHBlci5zY3JvbGxQYXJlbnQoKTsNCg0KCQkvL1RoZSBlbGVtZW50J3MgYWJzb2x1dGUgcG9zaXRpb24gb24gdGhlIHBhZ2UgbWludXMgbWFyZ2lucw0KCQl0aGlzLm9mZnNldCA9IHRoaXMuY3VycmVudEl0ZW0ub2Zmc2V0KCk7DQoJCXRoaXMub2Zmc2V0ID0gew0KCQkJdG9wOiB0aGlzLm9mZnNldC50b3AgLSB0aGlzLm1hcmdpbnMudG9wLA0KCQkJbGVmdDogdGhpcy5vZmZzZXQubGVmdCAtIHRoaXMubWFyZ2lucy5sZWZ0DQoJCX07DQoNCgkJJC5leHRlbmQodGhpcy5vZmZzZXQsIHsNCgkJCWNsaWNrOiB7IC8vV2hlcmUgdGhlIGNsaWNrIGhhcHBlbmVkLCByZWxhdGl2ZSB0byB0aGUgZWxlbWVudA0KCQkJCWxlZnQ6IGV2ZW50LnBhZ2VYIC0gdGhpcy5vZmZzZXQubGVmdCwNCgkJCQl0b3A6IGV2ZW50LnBhZ2VZIC0gdGhpcy5vZmZzZXQudG9wDQoJCQl9LA0KCQkJcGFyZW50OiB0aGlzLl9nZXRQYXJlbnRPZmZzZXQoKSwNCgkJCXJlbGF0aXZlOiB0aGlzLl9nZXRSZWxhdGl2ZU9mZnNldCgpIC8vVGhpcyBpcyBhIHJlbGF0aXZlIHRvIGFic29sdXRlIHBvc2l0aW9uIG1pbnVzIHRoZSBhY3R1YWwgcG9zaXRpb24gY2FsY3VsYXRpb24gLSBvbmx5IHVzZWQgZm9yIHJlbGF0aXZlIHBvc2l0aW9uZWQgaGVscGVyDQoJCX0pOw0KDQoJCS8vIE9ubHkgYWZ0ZXIgd2UgZ290IHRoZSBvZmZzZXQsIHdlIGNhbiBjaGFuZ2UgdGhlIGhlbHBlcidzIHBvc2l0aW9uIHRvIGFic29sdXRlDQoJCS8vIFRPRE86IFN0aWxsIG5lZWQgdG8gZmlndXJlIG91dCBhIHdheSB0byBtYWtlIHJlbGF0aXZlIHNvcnRpbmcgcG9zc2libGUNCgkJdGhpcy5oZWxwZXIuY3NzKCJwb3NpdGlvbiIsICJhYnNvbHV0ZSIpOw0KCQl0aGlzLmNzc1Bvc2l0aW9uID0gdGhpcy5oZWxwZXIuY3NzKCJwb3NpdGlvbiIpOw0KDQoJCS8vR2VuZXJhdGUgdGhlIG9yaWdpbmFsIHBvc2l0aW9uDQoJCXRoaXMub3JpZ2luYWxQb3NpdGlvbiA9IHRoaXMuX2dlbmVyYXRlUG9zaXRpb24oZXZlbnQpOw0KCQl0aGlzLm9yaWdpbmFsUGFnZVggPSBldmVudC5wYWdlWDsNCgkJdGhpcy5vcmlnaW5hbFBhZ2VZID0gZXZlbnQucGFnZVk7DQoNCgkJLy9BZGp1c3QgdGhlIG1vdXNlIG9mZnNldCByZWxhdGl2ZSB0byB0aGUgaGVscGVyIGlmICJjdXJzb3JBdCIgaXMgc3VwcGxpZWQNCgkJKG8uY3Vyc29yQXQgJiYgdGhpcy5fYWRqdXN0T2Zmc2V0RnJvbUhlbHBlcihvLmN1cnNvckF0KSk7DQoNCgkJLy9DYWNoZSB0aGUgZm9ybWVyIERPTSBwb3NpdGlvbg0KCQl0aGlzLmRvbVBvc2l0aW9uID0geyBwcmV2OiB0aGlzLmN1cnJlbnRJdGVtLnByZXYoKVswXSwgcGFyZW50OiB0aGlzLmN1cnJlbnRJdGVtLnBhcmVudCgpWzBdIH07DQoNCgkJLy9JZiB0aGUgaGVscGVyIGlzIG5vdCB0aGUgb3JpZ2luYWwsIGhpZGUgdGhlIG9yaWdpbmFsIHNvIGl0J3Mgbm90IHBsYXlpbmcgYW55IHJvbGUgZHVyaW5nIHRoZSBkcmFnLCB3b24ndCBjYXVzZSBhbnl0aGluZyBiYWQgdGhpcyB3YXkNCgkJaWYodGhpcy5oZWxwZXJbMF0gIT09IHRoaXMuY3VycmVudEl0ZW1bMF0pIHsNCgkJCXRoaXMuY3VycmVudEl0ZW0uaGlkZSgpOw0KCQl9DQoNCgkJLy9DcmVhdGUgdGhlIHBsYWNlaG9sZGVyDQoJCXRoaXMuX2NyZWF0ZVBsYWNlaG9sZGVyKCk7DQoNCgkJLy9TZXQgYSBjb250YWlubWVudCBpZiBnaXZlbiBpbiB0aGUgb3B0aW9ucw0KCQlpZihvLmNvbnRhaW5tZW50KSB7DQoJCQl0aGlzLl9zZXRDb250YWlubWVudCgpOw0KCQl9DQoNCgkJaWYoIG8uY3Vyc29yICYmIG8uY3Vyc29yICE9PSAiYXV0byIgKSB7IC8vIGN1cnNvciBvcHRpb24NCgkJCWJvZHkgPSB0aGlzLmRvY3VtZW50LmZpbmQoICJib2R5IiApOw0KDQoJCQkvLyBzdXBwb3J0OiBJRQ0KCQkJdGhpcy5zdG9yZWRDdXJzb3IgPSBib2R5LmNzcyggImN1cnNvciIgKTsNCgkJCWJvZHkuY3NzKCAiY3Vyc29yIiwgby5jdXJzb3IgKTsNCg0KCQkJdGhpcy5zdG9yZWRTdHlsZXNoZWV0ID0gJCggIjxzdHlsZT4qeyBjdXJzb3I6ICIrby5jdXJzb3IrIiAhaW1wb3J0YW50OyB9PC9zdHlsZT4iICkuYXBwZW5kVG8oIGJvZHkgKTsNCgkJfQ0KDQoJCWlmKG8ub3BhY2l0eSkgeyAvLyBvcGFjaXR5IG9wdGlvbg0KCQkJaWYgKHRoaXMuaGVscGVyLmNzcygib3BhY2l0eSIpKSB7DQoJCQkJdGhpcy5fc3RvcmVkT3BhY2l0eSA9IHRoaXMuaGVscGVyLmNzcygib3BhY2l0eSIpOw0KCQkJfQ0KCQkJdGhpcy5oZWxwZXIuY3NzKCJvcGFjaXR5Iiwgby5vcGFjaXR5KTsNCgkJfQ0KDQoJCWlmKG8uekluZGV4KSB7IC8vIHpJbmRleCBvcHRpb24NCgkJCWlmICh0aGlzLmhlbHBlci5jc3MoInpJbmRleCIpKSB7DQoJCQkJdGhpcy5fc3RvcmVkWkluZGV4ID0gdGhpcy5oZWxwZXIuY3NzKCJ6SW5kZXgiKTsNCgkJCX0NCgkJCXRoaXMuaGVscGVyLmNzcygiekluZGV4Iiwgby56SW5kZXgpOw0KCQl9DQoNCgkJLy9QcmVwYXJlIHNjcm9sbGluZw0KCQlpZih0aGlzLnNjcm9sbFBhcmVudFswXSAhPT0gZG9jdW1lbnQgJiYgdGhpcy5zY3JvbGxQYXJlbnRbMF0udGFnTmFtZSAhPT0gIkhUTUwiKSB7DQoJCQl0aGlzLm92ZXJmbG93T2Zmc2V0ID0gdGhpcy5zY3JvbGxQYXJlbnQub2Zmc2V0KCk7DQoJCX0NCg0KCQkvL0NhbGwgY2FsbGJhY2tzDQoJCXRoaXMuX3RyaWdnZXIoInN0YXJ0IiwgZXZlbnQsIHRoaXMuX3VpSGFzaCgpKTsNCg0KCQkvL1JlY2FjaGUgdGhlIGhlbHBlciBzaXplDQoJCWlmKCF0aGlzLl9wcmVzZXJ2ZUhlbHBlclByb3BvcnRpb25zKSB7DQoJCQl0aGlzLl9jYWNoZUhlbHBlclByb3BvcnRpb25zKCk7DQoJCX0NCg0KDQoJCS8vUG9zdCAiYWN0aXZhdGUiIGV2ZW50cyB0byBwb3NzaWJsZSBjb250YWluZXJzDQoJCWlmKCAhbm9BY3RpdmF0aW9uICkgew0KCQkJZm9yICggaSA9IHRoaXMuY29udGFpbmVycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSApIHsNCgkJCQl0aGlzLmNvbnRhaW5lcnNbIGkgXS5fdHJpZ2dlciggImFjdGl2YXRlIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCggdGhpcyApICk7DQoJCQl9DQoJCX0NCg0KCQkvL1ByZXBhcmUgcG9zc2libGUgZHJvcHBhYmxlcw0KCQlpZigkLnVpLmRkbWFuYWdlcikgew0KCQkJJC51aS5kZG1hbmFnZXIuY3VycmVudCA9IHRoaXM7DQoJCX0NCg0KCQlpZiAoJC51aS5kZG1hbmFnZXIgJiYgIW8uZHJvcEJlaGF2aW91cikgew0KCQkJJC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHModGhpcywgZXZlbnQpOw0KCQl9DQoNCgkJdGhpcy5kcmFnZ2luZyA9IHRydWU7DQoNCgkJdGhpcy5oZWxwZXIuYWRkQ2xhc3MoInVpLXNvcnRhYmxlLWhlbHBlciIpOw0KCQl0aGlzLl9tb3VzZURyYWcoZXZlbnQpOyAvL0V4ZWN1dGUgdGhlIGRyYWcgb25jZSAtIHRoaXMgY2F1c2VzIHRoZSBoZWxwZXIgbm90IHRvIGJlIHZpc2libGUgYmVmb3JlIGdldHRpbmcgaXRzIGNvcnJlY3QgcG9zaXRpb24NCgkJcmV0dXJuIHRydWU7DQoNCgl9LA0KDQoJX21vdXNlRHJhZzogZnVuY3Rpb24oZXZlbnQpIHsNCgkJdmFyIGksIGl0ZW0sIGl0ZW1FbGVtZW50LCBpbnRlcnNlY3Rpb24sDQoJCQlvID0gdGhpcy5vcHRpb25zLA0KCQkJc2Nyb2xsZWQgPSBmYWxzZTsNCg0KCQkvL0NvbXB1dGUgdGhlIGhlbHBlcnMgcG9zaXRpb24NCgkJdGhpcy5wb3NpdGlvbiA9IHRoaXMuX2dlbmVyYXRlUG9zaXRpb24oZXZlbnQpOw0KCQl0aGlzLnBvc2l0aW9uQWJzID0gdGhpcy5fY29udmVydFBvc2l0aW9uVG8oImFic29sdXRlIik7DQoNCgkJaWYgKCF0aGlzLmxhc3RQb3NpdGlvbkFicykgew0KCQkJdGhpcy5sYXN0UG9zaXRpb25BYnMgPSB0aGlzLnBvc2l0aW9uQWJzOw0KCQl9DQoNCgkJLy9EbyBzY3JvbGxpbmcNCgkJaWYodGhpcy5vcHRpb25zLnNjcm9sbCkgew0KCQkJaWYodGhpcy5zY3JvbGxQYXJlbnRbMF0gIT09IGRvY3VtZW50ICYmIHRoaXMuc2Nyb2xsUGFyZW50WzBdLnRhZ05hbWUgIT09ICJIVE1MIikgew0KDQoJCQkJaWYoKHRoaXMub3ZlcmZsb3dPZmZzZXQudG9wICsgdGhpcy5zY3JvbGxQYXJlbnRbMF0ub2Zmc2V0SGVpZ2h0KSAtIGV2ZW50LnBhZ2VZIDwgby5zY3JvbGxTZW5zaXRpdml0eSkgew0KCQkJCQl0aGlzLnNjcm9sbFBhcmVudFswXS5zY3JvbGxUb3AgPSBzY3JvbGxlZCA9IHRoaXMuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbFRvcCArIG8uc2Nyb2xsU3BlZWQ7DQoJCQkJfSBlbHNlIGlmKGV2ZW50LnBhZ2VZIC0gdGhpcy5vdmVyZmxvd09mZnNldC50b3AgPCBvLnNjcm9sbFNlbnNpdGl2aXR5KSB7DQoJCQkJCXRoaXMuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbFRvcCA9IHNjcm9sbGVkID0gdGhpcy5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsVG9wIC0gby5zY3JvbGxTcGVlZDsNCgkJCQl9DQoNCgkJCQlpZigodGhpcy5vdmVyZmxvd09mZnNldC5sZWZ0ICsgdGhpcy5zY3JvbGxQYXJlbnRbMF0ub2Zmc2V0V2lkdGgpIC0gZXZlbnQucGFnZVggPCBvLnNjcm9sbFNlbnNpdGl2aXR5KSB7DQoJCQkJCXRoaXMuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbExlZnQgPSBzY3JvbGxlZCA9IHRoaXMuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbExlZnQgKyBvLnNjcm9sbFNwZWVkOw0KCQkJCX0gZWxzZSBpZihldmVudC5wYWdlWCAtIHRoaXMub3ZlcmZsb3dPZmZzZXQubGVmdCA8IG8uc2Nyb2xsU2Vuc2l0aXZpdHkpIHsNCgkJCQkJdGhpcy5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsTGVmdCA9IHNjcm9sbGVkID0gdGhpcy5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsTGVmdCAtIG8uc2Nyb2xsU3BlZWQ7DQoJCQkJfQ0KDQoJCQl9IGVsc2Ugew0KDQoJCQkJaWYoZXZlbnQucGFnZVkgLSAkKGRvY3VtZW50KS5zY3JvbGxUb3AoKSA8IG8uc2Nyb2xsU2Vuc2l0aXZpdHkpIHsNCgkJCQkJc2Nyb2xsZWQgPSAkKGRvY3VtZW50KS5zY3JvbGxUb3AoJChkb2N1bWVudCkuc2Nyb2xsVG9wKCkgLSBvLnNjcm9sbFNwZWVkKTsNCgkJCQl9IGVsc2UgaWYoJCh3aW5kb3cpLmhlaWdodCgpIC0gKGV2ZW50LnBhZ2VZIC0gJChkb2N1bWVudCkuc2Nyb2xsVG9wKCkpIDwgby5zY3JvbGxTZW5zaXRpdml0eSkgew0KCQkJCQlzY3JvbGxlZCA9ICQoZG9jdW1lbnQpLnNjcm9sbFRvcCgkKGRvY3VtZW50KS5zY3JvbGxUb3AoKSArIG8uc2Nyb2xsU3BlZWQpOw0KCQkJCX0NCg0KCQkJCWlmKGV2ZW50LnBhZ2VYIC0gJChkb2N1bWVudCkuc2Nyb2xsTGVmdCgpIDwgby5zY3JvbGxTZW5zaXRpdml0eSkgew0KCQkJCQlzY3JvbGxlZCA9ICQoZG9jdW1lbnQpLnNjcm9sbExlZnQoJChkb2N1bWVudCkuc2Nyb2xsTGVmdCgpIC0gby5zY3JvbGxTcGVlZCk7DQoJCQkJfSBlbHNlIGlmKCQod2luZG93KS53aWR0aCgpIC0gKGV2ZW50LnBhZ2VYIC0gJChkb2N1bWVudCkuc2Nyb2xsTGVmdCgpKSA8IG8uc2Nyb2xsU2Vuc2l0aXZpdHkpIHsNCgkJCQkJc2Nyb2xsZWQgPSAkKGRvY3VtZW50KS5zY3JvbGxMZWZ0KCQoZG9jdW1lbnQpLnNjcm9sbExlZnQoKSArIG8uc2Nyb2xsU3BlZWQpOw0KCQkJCX0NCg0KCQkJfQ0KDQoJCQlpZihzY3JvbGxlZCAhPT0gZmFsc2UgJiYgJC51aS5kZG1hbmFnZXIgJiYgIW8uZHJvcEJlaGF2aW91cikgew0KCQkJCSQudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKHRoaXMsIGV2ZW50KTsNCgkJCX0NCgkJfQ0KDQoJCS8vUmVnZW5lcmF0ZSB0aGUgYWJzb2x1dGUgcG9zaXRpb24gdXNlZCBmb3IgcG9zaXRpb24gY2hlY2tzDQoJCXRoaXMucG9zaXRpb25BYnMgPSB0aGlzLl9jb252ZXJ0UG9zaXRpb25UbygiYWJzb2x1dGUiKTsNCg0KCQkvL1NldCB0aGUgaGVscGVyIHBvc2l0aW9uDQoJCWlmKCF0aGlzLm9wdGlvbnMuYXhpcyB8fCB0aGlzLm9wdGlvbnMuYXhpcyAhPT0gInkiKSB7DQoJCQl0aGlzLmhlbHBlclswXS5zdHlsZS5sZWZ0ID0gdGhpcy5wb3NpdGlvbi5sZWZ0KyJweCI7DQoJCX0NCgkJaWYoIXRoaXMub3B0aW9ucy5heGlzIHx8IHRoaXMub3B0aW9ucy5heGlzICE9PSAieCIpIHsNCgkJCXRoaXMuaGVscGVyWzBdLnN0eWxlLnRvcCA9IHRoaXMucG9zaXRpb24udG9wKyJweCI7DQoJCX0NCg0KCQkvL1JlYXJyYW5nZQ0KCQlmb3IgKGkgPSB0aGlzLml0ZW1zLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7DQoNCgkJCS8vQ2FjaGUgdmFyaWFibGVzIGFuZCBpbnRlcnNlY3Rpb24sIGNvbnRpbnVlIGlmIG5vIGludGVyc2VjdGlvbg0KCQkJaXRlbSA9IHRoaXMuaXRlbXNbaV07DQoJCQlpdGVtRWxlbWVudCA9IGl0ZW0uaXRlbVswXTsNCgkJCWludGVyc2VjdGlvbiA9IHRoaXMuX2ludGVyc2VjdHNXaXRoUG9pbnRlcihpdGVtKTsNCgkJCWlmICghaW50ZXJzZWN0aW9uKSB7DQoJCQkJY29udGludWU7DQoJCQl9DQoNCgkJCS8vIE9ubHkgcHV0IHRoZSBwbGFjZWhvbGRlciBpbnNpZGUgdGhlIGN1cnJlbnQgQ29udGFpbmVyLCBza2lwIGFsbA0KCQkJLy8gaXRlbXMgZnJvbSBvdGhlciBjb250YWluZXJzLiBUaGlzIHdvcmtzIGJlY2F1c2Ugd2hlbiBtb3ZpbmcNCgkJCS8vIGFuIGl0ZW0gZnJvbSBvbmUgY29udGFpbmVyIHRvIGFub3RoZXIgdGhlDQoJCQkvLyBjdXJyZW50Q29udGFpbmVyIGlzIHN3aXRjaGVkIGJlZm9yZSB0aGUgcGxhY2Vob2xkZXIgaXMgbW92ZWQuDQoJCQkvLw0KCQkJLy8gV2l0aG91dCB0aGlzLCBtb3ZpbmcgaXRlbXMgaW4gInN1Yi1zb3J0YWJsZXMiIGNhbiBjYXVzZQ0KCQkJLy8gdGhlIHBsYWNlaG9sZGVyIHRvIGppdHRlciBiZXR3ZWVuIHRoZSBvdXRlciBhbmQgaW5uZXIgY29udGFpbmVyLg0KCQkJaWYgKGl0ZW0uaW5zdGFuY2UgIT09IHRoaXMuY3VycmVudENvbnRhaW5lcikgew0KCQkJCWNvbnRpbnVlOw0KCQkJfQ0KDQoJCQkvLyBjYW5ub3QgaW50ZXJzZWN0IHdpdGggaXRzZWxmDQoJCQkvLyBubyB1c2VsZXNzIGFjdGlvbnMgdGhhdCBoYXZlIGJlZW4gZG9uZSBiZWZvcmUNCgkJCS8vIG5vIGFjdGlvbiBpZiB0aGUgaXRlbSBtb3ZlZCBpcyB0aGUgcGFyZW50IG9mIHRoZSBpdGVtIGNoZWNrZWQNCgkJCWlmIChpdGVtRWxlbWVudCAhPT0gdGhpcy5jdXJyZW50SXRlbVswXSAmJg0KCQkJCXRoaXMucGxhY2Vob2xkZXJbaW50ZXJzZWN0aW9uID09PSAxID8gIm5leHQiIDogInByZXYiXSgpWzBdICE9PSBpdGVtRWxlbWVudCAmJg0KCQkJCSEkLmNvbnRhaW5zKHRoaXMucGxhY2Vob2xkZXJbMF0sIGl0ZW1FbGVtZW50KSAmJg0KCQkJCSh0aGlzLm9wdGlvbnMudHlwZSA9PT0gInNlbWktZHluYW1pYyIgPyAhJC5jb250YWlucyh0aGlzLmVsZW1lbnRbMF0sIGl0ZW1FbGVtZW50KSA6IHRydWUpDQoJCQkpIHsNCg0KCQkJCXRoaXMuZGlyZWN0aW9uID0gaW50ZXJzZWN0aW9uID09PSAxID8gImRvd24iIDogInVwIjsNCg0KCQkJCWlmICh0aGlzLm9wdGlvbnMudG9sZXJhbmNlID09PSAicG9pbnRlciIgfHwgdGhpcy5faW50ZXJzZWN0c1dpdGhTaWRlcyhpdGVtKSkgew0KCQkJCQl0aGlzLl9yZWFycmFuZ2UoZXZlbnQsIGl0ZW0pOw0KCQkJCX0gZWxzZSB7DQoJCQkJCWJyZWFrOw0KCQkJCX0NCg0KCQkJCXRoaXMuX3RyaWdnZXIoImNoYW5nZSIsIGV2ZW50LCB0aGlzLl91aUhhc2goKSk7DQoJCQkJYnJlYWs7DQoJCQl9DQoJCX0NCg0KCQkvL1Bvc3QgZXZlbnRzIHRvIGNvbnRhaW5lcnMNCgkJdGhpcy5fY29udGFjdENvbnRhaW5lcnMoZXZlbnQpOw0KDQoJCS8vSW50ZXJjb25uZWN0IHdpdGggZHJvcHBhYmxlcw0KCQlpZigkLnVpLmRkbWFuYWdlcikgew0KCQkJJC51aS5kZG1hbmFnZXIuZHJhZyh0aGlzLCBldmVudCk7DQoJCX0NCg0KCQkvL0NhbGwgY2FsbGJhY2tzDQoJCXRoaXMuX3RyaWdnZXIoInNvcnQiLCBldmVudCwgdGhpcy5fdWlIYXNoKCkpOw0KDQoJCXRoaXMubGFzdFBvc2l0aW9uQWJzID0gdGhpcy5wb3NpdGlvbkFiczsNCgkJcmV0dXJuIGZhbHNlOw0KDQoJfSwNCg0KCV9tb3VzZVN0b3A6IGZ1bmN0aW9uKGV2ZW50LCBub1Byb3BhZ2F0aW9uKSB7DQoNCgkJaWYoIWV2ZW50KSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQkvL0lmIHdlIGFyZSB1c2luZyBkcm9wcGFibGVzLCBpbmZvcm0gdGhlIG1hbmFnZXIgYWJvdXQgdGhlIGRyb3ANCgkJaWYgKCQudWkuZGRtYW5hZ2VyICYmICF0aGlzLm9wdGlvbnMuZHJvcEJlaGF2aW91cikgew0KCQkJJC51aS5kZG1hbmFnZXIuZHJvcCh0aGlzLCBldmVudCk7DQoJCX0NCg0KCQlpZih0aGlzLm9wdGlvbnMucmV2ZXJ0KSB7DQoJCQl2YXIgdGhhdCA9IHRoaXMsDQoJCQkJY3VyID0gdGhpcy5wbGFjZWhvbGRlci5vZmZzZXQoKSwNCgkJCQlheGlzID0gdGhpcy5vcHRpb25zLmF4aXMsDQoJCQkJYW5pbWF0aW9uID0ge307DQoNCgkJCWlmICggIWF4aXMgfHwgYXhpcyA9PT0gIngiICkgew0KCQkJCWFuaW1hdGlvbi5sZWZ0ID0gY3VyLmxlZnQgLSB0aGlzLm9mZnNldC5wYXJlbnQubGVmdCAtIHRoaXMubWFyZ2lucy5sZWZ0ICsgKHRoaXMub2Zmc2V0UGFyZW50WzBdID09PSBkb2N1bWVudC5ib2R5ID8gMCA6IHRoaXMub2Zmc2V0UGFyZW50WzBdLnNjcm9sbExlZnQpOw0KCQkJfQ0KCQkJaWYgKCAhYXhpcyB8fCBheGlzID09PSAieSIgKSB7DQoJCQkJYW5pbWF0aW9uLnRvcCA9IGN1ci50b3AgLSB0aGlzLm9mZnNldC5wYXJlbnQudG9wIC0gdGhpcy5tYXJnaW5zLnRvcCArICh0aGlzLm9mZnNldFBhcmVudFswXSA9PT0gZG9jdW1lbnQuYm9keSA/IDAgOiB0aGlzLm9mZnNldFBhcmVudFswXS5zY3JvbGxUb3ApOw0KCQkJfQ0KCQkJdGhpcy5yZXZlcnRpbmcgPSB0cnVlOw0KCQkJJCh0aGlzLmhlbHBlcikuYW5pbWF0ZSggYW5pbWF0aW9uLCBwYXJzZUludCh0aGlzLm9wdGlvbnMucmV2ZXJ0LCAxMCkgfHwgNTAwLCBmdW5jdGlvbigpIHsNCgkJCQl0aGF0Ll9jbGVhcihldmVudCk7DQoJCQl9KTsNCgkJfSBlbHNlIHsNCgkJCXRoaXMuX2NsZWFyKGV2ZW50LCBub1Byb3BhZ2F0aW9uKTsNCgkJfQ0KDQoJCXJldHVybiBmYWxzZTsNCg0KCX0sDQoNCgljYW5jZWw6IGZ1bmN0aW9uKCkgew0KDQoJCWlmKHRoaXMuZHJhZ2dpbmcpIHsNCg0KCQkJdGhpcy5fbW91c2VVcCh7IHRhcmdldDogbnVsbCB9KTsNCg0KCQkJaWYodGhpcy5vcHRpb25zLmhlbHBlciA9PT0gIm9yaWdpbmFsIikgew0KCQkJCXRoaXMuY3VycmVudEl0ZW0uY3NzKHRoaXMuX3N0b3JlZENTUykucmVtb3ZlQ2xhc3MoInVpLXNvcnRhYmxlLWhlbHBlciIpOw0KCQkJfSBlbHNlIHsNCgkJCQl0aGlzLmN1cnJlbnRJdGVtLnNob3coKTsNCgkJCX0NCg0KCQkJLy9Qb3N0IGRlYWN0aXZhdGluZyBldmVudHMgdG8gY29udGFpbmVycw0KCQkJZm9yICh2YXIgaSA9IHRoaXMuY29udGFpbmVycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSl7DQoJCQkJdGhpcy5jb250YWluZXJzW2ldLl90cmlnZ2VyKCJkZWFjdGl2YXRlIiwgbnVsbCwgdGhpcy5fdWlIYXNoKHRoaXMpKTsNCgkJCQlpZih0aGlzLmNvbnRhaW5lcnNbaV0uY29udGFpbmVyQ2FjaGUub3Zlcikgew0KCQkJCQl0aGlzLmNvbnRhaW5lcnNbaV0uX3RyaWdnZXIoIm91dCIsIG51bGwsIHRoaXMuX3VpSGFzaCh0aGlzKSk7DQoJCQkJCXRoaXMuY29udGFpbmVyc1tpXS5jb250YWluZXJDYWNoZS5vdmVyID0gMDsNCgkJCQl9DQoJCQl9DQoNCgkJfQ0KDQoJCWlmICh0aGlzLnBsYWNlaG9sZGVyKSB7DQoJCQkvLyQodGhpcy5wbGFjZWhvbGRlclswXSkucmVtb3ZlKCk7IHdvdWxkIGhhdmUgYmVlbiB0aGUgalF1ZXJ5IHdheSAtIHVuZm9ydHVuYXRlbHksIGl0IHVuYmluZHMgQUxMIGV2ZW50cyBmcm9tIHRoZSBvcmlnaW5hbCBub2RlIQ0KCQkJaWYodGhpcy5wbGFjZWhvbGRlclswXS5wYXJlbnROb2RlKSB7DQoJCQkJdGhpcy5wbGFjZWhvbGRlclswXS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMucGxhY2Vob2xkZXJbMF0pOw0KCQkJfQ0KCQkJaWYodGhpcy5vcHRpb25zLmhlbHBlciAhPT0gIm9yaWdpbmFsIiAmJiB0aGlzLmhlbHBlciAmJiB0aGlzLmhlbHBlclswXS5wYXJlbnROb2RlKSB7DQoJCQkJdGhpcy5oZWxwZXIucmVtb3ZlKCk7DQoJCQl9DQoNCgkJCSQuZXh0ZW5kKHRoaXMsIHsNCgkJCQloZWxwZXI6IG51bGwsDQoJCQkJZHJhZ2dpbmc6IGZhbHNlLA0KCQkJCXJldmVydGluZzogZmFsc2UsDQoJCQkJX25vRmluYWxTb3J0OiBudWxsDQoJCQl9KTsNCg0KCQkJaWYodGhpcy5kb21Qb3NpdGlvbi5wcmV2KSB7DQoJCQkJJCh0aGlzLmRvbVBvc2l0aW9uLnByZXYpLmFmdGVyKHRoaXMuY3VycmVudEl0ZW0pOw0KCQkJfSBlbHNlIHsNCgkJCQkkKHRoaXMuZG9tUG9zaXRpb24ucGFyZW50KS5wcmVwZW5kKHRoaXMuY3VycmVudEl0ZW0pOw0KCQkJfQ0KCQl9DQoNCgkJcmV0dXJuIHRoaXM7DQoNCgl9LA0KDQoJc2VyaWFsaXplOiBmdW5jdGlvbihvKSB7DQoNCgkJdmFyIGl0ZW1zID0gdGhpcy5fZ2V0SXRlbXNBc2pRdWVyeShvICYmIG8uY29ubmVjdGVkKSwNCgkJCXN0ciA9IFtdOw0KCQlvID0gbyB8fCB7fTsNCg0KCQkkKGl0ZW1zKS5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJdmFyIHJlcyA9ICgkKG8uaXRlbSB8fCB0aGlzKS5hdHRyKG8uYXR0cmlidXRlIHx8ICJpZCIpIHx8ICIiKS5tYXRjaChvLmV4cHJlc3Npb24gfHwgKC8oLispW1wtPV9dKC4rKS8pKTsNCgkJCWlmIChyZXMpIHsNCgkJCQlzdHIucHVzaCgoby5rZXkgfHwgcmVzWzFdKyJbXSIpKyI9Iisoby5rZXkgJiYgby5leHByZXNzaW9uID8gcmVzWzFdIDogcmVzWzJdKSk7DQoJCQl9DQoJCX0pOw0KDQoJCWlmKCFzdHIubGVuZ3RoICYmIG8ua2V5KSB7DQoJCQlzdHIucHVzaChvLmtleSArICI9Iik7DQoJCX0NCg0KCQlyZXR1cm4gc3RyLmpvaW4oIiYiKTsNCg0KCX0sDQoNCgl0b0FycmF5OiBmdW5jdGlvbihvKSB7DQoNCgkJdmFyIGl0ZW1zID0gdGhpcy5fZ2V0SXRlbXNBc2pRdWVyeShvICYmIG8uY29ubmVjdGVkKSwNCgkJCXJldCA9IFtdOw0KDQoJCW8gPSBvIHx8IHt9Ow0KDQoJCWl0ZW1zLmVhY2goZnVuY3Rpb24oKSB7IHJldC5wdXNoKCQoby5pdGVtIHx8IHRoaXMpLmF0dHIoby5hdHRyaWJ1dGUgfHwgImlkIikgfHwgIiIpOyB9KTsNCgkJcmV0dXJuIHJldDsNCg0KCX0sDQoNCgkvKiBCZSBjYXJlZnVsIHdpdGggdGhlIGZvbGxvd2luZyBjb3JlIGZ1bmN0aW9ucyAqLw0KCV9pbnRlcnNlY3RzV2l0aDogZnVuY3Rpb24oaXRlbSkgew0KDQoJCXZhciB4MSA9IHRoaXMucG9zaXRpb25BYnMubGVmdCwNCgkJCXgyID0geDEgKyB0aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoLA0KCQkJeTEgPSB0aGlzLnBvc2l0aW9uQWJzLnRvcCwNCgkJCXkyID0geTEgKyB0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCwNCgkJCWwgPSBpdGVtLmxlZnQsDQoJCQlyID0gbCArIGl0ZW0ud2lkdGgsDQoJCQl0ID0gaXRlbS50b3AsDQoJCQliID0gdCArIGl0ZW0uaGVpZ2h0LA0KCQkJZHlDbGljayA9IHRoaXMub2Zmc2V0LmNsaWNrLnRvcCwNCgkJCWR4Q2xpY2sgPSB0aGlzLm9mZnNldC5jbGljay5sZWZ0LA0KCQkJaXNPdmVyRWxlbWVudEhlaWdodCA9ICggdGhpcy5vcHRpb25zLmF4aXMgPT09ICJ4IiApIHx8ICggKCB5MSArIGR5Q2xpY2sgKSA+IHQgJiYgKCB5MSArIGR5Q2xpY2sgKSA8IGIgKSwNCgkJCWlzT3ZlckVsZW1lbnRXaWR0aCA9ICggdGhpcy5vcHRpb25zLmF4aXMgPT09ICJ5IiApIHx8ICggKCB4MSArIGR4Q2xpY2sgKSA+IGwgJiYgKCB4MSArIGR4Q2xpY2sgKSA8IHIgKSwNCgkJCWlzT3ZlckVsZW1lbnQgPSBpc092ZXJFbGVtZW50SGVpZ2h0ICYmIGlzT3ZlckVsZW1lbnRXaWR0aDsNCg0KCQlpZiAoIHRoaXMub3B0aW9ucy50b2xlcmFuY2UgPT09ICJwb2ludGVyIiB8fA0KCQkJdGhpcy5vcHRpb25zLmZvcmNlUG9pbnRlckZvckNvbnRhaW5lcnMgfHwNCgkJCSh0aGlzLm9wdGlvbnMudG9sZXJhbmNlICE9PSAicG9pbnRlciIgJiYgdGhpcy5oZWxwZXJQcm9wb3J0aW9uc1t0aGlzLmZsb2F0aW5nID8gIndpZHRoIiA6ICJoZWlnaHQiXSA+IGl0ZW1bdGhpcy5mbG9hdGluZyA/ICJ3aWR0aCIgOiAiaGVpZ2h0Il0pDQoJCSkgew0KCQkJcmV0dXJuIGlzT3ZlckVsZW1lbnQ7DQoJCX0gZWxzZSB7DQoNCgkJCXJldHVybiAobCA8IHgxICsgKHRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGggLyAyKSAmJiAvLyBSaWdodCBIYWxmDQoJCQkJeDIgLSAodGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCAvIDIpIDwgciAmJiAvLyBMZWZ0IEhhbGYNCgkJCQl0IDwgeTEgKyAodGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLyAyKSAmJiAvLyBCb3R0b20gSGFsZg0KCQkJCXkyIC0gKHRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0IC8gMikgPCBiICk7IC8vIFRvcCBIYWxmDQoNCgkJfQ0KCX0sDQoNCglfaW50ZXJzZWN0c1dpdGhQb2ludGVyOiBmdW5jdGlvbihpdGVtKSB7DQoNCgkJdmFyIGlzT3ZlckVsZW1lbnRIZWlnaHQgPSAodGhpcy5vcHRpb25zLmF4aXMgPT09ICJ4IikgfHwgdGhpcy5faXNPdmVyQXhpcyh0aGlzLnBvc2l0aW9uQWJzLnRvcCArIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCwgaXRlbS50b3AsIGl0ZW0uaGVpZ2h0KSwNCgkJCWlzT3ZlckVsZW1lbnRXaWR0aCA9ICh0aGlzLm9wdGlvbnMuYXhpcyA9PT0gInkiKSB8fCB0aGlzLl9pc092ZXJBeGlzKHRoaXMucG9zaXRpb25BYnMubGVmdCArIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQsIGl0ZW0ubGVmdCwgaXRlbS53aWR0aCksDQoJCQlpc092ZXJFbGVtZW50ID0gaXNPdmVyRWxlbWVudEhlaWdodCAmJiBpc092ZXJFbGVtZW50V2lkdGgsDQoJCQl2ZXJ0aWNhbERpcmVjdGlvbiA9IHRoaXMuX2dldERyYWdWZXJ0aWNhbERpcmVjdGlvbigpLA0KCQkJaG9yaXpvbnRhbERpcmVjdGlvbiA9IHRoaXMuX2dldERyYWdIb3Jpem9udGFsRGlyZWN0aW9uKCk7DQoNCgkJaWYgKCFpc092ZXJFbGVtZW50KSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCg0KCQlyZXR1cm4gdGhpcy5mbG9hdGluZyA/DQoJCQkoICgoaG9yaXpvbnRhbERpcmVjdGlvbiAmJiBob3Jpem9udGFsRGlyZWN0aW9uID09PSAicmlnaHQiKSB8fCB2ZXJ0aWNhbERpcmVjdGlvbiA9PT0gImRvd24iKSA/IDIgOiAxICkNCgkJCTogKCB2ZXJ0aWNhbERpcmVjdGlvbiAmJiAodmVydGljYWxEaXJlY3Rpb24gPT09ICJkb3duIiA/IDIgOiAxKSApOw0KDQoJfSwNCg0KCV9pbnRlcnNlY3RzV2l0aFNpZGVzOiBmdW5jdGlvbihpdGVtKSB7DQoNCgkJdmFyIGlzT3ZlckJvdHRvbUhhbGYgPSB0aGlzLl9pc092ZXJBeGlzKHRoaXMucG9zaXRpb25BYnMudG9wICsgdGhpcy5vZmZzZXQuY2xpY2sudG9wLCBpdGVtLnRvcCArIChpdGVtLmhlaWdodC8yKSwgaXRlbS5oZWlnaHQpLA0KCQkJaXNPdmVyUmlnaHRIYWxmID0gdGhpcy5faXNPdmVyQXhpcyh0aGlzLnBvc2l0aW9uQWJzLmxlZnQgKyB0aGlzLm9mZnNldC5jbGljay5sZWZ0LCBpdGVtLmxlZnQgKyAoaXRlbS53aWR0aC8yKSwgaXRlbS53aWR0aCksDQoJCQl2ZXJ0aWNhbERpcmVjdGlvbiA9IHRoaXMuX2dldERyYWdWZXJ0aWNhbERpcmVjdGlvbigpLA0KCQkJaG9yaXpvbnRhbERpcmVjdGlvbiA9IHRoaXMuX2dldERyYWdIb3Jpem9udGFsRGlyZWN0aW9uKCk7DQoNCgkJaWYgKHRoaXMuZmxvYXRpbmcgJiYgaG9yaXpvbnRhbERpcmVjdGlvbikgew0KCQkJcmV0dXJuICgoaG9yaXpvbnRhbERpcmVjdGlvbiA9PT0gInJpZ2h0IiAmJiBpc092ZXJSaWdodEhhbGYpIHx8IChob3Jpem9udGFsRGlyZWN0aW9uID09PSAibGVmdCIgJiYgIWlzT3ZlclJpZ2h0SGFsZikpOw0KCQl9IGVsc2Ugew0KCQkJcmV0dXJuIHZlcnRpY2FsRGlyZWN0aW9uICYmICgodmVydGljYWxEaXJlY3Rpb24gPT09ICJkb3duIiAmJiBpc092ZXJCb3R0b21IYWxmKSB8fCAodmVydGljYWxEaXJlY3Rpb24gPT09ICJ1cCIgJiYgIWlzT3ZlckJvdHRvbUhhbGYpKTsNCgkJfQ0KDQoJfSwNCg0KCV9nZXREcmFnVmVydGljYWxEaXJlY3Rpb246IGZ1bmN0aW9uKCkgew0KCQl2YXIgZGVsdGEgPSB0aGlzLnBvc2l0aW9uQWJzLnRvcCAtIHRoaXMubGFzdFBvc2l0aW9uQWJzLnRvcDsNCgkJcmV0dXJuIGRlbHRhICE9PSAwICYmIChkZWx0YSA+IDAgPyAiZG93biIgOiAidXAiKTsNCgl9LA0KDQoJX2dldERyYWdIb3Jpem9udGFsRGlyZWN0aW9uOiBmdW5jdGlvbigpIHsNCgkJdmFyIGRlbHRhID0gdGhpcy5wb3NpdGlvbkFicy5sZWZ0IC0gdGhpcy5sYXN0UG9zaXRpb25BYnMubGVmdDsNCgkJcmV0dXJuIGRlbHRhICE9PSAwICYmIChkZWx0YSA+IDAgPyAicmlnaHQiIDogImxlZnQiKTsNCgl9LA0KDQoJcmVmcmVzaDogZnVuY3Rpb24oZXZlbnQpIHsNCgkJdGhpcy5fcmVmcmVzaEl0ZW1zKGV2ZW50KTsNCgkJdGhpcy5fc2V0SGFuZGxlQ2xhc3NOYW1lKCk7DQoJCXRoaXMucmVmcmVzaFBvc2l0aW9ucygpOw0KCQlyZXR1cm4gdGhpczsNCgl9LA0KDQoJX2Nvbm5lY3RXaXRoOiBmdW5jdGlvbigpIHsNCgkJdmFyIG9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7DQoJCXJldHVybiBvcHRpb25zLmNvbm5lY3RXaXRoLmNvbnN0cnVjdG9yID09PSBTdHJpbmcgPyBbb3B0aW9ucy5jb25uZWN0V2l0aF0gOiBvcHRpb25zLmNvbm5lY3RXaXRoOw0KCX0sDQoNCglfZ2V0SXRlbXNBc2pRdWVyeTogZnVuY3Rpb24oY29ubmVjdGVkKSB7DQoNCgkJdmFyIGksIGosIGN1ciwgaW5zdCwNCgkJCWl0ZW1zID0gW10sDQoJCQlxdWVyaWVzID0gW10sDQoJCQljb25uZWN0V2l0aCA9IHRoaXMuX2Nvbm5lY3RXaXRoKCk7DQoNCgkJaWYoY29ubmVjdFdpdGggJiYgY29ubmVjdGVkKSB7DQoJCQlmb3IgKGkgPSBjb25uZWN0V2l0aC5sZW5ndGggLSAxOyBpID49IDA7IGktLSl7DQoJCQkJY3VyID0gJChjb25uZWN0V2l0aFtpXSk7DQoJCQkJZm9yICggaiA9IGN1ci5sZW5ndGggLSAxOyBqID49IDA7IGotLSl7DQoJCQkJCWluc3QgPSAkLmRhdGEoY3VyW2pdLCB0aGlzLndpZGdldEZ1bGxOYW1lKTsNCgkJCQkJaWYoaW5zdCAmJiBpbnN0ICE9PSB0aGlzICYmICFpbnN0Lm9wdGlvbnMuZGlzYWJsZWQpIHsNCgkJCQkJCXF1ZXJpZXMucHVzaChbJC5pc0Z1bmN0aW9uKGluc3Qub3B0aW9ucy5pdGVtcykgPyBpbnN0Lm9wdGlvbnMuaXRlbXMuY2FsbChpbnN0LmVsZW1lbnQpIDogJChpbnN0Lm9wdGlvbnMuaXRlbXMsIGluc3QuZWxlbWVudCkubm90KCIudWktc29ydGFibGUtaGVscGVyIikubm90KCIudWktc29ydGFibGUtcGxhY2Vob2xkZXIiKSwgaW5zdF0pOw0KCQkJCQl9DQoJCQkJfQ0KCQkJfQ0KCQl9DQoNCgkJcXVlcmllcy5wdXNoKFskLmlzRnVuY3Rpb24odGhpcy5vcHRpb25zLml0ZW1zKSA/IHRoaXMub3B0aW9ucy5pdGVtcy5jYWxsKHRoaXMuZWxlbWVudCwgbnVsbCwgeyBvcHRpb25zOiB0aGlzLm9wdGlvbnMsIGl0ZW06IHRoaXMuY3VycmVudEl0ZW0gfSkgOiAkKHRoaXMub3B0aW9ucy5pdGVtcywgdGhpcy5lbGVtZW50KS5ub3QoIi51aS1zb3J0YWJsZS1oZWxwZXIiKS5ub3QoIi51aS1zb3J0YWJsZS1wbGFjZWhvbGRlciIpLCB0aGlzXSk7DQoNCgkJZnVuY3Rpb24gYWRkSXRlbXMoKSB7DQoJCQlpdGVtcy5wdXNoKCB0aGlzICk7DQoJCX0NCgkJZm9yIChpID0gcXVlcmllcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSl7DQoJCQlxdWVyaWVzW2ldWzBdLmVhY2goIGFkZEl0ZW1zICk7DQoJCX0NCg0KCQlyZXR1cm4gJChpdGVtcyk7DQoNCgl9LA0KDQoJX3JlbW92ZUN1cnJlbnRzRnJvbUl0ZW1zOiBmdW5jdGlvbigpIHsNCg0KCQl2YXIgbGlzdCA9IHRoaXMuY3VycmVudEl0ZW0uZmluZCgiOmRhdGEoIiArIHRoaXMud2lkZ2V0TmFtZSArICItaXRlbSkiKTsNCg0KCQl0aGlzLml0ZW1zID0gJC5ncmVwKHRoaXMuaXRlbXMsIGZ1bmN0aW9uIChpdGVtKSB7DQoJCQlmb3IgKHZhciBqPTA7IGogPCBsaXN0Lmxlbmd0aDsgaisrKSB7DQoJCQkJaWYobGlzdFtqXSA9PT0gaXRlbS5pdGVtWzBdKSB7DQoJCQkJCXJldHVybiBmYWxzZTsNCgkJCQl9DQoJCQl9DQoJCQlyZXR1cm4gdHJ1ZTsNCgkJfSk7DQoNCgl9LA0KDQoJX3JlZnJlc2hJdGVtczogZnVuY3Rpb24oZXZlbnQpIHsNCg0KCQl0aGlzLml0ZW1zID0gW107DQoJCXRoaXMuY29udGFpbmVycyA9IFt0aGlzXTsNCg0KCQl2YXIgaSwgaiwgY3VyLCBpbnN0LCB0YXJnZXREYXRhLCBfcXVlcmllcywgaXRlbSwgcXVlcmllc0xlbmd0aCwNCgkJCWl0ZW1zID0gdGhpcy5pdGVtcywNCgkJCXF1ZXJpZXMgPSBbWyQuaXNGdW5jdGlvbih0aGlzLm9wdGlvbnMuaXRlbXMpID8gdGhpcy5vcHRpb25zLml0ZW1zLmNhbGwodGhpcy5lbGVtZW50WzBdLCBldmVudCwgeyBpdGVtOiB0aGlzLmN1cnJlbnRJdGVtIH0pIDogJCh0aGlzLm9wdGlvbnMuaXRlbXMsIHRoaXMuZWxlbWVudCksIHRoaXNdXSwNCgkJCWNvbm5lY3RXaXRoID0gdGhpcy5fY29ubmVjdFdpdGgoKTsNCg0KCQlpZihjb25uZWN0V2l0aCAmJiB0aGlzLnJlYWR5KSB7IC8vU2hvdWxkbid0IGJlIHJ1biB0aGUgZmlyc3QgdGltZSB0aHJvdWdoIGR1ZSB0byBtYXNzaXZlIHNsb3ctZG93bg0KCQkJZm9yIChpID0gY29ubmVjdFdpdGgubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pew0KCQkJCWN1ciA9ICQoY29ubmVjdFdpdGhbaV0pOw0KCQkJCWZvciAoaiA9IGN1ci5sZW5ndGggLSAxOyBqID49IDA7IGotLSl7DQoJCQkJCWluc3QgPSAkLmRhdGEoY3VyW2pdLCB0aGlzLndpZGdldEZ1bGxOYW1lKTsNCgkJCQkJaWYoaW5zdCAmJiBpbnN0ICE9PSB0aGlzICYmICFpbnN0Lm9wdGlvbnMuZGlzYWJsZWQpIHsNCgkJCQkJCXF1ZXJpZXMucHVzaChbJC5pc0Z1bmN0aW9uKGluc3Qub3B0aW9ucy5pdGVtcykgPyBpbnN0Lm9wdGlvbnMuaXRlbXMuY2FsbChpbnN0LmVsZW1lbnRbMF0sIGV2ZW50LCB7IGl0ZW06IHRoaXMuY3VycmVudEl0ZW0gfSkgOiAkKGluc3Qub3B0aW9ucy5pdGVtcywgaW5zdC5lbGVtZW50KSwgaW5zdF0pOw0KCQkJCQkJdGhpcy5jb250YWluZXJzLnB1c2goaW5zdCk7DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0NCg0KCQlmb3IgKGkgPSBxdWVyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7DQoJCQl0YXJnZXREYXRhID0gcXVlcmllc1tpXVsxXTsNCgkJCV9xdWVyaWVzID0gcXVlcmllc1tpXVswXTsNCg0KCQkJZm9yIChqPTAsIHF1ZXJpZXNMZW5ndGggPSBfcXVlcmllcy5sZW5ndGg7IGogPCBxdWVyaWVzTGVuZ3RoOyBqKyspIHsNCgkJCQlpdGVtID0gJChfcXVlcmllc1tqXSk7DQoNCgkJCQlpdGVtLmRhdGEodGhpcy53aWRnZXROYW1lICsgIi1pdGVtIiwgdGFyZ2V0RGF0YSk7IC8vIERhdGEgZm9yIHRhcmdldCBjaGVja2luZyAobW91c2UgbWFuYWdlcikNCg0KCQkJCWl0ZW1zLnB1c2goew0KCQkJCQlpdGVtOiBpdGVtLA0KCQkJCQlpbnN0YW5jZTogdGFyZ2V0RGF0YSwNCgkJCQkJd2lkdGg6IDAsIGhlaWdodDogMCwNCgkJCQkJbGVmdDogMCwgdG9wOiAwDQoJCQkJfSk7DQoJCQl9DQoJCX0NCg0KCX0sDQoNCglyZWZyZXNoUG9zaXRpb25zOiBmdW5jdGlvbihmYXN0KSB7DQoNCgkJLy9UaGlzIGhhcyB0byBiZSByZWRvbmUgYmVjYXVzZSBkdWUgdG8gdGhlIGl0ZW0gYmVpbmcgbW92ZWQgb3V0L2ludG8gdGhlIG9mZnNldFBhcmVudCwgdGhlIG9mZnNldFBhcmVudCdzIHBvc2l0aW9uIHdpbGwgY2hhbmdlDQoJCWlmKHRoaXMub2Zmc2V0UGFyZW50ICYmIHRoaXMuaGVscGVyKSB7DQoJCQl0aGlzLm9mZnNldC5wYXJlbnQgPSB0aGlzLl9nZXRQYXJlbnRPZmZzZXQoKTsNCgkJfQ0KDQoJCXZhciBpLCBpdGVtLCB0LCBwOw0KDQoJCWZvciAoaSA9IHRoaXMuaXRlbXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pew0KCQkJaXRlbSA9IHRoaXMuaXRlbXNbaV07DQoNCgkJCS8vV2UgaWdub3JlIGNhbGN1bGF0aW5nIHBvc2l0aW9ucyBvZiBhbGwgY29ubmVjdGVkIGNvbnRhaW5lcnMgd2hlbiB3ZSdyZSBub3Qgb3ZlciB0aGVtDQoJCQlpZihpdGVtLmluc3RhbmNlICE9PSB0aGlzLmN1cnJlbnRDb250YWluZXIgJiYgdGhpcy5jdXJyZW50Q29udGFpbmVyICYmIGl0ZW0uaXRlbVswXSAhPT0gdGhpcy5jdXJyZW50SXRlbVswXSkgew0KCQkJCWNvbnRpbnVlOw0KCQkJfQ0KDQoJCQl0ID0gdGhpcy5vcHRpb25zLnRvbGVyYW5jZUVsZW1lbnQgPyAkKHRoaXMub3B0aW9ucy50b2xlcmFuY2VFbGVtZW50LCBpdGVtLml0ZW0pIDogaXRlbS5pdGVtOw0KDQoJCQlpZiAoIWZhc3QpIHsNCgkJCQlpdGVtLndpZHRoID0gdC5vdXRlcldpZHRoKCk7DQoJCQkJaXRlbS5oZWlnaHQgPSB0Lm91dGVySGVpZ2h0KCk7DQoJCQl9DQoNCgkJCXAgPSB0Lm9mZnNldCgpOw0KCQkJaXRlbS5sZWZ0ID0gcC5sZWZ0Ow0KCQkJaXRlbS50b3AgPSBwLnRvcDsNCgkJfQ0KDQoJCWlmKHRoaXMub3B0aW9ucy5jdXN0b20gJiYgdGhpcy5vcHRpb25zLmN1c3RvbS5yZWZyZXNoQ29udGFpbmVycykgew0KCQkJdGhpcy5vcHRpb25zLmN1c3RvbS5yZWZyZXNoQ29udGFpbmVycy5jYWxsKHRoaXMpOw0KCQl9IGVsc2Ugew0KCQkJZm9yIChpID0gdGhpcy5jb250YWluZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKXsNCgkJCQlwID0gdGhpcy5jb250YWluZXJzW2ldLmVsZW1lbnQub2Zmc2V0KCk7DQoJCQkJdGhpcy5jb250YWluZXJzW2ldLmNvbnRhaW5lckNhY2hlLmxlZnQgPSBwLmxlZnQ7DQoJCQkJdGhpcy5jb250YWluZXJzW2ldLmNvbnRhaW5lckNhY2hlLnRvcCA9IHAudG9wOw0KCQkJCXRoaXMuY29udGFpbmVyc1tpXS5jb250YWluZXJDYWNoZS53aWR0aCA9IHRoaXMuY29udGFpbmVyc1tpXS5lbGVtZW50Lm91dGVyV2lkdGgoKTsNCgkJCQl0aGlzLmNvbnRhaW5lcnNbaV0uY29udGFpbmVyQ2FjaGUuaGVpZ2h0ID0gdGhpcy5jb250YWluZXJzW2ldLmVsZW1lbnQub3V0ZXJIZWlnaHQoKTsNCgkJCX0NCgkJfQ0KDQoJCXJldHVybiB0aGlzOw0KCX0sDQoNCglfY3JlYXRlUGxhY2Vob2xkZXI6IGZ1bmN0aW9uKHRoYXQpIHsNCgkJdGhhdCA9IHRoYXQgfHwgdGhpczsNCgkJdmFyIGNsYXNzTmFtZSwNCgkJCW8gPSB0aGF0Lm9wdGlvbnM7DQoNCgkJaWYoIW8ucGxhY2Vob2xkZXIgfHwgby5wbGFjZWhvbGRlci5jb25zdHJ1Y3RvciA9PT0gU3RyaW5nKSB7DQoJCQljbGFzc05hbWUgPSBvLnBsYWNlaG9sZGVyOw0KCQkJby5wbGFjZWhvbGRlciA9IHsNCgkJCQllbGVtZW50OiBmdW5jdGlvbigpIHsNCg0KCQkJCQl2YXIgbm9kZU5hbWUgPSB0aGF0LmN1cnJlbnRJdGVtWzBdLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksDQoJCQkJCQllbGVtZW50ID0gJCggIjwiICsgbm9kZU5hbWUgKyAiPiIsIHRoYXQuZG9jdW1lbnRbMF0gKQ0KCQkJCQkJCS5hZGRDbGFzcyhjbGFzc05hbWUgfHwgdGhhdC5jdXJyZW50SXRlbVswXS5jbGFzc05hbWUrIiB1aS1zb3J0YWJsZS1wbGFjZWhvbGRlciIpDQoJCQkJCQkJLnJlbW92ZUNsYXNzKCJ1aS1zb3J0YWJsZS1oZWxwZXIiKTsNCg0KCQkJCQlpZiAoIG5vZGVOYW1lID09PSAidHIiICkgew0KCQkJCQkJdGhhdC5jdXJyZW50SXRlbS5jaGlsZHJlbigpLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJCQkJJCggIjx0ZD4mIzE2MDs8L3RkPiIsIHRoYXQuZG9jdW1lbnRbMF0gKQ0KCQkJCQkJCQkuYXR0ciggImNvbHNwYW4iLCAkKCB0aGlzICkuYXR0ciggImNvbHNwYW4iICkgfHwgMSApDQoJCQkJCQkJCS5hcHBlbmRUbyggZWxlbWVudCApOw0KCQkJCQkJfSk7DQoJCQkJCX0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSAiaW1nIiApIHsNCgkJCQkJCWVsZW1lbnQuYXR0ciggInNyYyIsIHRoYXQuY3VycmVudEl0ZW0uYXR0ciggInNyYyIgKSApOw0KCQkJCQl9DQoNCgkJCQkJaWYgKCAhY2xhc3NOYW1lICkgew0KCQkJCQkJZWxlbWVudC5jc3MoICJ2aXNpYmlsaXR5IiwgImhpZGRlbiIgKTsNCgkJCQkJfQ0KDQoJCQkJCXJldHVybiBlbGVtZW50Ow0KCQkJCX0sDQoJCQkJdXBkYXRlOiBmdW5jdGlvbihjb250YWluZXIsIHApIHsNCg0KCQkJCQkvLyAxLiBJZiBhIGNsYXNzTmFtZSBpcyBzZXQgYXMgJ3BsYWNlaG9sZGVyIG9wdGlvbiwgd2UgZG9uJ3QgZm9yY2Ugc2l6ZXMgLSB0aGUgY2xhc3MgaXMgcmVzcG9uc2libGUgZm9yIHRoYXQNCgkJCQkJLy8gMi4gVGhlIG9wdGlvbiAnZm9yY2VQbGFjZWhvbGRlclNpemUgY2FuIGJlIGVuYWJsZWQgdG8gZm9yY2UgaXQgZXZlbiBpZiBhIGNsYXNzIG5hbWUgaXMgc3BlY2lmaWVkDQoJCQkJCWlmKGNsYXNzTmFtZSAmJiAhby5mb3JjZVBsYWNlaG9sZGVyU2l6ZSkgew0KCQkJCQkJcmV0dXJuOw0KCQkJCQl9DQoNCgkJCQkJLy9JZiB0aGUgZWxlbWVudCBkb2Vzbid0IGhhdmUgYSBhY3R1YWwgaGVpZ2h0IGJ5IGl0c2VsZiAod2l0aG91dCBzdHlsZXMgY29taW5nIGZyb20gYSBzdHlsZXNoZWV0KSwgaXQgcmVjZWl2ZXMgdGhlIGlubGluZSBoZWlnaHQgZnJvbSB0aGUgZHJhZ2dlZCBpdGVtDQoJCQkJCWlmKCFwLmhlaWdodCgpKSB7IHAuaGVpZ2h0KHRoYXQuY3VycmVudEl0ZW0uaW5uZXJIZWlnaHQoKSAtIHBhcnNlSW50KHRoYXQuY3VycmVudEl0ZW0uY3NzKCJwYWRkaW5nVG9wIil8fDAsIDEwKSAtIHBhcnNlSW50KHRoYXQuY3VycmVudEl0ZW0uY3NzKCJwYWRkaW5nQm90dG9tIil8fDAsIDEwKSk7IH0NCgkJCQkJaWYoIXAud2lkdGgoKSkgeyBwLndpZHRoKHRoYXQuY3VycmVudEl0ZW0uaW5uZXJXaWR0aCgpIC0gcGFyc2VJbnQodGhhdC5jdXJyZW50SXRlbS5jc3MoInBhZGRpbmdMZWZ0Iil8fDAsIDEwKSAtIHBhcnNlSW50KHRoYXQuY3VycmVudEl0ZW0uY3NzKCJwYWRkaW5nUmlnaHQiKXx8MCwgMTApKTsgfQ0KCQkJCX0NCgkJCX07DQoJCX0NCg0KCQkvL0NyZWF0ZSB0aGUgcGxhY2Vob2xkZXINCgkJdGhhdC5wbGFjZWhvbGRlciA9ICQoby5wbGFjZWhvbGRlci5lbGVtZW50LmNhbGwodGhhdC5lbGVtZW50LCB0aGF0LmN1cnJlbnRJdGVtKSk7DQoNCgkJLy9BcHBlbmQgaXQgYWZ0ZXIgdGhlIGFjdHVhbCBjdXJyZW50IGl0ZW0NCgkJdGhhdC5jdXJyZW50SXRlbS5hZnRlcih0aGF0LnBsYWNlaG9sZGVyKTsNCg0KCQkvL1VwZGF0ZSB0aGUgc2l6ZSBvZiB0aGUgcGxhY2Vob2xkZXIgKFRPRE86IExvZ2ljIHRvIGZ1enp5LCBzZWUgbGluZSAzMTYvMzE3KQ0KCQlvLnBsYWNlaG9sZGVyLnVwZGF0ZSh0aGF0LCB0aGF0LnBsYWNlaG9sZGVyKTsNCg0KCX0sDQoNCglfY29udGFjdENvbnRhaW5lcnM6IGZ1bmN0aW9uKGV2ZW50KSB7DQoJCXZhciBpLCBqLCBkaXN0LCBpdGVtV2l0aExlYXN0RGlzdGFuY2UsIHBvc1Byb3BlcnR5LCBzaXplUHJvcGVydHksIGN1ciwgbmVhckJvdHRvbSwgZmxvYXRpbmcsIGF4aXMsDQoJCQlpbm5lcm1vc3RDb250YWluZXIgPSBudWxsLA0KCQkJaW5uZXJtb3N0SW5kZXggPSBudWxsOw0KDQoJCS8vIGdldCBpbm5lcm1vc3QgY29udGFpbmVyIHRoYXQgaW50ZXJzZWN0cyB3aXRoIGl0ZW0NCgkJZm9yIChpID0gdGhpcy5jb250YWluZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7DQoNCgkJCS8vIG5ldmVyIGNvbnNpZGVyIGEgY29udGFpbmVyIHRoYXQncyBsb2NhdGVkIHdpdGhpbiB0aGUgaXRlbSBpdHNlbGYNCgkJCWlmKCQuY29udGFpbnModGhpcy5jdXJyZW50SXRlbVswXSwgdGhpcy5jb250YWluZXJzW2ldLmVsZW1lbnRbMF0pKSB7DQoJCQkJY29udGludWU7DQoJCQl9DQoNCgkJCWlmKHRoaXMuX2ludGVyc2VjdHNXaXRoKHRoaXMuY29udGFpbmVyc1tpXS5jb250YWluZXJDYWNoZSkpIHsNCg0KCQkJCS8vIGlmIHdlJ3ZlIGFscmVhZHkgZm91bmQgYSBjb250YWluZXIgYW5kIGl0J3MgbW9yZSAiaW5uZXIiIHRoYW4gdGhpcywgdGhlbiBjb250aW51ZQ0KCQkJCWlmKGlubmVybW9zdENvbnRhaW5lciAmJiAkLmNvbnRhaW5zKHRoaXMuY29udGFpbmVyc1tpXS5lbGVtZW50WzBdLCBpbm5lcm1vc3RDb250YWluZXIuZWxlbWVudFswXSkpIHsNCgkJCQkJY29udGludWU7DQoJCQkJfQ0KDQoJCQkJaW5uZXJtb3N0Q29udGFpbmVyID0gdGhpcy5jb250YWluZXJzW2ldOw0KCQkJCWlubmVybW9zdEluZGV4ID0gaTsNCg0KCQkJfSBlbHNlIHsNCgkJCQkvLyBjb250YWluZXIgZG9lc24ndCBpbnRlcnNlY3QuIHRyaWdnZXIgIm91dCIgZXZlbnQgaWYgbmVjZXNzYXJ5DQoJCQkJaWYodGhpcy5jb250YWluZXJzW2ldLmNvbnRhaW5lckNhY2hlLm92ZXIpIHsNCgkJCQkJdGhpcy5jb250YWluZXJzW2ldLl90cmlnZ2VyKCJvdXQiLCBldmVudCwgdGhpcy5fdWlIYXNoKHRoaXMpKTsNCgkJCQkJdGhpcy5jb250YWluZXJzW2ldLmNvbnRhaW5lckNhY2hlLm92ZXIgPSAwOw0KCQkJCX0NCgkJCX0NCg0KCQl9DQoNCgkJLy8gaWYgbm8gaW50ZXJzZWN0aW5nIGNvbnRhaW5lcnMgZm91bmQsIHJldHVybg0KCQlpZighaW5uZXJtb3N0Q29udGFpbmVyKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQkvLyBtb3ZlIHRoZSBpdGVtIGludG8gdGhlIGNvbnRhaW5lciBpZiBpdCdzIG5vdCB0aGVyZSBhbHJlYWR5DQoJCWlmKHRoaXMuY29udGFpbmVycy5sZW5ndGggPT09IDEpIHsNCgkJCWlmICghdGhpcy5jb250YWluZXJzW2lubmVybW9zdEluZGV4XS5jb250YWluZXJDYWNoZS5vdmVyKSB7DQoJCQkJdGhpcy5jb250YWluZXJzW2lubmVybW9zdEluZGV4XS5fdHJpZ2dlcigib3ZlciIsIGV2ZW50LCB0aGlzLl91aUhhc2godGhpcykpOw0KCQkJCXRoaXMuY29udGFpbmVyc1tpbm5lcm1vc3RJbmRleF0uY29udGFpbmVyQ2FjaGUub3ZlciA9IDE7DQoJCQl9DQoJCX0gZWxzZSB7DQoNCgkJCS8vV2hlbiBlbnRlcmluZyBhIG5ldyBjb250YWluZXIsIHdlIHdpbGwgZmluZCB0aGUgaXRlbSB3aXRoIHRoZSBsZWFzdCBkaXN0YW5jZSBhbmQgYXBwZW5kIG91ciBpdGVtIG5lYXIgaXQNCgkJCWRpc3QgPSAxMDAwMDsNCgkJCWl0ZW1XaXRoTGVhc3REaXN0YW5jZSA9IG51bGw7DQoJCQlmbG9hdGluZyA9IGlubmVybW9zdENvbnRhaW5lci5mbG9hdGluZyB8fCB0aGlzLl9pc0Zsb2F0aW5nKHRoaXMuY3VycmVudEl0ZW0pOw0KCQkJcG9zUHJvcGVydHkgPSBmbG9hdGluZyA/ICJsZWZ0IiA6ICJ0b3AiOw0KCQkJc2l6ZVByb3BlcnR5ID0gZmxvYXRpbmcgPyAid2lkdGgiIDogImhlaWdodCI7DQoJCQlheGlzID0gZmxvYXRpbmcgPyAiY2xpZW50WCIgOiAiY2xpZW50WSI7DQoNCgkJCWZvciAoaiA9IHRoaXMuaXRlbXMubGVuZ3RoIC0gMTsgaiA+PSAwOyBqLS0pIHsNCgkJCQlpZighJC5jb250YWlucyh0aGlzLmNvbnRhaW5lcnNbaW5uZXJtb3N0SW5kZXhdLmVsZW1lbnRbMF0sIHRoaXMuaXRlbXNbal0uaXRlbVswXSkpIHsNCgkJCQkJY29udGludWU7DQoJCQkJfQ0KCQkJCWlmKHRoaXMuaXRlbXNbal0uaXRlbVswXSA9PT0gdGhpcy5jdXJyZW50SXRlbVswXSkgew0KCQkJCQljb250aW51ZTsNCgkJCQl9DQoNCgkJCQljdXIgPSB0aGlzLml0ZW1zW2pdLml0ZW0ub2Zmc2V0KClbcG9zUHJvcGVydHldOw0KCQkJCW5lYXJCb3R0b20gPSBmYWxzZTsNCgkJCQlpZiAoIGV2ZW50WyBheGlzIF0gLSBjdXIgPiB0aGlzLml0ZW1zWyBqIF1bIHNpemVQcm9wZXJ0eSBdIC8gMiApIHsNCgkJCQkJbmVhckJvdHRvbSA9IHRydWU7DQoJCQkJfQ0KDQoJCQkJaWYgKCBNYXRoLmFicyggZXZlbnRbIGF4aXMgXSAtIGN1ciApIDwgZGlzdCApIHsNCgkJCQkJZGlzdCA9IE1hdGguYWJzKCBldmVudFsgYXhpcyBdIC0gY3VyICk7DQoJCQkJCWl0ZW1XaXRoTGVhc3REaXN0YW5jZSA9IHRoaXMuaXRlbXNbIGogXTsNCgkJCQkJdGhpcy5kaXJlY3Rpb24gPSBuZWFyQm90dG9tID8gInVwIjogImRvd24iOw0KCQkJCX0NCgkJCX0NCg0KCQkJLy9DaGVjayBpZiBkcm9wT25FbXB0eSBpcyBlbmFibGVkDQoJCQlpZighaXRlbVdpdGhMZWFzdERpc3RhbmNlICYmICF0aGlzLm9wdGlvbnMuZHJvcE9uRW1wdHkpIHsNCgkJCQlyZXR1cm47DQoJCQl9DQoNCgkJCWlmKHRoaXMuY3VycmVudENvbnRhaW5lciA9PT0gdGhpcy5jb250YWluZXJzW2lubmVybW9zdEluZGV4XSkgew0KCQkJCWlmICggIXRoaXMuY3VycmVudENvbnRhaW5lci5jb250YWluZXJDYWNoZS5vdmVyICkgew0KCQkJCQl0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdEluZGV4IF0uX3RyaWdnZXIoICJvdmVyIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCgpICk7DQoJCQkJCXRoaXMuY3VycmVudENvbnRhaW5lci5jb250YWluZXJDYWNoZS5vdmVyID0gMTsNCgkJCQl9DQoJCQkJcmV0dXJuOw0KCQkJfQ0KDQoJCQlpdGVtV2l0aExlYXN0RGlzdGFuY2UgPyB0aGlzLl9yZWFycmFuZ2UoZXZlbnQsIGl0ZW1XaXRoTGVhc3REaXN0YW5jZSwgbnVsbCwgdHJ1ZSkgOiB0aGlzLl9yZWFycmFuZ2UoZXZlbnQsIG51bGwsIHRoaXMuY29udGFpbmVyc1tpbm5lcm1vc3RJbmRleF0uZWxlbWVudCwgdHJ1ZSk7DQoJCQl0aGlzLl90cmlnZ2VyKCJjaGFuZ2UiLCBldmVudCwgdGhpcy5fdWlIYXNoKCkpOw0KCQkJdGhpcy5jb250YWluZXJzW2lubmVybW9zdEluZGV4XS5fdHJpZ2dlcigiY2hhbmdlIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCh0aGlzKSk7DQoJCQl0aGlzLmN1cnJlbnRDb250YWluZXIgPSB0aGlzLmNvbnRhaW5lcnNbaW5uZXJtb3N0SW5kZXhdOw0KDQoJCQkvL1VwZGF0ZSB0aGUgcGxhY2Vob2xkZXINCgkJCXRoaXMub3B0aW9ucy5wbGFjZWhvbGRlci51cGRhdGUodGhpcy5jdXJyZW50Q29udGFpbmVyLCB0aGlzLnBsYWNlaG9sZGVyKTsNCg0KCQkJdGhpcy5jb250YWluZXJzW2lubmVybW9zdEluZGV4XS5fdHJpZ2dlcigib3ZlciIsIGV2ZW50LCB0aGlzLl91aUhhc2godGhpcykpOw0KCQkJdGhpcy5jb250YWluZXJzW2lubmVybW9zdEluZGV4XS5jb250YWluZXJDYWNoZS5vdmVyID0gMTsNCgkJfQ0KDQoNCgl9LA0KDQoJX2NyZWF0ZUhlbHBlcjogZnVuY3Rpb24oZXZlbnQpIHsNCg0KCQl2YXIgbyA9IHRoaXMub3B0aW9ucywNCgkJCWhlbHBlciA9ICQuaXNGdW5jdGlvbihvLmhlbHBlcikgPyAkKG8uaGVscGVyLmFwcGx5KHRoaXMuZWxlbWVudFswXSwgW2V2ZW50LCB0aGlzLmN1cnJlbnRJdGVtXSkpIDogKG8uaGVscGVyID09PSAiY2xvbmUiID8gdGhpcy5jdXJyZW50SXRlbS5jbG9uZSgpIDogdGhpcy5jdXJyZW50SXRlbSk7DQoNCgkJLy9BZGQgdGhlIGhlbHBlciB0byB0aGUgRE9NIGlmIHRoYXQgZGlkbid0IGhhcHBlbiBhbHJlYWR5DQoJCWlmKCFoZWxwZXIucGFyZW50cygiYm9keSIpLmxlbmd0aCkgew0KCQkJJChvLmFwcGVuZFRvICE9PSAicGFyZW50IiA/IG8uYXBwZW5kVG8gOiB0aGlzLmN1cnJlbnRJdGVtWzBdLnBhcmVudE5vZGUpWzBdLmFwcGVuZENoaWxkKGhlbHBlclswXSk7DQoJCX0NCg0KCQlpZihoZWxwZXJbMF0gPT09IHRoaXMuY3VycmVudEl0ZW1bMF0pIHsNCgkJCXRoaXMuX3N0b3JlZENTUyA9IHsgd2lkdGg6IHRoaXMuY3VycmVudEl0ZW1bMF0uc3R5bGUud2lkdGgsIGhlaWdodDogdGhpcy5jdXJyZW50SXRlbVswXS5zdHlsZS5oZWlnaHQsIHBvc2l0aW9uOiB0aGlzLmN1cnJlbnRJdGVtLmNzcygicG9zaXRpb24iKSwgdG9wOiB0aGlzLmN1cnJlbnRJdGVtLmNzcygidG9wIiksIGxlZnQ6IHRoaXMuY3VycmVudEl0ZW0uY3NzKCJsZWZ0IikgfTsNCgkJfQ0KDQoJCWlmKCFoZWxwZXJbMF0uc3R5bGUud2lkdGggfHwgby5mb3JjZUhlbHBlclNpemUpIHsNCgkJCWhlbHBlci53aWR0aCh0aGlzLmN1cnJlbnRJdGVtLndpZHRoKCkpOw0KCQl9DQoJCWlmKCFoZWxwZXJbMF0uc3R5bGUuaGVpZ2h0IHx8IG8uZm9yY2VIZWxwZXJTaXplKSB7DQoJCQloZWxwZXIuaGVpZ2h0KHRoaXMuY3VycmVudEl0ZW0uaGVpZ2h0KCkpOw0KCQl9DQoNCgkJcmV0dXJuIGhlbHBlcjsNCg0KCX0sDQoNCglfYWRqdXN0T2Zmc2V0RnJvbUhlbHBlcjogZnVuY3Rpb24ob2JqKSB7DQoJCWlmICh0eXBlb2Ygb2JqID09PSAic3RyaW5nIikgew0KCQkJb2JqID0gb2JqLnNwbGl0KCIgIik7DQoJCX0NCgkJaWYgKCQuaXNBcnJheShvYmopKSB7DQoJCQlvYmogPSB7bGVmdDogK29ialswXSwgdG9wOiArb2JqWzFdIHx8IDB9Ow0KCQl9DQoJCWlmICgibGVmdCIgaW4gb2JqKSB7DQoJCQl0aGlzLm9mZnNldC5jbGljay5sZWZ0ID0gb2JqLmxlZnQgKyB0aGlzLm1hcmdpbnMubGVmdDsNCgkJfQ0KCQlpZiAoInJpZ2h0IiBpbiBvYmopIHsNCgkJCXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPSB0aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoIC0gb2JqLnJpZ2h0ICsgdGhpcy5tYXJnaW5zLmxlZnQ7DQoJCX0NCgkJaWYgKCJ0b3AiIGluIG9iaikgew0KCQkJdGhpcy5vZmZzZXQuY2xpY2sudG9wID0gb2JqLnRvcCArIHRoaXMubWFyZ2lucy50b3A7DQoJCX0NCgkJaWYgKCJib3R0b20iIGluIG9iaikgew0KCQkJdGhpcy5vZmZzZXQuY2xpY2sudG9wID0gdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLSBvYmouYm90dG9tICsgdGhpcy5tYXJnaW5zLnRvcDsNCgkJfQ0KCX0sDQoNCglfZ2V0UGFyZW50T2Zmc2V0OiBmdW5jdGlvbigpIHsNCg0KDQoJCS8vR2V0IHRoZSBvZmZzZXRQYXJlbnQgYW5kIGNhY2hlIGl0cyBwb3NpdGlvbg0KCQl0aGlzLm9mZnNldFBhcmVudCA9IHRoaXMuaGVscGVyLm9mZnNldFBhcmVudCgpOw0KCQl2YXIgcG8gPSB0aGlzLm9mZnNldFBhcmVudC5vZmZzZXQoKTsNCg0KCQkvLyBUaGlzIGlzIGEgc3BlY2lhbCBjYXNlIHdoZXJlIHdlIG5lZWQgdG8gbW9kaWZ5IGEgb2Zmc2V0IGNhbGN1bGF0ZWQgb24gc3RhcnQsIHNpbmNlIHRoZSBmb2xsb3dpbmcgaGFwcGVuZWQ6DQoJCS8vIDEuIFRoZSBwb3NpdGlvbiBvZiB0aGUgaGVscGVyIGlzIGFic29sdXRlLCBzbyBpdCdzIHBvc2l0aW9uIGlzIGNhbGN1bGF0ZWQgYmFzZWQgb24gdGhlIG5leHQgcG9zaXRpb25lZCBwYXJlbnQNCgkJLy8gMi4gVGhlIGFjdHVhbCBvZmZzZXQgcGFyZW50IGlzIGEgY2hpbGQgb2YgdGhlIHNjcm9sbCBwYXJlbnQsIGFuZCB0aGUgc2Nyb2xsIHBhcmVudCBpc24ndCB0aGUgZG9jdW1lbnQsIHdoaWNoIG1lYW5zIHRoYXQNCgkJLy8gICAgdGhlIHNjcm9sbCBpcyBpbmNsdWRlZCBpbiB0aGUgaW5pdGlhbCBjYWxjdWxhdGlvbiBvZiB0aGUgb2Zmc2V0IG9mIHRoZSBwYXJlbnQsIGFuZCBuZXZlciByZWNhbGN1bGF0ZWQgdXBvbiBkcmFnDQoJCWlmKHRoaXMuY3NzUG9zaXRpb24gPT09ICJhYnNvbHV0ZSIgJiYgdGhpcy5zY3JvbGxQYXJlbnRbMF0gIT09IGRvY3VtZW50ICYmICQuY29udGFpbnModGhpcy5zY3JvbGxQYXJlbnRbMF0sIHRoaXMub2Zmc2V0UGFyZW50WzBdKSkgew0KCQkJcG8ubGVmdCArPSB0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCk7DQoJCQlwby50b3AgKz0gdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCk7DQoJCX0NCg0KCQkvLyBUaGlzIG5lZWRzIHRvIGJlIGFjdHVhbGx5IGRvbmUgZm9yIGFsbCBicm93c2Vycywgc2luY2UgcGFnZVgvcGFnZVkgaW5jbHVkZXMgdGhpcyBpbmZvcm1hdGlvbg0KCQkvLyB3aXRoIGFuIHVnbHkgSUUgZml4DQoJCWlmKCB0aGlzLm9mZnNldFBhcmVudFswXSA9PT0gZG9jdW1lbnQuYm9keSB8fCAodGhpcy5vZmZzZXRQYXJlbnRbMF0udGFnTmFtZSAmJiB0aGlzLm9mZnNldFBhcmVudFswXS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICJodG1sIiAmJiAkLnVpLmllKSkgew0KCQkJcG8gPSB7IHRvcDogMCwgbGVmdDogMCB9Ow0KCQl9DQoNCgkJcmV0dXJuIHsNCgkJCXRvcDogcG8udG9wICsgKHBhcnNlSW50KHRoaXMub2Zmc2V0UGFyZW50LmNzcygiYm9yZGVyVG9wV2lkdGgiKSwxMCkgfHwgMCksDQoJCQlsZWZ0OiBwby5sZWZ0ICsgKHBhcnNlSW50KHRoaXMub2Zmc2V0UGFyZW50LmNzcygiYm9yZGVyTGVmdFdpZHRoIiksMTApIHx8IDApDQoJCX07DQoNCgl9LA0KDQoJX2dldFJlbGF0aXZlT2Zmc2V0OiBmdW5jdGlvbigpIHsNCg0KCQlpZih0aGlzLmNzc1Bvc2l0aW9uID09PSAicmVsYXRpdmUiKSB7DQoJCQl2YXIgcCA9IHRoaXMuY3VycmVudEl0ZW0ucG9zaXRpb24oKTsNCgkJCXJldHVybiB7DQoJCQkJdG9wOiBwLnRvcCAtIChwYXJzZUludCh0aGlzLmhlbHBlci5jc3MoInRvcCIpLDEwKSB8fCAwKSArIHRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpLA0KCQkJCWxlZnQ6IHAubGVmdCAtIChwYXJzZUludCh0aGlzLmhlbHBlci5jc3MoImxlZnQiKSwxMCkgfHwgMCkgKyB0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCkNCgkJCX07DQoJCX0gZWxzZSB7DQoJCQlyZXR1cm4geyB0b3A6IDAsIGxlZnQ6IDAgfTsNCgkJfQ0KDQoJfSwNCg0KCV9jYWNoZU1hcmdpbnM6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLm1hcmdpbnMgPSB7DQoJCQlsZWZ0OiAocGFyc2VJbnQodGhpcy5jdXJyZW50SXRlbS5jc3MoIm1hcmdpbkxlZnQiKSwxMCkgfHwgMCksDQoJCQl0b3A6IChwYXJzZUludCh0aGlzLmN1cnJlbnRJdGVtLmNzcygibWFyZ2luVG9wIiksMTApIHx8IDApDQoJCX07DQoJfSwNCg0KCV9jYWNoZUhlbHBlclByb3BvcnRpb25zOiBmdW5jdGlvbigpIHsNCgkJdGhpcy5oZWxwZXJQcm9wb3J0aW9ucyA9IHsNCgkJCXdpZHRoOiB0aGlzLmhlbHBlci5vdXRlcldpZHRoKCksDQoJCQloZWlnaHQ6IHRoaXMuaGVscGVyLm91dGVySGVpZ2h0KCkNCgkJfTsNCgl9LA0KDQoJX3NldENvbnRhaW5tZW50OiBmdW5jdGlvbigpIHsNCg0KCQl2YXIgY2UsIGNvLCBvdmVyLA0KCQkJbyA9IHRoaXMub3B0aW9uczsNCgkJaWYoby5jb250YWlubWVudCA9PT0gInBhcmVudCIpIHsNCgkJCW8uY29udGFpbm1lbnQgPSB0aGlzLmhlbHBlclswXS5wYXJlbnROb2RlOw0KCQl9DQoJCWlmKG8uY29udGFpbm1lbnQgPT09ICJkb2N1bWVudCIgfHwgby5jb250YWlubWVudCA9PT0gIndpbmRvdyIpIHsNCgkJCXRoaXMuY29udGFpbm1lbnQgPSBbDQoJCQkJMCAtIHRoaXMub2Zmc2V0LnJlbGF0aXZlLmxlZnQgLSB0aGlzLm9mZnNldC5wYXJlbnQubGVmdCwNCgkJCQkwIC0gdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wIC0gdGhpcy5vZmZzZXQucGFyZW50LnRvcCwNCgkJCQkkKG8uY29udGFpbm1lbnQgPT09ICJkb2N1bWVudCIgPyBkb2N1bWVudCA6IHdpbmRvdykud2lkdGgoKSAtIHRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGggLSB0aGlzLm1hcmdpbnMubGVmdCwNCgkJCQkoJChvLmNvbnRhaW5tZW50ID09PSAiZG9jdW1lbnQiID8gZG9jdW1lbnQgOiB3aW5kb3cpLmhlaWdodCgpIHx8IGRvY3VtZW50LmJvZHkucGFyZW50Tm9kZS5zY3JvbGxIZWlnaHQpIC0gdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLSB0aGlzLm1hcmdpbnMudG9wDQoJCQldOw0KCQl9DQoNCgkJaWYoISgvXihkb2N1bWVudHx3aW5kb3d8cGFyZW50KSQvKS50ZXN0KG8uY29udGFpbm1lbnQpKSB7DQoJCQljZSA9ICQoby5jb250YWlubWVudClbMF07DQoJCQljbyA9ICQoby5jb250YWlubWVudCkub2Zmc2V0KCk7DQoJCQlvdmVyID0gKCQoY2UpLmNzcygib3ZlcmZsb3ciKSAhPT0gImhpZGRlbiIpOw0KDQoJCQl0aGlzLmNvbnRhaW5tZW50ID0gWw0KCQkJCWNvLmxlZnQgKyAocGFyc2VJbnQoJChjZSkuY3NzKCJib3JkZXJMZWZ0V2lkdGgiKSwxMCkgfHwgMCkgKyAocGFyc2VJbnQoJChjZSkuY3NzKCJwYWRkaW5nTGVmdCIpLDEwKSB8fCAwKSAtIHRoaXMubWFyZ2lucy5sZWZ0LA0KCQkJCWNvLnRvcCArIChwYXJzZUludCgkKGNlKS5jc3MoImJvcmRlclRvcFdpZHRoIiksMTApIHx8IDApICsgKHBhcnNlSW50KCQoY2UpLmNzcygicGFkZGluZ1RvcCIpLDEwKSB8fCAwKSAtIHRoaXMubWFyZ2lucy50b3AsDQoJCQkJY28ubGVmdCsob3ZlciA/IE1hdGgubWF4KGNlLnNjcm9sbFdpZHRoLGNlLm9mZnNldFdpZHRoKSA6IGNlLm9mZnNldFdpZHRoKSAtIChwYXJzZUludCgkKGNlKS5jc3MoImJvcmRlckxlZnRXaWR0aCIpLDEwKSB8fCAwKSAtIChwYXJzZUludCgkKGNlKS5jc3MoInBhZGRpbmdSaWdodCIpLDEwKSB8fCAwKSAtIHRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGggLSB0aGlzLm1hcmdpbnMubGVmdCwNCgkJCQljby50b3ArKG92ZXIgPyBNYXRoLm1heChjZS5zY3JvbGxIZWlnaHQsY2Uub2Zmc2V0SGVpZ2h0KSA6IGNlLm9mZnNldEhlaWdodCkgLSAocGFyc2VJbnQoJChjZSkuY3NzKCJib3JkZXJUb3BXaWR0aCIpLDEwKSB8fCAwKSAtIChwYXJzZUludCgkKGNlKS5jc3MoInBhZGRpbmdCb3R0b20iKSwxMCkgfHwgMCkgLSB0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCAtIHRoaXMubWFyZ2lucy50b3ANCgkJCV07DQoJCX0NCg0KCX0sDQoNCglfY29udmVydFBvc2l0aW9uVG86IGZ1bmN0aW9uKGQsIHBvcykgew0KDQoJCWlmKCFwb3MpIHsNCgkJCXBvcyA9IHRoaXMucG9zaXRpb247DQoJCX0NCgkJdmFyIG1vZCA9IGQgPT09ICJhYnNvbHV0ZSIgPyAxIDogLTEsDQoJCQlzY3JvbGwgPSB0aGlzLmNzc1Bvc2l0aW9uID09PSAiYWJzb2x1dGUiICYmICEodGhpcy5zY3JvbGxQYXJlbnRbMF0gIT09IGRvY3VtZW50ICYmICQuY29udGFpbnModGhpcy5zY3JvbGxQYXJlbnRbMF0sIHRoaXMub2Zmc2V0UGFyZW50WzBdKSkgPyB0aGlzLm9mZnNldFBhcmVudCA6IHRoaXMuc2Nyb2xsUGFyZW50LA0KCQkJc2Nyb2xsSXNSb290Tm9kZSA9ICgvKGh0bWx8Ym9keSkvaSkudGVzdChzY3JvbGxbMF0udGFnTmFtZSk7DQoNCgkJcmV0dXJuIHsNCgkJCXRvcDogKA0KCQkJCXBvcy50b3AJKwkJCQkJCQkJCQkJCQkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24NCgkJCQl0aGlzLm9mZnNldC5yZWxhdGl2ZS50b3AgKiBtb2QgKwkJCQkJCQkJCQkvLyBPbmx5IGZvciByZWxhdGl2ZSBwb3NpdGlvbmVkIG5vZGVzOiBSZWxhdGl2ZSBvZmZzZXQgZnJvbSBlbGVtZW50IHRvIG9mZnNldCBwYXJlbnQNCgkJCQl0aGlzLm9mZnNldC5wYXJlbnQudG9wICogbW9kIC0JCQkJCQkJCQkJCS8vIFRoZSBvZmZzZXRQYXJlbnQncyBvZmZzZXQgd2l0aG91dCBib3JkZXJzIChvZmZzZXQgKyBib3JkZXIpDQoJCQkJKCAoIHRoaXMuY3NzUG9zaXRpb24gPT09ICJmaXhlZCIgPyAtdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCkgOiAoIHNjcm9sbElzUm9vdE5vZGUgPyAwIDogc2Nyb2xsLnNjcm9sbFRvcCgpICkgKSAqIG1vZCkNCgkJCSksDQoJCQlsZWZ0OiAoDQoJCQkJcG9zLmxlZnQgKwkJCQkJCQkJCQkJCQkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24NCgkJCQl0aGlzLm9mZnNldC5yZWxhdGl2ZS5sZWZ0ICogbW9kICsJCQkJCQkJCQkJLy8gT25seSBmb3IgcmVsYXRpdmUgcG9zaXRpb25lZCBub2RlczogUmVsYXRpdmUgb2Zmc2V0IGZyb20gZWxlbWVudCB0byBvZmZzZXQgcGFyZW50DQoJCQkJdGhpcy5vZmZzZXQucGFyZW50LmxlZnQgKiBtb2QJLQkJCQkJCQkJCQkvLyBUaGUgb2Zmc2V0UGFyZW50J3Mgb2Zmc2V0IHdpdGhvdXQgYm9yZGVycyAob2Zmc2V0ICsgYm9yZGVyKQ0KCQkJCSggKCB0aGlzLmNzc1Bvc2l0aW9uID09PSAiZml4ZWQiID8gLXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKSA6IHNjcm9sbElzUm9vdE5vZGUgPyAwIDogc2Nyb2xsLnNjcm9sbExlZnQoKSApICogbW9kKQ0KCQkJKQ0KCQl9Ow0KDQoJfSwNCg0KCV9nZW5lcmF0ZVBvc2l0aW9uOiBmdW5jdGlvbihldmVudCkgew0KDQoJCXZhciB0b3AsIGxlZnQsDQoJCQlvID0gdGhpcy5vcHRpb25zLA0KCQkJcGFnZVggPSBldmVudC5wYWdlWCwNCgkJCXBhZ2VZID0gZXZlbnQucGFnZVksDQoJCQlzY3JvbGwgPSB0aGlzLmNzc1Bvc2l0aW9uID09PSAiYWJzb2x1dGUiICYmICEodGhpcy5zY3JvbGxQYXJlbnRbMF0gIT09IGRvY3VtZW50ICYmICQuY29udGFpbnModGhpcy5zY3JvbGxQYXJlbnRbMF0sIHRoaXMub2Zmc2V0UGFyZW50WzBdKSkgPyB0aGlzLm9mZnNldFBhcmVudCA6IHRoaXMuc2Nyb2xsUGFyZW50LCBzY3JvbGxJc1Jvb3ROb2RlID0gKC8oaHRtbHxib2R5KS9pKS50ZXN0KHNjcm9sbFswXS50YWdOYW1lKTsNCg0KCQkvLyBUaGlzIGlzIGFub3RoZXIgdmVyeSB3ZWlyZCBzcGVjaWFsIGNhc2UgdGhhdCBvbmx5IGhhcHBlbnMgZm9yIHJlbGF0aXZlIGVsZW1lbnRzOg0KCQkvLyAxLiBJZiB0aGUgY3NzIHBvc2l0aW9uIGlzIHJlbGF0aXZlDQoJCS8vIDIuIGFuZCB0aGUgc2Nyb2xsIHBhcmVudCBpcyB0aGUgZG9jdW1lbnQgb3Igc2ltaWxhciB0byB0aGUgb2Zmc2V0IHBhcmVudA0KCQkvLyB3ZSBoYXZlIHRvIHJlZnJlc2ggdGhlIHJlbGF0aXZlIG9mZnNldCBkdXJpbmcgdGhlIHNjcm9sbCBzbyB0aGVyZSBhcmUgbm8ganVtcHMNCgkJaWYodGhpcy5jc3NQb3NpdGlvbiA9PT0gInJlbGF0aXZlIiAmJiAhKHRoaXMuc2Nyb2xsUGFyZW50WzBdICE9PSBkb2N1bWVudCAmJiB0aGlzLnNjcm9sbFBhcmVudFswXSAhPT0gdGhpcy5vZmZzZXRQYXJlbnRbMF0pKSB7DQoJCQl0aGlzLm9mZnNldC5yZWxhdGl2ZSA9IHRoaXMuX2dldFJlbGF0aXZlT2Zmc2V0KCk7DQoJCX0NCg0KCQkvKg0KCQkgKiAtIFBvc2l0aW9uIGNvbnN0cmFpbmluZyAtDQoJCSAqIENvbnN0cmFpbiB0aGUgcG9zaXRpb24gdG8gYSBtaXggb2YgZ3JpZCwgY29udGFpbm1lbnQuDQoJCSAqLw0KDQoJCWlmKHRoaXMub3JpZ2luYWxQb3NpdGlvbikgeyAvL0lmIHdlIGFyZSBub3QgZHJhZ2dpbmcgeWV0LCB3ZSB3b24ndCBjaGVjayBmb3Igb3B0aW9ucw0KDQoJCQlpZih0aGlzLmNvbnRhaW5tZW50KSB7DQoJCQkJaWYoZXZlbnQucGFnZVggLSB0aGlzLm9mZnNldC5jbGljay5sZWZ0IDwgdGhpcy5jb250YWlubWVudFswXSkgew0KCQkJCQlwYWdlWCA9IHRoaXMuY29udGFpbm1lbnRbMF0gKyB0aGlzLm9mZnNldC5jbGljay5sZWZ0Ow0KCQkJCX0NCgkJCQlpZihldmVudC5wYWdlWSAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA8IHRoaXMuY29udGFpbm1lbnRbMV0pIHsNCgkJCQkJcGFnZVkgPSB0aGlzLmNvbnRhaW5tZW50WzFdICsgdGhpcy5vZmZzZXQuY2xpY2sudG9wOw0KCQkJCX0NCgkJCQlpZihldmVudC5wYWdlWCAtIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPiB0aGlzLmNvbnRhaW5tZW50WzJdKSB7DQoJCQkJCXBhZ2VYID0gdGhpcy5jb250YWlubWVudFsyXSArIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ7DQoJCQkJfQ0KCQkJCWlmKGV2ZW50LnBhZ2VZIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wID4gdGhpcy5jb250YWlubWVudFszXSkgew0KCQkJCQlwYWdlWSA9IHRoaXMuY29udGFpbm1lbnRbM10gKyB0aGlzLm9mZnNldC5jbGljay50b3A7DQoJCQkJfQ0KCQkJfQ0KDQoJCQlpZihvLmdyaWQpIHsNCgkJCQl0b3AgPSB0aGlzLm9yaWdpbmFsUGFnZVkgKyBNYXRoLnJvdW5kKChwYWdlWSAtIHRoaXMub3JpZ2luYWxQYWdlWSkgLyBvLmdyaWRbMV0pICogby5ncmlkWzFdOw0KCQkJCXBhZ2VZID0gdGhpcy5jb250YWlubWVudCA/ICggKHRvcCAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA+PSB0aGlzLmNvbnRhaW5tZW50WzFdICYmIHRvcCAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA8PSB0aGlzLmNvbnRhaW5tZW50WzNdKSA/IHRvcCA6ICgodG9wIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wID49IHRoaXMuY29udGFpbm1lbnRbMV0pID8gdG9wIC0gby5ncmlkWzFdIDogdG9wICsgby5ncmlkWzFdKSkgOiB0b3A7DQoNCgkJCQlsZWZ0ID0gdGhpcy5vcmlnaW5hbFBhZ2VYICsgTWF0aC5yb3VuZCgocGFnZVggLSB0aGlzLm9yaWdpbmFsUGFnZVgpIC8gby5ncmlkWzBdKSAqIG8uZ3JpZFswXTsNCgkJCQlwYWdlWCA9IHRoaXMuY29udGFpbm1lbnQgPyAoIChsZWZ0IC0gdGhpcy5vZmZzZXQuY2xpY2subGVmdCA+PSB0aGlzLmNvbnRhaW5tZW50WzBdICYmIGxlZnQgLSB0aGlzLm9mZnNldC5jbGljay5sZWZ0IDw9IHRoaXMuY29udGFpbm1lbnRbMl0pID8gbGVmdCA6ICgobGVmdCAtIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPj0gdGhpcy5jb250YWlubWVudFswXSkgPyBsZWZ0IC0gby5ncmlkWzBdIDogbGVmdCArIG8uZ3JpZFswXSkpIDogbGVmdDsNCgkJCX0NCg0KCQl9DQoNCgkJcmV0dXJuIHsNCgkJCXRvcDogKA0KCQkJCXBhZ2VZIC0JCQkJCQkJCQkJCQkJCQkJLy8gVGhlIGFic29sdXRlIG1vdXNlIHBvc2l0aW9uDQoJCQkJdGhpcy5vZmZzZXQuY2xpY2sudG9wIC0JCQkJCQkJCQkJCQkJLy8gQ2xpY2sgb2Zmc2V0IChyZWxhdGl2ZSB0byB0aGUgZWxlbWVudCkNCgkJCQl0aGlzLm9mZnNldC5yZWxhdGl2ZS50b3AJLQkJCQkJCQkJCQkJLy8gT25seSBmb3IgcmVsYXRpdmUgcG9zaXRpb25lZCBub2RlczogUmVsYXRpdmUgb2Zmc2V0IGZyb20gZWxlbWVudCB0byBvZmZzZXQgcGFyZW50DQoJCQkJdGhpcy5vZmZzZXQucGFyZW50LnRvcCArCQkJCQkJCQkJCQkJLy8gVGhlIG9mZnNldFBhcmVudCdzIG9mZnNldCB3aXRob3V0IGJvcmRlcnMgKG9mZnNldCArIGJvcmRlcikNCgkJCQkoICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/IC10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKSA6ICggc2Nyb2xsSXNSb290Tm9kZSA/IDAgOiBzY3JvbGwuc2Nyb2xsVG9wKCkgKSApKQ0KCQkJKSwNCgkJCWxlZnQ6ICgNCgkJCQlwYWdlWCAtCQkJCQkJCQkJCQkJCQkJCS8vIFRoZSBhYnNvbHV0ZSBtb3VzZSBwb3NpdGlvbg0KCQkJCXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgLQkJCQkJCQkJCQkJCS8vIENsaWNrIG9mZnNldCAocmVsYXRpdmUgdG8gdGhlIGVsZW1lbnQpDQoJCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdAktCQkJCQkJCQkJCQkvLyBPbmx5IGZvciByZWxhdGl2ZSBwb3NpdGlvbmVkIG5vZGVzOiBSZWxhdGl2ZSBvZmZzZXQgZnJvbSBlbGVtZW50IHRvIG9mZnNldCBwYXJlbnQNCgkJCQl0aGlzLm9mZnNldC5wYXJlbnQubGVmdCArCQkJCQkJCQkJCQkJLy8gVGhlIG9mZnNldFBhcmVudCdzIG9mZnNldCB3aXRob3V0IGJvcmRlcnMgKG9mZnNldCArIGJvcmRlcikNCgkJCQkoICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/IC10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCkgOiBzY3JvbGxJc1Jvb3ROb2RlID8gMCA6IHNjcm9sbC5zY3JvbGxMZWZ0KCkgKSkNCgkJCSkNCgkJfTsNCg0KCX0sDQoNCglfcmVhcnJhbmdlOiBmdW5jdGlvbihldmVudCwgaSwgYSwgaGFyZFJlZnJlc2gpIHsNCg0KCQlhID8gYVswXS5hcHBlbmRDaGlsZCh0aGlzLnBsYWNlaG9sZGVyWzBdKSA6IGkuaXRlbVswXS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLnBsYWNlaG9sZGVyWzBdLCAodGhpcy5kaXJlY3Rpb24gPT09ICJkb3duIiA/IGkuaXRlbVswXSA6IGkuaXRlbVswXS5uZXh0U2libGluZykpOw0KDQoJCS8vVmFyaW91cyB0aGluZ3MgZG9uZSBoZXJlIHRvIGltcHJvdmUgdGhlIHBlcmZvcm1hbmNlOg0KCQkvLyAxLiB3ZSBjcmVhdGUgYSBzZXRUaW1lb3V0LCB0aGF0IGNhbGxzIHJlZnJlc2hQb3NpdGlvbnMNCgkJLy8gMi4gb24gdGhlIGluc3RhbmNlLCB3ZSBoYXZlIGEgY291bnRlciB2YXJpYWJsZSwgdGhhdCBnZXQncyBoaWdoZXIgYWZ0ZXIgZXZlcnkgYXBwZW5kDQoJCS8vIDMuIG9uIHRoZSBsb2NhbCBzY29wZSwgd2UgY29weSB0aGUgY291bnRlciB2YXJpYWJsZSwgYW5kIGNoZWNrIGluIHRoZSB0aW1lb3V0LCBpZiBpdCdzIHN0aWxsIHRoZSBzYW1lDQoJCS8vIDQuIHRoaXMgbGV0cyBvbmx5IHRoZSBsYXN0IGFkZGl0aW9uIHRvIHRoZSB0aW1lb3V0IHN0YWNrIHRocm91Z2gNCgkJdGhpcy5jb3VudGVyID0gdGhpcy5jb3VudGVyID8gKyt0aGlzLmNvdW50ZXIgOiAxOw0KCQl2YXIgY291bnRlciA9IHRoaXMuY291bnRlcjsNCg0KCQl0aGlzLl9kZWxheShmdW5jdGlvbigpIHsNCgkJCWlmKGNvdW50ZXIgPT09IHRoaXMuY291bnRlcikgew0KCQkJCXRoaXMucmVmcmVzaFBvc2l0aW9ucyghaGFyZFJlZnJlc2gpOyAvL1ByZWNvbXB1dGUgYWZ0ZXIgZWFjaCBET00gaW5zZXJ0aW9uLCBOT1Qgb24gbW91c2Vtb3ZlDQoJCQl9DQoJCX0pOw0KDQoJfSwNCg0KCV9jbGVhcjogZnVuY3Rpb24oZXZlbnQsIG5vUHJvcGFnYXRpb24pIHsNCg0KCQl0aGlzLnJldmVydGluZyA9IGZhbHNlOw0KCQkvLyBXZSBkZWxheSBhbGwgZXZlbnRzIHRoYXQgaGF2ZSB0byBiZSB0cmlnZ2VyZWQgdG8gYWZ0ZXIgdGhlIHBvaW50IHdoZXJlIHRoZSBwbGFjZWhvbGRlciBoYXMgYmVlbiByZW1vdmVkIGFuZA0KCQkvLyBldmVyeXRoaW5nIGVsc2Ugbm9ybWFsaXplZCBhZ2Fpbg0KCQl2YXIgaSwNCgkJCWRlbGF5ZWRUcmlnZ2VycyA9IFtdOw0KDQoJCS8vIFdlIGZpcnN0IGhhdmUgdG8gdXBkYXRlIHRoZSBkb20gcG9zaXRpb24gb2YgdGhlIGFjdHVhbCBjdXJyZW50SXRlbQ0KCQkvLyBOb3RlOiBkb24ndCBkbyBpdCBpZiB0aGUgY3VycmVudCBpdGVtIGlzIGFscmVhZHkgcmVtb3ZlZCAoYnkgYSB1c2VyKSwgb3IgaXQgZ2V0cyByZWFwcGVuZGVkIChzZWUgIzQwODgpDQoJCWlmKCF0aGlzLl9ub0ZpbmFsU29ydCAmJiB0aGlzLmN1cnJlbnRJdGVtLnBhcmVudCgpLmxlbmd0aCkgew0KCQkJdGhpcy5wbGFjZWhvbGRlci5iZWZvcmUodGhpcy5jdXJyZW50SXRlbSk7DQoJCX0NCgkJdGhpcy5fbm9GaW5hbFNvcnQgPSBudWxsOw0KDQoJCWlmKHRoaXMuaGVscGVyWzBdID09PSB0aGlzLmN1cnJlbnRJdGVtWzBdKSB7DQoJCQlmb3IoaSBpbiB0aGlzLl9zdG9yZWRDU1MpIHsNCgkJCQlpZih0aGlzLl9zdG9yZWRDU1NbaV0gPT09ICJhdXRvIiB8fCB0aGlzLl9zdG9yZWRDU1NbaV0gPT09ICJzdGF0aWMiKSB7DQoJCQkJCXRoaXMuX3N0b3JlZENTU1tpXSA9ICIiOw0KCQkJCX0NCgkJCX0NCgkJCXRoaXMuY3VycmVudEl0ZW0uY3NzKHRoaXMuX3N0b3JlZENTUykucmVtb3ZlQ2xhc3MoInVpLXNvcnRhYmxlLWhlbHBlciIpOw0KCQl9IGVsc2Ugew0KCQkJdGhpcy5jdXJyZW50SXRlbS5zaG93KCk7DQoJCX0NCg0KCQlpZih0aGlzLmZyb21PdXRzaWRlICYmICFub1Byb3BhZ2F0aW9uKSB7DQoJCQlkZWxheWVkVHJpZ2dlcnMucHVzaChmdW5jdGlvbihldmVudCkgeyB0aGlzLl90cmlnZ2VyKCJyZWNlaXZlIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCh0aGlzLmZyb21PdXRzaWRlKSk7IH0pOw0KCQl9DQoJCWlmKCh0aGlzLmZyb21PdXRzaWRlIHx8IHRoaXMuZG9tUG9zaXRpb24ucHJldiAhPT0gdGhpcy5jdXJyZW50SXRlbS5wcmV2KCkubm90KCIudWktc29ydGFibGUtaGVscGVyIilbMF0gfHwgdGhpcy5kb21Qb3NpdGlvbi5wYXJlbnQgIT09IHRoaXMuY3VycmVudEl0ZW0ucGFyZW50KClbMF0pICYmICFub1Byb3BhZ2F0aW9uKSB7DQoJCQlkZWxheWVkVHJpZ2dlcnMucHVzaChmdW5jdGlvbihldmVudCkgeyB0aGlzLl90cmlnZ2VyKCJ1cGRhdGUiLCBldmVudCwgdGhpcy5fdWlIYXNoKCkpOyB9KTsgLy9UcmlnZ2VyIHVwZGF0ZSBjYWxsYmFjayBpZiB0aGUgRE9NIHBvc2l0aW9uIGhhcyBjaGFuZ2VkDQoJCX0NCg0KCQkvLyBDaGVjayBpZiB0aGUgaXRlbXMgQ29udGFpbmVyIGhhcyBDaGFuZ2VkIGFuZCB0cmlnZ2VyIGFwcHJvcHJpYXRlDQoJCS8vIGV2ZW50cy4NCgkJaWYgKHRoaXMgIT09IHRoaXMuY3VycmVudENvbnRhaW5lcikgew0KCQkJaWYoIW5vUHJvcGFnYXRpb24pIHsNCgkJCQlkZWxheWVkVHJpZ2dlcnMucHVzaChmdW5jdGlvbihldmVudCkgeyB0aGlzLl90cmlnZ2VyKCJyZW1vdmUiLCBldmVudCwgdGhpcy5fdWlIYXNoKCkpOyB9KTsNCgkJCQlkZWxheWVkVHJpZ2dlcnMucHVzaCgoZnVuY3Rpb24oYykgeyByZXR1cm4gZnVuY3Rpb24oZXZlbnQpIHsgYy5fdHJpZ2dlcigicmVjZWl2ZSIsIGV2ZW50LCB0aGlzLl91aUhhc2godGhpcykpOyB9OyAgfSkuY2FsbCh0aGlzLCB0aGlzLmN1cnJlbnRDb250YWluZXIpKTsNCgkJCQlkZWxheWVkVHJpZ2dlcnMucHVzaCgoZnVuY3Rpb24oYykgeyByZXR1cm4gZnVuY3Rpb24oZXZlbnQpIHsgYy5fdHJpZ2dlcigidXBkYXRlIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCh0aGlzKSk7ICB9OyB9KS5jYWxsKHRoaXMsIHRoaXMuY3VycmVudENvbnRhaW5lcikpOw0KCQkJfQ0KCQl9DQoNCg0KCQkvL1Bvc3QgZXZlbnRzIHRvIGNvbnRhaW5lcnMNCgkJZnVuY3Rpb24gZGVsYXlFdmVudCggdHlwZSwgaW5zdGFuY2UsIGNvbnRhaW5lciApIHsNCgkJCXJldHVybiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQkJY29udGFpbmVyLl90cmlnZ2VyKCB0eXBlLCBldmVudCwgaW5zdGFuY2UuX3VpSGFzaCggaW5zdGFuY2UgKSApOw0KCQkJfTsNCgkJfQ0KCQlmb3IgKGkgPSB0aGlzLmNvbnRhaW5lcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pew0KCQkJaWYgKCFub1Byb3BhZ2F0aW9uKSB7DQoJCQkJZGVsYXllZFRyaWdnZXJzLnB1c2goIGRlbGF5RXZlbnQoICJkZWFjdGl2YXRlIiwgdGhpcywgdGhpcy5jb250YWluZXJzWyBpIF0gKSApOw0KCQkJfQ0KCQkJaWYodGhpcy5jb250YWluZXJzW2ldLmNvbnRhaW5lckNhY2hlLm92ZXIpIHsNCgkJCQlkZWxheWVkVHJpZ2dlcnMucHVzaCggZGVsYXlFdmVudCggIm91dCIsIHRoaXMsIHRoaXMuY29udGFpbmVyc1sgaSBdICkgKTsNCgkJCQl0aGlzLmNvbnRhaW5lcnNbaV0uY29udGFpbmVyQ2FjaGUub3ZlciA9IDA7DQoJCQl9DQoJCX0NCg0KCQkvL0RvIHdoYXQgd2FzIG9yaWdpbmFsbHkgaW4gcGx1Z2lucw0KCQlpZiAoIHRoaXMuc3RvcmVkQ3Vyc29yICkgew0KCQkJdGhpcy5kb2N1bWVudC5maW5kKCAiYm9keSIgKS5jc3MoICJjdXJzb3IiLCB0aGlzLnN0b3JlZEN1cnNvciApOw0KCQkJdGhpcy5zdG9yZWRTdHlsZXNoZWV0LnJlbW92ZSgpOw0KCQl9DQoJCWlmKHRoaXMuX3N0b3JlZE9wYWNpdHkpIHsNCgkJCXRoaXMuaGVscGVyLmNzcygib3BhY2l0eSIsIHRoaXMuX3N0b3JlZE9wYWNpdHkpOw0KCQl9DQoJCWlmKHRoaXMuX3N0b3JlZFpJbmRleCkgew0KCQkJdGhpcy5oZWxwZXIuY3NzKCJ6SW5kZXgiLCB0aGlzLl9zdG9yZWRaSW5kZXggPT09ICJhdXRvIiA/ICIiIDogdGhpcy5fc3RvcmVkWkluZGV4KTsNCgkJfQ0KDQoJCXRoaXMuZHJhZ2dpbmcgPSBmYWxzZTsNCg0KCQlpZighbm9Qcm9wYWdhdGlvbikgew0KCQkJdGhpcy5fdHJpZ2dlcigiYmVmb3JlU3RvcCIsIGV2ZW50LCB0aGlzLl91aUhhc2goKSk7DQoJCX0NCg0KCQkvLyQodGhpcy5wbGFjZWhvbGRlclswXSkucmVtb3ZlKCk7IHdvdWxkIGhhdmUgYmVlbiB0aGUgalF1ZXJ5IHdheSAtIHVuZm9ydHVuYXRlbHksIGl0IHVuYmluZHMgQUxMIGV2ZW50cyBmcm9tIHRoZSBvcmlnaW5hbCBub2RlIQ0KCQl0aGlzLnBsYWNlaG9sZGVyWzBdLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5wbGFjZWhvbGRlclswXSk7DQoNCgkJaWYgKCAhdGhpcy5jYW5jZWxIZWxwZXJSZW1vdmFsICkgew0KCQkJaWYgKCB0aGlzLmhlbHBlclsgMCBdICE9PSB0aGlzLmN1cnJlbnRJdGVtWyAwIF0gKSB7DQoJCQkJdGhpcy5oZWxwZXIucmVtb3ZlKCk7DQoJCQl9DQoJCQl0aGlzLmhlbHBlciA9IG51bGw7DQoJCX0NCg0KCQlpZighbm9Qcm9wYWdhdGlvbikgew0KCQkJZm9yIChpPTA7IGkgPCBkZWxheWVkVHJpZ2dlcnMubGVuZ3RoOyBpKyspIHsNCgkJCQlkZWxheWVkVHJpZ2dlcnNbaV0uY2FsbCh0aGlzLCBldmVudCk7DQoJCQl9IC8vVHJpZ2dlciBhbGwgZGVsYXllZCBldmVudHMNCgkJCXRoaXMuX3RyaWdnZXIoInN0b3AiLCBldmVudCwgdGhpcy5fdWlIYXNoKCkpOw0KCQl9DQoNCgkJdGhpcy5mcm9tT3V0c2lkZSA9IGZhbHNlOw0KCQlyZXR1cm4gIXRoaXMuY2FuY2VsSGVscGVyUmVtb3ZhbDsNCg0KCX0sDQoNCglfdHJpZ2dlcjogZnVuY3Rpb24oKSB7DQoJCWlmICgkLldpZGdldC5wcm90b3R5cGUuX3RyaWdnZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSA9PT0gZmFsc2UpIHsNCgkJCXRoaXMuY2FuY2VsKCk7DQoJCX0NCgl9LA0KDQoJX3VpSGFzaDogZnVuY3Rpb24oX2luc3QpIHsNCgkJdmFyIGluc3QgPSBfaW5zdCB8fCB0aGlzOw0KCQlyZXR1cm4gew0KCQkJaGVscGVyOiBpbnN0LmhlbHBlciwNCgkJCXBsYWNlaG9sZGVyOiBpbnN0LnBsYWNlaG9sZGVyIHx8ICQoW10pLA0KCQkJcG9zaXRpb246IGluc3QucG9zaXRpb24sDQoJCQlvcmlnaW5hbFBvc2l0aW9uOiBpbnN0Lm9yaWdpbmFsUG9zaXRpb24sDQoJCQlvZmZzZXQ6IGluc3QucG9zaXRpb25BYnMsDQoJCQlpdGVtOiBpbnN0LmN1cnJlbnRJdGVtLA0KCQkJc2VuZGVyOiBfaW5zdCA/IF9pbnN0LmVsZW1lbnQgOiBudWxsDQoJCX07DQoJfQ0KDQp9KTsNCg0KDQovKiENCiAqIGpRdWVyeSBVSSBTcGlubmVyIDEuMTEuMg0KICogaHR0cDovL2pxdWVyeXVpLmNvbQ0KICoNCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4NCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UNCiAqDQogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9zcGlubmVyLw0KICovDQoNCg0KZnVuY3Rpb24gc3Bpbm5lcl9tb2RpZmllciggZm4gKSB7DQoJcmV0dXJuIGZ1bmN0aW9uKCkgew0KCQl2YXIgcHJldmlvdXMgPSB0aGlzLmVsZW1lbnQudmFsKCk7DQoJCWZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsNCgkJdGhpcy5fcmVmcmVzaCgpOw0KCQlpZiAoIHByZXZpb3VzICE9PSB0aGlzLmVsZW1lbnQudmFsKCkgKSB7DQoJCQl0aGlzLl90cmlnZ2VyKCAiY2hhbmdlIiApOw0KCQl9DQoJfTsNCn0NCg0KdmFyIHNwaW5uZXIgPSAkLndpZGdldCggInVpLnNwaW5uZXIiLCB7DQoJdmVyc2lvbjogIjEuMTEuMiIsDQoJZGVmYXVsdEVsZW1lbnQ6ICI8aW5wdXQ+IiwNCgl3aWRnZXRFdmVudFByZWZpeDogInNwaW4iLA0KCW9wdGlvbnM6IHsNCgkJY3VsdHVyZTogbnVsbCwNCgkJaWNvbnM6IHsNCgkJCWRvd246ICJ1aS1pY29uLXRyaWFuZ2xlLTEtcyIsDQoJCQl1cDogInVpLWljb24tdHJpYW5nbGUtMS1uIg0KCQl9LA0KCQlpbmNyZW1lbnRhbDogdHJ1ZSwNCgkJbWF4OiBudWxsLA0KCQltaW46IG51bGwsDQoJCW51bWJlckZvcm1hdDogbnVsbCwNCgkJcGFnZTogMTAsDQoJCXN0ZXA6IDEsDQoNCgkJY2hhbmdlOiBudWxsLA0KCQlzcGluOiBudWxsLA0KCQlzdGFydDogbnVsbCwNCgkJc3RvcDogbnVsbA0KCX0sDQoNCglfY3JlYXRlOiBmdW5jdGlvbigpIHsNCgkJLy8gaGFuZGxlIHN0cmluZyB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHBhcnNlZA0KCQl0aGlzLl9zZXRPcHRpb24oICJtYXgiLCB0aGlzLm9wdGlvbnMubWF4ICk7DQoJCXRoaXMuX3NldE9wdGlvbiggIm1pbiIsIHRoaXMub3B0aW9ucy5taW4gKTsNCgkJdGhpcy5fc2V0T3B0aW9uKCAic3RlcCIsIHRoaXMub3B0aW9ucy5zdGVwICk7DQoNCgkJLy8gT25seSBmb3JtYXQgaWYgdGhlcmUgaXMgYSB2YWx1ZSwgcHJldmVudHMgdGhlIGZpZWxkIGZyb20gYmVpbmcgbWFya2VkDQoJCS8vIGFzIGludmFsaWQgaW4gRmlyZWZveCwgc2VlICM5NTczLg0KCQlpZiAoIHRoaXMudmFsdWUoKSAhPT0gIiIgKSB7DQoJCQkvLyBGb3JtYXQgdGhlIHZhbHVlLCBidXQgZG9uJ3QgY29uc3RyYWluLg0KCQkJdGhpcy5fdmFsdWUoIHRoaXMuZWxlbWVudC52YWwoKSwgdHJ1ZSApOw0KCQl9DQoNCgkJdGhpcy5fZHJhdygpOw0KCQl0aGlzLl9vbiggdGhpcy5fZXZlbnRzICk7DQoJCXRoaXMuX3JlZnJlc2goKTsNCg0KCQkvLyB0dXJuaW5nIG9mZiBhdXRvY29tcGxldGUgcHJldmVudHMgdGhlIGJyb3dzZXIgZnJvbSByZW1lbWJlcmluZyB0aGUNCgkJLy8gdmFsdWUgd2hlbiBuYXZpZ2F0aW5nIHRocm91Z2ggaGlzdG9yeSwgc28gd2UgcmUtZW5hYmxlIGF1dG9jb21wbGV0ZQ0KCQkvLyBpZiB0aGUgcGFnZSBpcyB1bmxvYWRlZCBiZWZvcmUgdGhlIHdpZGdldCBpcyBkZXN0cm95ZWQuICM3NzkwDQoJCXRoaXMuX29uKCB0aGlzLndpbmRvdywgew0KCQkJYmVmb3JldW5sb2FkOiBmdW5jdGlvbigpIHsNCgkJCQl0aGlzLmVsZW1lbnQucmVtb3ZlQXR0ciggImF1dG9jb21wbGV0ZSIgKTsNCgkJCX0NCgkJfSk7DQoJfSwNCg0KCV9nZXRDcmVhdGVPcHRpb25zOiBmdW5jdGlvbigpIHsNCgkJdmFyIG9wdGlvbnMgPSB7fSwNCgkJCWVsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7DQoNCgkJJC5lYWNoKCBbICJtaW4iLCAibWF4IiwgInN0ZXAiIF0sIGZ1bmN0aW9uKCBpLCBvcHRpb24gKSB7DQoJCQl2YXIgdmFsdWUgPSBlbGVtZW50LmF0dHIoIG9wdGlvbiApOw0KCQkJaWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICYmIHZhbHVlLmxlbmd0aCApIHsNCgkJCQlvcHRpb25zWyBvcHRpb24gXSA9IHZhbHVlOw0KCQkJfQ0KCQl9KTsNCg0KCQlyZXR1cm4gb3B0aW9uczsNCgl9LA0KDQoJX2V2ZW50czogew0KCQlrZXlkb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQlpZiAoIHRoaXMuX3N0YXJ0KCBldmVudCApICYmIHRoaXMuX2tleWRvd24oIGV2ZW50ICkgKSB7DQoJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCgkJCX0NCgkJfSwNCgkJa2V5dXA6ICJfc3RvcCIsDQoJCWZvY3VzOiBmdW5jdGlvbigpIHsNCgkJCXRoaXMucHJldmlvdXMgPSB0aGlzLmVsZW1lbnQudmFsKCk7DQoJCX0sDQoJCWJsdXI6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCWlmICggdGhpcy5jYW5jZWxCbHVyICkgew0KCQkJCWRlbGV0ZSB0aGlzLmNhbmNlbEJsdXI7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KDQoJCQl0aGlzLl9zdG9wKCk7DQoJCQl0aGlzLl9yZWZyZXNoKCk7DQoJCQlpZiAoIHRoaXMucHJldmlvdXMgIT09IHRoaXMuZWxlbWVudC52YWwoKSApIHsNCgkJCQl0aGlzLl90cmlnZ2VyKCAiY2hhbmdlIiwgZXZlbnQgKTsNCgkJCX0NCgkJfSwNCgkJbW91c2V3aGVlbDogZnVuY3Rpb24oIGV2ZW50LCBkZWx0YSApIHsNCgkJCWlmICggIWRlbHRhICkgew0KCQkJCXJldHVybjsNCgkJCX0NCgkJCWlmICggIXRoaXMuc3Bpbm5pbmcgJiYgIXRoaXMuX3N0YXJ0KCBldmVudCApICkgew0KCQkJCXJldHVybiBmYWxzZTsNCgkJCX0NCg0KCQkJdGhpcy5fc3BpbiggKGRlbHRhID4gMCA/IDEgOiAtMSkgKiB0aGlzLm9wdGlvbnMuc3RlcCwgZXZlbnQgKTsNCgkJCWNsZWFyVGltZW91dCggdGhpcy5tb3VzZXdoZWVsVGltZXIgKTsNCgkJCXRoaXMubW91c2V3aGVlbFRpbWVyID0gdGhpcy5fZGVsYXkoZnVuY3Rpb24oKSB7DQoJCQkJaWYgKCB0aGlzLnNwaW5uaW5nICkgew0KCQkJCQl0aGlzLl9zdG9wKCBldmVudCApOw0KCQkJCX0NCgkJCX0sIDEwMCApOw0KCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCgkJfSwNCgkJIm1vdXNlZG93biAudWktc3Bpbm5lci1idXR0b24iOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQl2YXIgcHJldmlvdXM7DQoNCgkJCS8vIFdlIG5ldmVyIHdhbnQgdGhlIGJ1dHRvbnMgdG8gaGF2ZSBmb2N1czsgd2hlbmV2ZXIgdGhlIHVzZXIgaXMNCgkJCS8vIGludGVyYWN0aW5nIHdpdGggdGhlIHNwaW5uZXIsIHRoZSBmb2N1cyBzaG91bGQgYmUgb24gdGhlIGlucHV0Lg0KCQkJLy8gSWYgdGhlIGlucHV0IGlzIGZvY3VzZWQgdGhlbiB0aGlzLnByZXZpb3VzIGlzIHByb3Blcmx5IHNldCBmcm9tDQoJCQkvLyB3aGVuIHRoZSBpbnB1dCBmaXJzdCByZWNlaXZlZCBmb2N1cy4gSWYgdGhlIGlucHV0IGlzIG5vdCBmb2N1c2VkDQoJCQkvLyB0aGVuIHdlIG5lZWQgdG8gc2V0IHRoaXMucHJldmlvdXMgYmFzZWQgb24gdGhlIHZhbHVlIGJlZm9yZSBzcGlubmluZy4NCgkJCXByZXZpb3VzID0gdGhpcy5lbGVtZW50WzBdID09PSB0aGlzLmRvY3VtZW50WzBdLmFjdGl2ZUVsZW1lbnQgPw0KCQkJCXRoaXMucHJldmlvdXMgOiB0aGlzLmVsZW1lbnQudmFsKCk7DQoJCQlmdW5jdGlvbiBjaGVja0ZvY3VzKCkgew0KCQkJCXZhciBpc0FjdGl2ZSA9IHRoaXMuZWxlbWVudFswXSA9PT0gdGhpcy5kb2N1bWVudFswXS5hY3RpdmVFbGVtZW50Ow0KCQkJCWlmICggIWlzQWN0aXZlICkgew0KCQkJCQl0aGlzLmVsZW1lbnQuZm9jdXMoKTsNCgkJCQkJdGhpcy5wcmV2aW91cyA9IHByZXZpb3VzOw0KCQkJCQkvLyBzdXBwb3J0OiBJRQ0KCQkJCQkvLyBJRSBzZXRzIGZvY3VzIGFzeW5jaHJvbm91c2x5LCBzbyB3ZSBuZWVkIHRvIGNoZWNrIGlmIGZvY3VzDQoJCQkJCS8vIG1vdmVkIG9mZiBvZiB0aGUgaW5wdXQgYmVjYXVzZSB0aGUgdXNlciBjbGlja2VkIG9uIHRoZSBidXR0b24uDQoJCQkJCXRoaXMuX2RlbGF5KGZ1bmN0aW9uKCkgew0KCQkJCQkJdGhpcy5wcmV2aW91cyA9IHByZXZpb3VzOw0KCQkJCQl9KTsNCgkJCQl9DQoJCQl9DQoNCgkJCS8vIGVuc3VyZSBmb2N1cyBpcyBvbiAob3Igc3RheXMgb24pIHRoZSB0ZXh0IGZpZWxkDQoJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQkJY2hlY2tGb2N1cy5jYWxsKCB0aGlzICk7DQoNCgkJCS8vIHN1cHBvcnQ6IElFDQoJCQkvLyBJRSBkb2Vzbid0IHByZXZlbnQgbW92aW5nIGZvY3VzIGV2ZW4gd2l0aCBldmVudC5wcmV2ZW50RGVmYXVsdCgpDQoJCQkvLyBzbyB3ZSBzZXQgYSBmbGFnIHRvIGtub3cgd2hlbiB3ZSBzaG91bGQgaWdub3JlIHRoZSBibHVyIGV2ZW50DQoJCQkvLyBhbmQgY2hlY2sgKGFnYWluKSBpZiBmb2N1cyBtb3ZlZCBvZmYgb2YgdGhlIGlucHV0Lg0KCQkJdGhpcy5jYW5jZWxCbHVyID0gdHJ1ZTsNCgkJCXRoaXMuX2RlbGF5KGZ1bmN0aW9uKCkgew0KCQkJCWRlbGV0ZSB0aGlzLmNhbmNlbEJsdXI7DQoJCQkJY2hlY2tGb2N1cy5jYWxsKCB0aGlzICk7DQoJCQl9KTsNCg0KCQkJaWYgKCB0aGlzLl9zdGFydCggZXZlbnQgKSA9PT0gZmFsc2UgKSB7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KDQoJCQl0aGlzLl9yZXBlYXQoIG51bGwsICQoIGV2ZW50LmN1cnJlbnRUYXJnZXQgKS5oYXNDbGFzcyggInVpLXNwaW5uZXItdXAiICkgPyAxIDogLTEsIGV2ZW50ICk7DQoJCX0sDQoJCSJtb3VzZXVwIC51aS1zcGlubmVyLWJ1dHRvbiI6ICJfc3RvcCIsDQoJCSJtb3VzZWVudGVyIC51aS1zcGlubmVyLWJ1dHRvbiI6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCS8vIGJ1dHRvbiB3aWxsIGFkZCB1aS1zdGF0ZS1hY3RpdmUgaWYgbW91c2Ugd2FzIGRvd24gd2hpbGUgbW91c2VsZWF2ZSBhbmQga2VwdCBkb3duDQoJCQlpZiAoICEkKCBldmVudC5jdXJyZW50VGFyZ2V0ICkuaGFzQ2xhc3MoICJ1aS1zdGF0ZS1hY3RpdmUiICkgKSB7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KDQoJCQlpZiAoIHRoaXMuX3N0YXJ0KCBldmVudCApID09PSBmYWxzZSApIHsNCgkJCQlyZXR1cm4gZmFsc2U7DQoJCQl9DQoJCQl0aGlzLl9yZXBlYXQoIG51bGwsICQoIGV2ZW50LmN1cnJlbnRUYXJnZXQgKS5oYXNDbGFzcyggInVpLXNwaW5uZXItdXAiICkgPyAxIDogLTEsIGV2ZW50ICk7DQoJCX0sDQoJCS8vIFRPRE86IGRvIHdlIHJlYWxseSB3YW50IHRvIGNvbnNpZGVyIHRoaXMgYSBzdG9wPw0KCQkvLyBzaG91bGRuJ3Qgd2UganVzdCBzdG9wIHRoZSByZXBlYXRlciBhbmQgd2FpdCB1bnRpbCBtb3VzZXVwIGJlZm9yZQ0KCQkvLyB3ZSB0cmlnZ2VyIHRoZSBzdG9wIGV2ZW50Pw0KCQkibW91c2VsZWF2ZSAudWktc3Bpbm5lci1idXR0b24iOiAiX3N0b3AiDQoJfSwNCg0KCV9kcmF3OiBmdW5jdGlvbigpIHsNCgkJdmFyIHVpU3Bpbm5lciA9IHRoaXMudWlTcGlubmVyID0gdGhpcy5lbGVtZW50DQoJCQkuYWRkQ2xhc3MoICJ1aS1zcGlubmVyLWlucHV0IiApDQoJCQkuYXR0ciggImF1dG9jb21wbGV0ZSIsICJvZmYiICkNCgkJCS53cmFwKCB0aGlzLl91aVNwaW5uZXJIdG1sKCkgKQ0KCQkJLnBhcmVudCgpDQoJCQkJLy8gYWRkIGJ1dHRvbnMNCgkJCQkuYXBwZW5kKCB0aGlzLl9idXR0b25IdG1sKCkgKTsNCg0KCQl0aGlzLmVsZW1lbnQuYXR0ciggInJvbGUiLCAic3BpbmJ1dHRvbiIgKTsNCg0KCQkvLyBidXR0b24gYmluZGluZ3MNCgkJdGhpcy5idXR0b25zID0gdWlTcGlubmVyLmZpbmQoICIudWktc3Bpbm5lci1idXR0b24iICkNCgkJCS5hdHRyKCAidGFiSW5kZXgiLCAtMSApDQoJCQkuYnV0dG9uKCkNCgkJCS5yZW1vdmVDbGFzcyggInVpLWNvcm5lci1hbGwiICk7DQoNCgkJLy8gSUUgNiBkb2Vzbid0IHVuZGVyc3RhbmQgaGVpZ2h0OiA1MCUgZm9yIHRoZSBidXR0b25zDQoJCS8vIHVubGVzcyB0aGUgd3JhcHBlciBoYXMgYW4gZXhwbGljaXQgaGVpZ2h0DQoJCWlmICggdGhpcy5idXR0b25zLmhlaWdodCgpID4gTWF0aC5jZWlsKCB1aVNwaW5uZXIuaGVpZ2h0KCkgKiAwLjUgKSAmJg0KCQkJCXVpU3Bpbm5lci5oZWlnaHQoKSA+IDAgKSB7DQoJCQl1aVNwaW5uZXIuaGVpZ2h0KCB1aVNwaW5uZXIuaGVpZ2h0KCkgKTsNCgkJfQ0KDQoJCS8vIGRpc2FibGUgc3Bpbm5lciBpZiBlbGVtZW50IHdhcyBhbHJlYWR5IGRpc2FibGVkDQoJCWlmICggdGhpcy5vcHRpb25zLmRpc2FibGVkICkgew0KCQkJdGhpcy5kaXNhYmxlKCk7DQoJCX0NCgl9LA0KDQoJX2tleWRvd246IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdmFyIG9wdGlvbnMgPSB0aGlzLm9wdGlvbnMsDQoJCQlrZXlDb2RlID0gJC51aS5rZXlDb2RlOw0KDQoJCXN3aXRjaCAoIGV2ZW50LmtleUNvZGUgKSB7DQoJCWNhc2Uga2V5Q29kZS5VUDoNCgkJCXRoaXMuX3JlcGVhdCggbnVsbCwgMSwgZXZlbnQgKTsNCgkJCXJldHVybiB0cnVlOw0KCQljYXNlIGtleUNvZGUuRE9XTjoNCgkJCXRoaXMuX3JlcGVhdCggbnVsbCwgLTEsIGV2ZW50ICk7DQoJCQlyZXR1cm4gdHJ1ZTsNCgkJY2FzZSBrZXlDb2RlLlBBR0VfVVA6DQoJCQl0aGlzLl9yZXBlYXQoIG51bGwsIG9wdGlvbnMucGFnZSwgZXZlbnQgKTsNCgkJCXJldHVybiB0cnVlOw0KCQljYXNlIGtleUNvZGUuUEFHRV9ET1dOOg0KCQkJdGhpcy5fcmVwZWF0KCBudWxsLCAtb3B0aW9ucy5wYWdlLCBldmVudCApOw0KCQkJcmV0dXJuIHRydWU7DQoJCX0NCg0KCQlyZXR1cm4gZmFsc2U7DQoJfSwNCg0KCV91aVNwaW5uZXJIdG1sOiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuICI8c3BhbiBjbGFzcz0ndWktc3Bpbm5lciB1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktY29ybmVyLWFsbCc+PC9zcGFuPiI7DQoJfSwNCg0KCV9idXR0b25IdG1sOiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuICIiICsNCgkJCSI8YSBjbGFzcz0ndWktc3Bpbm5lci1idXR0b24gdWktc3Bpbm5lci11cCB1aS1jb3JuZXItdHInPiIgKw0KCQkJCSI8c3BhbiBjbGFzcz0ndWktaWNvbiAiICsgdGhpcy5vcHRpb25zLmljb25zLnVwICsgIic+JiM5NjUwOzwvc3Bhbj4iICsNCgkJCSI8L2E+IiArDQoJCQkiPGEgY2xhc3M9J3VpLXNwaW5uZXItYnV0dG9uIHVpLXNwaW5uZXItZG93biB1aS1jb3JuZXItYnInPiIgKw0KCQkJCSI8c3BhbiBjbGFzcz0ndWktaWNvbiAiICsgdGhpcy5vcHRpb25zLmljb25zLmRvd24gKyAiJz4mIzk2NjA7PC9zcGFuPiIgKw0KCQkJIjwvYT4iOw0KCX0sDQoNCglfc3RhcnQ6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJaWYgKCAhdGhpcy5zcGlubmluZyAmJiB0aGlzLl90cmlnZ2VyKCAic3RhcnQiLCBldmVudCApID09PSBmYWxzZSApIHsNCgkJCXJldHVybiBmYWxzZTsNCgkJfQ0KDQoJCWlmICggIXRoaXMuY291bnRlciApIHsNCgkJCXRoaXMuY291bnRlciA9IDE7DQoJCX0NCgkJdGhpcy5zcGlubmluZyA9IHRydWU7DQoJCXJldHVybiB0cnVlOw0KCX0sDQoNCglfcmVwZWF0OiBmdW5jdGlvbiggaSwgc3RlcHMsIGV2ZW50ICkgew0KCQlpID0gaSB8fCA1MDA7DQoNCgkJY2xlYXJUaW1lb3V0KCB0aGlzLnRpbWVyICk7DQoJCXRoaXMudGltZXIgPSB0aGlzLl9kZWxheShmdW5jdGlvbigpIHsNCgkJCXRoaXMuX3JlcGVhdCggNDAsIHN0ZXBzLCBldmVudCApOw0KCQl9LCBpICk7DQoNCgkJdGhpcy5fc3Bpbiggc3RlcHMgKiB0aGlzLm9wdGlvbnMuc3RlcCwgZXZlbnQgKTsNCgl9LA0KDQoJX3NwaW46IGZ1bmN0aW9uKCBzdGVwLCBldmVudCApIHsNCgkJdmFyIHZhbHVlID0gdGhpcy52YWx1ZSgpIHx8IDA7DQoNCgkJaWYgKCAhdGhpcy5jb3VudGVyICkgew0KCQkJdGhpcy5jb3VudGVyID0gMTsNCgkJfQ0KDQoJCXZhbHVlID0gdGhpcy5fYWRqdXN0VmFsdWUoIHZhbHVlICsgc3RlcCAqIHRoaXMuX2luY3JlbWVudCggdGhpcy5jb3VudGVyICkgKTsNCg0KCQlpZiAoICF0aGlzLnNwaW5uaW5nIHx8IHRoaXMuX3RyaWdnZXIoICJzcGluIiwgZXZlbnQsIHsgdmFsdWU6IHZhbHVlIH0gKSAhPT0gZmFsc2UpIHsNCgkJCXRoaXMuX3ZhbHVlKCB2YWx1ZSApOw0KCQkJdGhpcy5jb3VudGVyKys7DQoJCX0NCgl9LA0KDQoJX2luY3JlbWVudDogZnVuY3Rpb24oIGkgKSB7DQoJCXZhciBpbmNyZW1lbnRhbCA9IHRoaXMub3B0aW9ucy5pbmNyZW1lbnRhbDsNCg0KCQlpZiAoIGluY3JlbWVudGFsICkgew0KCQkJcmV0dXJuICQuaXNGdW5jdGlvbiggaW5jcmVtZW50YWwgKSA/DQoJCQkJaW5jcmVtZW50YWwoIGkgKSA6DQoJCQkJTWF0aC5mbG9vciggaSAqIGkgKiBpIC8gNTAwMDAgLSBpICogaSAvIDUwMCArIDE3ICogaSAvIDIwMCArIDEgKTsNCgkJfQ0KDQoJCXJldHVybiAxOw0KCX0sDQoNCglfcHJlY2lzaW9uOiBmdW5jdGlvbigpIHsNCgkJdmFyIHByZWNpc2lvbiA9IHRoaXMuX3ByZWNpc2lvbk9mKCB0aGlzLm9wdGlvbnMuc3RlcCApOw0KCQlpZiAoIHRoaXMub3B0aW9ucy5taW4gIT09IG51bGwgKSB7DQoJCQlwcmVjaXNpb24gPSBNYXRoLm1heCggcHJlY2lzaW9uLCB0aGlzLl9wcmVjaXNpb25PZiggdGhpcy5vcHRpb25zLm1pbiApICk7DQoJCX0NCgkJcmV0dXJuIHByZWNpc2lvbjsNCgl9LA0KDQoJX3ByZWNpc2lvbk9mOiBmdW5jdGlvbiggbnVtICkgew0KCQl2YXIgc3RyID0gbnVtLnRvU3RyaW5nKCksDQoJCQlkZWNpbWFsID0gc3RyLmluZGV4T2YoICIuIiApOw0KCQlyZXR1cm4gZGVjaW1hbCA9PT0gLTEgPyAwIDogc3RyLmxlbmd0aCAtIGRlY2ltYWwgLSAxOw0KCX0sDQoNCglfYWRqdXN0VmFsdWU6IGZ1bmN0aW9uKCB2YWx1ZSApIHsNCgkJdmFyIGJhc2UsIGFib3ZlTWluLA0KCQkJb3B0aW9ucyA9IHRoaXMub3B0aW9uczsNCg0KCQkvLyBtYWtlIHN1cmUgd2UncmUgYXQgYSB2YWxpZCBzdGVwDQoJCS8vIC0gZmluZCBvdXQgd2hlcmUgd2UgYXJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIChtaW4gb3IgMCkNCgkJYmFzZSA9IG9wdGlvbnMubWluICE9PSBudWxsID8gb3B0aW9ucy5taW4gOiAwOw0KCQlhYm92ZU1pbiA9IHZhbHVlIC0gYmFzZTsNCgkJLy8gLSByb3VuZCB0byB0aGUgbmVhcmVzdCBzdGVwDQoJCWFib3ZlTWluID0gTWF0aC5yb3VuZChhYm92ZU1pbiAvIG9wdGlvbnMuc3RlcCkgKiBvcHRpb25zLnN0ZXA7DQoJCS8vIC0gcm91bmRpbmcgaXMgYmFzZWQgb24gMCwgc28gYWRqdXN0IGJhY2sgdG8gb3VyIGJhc2UNCgkJdmFsdWUgPSBiYXNlICsgYWJvdmVNaW47DQoNCgkJLy8gZml4IHByZWNpc2lvbiBmcm9tIGJhZCBKUyBmbG9hdGluZyBwb2ludCBtYXRoDQoJCXZhbHVlID0gcGFyc2VGbG9hdCggdmFsdWUudG9GaXhlZCggdGhpcy5fcHJlY2lzaW9uKCkgKSApOw0KDQoJCS8vIGNsYW1wIHRoZSB2YWx1ZQ0KCQlpZiAoIG9wdGlvbnMubWF4ICE9PSBudWxsICYmIHZhbHVlID4gb3B0aW9ucy5tYXgpIHsNCgkJCXJldHVybiBvcHRpb25zLm1heDsNCgkJfQ0KCQlpZiAoIG9wdGlvbnMubWluICE9PSBudWxsICYmIHZhbHVlIDwgb3B0aW9ucy5taW4gKSB7DQoJCQlyZXR1cm4gb3B0aW9ucy5taW47DQoJCX0NCg0KCQlyZXR1cm4gdmFsdWU7DQoJfSwNCg0KCV9zdG9wOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCWlmICggIXRoaXMuc3Bpbm5pbmcgKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQljbGVhclRpbWVvdXQoIHRoaXMudGltZXIgKTsNCgkJY2xlYXJUaW1lb3V0KCB0aGlzLm1vdXNld2hlZWxUaW1lciApOw0KCQl0aGlzLmNvdW50ZXIgPSAwOw0KCQl0aGlzLnNwaW5uaW5nID0gZmFsc2U7DQoJCXRoaXMuX3RyaWdnZXIoICJzdG9wIiwgZXZlbnQgKTsNCgl9LA0KDQoJX3NldE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7DQoJCWlmICgga2V5ID09PSAiY3VsdHVyZSIgfHwga2V5ID09PSAibnVtYmVyRm9ybWF0IiApIHsNCgkJCXZhciBwcmV2VmFsdWUgPSB0aGlzLl9wYXJzZSggdGhpcy5lbGVtZW50LnZhbCgpICk7DQoJCQl0aGlzLm9wdGlvbnNbIGtleSBdID0gdmFsdWU7DQoJCQl0aGlzLmVsZW1lbnQudmFsKCB0aGlzLl9mb3JtYXQoIHByZXZWYWx1ZSApICk7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQlpZiAoIGtleSA9PT0gIm1heCIgfHwga2V5ID09PSAibWluIiB8fCBrZXkgPT09ICJzdGVwIiApIHsNCgkJCWlmICggdHlwZW9mIHZhbHVlID09PSAic3RyaW5nIiApIHsNCgkJCQl2YWx1ZSA9IHRoaXMuX3BhcnNlKCB2YWx1ZSApOw0KCQkJfQ0KCQl9DQoJCWlmICgga2V5ID09PSAiaWNvbnMiICkgew0KCQkJdGhpcy5idXR0b25zLmZpcnN0KCkuZmluZCggIi51aS1pY29uIiApDQoJCQkJLnJlbW92ZUNsYXNzKCB0aGlzLm9wdGlvbnMuaWNvbnMudXAgKQ0KCQkJCS5hZGRDbGFzcyggdmFsdWUudXAgKTsNCgkJCXRoaXMuYnV0dG9ucy5sYXN0KCkuZmluZCggIi51aS1pY29uIiApDQoJCQkJLnJlbW92ZUNsYXNzKCB0aGlzLm9wdGlvbnMuaWNvbnMuZG93biApDQoJCQkJLmFkZENsYXNzKCB2YWx1ZS5kb3duICk7DQoJCX0NCg0KCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOw0KDQoJCWlmICgga2V5ID09PSAiZGlzYWJsZWQiICkgew0KCQkJdGhpcy53aWRnZXQoKS50b2dnbGVDbGFzcyggInVpLXN0YXRlLWRpc2FibGVkIiwgISF2YWx1ZSApOw0KCQkJdGhpcy5lbGVtZW50LnByb3AoICJkaXNhYmxlZCIsICEhdmFsdWUgKTsNCgkJCXRoaXMuYnV0dG9ucy5idXR0b24oIHZhbHVlID8gImRpc2FibGUiIDogImVuYWJsZSIgKTsNCgkJfQ0KCX0sDQoNCglfc2V0T3B0aW9uczogc3Bpbm5lcl9tb2RpZmllcihmdW5jdGlvbiggb3B0aW9ucyApIHsNCgkJdGhpcy5fc3VwZXIoIG9wdGlvbnMgKTsNCgl9KSwNCg0KCV9wYXJzZTogZnVuY3Rpb24oIHZhbCApIHsNCgkJaWYgKCB0eXBlb2YgdmFsID09PSAic3RyaW5nIiAmJiB2YWwgIT09ICIiICkgew0KCQkJdmFsID0gd2luZG93Lkdsb2JhbGl6ZSAmJiB0aGlzLm9wdGlvbnMubnVtYmVyRm9ybWF0ID8NCgkJCQlHbG9iYWxpemUucGFyc2VGbG9hdCggdmFsLCAxMCwgdGhpcy5vcHRpb25zLmN1bHR1cmUgKSA6ICt2YWw7DQoJCX0NCgkJcmV0dXJuIHZhbCA9PT0gIiIgfHwgaXNOYU4oIHZhbCApID8gbnVsbCA6IHZhbDsNCgl9LA0KDQoJX2Zvcm1hdDogZnVuY3Rpb24oIHZhbHVlICkgew0KCQlpZiAoIHZhbHVlID09PSAiIiApIHsNCgkJCXJldHVybiAiIjsNCgkJfQ0KCQlyZXR1cm4gd2luZG93Lkdsb2JhbGl6ZSAmJiB0aGlzLm9wdGlvbnMubnVtYmVyRm9ybWF0ID8NCgkJCUdsb2JhbGl6ZS5mb3JtYXQoIHZhbHVlLCB0aGlzLm9wdGlvbnMubnVtYmVyRm9ybWF0LCB0aGlzLm9wdGlvbnMuY3VsdHVyZSApIDoNCgkJCXZhbHVlOw0KCX0sDQoNCglfcmVmcmVzaDogZnVuY3Rpb24oKSB7DQoJCXRoaXMuZWxlbWVudC5hdHRyKHsNCgkJCSJhcmlhLXZhbHVlbWluIjogdGhpcy5vcHRpb25zLm1pbiwNCgkJCSJhcmlhLXZhbHVlbWF4IjogdGhpcy5vcHRpb25zLm1heCwNCgkJCS8vIFRPRE86IHdoYXQgc2hvdWxkIHdlIGRvIHdpdGggdmFsdWVzIHRoYXQgY2FuJ3QgYmUgcGFyc2VkPw0KCQkJImFyaWEtdmFsdWVub3ciOiB0aGlzLl9wYXJzZSggdGhpcy5lbGVtZW50LnZhbCgpICkNCgkJfSk7DQoJfSwNCg0KCWlzVmFsaWQ6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdmFsdWUgPSB0aGlzLnZhbHVlKCk7DQoNCgkJLy8gbnVsbCBpcyBpbnZhbGlkDQoJCWlmICggdmFsdWUgPT09IG51bGwgKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCg0KCQkvLyBpZiB2YWx1ZSBnZXRzIGFkanVzdGVkLCBpdCdzIGludmFsaWQNCgkJcmV0dXJuIHZhbHVlID09PSB0aGlzLl9hZGp1c3RWYWx1ZSggdmFsdWUgKTsNCgl9LA0KDQoJLy8gdXBkYXRlIHRoZSB2YWx1ZSB3aXRob3V0IHRyaWdnZXJpbmcgY2hhbmdlDQoJX3ZhbHVlOiBmdW5jdGlvbiggdmFsdWUsIGFsbG93QW55ICkgew0KCQl2YXIgcGFyc2VkOw0KCQlpZiAoIHZhbHVlICE9PSAiIiApIHsNCgkJCXBhcnNlZCA9IHRoaXMuX3BhcnNlKCB2YWx1ZSApOw0KCQkJaWYgKCBwYXJzZWQgIT09IG51bGwgKSB7DQoJCQkJaWYgKCAhYWxsb3dBbnkgKSB7DQoJCQkJCXBhcnNlZCA9IHRoaXMuX2FkanVzdFZhbHVlKCBwYXJzZWQgKTsNCgkJCQl9DQoJCQkJdmFsdWUgPSB0aGlzLl9mb3JtYXQoIHBhcnNlZCApOw0KCQkJfQ0KCQl9DQoJCXRoaXMuZWxlbWVudC52YWwoIHZhbHVlICk7DQoJCXRoaXMuX3JlZnJlc2goKTsNCgl9LA0KDQoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgew0KCQl0aGlzLmVsZW1lbnQNCgkJCS5yZW1vdmVDbGFzcyggInVpLXNwaW5uZXItaW5wdXQiICkNCgkJCS5wcm9wKCAiZGlzYWJsZWQiLCBmYWxzZSApDQoJCQkucmVtb3ZlQXR0ciggImF1dG9jb21wbGV0ZSIgKQ0KCQkJLnJlbW92ZUF0dHIoICJyb2xlIiApDQoJCQkucmVtb3ZlQXR0ciggImFyaWEtdmFsdWVtaW4iICkNCgkJCS5yZW1vdmVBdHRyKCAiYXJpYS12YWx1ZW1heCIgKQ0KCQkJLnJlbW92ZUF0dHIoICJhcmlhLXZhbHVlbm93IiApOw0KCQl0aGlzLnVpU3Bpbm5lci5yZXBsYWNlV2l0aCggdGhpcy5lbGVtZW50ICk7DQoJfSwNCg0KCXN0ZXBVcDogc3Bpbm5lcl9tb2RpZmllcihmdW5jdGlvbiggc3RlcHMgKSB7DQoJCXRoaXMuX3N0ZXBVcCggc3RlcHMgKTsNCgl9KSwNCglfc3RlcFVwOiBmdW5jdGlvbiggc3RlcHMgKSB7DQoJCWlmICggdGhpcy5fc3RhcnQoKSApIHsNCgkJCXRoaXMuX3NwaW4oIChzdGVwcyB8fCAxKSAqIHRoaXMub3B0aW9ucy5zdGVwICk7DQoJCQl0aGlzLl9zdG9wKCk7DQoJCX0NCgl9LA0KDQoJc3RlcERvd246IHNwaW5uZXJfbW9kaWZpZXIoZnVuY3Rpb24oIHN0ZXBzICkgew0KCQl0aGlzLl9zdGVwRG93biggc3RlcHMgKTsNCgl9KSwNCglfc3RlcERvd246IGZ1bmN0aW9uKCBzdGVwcyApIHsNCgkJaWYgKCB0aGlzLl9zdGFydCgpICkgew0KCQkJdGhpcy5fc3BpbiggKHN0ZXBzIHx8IDEpICogLXRoaXMub3B0aW9ucy5zdGVwICk7DQoJCQl0aGlzLl9zdG9wKCk7DQoJCX0NCgl9LA0KDQoJcGFnZVVwOiBzcGlubmVyX21vZGlmaWVyKGZ1bmN0aW9uKCBwYWdlcyApIHsNCgkJdGhpcy5fc3RlcFVwKCAocGFnZXMgfHwgMSkgKiB0aGlzLm9wdGlvbnMucGFnZSApOw0KCX0pLA0KDQoJcGFnZURvd246IHNwaW5uZXJfbW9kaWZpZXIoZnVuY3Rpb24oIHBhZ2VzICkgew0KCQl0aGlzLl9zdGVwRG93biggKHBhZ2VzIHx8IDEpICogdGhpcy5vcHRpb25zLnBhZ2UgKTsNCgl9KSwNCg0KCXZhbHVlOiBmdW5jdGlvbiggbmV3VmFsICkgew0KCQlpZiAoICFhcmd1bWVudHMubGVuZ3RoICkgew0KCQkJcmV0dXJuIHRoaXMuX3BhcnNlKCB0aGlzLmVsZW1lbnQudmFsKCkgKTsNCgkJfQ0KCQlzcGlubmVyX21vZGlmaWVyKCB0aGlzLl92YWx1ZSApLmNhbGwoIHRoaXMsIG5ld1ZhbCApOw0KCX0sDQoNCgl3aWRnZXQ6IGZ1bmN0aW9uKCkgew0KCQlyZXR1cm4gdGhpcy51aVNwaW5uZXI7DQoJfQ0KfSk7DQoNCg0KLyohDQogKiBqUXVlcnkgVUkgVGFicyAxLjExLjINCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20NCiAqDQogKiBDb3B5cmlnaHQgMjAxNCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzDQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuDQogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlDQogKg0KICogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vdGFicy8NCiAqLw0KDQoNCnZhciB0YWJzID0gJC53aWRnZXQoICJ1aS50YWJzIiwgew0KCXZlcnNpb246ICIxLjExLjIiLA0KCWRlbGF5OiAzMDAsDQoJb3B0aW9uczogew0KCQlhY3RpdmU6IG51bGwsDQoJCWNvbGxhcHNpYmxlOiBmYWxzZSwNCgkJZXZlbnQ6ICJjbGljayIsDQoJCWhlaWdodFN0eWxlOiAiY29udGVudCIsDQoJCWhpZGU6IG51bGwsDQoJCXNob3c6IG51bGwsDQoNCgkJLy8gY2FsbGJhY2tzDQoJCWFjdGl2YXRlOiBudWxsLA0KCQliZWZvcmVBY3RpdmF0ZTogbnVsbCwNCgkJYmVmb3JlTG9hZDogbnVsbCwNCgkJbG9hZDogbnVsbA0KCX0sDQoNCglfaXNMb2NhbDogKGZ1bmN0aW9uKCkgew0KCQl2YXIgcmhhc2ggPSAvIy4qJC87DQoNCgkJcmV0dXJuIGZ1bmN0aW9uKCBhbmNob3IgKSB7DQoJCQl2YXIgYW5jaG9yVXJsLCBsb2NhdGlvblVybDsNCg0KCQkJLy8gc3VwcG9ydDogSUU3DQoJCQkvLyBJRTcgZG9lc24ndCBub3JtYWxpemUgdGhlIGhyZWYgcHJvcGVydHkgd2hlbiBzZXQgdmlhIHNjcmlwdCAoIzkzMTcpDQoJCQlhbmNob3IgPSBhbmNob3IuY2xvbmVOb2RlKCBmYWxzZSApOw0KDQoJCQlhbmNob3JVcmwgPSBhbmNob3IuaHJlZi5yZXBsYWNlKCByaGFzaCwgIiIgKTsNCgkJCWxvY2F0aW9uVXJsID0gbG9jYXRpb24uaHJlZi5yZXBsYWNlKCByaGFzaCwgIiIgKTsNCg0KCQkJLy8gZGVjb2RpbmcgbWF5IHRocm93IGFuIGVycm9yIGlmIHRoZSBVUkwgaXNuJ3QgVVRGLTggKCM5NTE4KQ0KCQkJdHJ5IHsNCgkJCQlhbmNob3JVcmwgPSBkZWNvZGVVUklDb21wb25lbnQoIGFuY2hvclVybCApOw0KCQkJfSBjYXRjaCAoIGVycm9yICkge30NCgkJCXRyeSB7DQoJCQkJbG9jYXRpb25VcmwgPSBkZWNvZGVVUklDb21wb25lbnQoIGxvY2F0aW9uVXJsICk7DQoJCQl9IGNhdGNoICggZXJyb3IgKSB7fQ0KDQoJCQlyZXR1cm4gYW5jaG9yLmhhc2gubGVuZ3RoID4gMSAmJiBhbmNob3JVcmwgPT09IGxvY2F0aW9uVXJsOw0KCQl9Ow0KCX0pKCksDQoNCglfY3JlYXRlOiBmdW5jdGlvbigpIHsNCgkJdmFyIHRoYXQgPSB0aGlzLA0KCQkJb3B0aW9ucyA9IHRoaXMub3B0aW9uczsNCg0KCQl0aGlzLnJ1bm5pbmcgPSBmYWxzZTsNCg0KCQl0aGlzLmVsZW1lbnQNCgkJCS5hZGRDbGFzcyggInVpLXRhYnMgdWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWNvcm5lci1hbGwiICkNCgkJCS50b2dnbGVDbGFzcyggInVpLXRhYnMtY29sbGFwc2libGUiLCBvcHRpb25zLmNvbGxhcHNpYmxlICk7DQoNCgkJdGhpcy5fcHJvY2Vzc1RhYnMoKTsNCgkJb3B0aW9ucy5hY3RpdmUgPSB0aGlzLl9pbml0aWFsQWN0aXZlKCk7DQoNCgkJLy8gVGFrZSBkaXNhYmxpbmcgdGFicyB2aWEgY2xhc3MgYXR0cmlidXRlIGZyb20gSFRNTA0KCQkvLyBpbnRvIGFjY291bnQgYW5kIHVwZGF0ZSBvcHRpb24gcHJvcGVybHkuDQoJCWlmICggJC5pc0FycmF5KCBvcHRpb25zLmRpc2FibGVkICkgKSB7DQoJCQlvcHRpb25zLmRpc2FibGVkID0gJC51bmlxdWUoIG9wdGlvbnMuZGlzYWJsZWQuY29uY2F0KA0KCQkJCSQubWFwKCB0aGlzLnRhYnMuZmlsdGVyKCAiLnVpLXN0YXRlLWRpc2FibGVkIiApLCBmdW5jdGlvbiggbGkgKSB7DQoJCQkJCXJldHVybiB0aGF0LnRhYnMuaW5kZXgoIGxpICk7DQoJCQkJfSkNCgkJCSkgKS5zb3J0KCk7DQoJCX0NCg0KCQkvLyBjaGVjayBmb3IgbGVuZ3RoIGF2b2lkcyBlcnJvciB3aGVuIGluaXRpYWxpemluZyBlbXB0eSBsaXN0DQoJCWlmICggdGhpcy5vcHRpb25zLmFjdGl2ZSAhPT0gZmFsc2UgJiYgdGhpcy5hbmNob3JzLmxlbmd0aCApIHsNCgkJCXRoaXMuYWN0aXZlID0gdGhpcy5fZmluZEFjdGl2ZSggb3B0aW9ucy5hY3RpdmUgKTsNCgkJfSBlbHNlIHsNCgkJCXRoaXMuYWN0aXZlID0gJCgpOw0KCQl9DQoNCgkJdGhpcy5fcmVmcmVzaCgpOw0KDQoJCWlmICggdGhpcy5hY3RpdmUubGVuZ3RoICkgew0KCQkJdGhpcy5sb2FkKCBvcHRpb25zLmFjdGl2ZSApOw0KCQl9DQoJfSwNCg0KCV9pbml0aWFsQWN0aXZlOiBmdW5jdGlvbigpIHsNCgkJdmFyIGFjdGl2ZSA9IHRoaXMub3B0aW9ucy5hY3RpdmUsDQoJCQljb2xsYXBzaWJsZSA9IHRoaXMub3B0aW9ucy5jb2xsYXBzaWJsZSwNCgkJCWxvY2F0aW9uSGFzaCA9IGxvY2F0aW9uLmhhc2guc3Vic3RyaW5nKCAxICk7DQoNCgkJaWYgKCBhY3RpdmUgPT09IG51bGwgKSB7DQoJCQkvLyBjaGVjayB0aGUgZnJhZ21lbnQgaWRlbnRpZmllciBpbiB0aGUgVVJMDQoJCQlpZiAoIGxvY2F0aW9uSGFzaCApIHsNCgkJCQl0aGlzLnRhYnMuZWFjaChmdW5jdGlvbiggaSwgdGFiICkgew0KCQkJCQlpZiAoICQoIHRhYiApLmF0dHIoICJhcmlhLWNvbnRyb2xzIiApID09PSBsb2NhdGlvbkhhc2ggKSB7DQoJCQkJCQlhY3RpdmUgPSBpOw0KCQkJCQkJcmV0dXJuIGZhbHNlOw0KCQkJCQl9DQoJCQkJfSk7DQoJCQl9DQoNCgkJCS8vIGNoZWNrIGZvciBhIHRhYiBtYXJrZWQgYWN0aXZlIHZpYSBhIGNsYXNzDQoJCQlpZiAoIGFjdGl2ZSA9PT0gbnVsbCApIHsNCgkJCQlhY3RpdmUgPSB0aGlzLnRhYnMuaW5kZXgoIHRoaXMudGFicy5maWx0ZXIoICIudWktdGFicy1hY3RpdmUiICkgKTsNCgkJCX0NCg0KCQkJLy8gbm8gYWN0aXZlIHRhYiwgc2V0IHRvIGZhbHNlDQoJCQlpZiAoIGFjdGl2ZSA9PT0gbnVsbCB8fCBhY3RpdmUgPT09IC0xICkgew0KCQkJCWFjdGl2ZSA9IHRoaXMudGFicy5sZW5ndGggPyAwIDogZmFsc2U7DQoJCQl9DQoJCX0NCg0KCQkvLyBoYW5kbGUgbnVtYmVyczogbmVnYXRpdmUsIG91dCBvZiByYW5nZQ0KCQlpZiAoIGFjdGl2ZSAhPT0gZmFsc2UgKSB7DQoJCQlhY3RpdmUgPSB0aGlzLnRhYnMuaW5kZXgoIHRoaXMudGFicy5lcSggYWN0aXZlICkgKTsNCgkJCWlmICggYWN0aXZlID09PSAtMSApIHsNCgkJCQlhY3RpdmUgPSBjb2xsYXBzaWJsZSA/IGZhbHNlIDogMDsNCgkJCX0NCgkJfQ0KDQoJCS8vIGRvbid0IGFsbG93IGNvbGxhcHNpYmxlOiBmYWxzZSBhbmQgYWN0aXZlOiBmYWxzZQ0KCQlpZiAoICFjb2xsYXBzaWJsZSAmJiBhY3RpdmUgPT09IGZhbHNlICYmIHRoaXMuYW5jaG9ycy5sZW5ndGggKSB7DQoJCQlhY3RpdmUgPSAwOw0KCQl9DQoNCgkJcmV0dXJuIGFjdGl2ZTsNCgl9LA0KDQoJX2dldENyZWF0ZUV2ZW50RGF0YTogZnVuY3Rpb24oKSB7DQoJCXJldHVybiB7DQoJCQl0YWI6IHRoaXMuYWN0aXZlLA0KCQkJcGFuZWw6ICF0aGlzLmFjdGl2ZS5sZW5ndGggPyAkKCkgOiB0aGlzLl9nZXRQYW5lbEZvclRhYiggdGhpcy5hY3RpdmUgKQ0KCQl9Ow0KCX0sDQoNCglfdGFiS2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl2YXIgZm9jdXNlZFRhYiA9ICQoIHRoaXMuZG9jdW1lbnRbMF0uYWN0aXZlRWxlbWVudCApLmNsb3Nlc3QoICJsaSIgKSwNCgkJCXNlbGVjdGVkSW5kZXggPSB0aGlzLnRhYnMuaW5kZXgoIGZvY3VzZWRUYWIgKSwNCgkJCWdvaW5nRm9yd2FyZCA9IHRydWU7DQoNCgkJaWYgKCB0aGlzLl9oYW5kbGVQYWdlTmF2KCBldmVudCApICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJc3dpdGNoICggZXZlbnQua2V5Q29kZSApIHsNCgkJCWNhc2UgJC51aS5rZXlDb2RlLlJJR0hUOg0KCQkJY2FzZSAkLnVpLmtleUNvZGUuRE9XTjoNCgkJCQlzZWxlY3RlZEluZGV4Kys7DQoJCQkJYnJlYWs7DQoJCQljYXNlICQudWkua2V5Q29kZS5VUDoNCgkJCWNhc2UgJC51aS5rZXlDb2RlLkxFRlQ6DQoJCQkJZ29pbmdGb3J3YXJkID0gZmFsc2U7DQoJCQkJc2VsZWN0ZWRJbmRleC0tOw0KCQkJCWJyZWFrOw0KCQkJY2FzZSAkLnVpLmtleUNvZGUuRU5EOg0KCQkJCXNlbGVjdGVkSW5kZXggPSB0aGlzLmFuY2hvcnMubGVuZ3RoIC0gMTsNCgkJCQlicmVhazsNCgkJCWNhc2UgJC51aS5rZXlDb2RlLkhPTUU6DQoJCQkJc2VsZWN0ZWRJbmRleCA9IDA7DQoJCQkJYnJlYWs7DQoJCQljYXNlICQudWkua2V5Q29kZS5TUEFDRToNCgkJCQkvLyBBY3RpdmF0ZSBvbmx5LCBubyBjb2xsYXBzaW5nDQoJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCgkJCQljbGVhclRpbWVvdXQoIHRoaXMuYWN0aXZhdGluZyApOw0KCQkJCXRoaXMuX2FjdGl2YXRlKCBzZWxlY3RlZEluZGV4ICk7DQoJCQkJcmV0dXJuOw0KCQkJY2FzZSAkLnVpLmtleUNvZGUuRU5URVI6DQoJCQkJLy8gVG9nZ2xlIChjYW5jZWwgZGVsYXllZCBhY3RpdmF0aW9uLCBhbGxvdyBjb2xsYXBzaW5nKQ0KCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQoJCQkJY2xlYXJUaW1lb3V0KCB0aGlzLmFjdGl2YXRpbmcgKTsNCgkJCQkvLyBEZXRlcm1pbmUgaWYgd2Ugc2hvdWxkIGNvbGxhcHNlIG9yIGFjdGl2YXRlDQoJCQkJdGhpcy5fYWN0aXZhdGUoIHNlbGVjdGVkSW5kZXggPT09IHRoaXMub3B0aW9ucy5hY3RpdmUgPyBmYWxzZSA6IHNlbGVjdGVkSW5kZXggKTsNCgkJCQlyZXR1cm47DQoJCQlkZWZhdWx0Og0KCQkJCXJldHVybjsNCgkJfQ0KDQoJCS8vIEZvY3VzIHRoZSBhcHByb3ByaWF0ZSB0YWIsIGJhc2VkIG9uIHdoaWNoIGtleSB3YXMgcHJlc3NlZA0KCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KCQljbGVhclRpbWVvdXQoIHRoaXMuYWN0aXZhdGluZyApOw0KCQlzZWxlY3RlZEluZGV4ID0gdGhpcy5fZm9jdXNOZXh0VGFiKCBzZWxlY3RlZEluZGV4LCBnb2luZ0ZvcndhcmQgKTsNCg0KCQkvLyBOYXZpZ2F0aW5nIHdpdGggY29udHJvbCBrZXkgd2lsbCBwcmV2ZW50IGF1dG9tYXRpYyBhY3RpdmF0aW9uDQoJCWlmICggIWV2ZW50LmN0cmxLZXkgKSB7DQoJCQkvLyBVcGRhdGUgYXJpYS1zZWxlY3RlZCBpbW1lZGlhdGVseSBzbyB0aGF0IEFUIHRoaW5rIHRoZSB0YWIgaXMgYWxyZWFkeSBzZWxlY3RlZC4NCgkJCS8vIE90aGVyd2lzZSBBVCBtYXkgY29uZnVzZSB0aGUgdXNlciBieSBzdGF0aW5nIHRoYXQgdGhleSBuZWVkIHRvIGFjdGl2YXRlIHRoZSB0YWIsDQoJCQkvLyBidXQgdGhlIHRhYiB3aWxsIGFscmVhZHkgYmUgYWN0aXZhdGVkIGJ5IHRoZSB0aW1lIHRoZSBhbm5vdW5jZW1lbnQgZmluaXNoZXMuDQoJCQlmb2N1c2VkVGFiLmF0dHIoICJhcmlhLXNlbGVjdGVkIiwgImZhbHNlIiApOw0KCQkJdGhpcy50YWJzLmVxKCBzZWxlY3RlZEluZGV4ICkuYXR0ciggImFyaWEtc2VsZWN0ZWQiLCAidHJ1ZSIgKTsNCg0KCQkJdGhpcy5hY3RpdmF0aW5nID0gdGhpcy5fZGVsYXkoZnVuY3Rpb24oKSB7DQoJCQkJdGhpcy5vcHRpb24oICJhY3RpdmUiLCBzZWxlY3RlZEluZGV4ICk7DQoJCQl9LCB0aGlzLmRlbGF5ICk7DQoJCX0NCgl9LA0KDQoJX3BhbmVsS2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQlpZiAoIHRoaXMuX2hhbmRsZVBhZ2VOYXYoIGV2ZW50ICkgKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQkvLyBDdHJsK3VwIG1vdmVzIGZvY3VzIHRvIHRoZSBjdXJyZW50IHRhYg0KCQlpZiAoIGV2ZW50LmN0cmxLZXkgJiYgZXZlbnQua2V5Q29kZSA9PT0gJC51aS5rZXlDb2RlLlVQICkgew0KCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCgkJCXRoaXMuYWN0aXZlLmZvY3VzKCk7DQoJCX0NCgl9LA0KDQoJLy8gQWx0K3BhZ2UgdXAvZG93biBtb3ZlcyBmb2N1cyB0byB0aGUgcHJldmlvdXMvbmV4dCB0YWIgKGFuZCBhY3RpdmF0ZXMpDQoJX2hhbmRsZVBhZ2VOYXY6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJaWYgKCBldmVudC5hbHRLZXkgJiYgZXZlbnQua2V5Q29kZSA9PT0gJC51aS5rZXlDb2RlLlBBR0VfVVAgKSB7DQoJCQl0aGlzLl9hY3RpdmF0ZSggdGhpcy5fZm9jdXNOZXh0VGFiKCB0aGlzLm9wdGlvbnMuYWN0aXZlIC0gMSwgZmFsc2UgKSApOw0KCQkJcmV0dXJuIHRydWU7DQoJCX0NCgkJaWYgKCBldmVudC5hbHRLZXkgJiYgZXZlbnQua2V5Q29kZSA9PT0gJC51aS5rZXlDb2RlLlBBR0VfRE9XTiApIHsNCgkJCXRoaXMuX2FjdGl2YXRlKCB0aGlzLl9mb2N1c05leHRUYWIoIHRoaXMub3B0aW9ucy5hY3RpdmUgKyAxLCB0cnVlICkgKTsNCgkJCXJldHVybiB0cnVlOw0KCQl9DQoJfSwNCg0KCV9maW5kTmV4dFRhYjogZnVuY3Rpb24oIGluZGV4LCBnb2luZ0ZvcndhcmQgKSB7DQoJCXZhciBsYXN0VGFiSW5kZXggPSB0aGlzLnRhYnMubGVuZ3RoIC0gMTsNCg0KCQlmdW5jdGlvbiBjb25zdHJhaW4oKSB7DQoJCQlpZiAoIGluZGV4ID4gbGFzdFRhYkluZGV4ICkgew0KCQkJCWluZGV4ID0gMDsNCgkJCX0NCgkJCWlmICggaW5kZXggPCAwICkgew0KCQkJCWluZGV4ID0gbGFzdFRhYkluZGV4Ow0KCQkJfQ0KCQkJcmV0dXJuIGluZGV4Ow0KCQl9DQoNCgkJd2hpbGUgKCAkLmluQXJyYXkoIGNvbnN0cmFpbigpLCB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgKSAhPT0gLTEgKSB7DQoJCQlpbmRleCA9IGdvaW5nRm9yd2FyZCA/IGluZGV4ICsgMSA6IGluZGV4IC0gMTsNCgkJfQ0KDQoJCXJldHVybiBpbmRleDsNCgl9LA0KDQoJX2ZvY3VzTmV4dFRhYjogZnVuY3Rpb24oIGluZGV4LCBnb2luZ0ZvcndhcmQgKSB7DQoJCWluZGV4ID0gdGhpcy5fZmluZE5leHRUYWIoIGluZGV4LCBnb2luZ0ZvcndhcmQgKTsNCgkJdGhpcy50YWJzLmVxKCBpbmRleCApLmZvY3VzKCk7DQoJCXJldHVybiBpbmRleDsNCgl9LA0KDQoJX3NldE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7DQoJCWlmICgga2V5ID09PSAiYWN0aXZlIiApIHsNCgkJCS8vIF9hY3RpdmF0ZSgpIHdpbGwgaGFuZGxlIGludmFsaWQgdmFsdWVzIGFuZCB1cGRhdGUgdGhpcy5vcHRpb25zDQoJCQl0aGlzLl9hY3RpdmF0ZSggdmFsdWUgKTsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCWlmICgga2V5ID09PSAiZGlzYWJsZWQiICkgew0KCQkJLy8gZG9uJ3QgdXNlIHRoZSB3aWRnZXQgZmFjdG9yeSdzIGRpc2FibGVkIGhhbmRsaW5nDQoJCQl0aGlzLl9zZXR1cERpc2FibGVkKCB2YWx1ZSApOw0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUpOw0KDQoJCWlmICgga2V5ID09PSAiY29sbGFwc2libGUiICkgew0KCQkJdGhpcy5lbGVtZW50LnRvZ2dsZUNsYXNzKCAidWktdGFicy1jb2xsYXBzaWJsZSIsIHZhbHVlICk7DQoJCQkvLyBTZXR0aW5nIGNvbGxhcHNpYmxlOiBmYWxzZSB3aGlsZSBjb2xsYXBzZWQ7IG9wZW4gZmlyc3QgcGFuZWwNCgkJCWlmICggIXZhbHVlICYmIHRoaXMub3B0aW9ucy5hY3RpdmUgPT09IGZhbHNlICkgew0KCQkJCXRoaXMuX2FjdGl2YXRlKCAwICk7DQoJCQl9DQoJCX0NCg0KCQlpZiAoIGtleSA9PT0gImV2ZW50IiApIHsNCgkJCXRoaXMuX3NldHVwRXZlbnRzKCB2YWx1ZSApOw0KCQl9DQoNCgkJaWYgKCBrZXkgPT09ICJoZWlnaHRTdHlsZSIgKSB7DQoJCQl0aGlzLl9zZXR1cEhlaWdodFN0eWxlKCB2YWx1ZSApOw0KCQl9DQoJfSwNCg0KCV9zYW5pdGl6ZVNlbGVjdG9yOiBmdW5jdGlvbiggaGFzaCApIHsNCgkJcmV0dXJuIGhhc2ggPyBoYXNoLnJlcGxhY2UoIC9bISIkJSYnKCkqKywuXC86Ozw9Pj9AXFtcXVxeYHt8fX5dL2csICJcXCQmIiApIDogIiI7DQoJfSwNCg0KCXJlZnJlc2g6IGZ1bmN0aW9uKCkgew0KCQl2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9ucywNCgkJCWxpcyA9IHRoaXMudGFibGlzdC5jaGlsZHJlbiggIjpoYXMoYVtocmVmXSkiICk7DQoNCgkJLy8gZ2V0IGRpc2FibGVkIHRhYnMgZnJvbSBjbGFzcyBhdHRyaWJ1dGUgZnJvbSBIVE1MDQoJCS8vIHRoaXMgd2lsbCBnZXQgY29udmVydGVkIHRvIGEgYm9vbGVhbiBpZiBuZWVkZWQgaW4gX3JlZnJlc2goKQ0KCQlvcHRpb25zLmRpc2FibGVkID0gJC5tYXAoIGxpcy5maWx0ZXIoICIudWktc3RhdGUtZGlzYWJsZWQiICksIGZ1bmN0aW9uKCB0YWIgKSB7DQoJCQlyZXR1cm4gbGlzLmluZGV4KCB0YWIgKTsNCgkJfSk7DQoNCgkJdGhpcy5fcHJvY2Vzc1RhYnMoKTsNCg0KCQkvLyB3YXMgY29sbGFwc2VkIG9yIG5vIHRhYnMNCgkJaWYgKCBvcHRpb25zLmFjdGl2ZSA9PT0gZmFsc2UgfHwgIXRoaXMuYW5jaG9ycy5sZW5ndGggKSB7DQoJCQlvcHRpb25zLmFjdGl2ZSA9IGZhbHNlOw0KCQkJdGhpcy5hY3RpdmUgPSAkKCk7DQoJCS8vIHdhcyBhY3RpdmUsIGJ1dCBhY3RpdmUgdGFiIGlzIGdvbmUNCgkJfSBlbHNlIGlmICggdGhpcy5hY3RpdmUubGVuZ3RoICYmICEkLmNvbnRhaW5zKCB0aGlzLnRhYmxpc3RbIDAgXSwgdGhpcy5hY3RpdmVbIDAgXSApICkgew0KCQkJLy8gYWxsIHJlbWFpbmluZyB0YWJzIGFyZSBkaXNhYmxlZA0KCQkJaWYgKCB0aGlzLnRhYnMubGVuZ3RoID09PSBvcHRpb25zLmRpc2FibGVkLmxlbmd0aCApIHsNCgkJCQlvcHRpb25zLmFjdGl2ZSA9IGZhbHNlOw0KCQkJCXRoaXMuYWN0aXZlID0gJCgpOw0KCQkJLy8gYWN0aXZhdGUgcHJldmlvdXMgdGFiDQoJCQl9IGVsc2Ugew0KCQkJCXRoaXMuX2FjdGl2YXRlKCB0aGlzLl9maW5kTmV4dFRhYiggTWF0aC5tYXgoIDAsIG9wdGlvbnMuYWN0aXZlIC0gMSApLCBmYWxzZSApICk7DQoJCQl9DQoJCS8vIHdhcyBhY3RpdmUsIGFjdGl2ZSB0YWIgc3RpbGwgZXhpc3RzDQoJCX0gZWxzZSB7DQoJCQkvLyBtYWtlIHN1cmUgYWN0aXZlIGluZGV4IGlzIGNvcnJlY3QNCgkJCW9wdGlvbnMuYWN0aXZlID0gdGhpcy50YWJzLmluZGV4KCB0aGlzLmFjdGl2ZSApOw0KCQl9DQoNCgkJdGhpcy5fcmVmcmVzaCgpOw0KCX0sDQoNCglfcmVmcmVzaDogZnVuY3Rpb24oKSB7DQoJCXRoaXMuX3NldHVwRGlzYWJsZWQoIHRoaXMub3B0aW9ucy5kaXNhYmxlZCApOw0KCQl0aGlzLl9zZXR1cEV2ZW50cyggdGhpcy5vcHRpb25zLmV2ZW50ICk7DQoJCXRoaXMuX3NldHVwSGVpZ2h0U3R5bGUoIHRoaXMub3B0aW9ucy5oZWlnaHRTdHlsZSApOw0KDQoJCXRoaXMudGFicy5ub3QoIHRoaXMuYWN0aXZlICkuYXR0cih7DQoJCQkiYXJpYS1zZWxlY3RlZCI6ICJmYWxzZSIsDQoJCQkiYXJpYS1leHBhbmRlZCI6ICJmYWxzZSIsDQoJCQl0YWJJbmRleDogLTENCgkJfSk7DQoJCXRoaXMucGFuZWxzLm5vdCggdGhpcy5fZ2V0UGFuZWxGb3JUYWIoIHRoaXMuYWN0aXZlICkgKQ0KCQkJLmhpZGUoKQ0KCQkJLmF0dHIoew0KCQkJCSJhcmlhLWhpZGRlbiI6ICJ0cnVlIg0KCQkJfSk7DQoNCgkJLy8gTWFrZSBzdXJlIG9uZSB0YWIgaXMgaW4gdGhlIHRhYiBvcmRlcg0KCQlpZiAoICF0aGlzLmFjdGl2ZS5sZW5ndGggKSB7DQoJCQl0aGlzLnRhYnMuZXEoIDAgKS5hdHRyKCAidGFiSW5kZXgiLCAwICk7DQoJCX0gZWxzZSB7DQoJCQl0aGlzLmFjdGl2ZQ0KCQkJCS5hZGRDbGFzcyggInVpLXRhYnMtYWN0aXZlIHVpLXN0YXRlLWFjdGl2ZSIgKQ0KCQkJCS5hdHRyKHsNCgkJCQkJImFyaWEtc2VsZWN0ZWQiOiAidHJ1ZSIsDQoJCQkJCSJhcmlhLWV4cGFuZGVkIjogInRydWUiLA0KCQkJCQl0YWJJbmRleDogMA0KCQkJCX0pOw0KCQkJdGhpcy5fZ2V0UGFuZWxGb3JUYWIoIHRoaXMuYWN0aXZlICkNCgkJCQkuc2hvdygpDQoJCQkJLmF0dHIoew0KCQkJCQkiYXJpYS1oaWRkZW4iOiAiZmFsc2UiDQoJCQkJfSk7DQoJCX0NCgl9LA0KDQoJX3Byb2Nlc3NUYWJzOiBmdW5jdGlvbigpIHsNCgkJdmFyIHRoYXQgPSB0aGlzLA0KCQkJcHJldlRhYnMgPSB0aGlzLnRhYnMsDQoJCQlwcmV2QW5jaG9ycyA9IHRoaXMuYW5jaG9ycywNCgkJCXByZXZQYW5lbHMgPSB0aGlzLnBhbmVsczsNCg0KCQl0aGlzLnRhYmxpc3QgPSB0aGlzLl9nZXRMaXN0KCkNCgkJCS5hZGRDbGFzcyggInVpLXRhYnMtbmF2IHVpLWhlbHBlci1yZXNldCB1aS1oZWxwZXItY2xlYXJmaXggdWktd2lkZ2V0LWhlYWRlciB1aS1jb3JuZXItYWxsIiApDQoJCQkuYXR0ciggInJvbGUiLCAidGFibGlzdCIgKQ0KDQoJCQkvLyBQcmV2ZW50IHVzZXJzIGZyb20gZm9jdXNpbmcgZGlzYWJsZWQgdGFicyB2aWEgY2xpY2sNCgkJCS5kZWxlZ2F0ZSggIj4gbGkiLCAibW91c2Vkb3duIiArIHRoaXMuZXZlbnROYW1lc3BhY2UsIGZ1bmN0aW9uKCBldmVudCApIHsNCgkJCQlpZiAoICQoIHRoaXMgKS5pcyggIi51aS1zdGF0ZS1kaXNhYmxlZCIgKSApIHsNCgkJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCgkJCQl9DQoJCQl9KQ0KDQoJCQkvLyBzdXBwb3J0OiBJRSA8OQ0KCQkJLy8gUHJldmVudGluZyB0aGUgZGVmYXVsdCBhY3Rpb24gaW4gbW91c2Vkb3duIGRvZXNuJ3QgcHJldmVudCBJRQ0KCQkJLy8gZnJvbSBmb2N1c2luZyB0aGUgZWxlbWVudCwgc28gaWYgdGhlIGFuY2hvciBnZXRzIGZvY3VzZWQsIGJsdXIuDQoJCQkvLyBXZSBkb24ndCBoYXZlIHRvIHdvcnJ5IGFib3V0IGZvY3VzaW5nIHRoZSBwcmV2aW91c2x5IGZvY3VzZWQNCgkJCS8vIGVsZW1lbnQgc2luY2UgY2xpY2tpbmcgb24gYSBub24tZm9jdXNhYmxlIGVsZW1lbnQgc2hvdWxkIGZvY3VzDQoJCQkvLyB0aGUgYm9keSBhbnl3YXkuDQoJCQkuZGVsZWdhdGUoICIudWktdGFicy1hbmNob3IiLCAiZm9jdXMiICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgZnVuY3Rpb24oKSB7DQoJCQkJaWYgKCAkKCB0aGlzICkuY2xvc2VzdCggImxpIiApLmlzKCAiLnVpLXN0YXRlLWRpc2FibGVkIiApICkgew0KCQkJCQl0aGlzLmJsdXIoKTsNCgkJCQl9DQoJCQl9KTsNCg0KCQl0aGlzLnRhYnMgPSB0aGlzLnRhYmxpc3QuZmluZCggIj4gbGk6aGFzKGFbaHJlZl0pIiApDQoJCQkuYWRkQ2xhc3MoICJ1aS1zdGF0ZS1kZWZhdWx0IHVpLWNvcm5lci10b3AiICkNCgkJCS5hdHRyKHsNCgkJCQlyb2xlOiAidGFiIiwNCgkJCQl0YWJJbmRleDogLTENCgkJCX0pOw0KDQoJCXRoaXMuYW5jaG9ycyA9IHRoaXMudGFicy5tYXAoZnVuY3Rpb24oKSB7DQoJCQkJcmV0dXJuICQoICJhIiwgdGhpcyApWyAwIF07DQoJCQl9KQ0KCQkJLmFkZENsYXNzKCAidWktdGFicy1hbmNob3IiICkNCgkJCS5hdHRyKHsNCgkJCQlyb2xlOiAicHJlc2VudGF0aW9uIiwNCgkJCQl0YWJJbmRleDogLTENCgkJCX0pOw0KDQoJCXRoaXMucGFuZWxzID0gJCgpOw0KDQoJCXRoaXMuYW5jaG9ycy5lYWNoKGZ1bmN0aW9uKCBpLCBhbmNob3IgKSB7DQoJCQl2YXIgc2VsZWN0b3IsIHBhbmVsLCBwYW5lbElkLA0KCQkJCWFuY2hvcklkID0gJCggYW5jaG9yICkudW5pcXVlSWQoKS5hdHRyKCAiaWQiICksDQoJCQkJdGFiID0gJCggYW5jaG9yICkuY2xvc2VzdCggImxpIiApLA0KCQkJCW9yaWdpbmFsQXJpYUNvbnRyb2xzID0gdGFiLmF0dHIoICJhcmlhLWNvbnRyb2xzIiApOw0KDQoJCQkvLyBpbmxpbmUgdGFiDQoJCQlpZiAoIHRoYXQuX2lzTG9jYWwoIGFuY2hvciApICkgew0KCQkJCXNlbGVjdG9yID0gYW5jaG9yLmhhc2g7DQoJCQkJcGFuZWxJZCA9IHNlbGVjdG9yLnN1YnN0cmluZyggMSApOw0KCQkJCXBhbmVsID0gdGhhdC5lbGVtZW50LmZpbmQoIHRoYXQuX3Nhbml0aXplU2VsZWN0b3IoIHNlbGVjdG9yICkgKTsNCgkJCS8vIHJlbW90ZSB0YWINCgkJCX0gZWxzZSB7DQoJCQkJLy8gSWYgdGhlIHRhYiBkb2Vzbid0IGFscmVhZHkgaGF2ZSBhcmlhLWNvbnRyb2xzLA0KCQkJCS8vIGdlbmVyYXRlIGFuIGlkIGJ5IHVzaW5nIGEgdGhyb3ctYXdheSBlbGVtZW50DQoJCQkJcGFuZWxJZCA9IHRhYi5hdHRyKCAiYXJpYS1jb250cm9scyIgKSB8fCAkKCB7fSApLnVuaXF1ZUlkKClbIDAgXS5pZDsNCgkJCQlzZWxlY3RvciA9ICIjIiArIHBhbmVsSWQ7DQoJCQkJcGFuZWwgPSB0aGF0LmVsZW1lbnQuZmluZCggc2VsZWN0b3IgKTsNCgkJCQlpZiAoICFwYW5lbC5sZW5ndGggKSB7DQoJCQkJCXBhbmVsID0gdGhhdC5fY3JlYXRlUGFuZWwoIHBhbmVsSWQgKTsNCgkJCQkJcGFuZWwuaW5zZXJ0QWZ0ZXIoIHRoYXQucGFuZWxzWyBpIC0gMSBdIHx8IHRoYXQudGFibGlzdCApOw0KCQkJCX0NCgkJCQlwYW5lbC5hdHRyKCAiYXJpYS1saXZlIiwgInBvbGl0ZSIgKTsNCgkJCX0NCg0KCQkJaWYgKCBwYW5lbC5sZW5ndGgpIHsNCgkJCQl0aGF0LnBhbmVscyA9IHRoYXQucGFuZWxzLmFkZCggcGFuZWwgKTsNCgkJCX0NCgkJCWlmICggb3JpZ2luYWxBcmlhQ29udHJvbHMgKSB7DQoJCQkJdGFiLmRhdGEoICJ1aS10YWJzLWFyaWEtY29udHJvbHMiLCBvcmlnaW5hbEFyaWFDb250cm9scyApOw0KCQkJfQ0KCQkJdGFiLmF0dHIoew0KCQkJCSJhcmlhLWNvbnRyb2xzIjogcGFuZWxJZCwNCgkJCQkiYXJpYS1sYWJlbGxlZGJ5IjogYW5jaG9ySWQNCgkJCX0pOw0KCQkJcGFuZWwuYXR0ciggImFyaWEtbGFiZWxsZWRieSIsIGFuY2hvcklkICk7DQoJCX0pOw0KDQoJCXRoaXMucGFuZWxzDQoJCQkuYWRkQ2xhc3MoICJ1aS10YWJzLXBhbmVsIHVpLXdpZGdldC1jb250ZW50IHVpLWNvcm5lci1ib3R0b20iICkNCgkJCS5hdHRyKCAicm9sZSIsICJ0YWJwYW5lbCIgKTsNCg0KCQkvLyBBdm9pZCBtZW1vcnkgbGVha3MgKCMxMDA1NikNCgkJaWYgKCBwcmV2VGFicyApIHsNCgkJCXRoaXMuX29mZiggcHJldlRhYnMubm90KCB0aGlzLnRhYnMgKSApOw0KCQkJdGhpcy5fb2ZmKCBwcmV2QW5jaG9ycy5ub3QoIHRoaXMuYW5jaG9ycyApICk7DQoJCQl0aGlzLl9vZmYoIHByZXZQYW5lbHMubm90KCB0aGlzLnBhbmVscyApICk7DQoJCX0NCgl9LA0KDQoJLy8gYWxsb3cgb3ZlcnJpZGluZyBob3cgdG8gZmluZCB0aGUgbGlzdCBmb3IgcmFyZSB1c2FnZSBzY2VuYXJpb3MgKCM3NzE1KQ0KCV9nZXRMaXN0OiBmdW5jdGlvbigpIHsNCgkJcmV0dXJuIHRoaXMudGFibGlzdCB8fCB0aGlzLmVsZW1lbnQuZmluZCggIm9sLHVsIiApLmVxKCAwICk7DQoJfSwNCg0KCV9jcmVhdGVQYW5lbDogZnVuY3Rpb24oIGlkICkgew0KCQlyZXR1cm4gJCggIjxkaXY+IiApDQoJCQkuYXR0ciggImlkIiwgaWQgKQ0KCQkJLmFkZENsYXNzKCAidWktdGFicy1wYW5lbCB1aS13aWRnZXQtY29udGVudCB1aS1jb3JuZXItYm90dG9tIiApDQoJCQkuZGF0YSggInVpLXRhYnMtZGVzdHJveSIsIHRydWUgKTsNCgl9LA0KDQoJX3NldHVwRGlzYWJsZWQ6IGZ1bmN0aW9uKCBkaXNhYmxlZCApIHsNCgkJaWYgKCAkLmlzQXJyYXkoIGRpc2FibGVkICkgKSB7DQoJCQlpZiAoICFkaXNhYmxlZC5sZW5ndGggKSB7DQoJCQkJZGlzYWJsZWQgPSBmYWxzZTsNCgkJCX0gZWxzZSBpZiAoIGRpc2FibGVkLmxlbmd0aCA9PT0gdGhpcy5hbmNob3JzLmxlbmd0aCApIHsNCgkJCQlkaXNhYmxlZCA9IHRydWU7DQoJCQl9DQoJCX0NCg0KCQkvLyBkaXNhYmxlIHRhYnMNCgkJZm9yICggdmFyIGkgPSAwLCBsaTsgKCBsaSA9IHRoaXMudGFic1sgaSBdICk7IGkrKyApIHsNCgkJCWlmICggZGlzYWJsZWQgPT09IHRydWUgfHwgJC5pbkFycmF5KCBpLCBkaXNhYmxlZCApICE9PSAtMSApIHsNCgkJCQkkKCBsaSApDQoJCQkJCS5hZGRDbGFzcyggInVpLXN0YXRlLWRpc2FibGVkIiApDQoJCQkJCS5hdHRyKCAiYXJpYS1kaXNhYmxlZCIsICJ0cnVlIiApOw0KCQkJfSBlbHNlIHsNCgkJCQkkKCBsaSApDQoJCQkJCS5yZW1vdmVDbGFzcyggInVpLXN0YXRlLWRpc2FibGVkIiApDQoJCQkJCS5yZW1vdmVBdHRyKCAiYXJpYS1kaXNhYmxlZCIgKTsNCgkJCX0NCgkJfQ0KDQoJCXRoaXMub3B0aW9ucy5kaXNhYmxlZCA9IGRpc2FibGVkOw0KCX0sDQoNCglfc2V0dXBFdmVudHM6IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdmFyIGV2ZW50cyA9IHt9Ow0KCQlpZiAoIGV2ZW50ICkgew0KCQkJJC5lYWNoKCBldmVudC5zcGxpdCgiICIpLCBmdW5jdGlvbiggaW5kZXgsIGV2ZW50TmFtZSApIHsNCgkJCQlldmVudHNbIGV2ZW50TmFtZSBdID0gIl9ldmVudEhhbmRsZXIiOw0KCQkJfSk7DQoJCX0NCg0KCQl0aGlzLl9vZmYoIHRoaXMuYW5jaG9ycy5hZGQoIHRoaXMudGFicyApLmFkZCggdGhpcy5wYW5lbHMgKSApOw0KCQkvLyBBbHdheXMgcHJldmVudCB0aGUgZGVmYXVsdCBhY3Rpb24sIGV2ZW4gd2hlbiBkaXNhYmxlZA0KCQl0aGlzLl9vbiggdHJ1ZSwgdGhpcy5hbmNob3JzLCB7DQoJCQljbGljazogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQoJCQl9DQoJCX0pOw0KCQl0aGlzLl9vbiggdGhpcy5hbmNob3JzLCBldmVudHMgKTsNCgkJdGhpcy5fb24oIHRoaXMudGFicywgeyBrZXlkb3duOiAiX3RhYktleWRvd24iIH0gKTsNCgkJdGhpcy5fb24oIHRoaXMucGFuZWxzLCB7IGtleWRvd246ICJfcGFuZWxLZXlkb3duIiB9ICk7DQoNCgkJdGhpcy5fZm9jdXNhYmxlKCB0aGlzLnRhYnMgKTsNCgkJdGhpcy5faG92ZXJhYmxlKCB0aGlzLnRhYnMgKTsNCgl9LA0KDQoJX3NldHVwSGVpZ2h0U3R5bGU6IGZ1bmN0aW9uKCBoZWlnaHRTdHlsZSApIHsNCgkJdmFyIG1heEhlaWdodCwNCgkJCXBhcmVudCA9IHRoaXMuZWxlbWVudC5wYXJlbnQoKTsNCg0KCQlpZiAoIGhlaWdodFN0eWxlID09PSAiZmlsbCIgKSB7DQoJCQltYXhIZWlnaHQgPSBwYXJlbnQuaGVpZ2h0KCk7DQoJCQltYXhIZWlnaHQgLT0gdGhpcy5lbGVtZW50Lm91dGVySGVpZ2h0KCkgLSB0aGlzLmVsZW1lbnQuaGVpZ2h0KCk7DQoNCgkJCXRoaXMuZWxlbWVudC5zaWJsaW5ncyggIjp2aXNpYmxlIiApLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJdmFyIGVsZW0gPSAkKCB0aGlzICksDQoJCQkJCXBvc2l0aW9uID0gZWxlbS5jc3MoICJwb3NpdGlvbiIgKTsNCg0KCQkJCWlmICggcG9zaXRpb24gPT09ICJhYnNvbHV0ZSIgfHwgcG9zaXRpb24gPT09ICJmaXhlZCIgKSB7DQoJCQkJCXJldHVybjsNCgkJCQl9DQoJCQkJbWF4SGVpZ2h0IC09IGVsZW0ub3V0ZXJIZWlnaHQoIHRydWUgKTsNCgkJCX0pOw0KDQoJCQl0aGlzLmVsZW1lbnQuY2hpbGRyZW4oKS5ub3QoIHRoaXMucGFuZWxzICkuZWFjaChmdW5jdGlvbigpIHsNCgkJCQltYXhIZWlnaHQgLT0gJCggdGhpcyApLm91dGVySGVpZ2h0KCB0cnVlICk7DQoJCQl9KTsNCg0KCQkJdGhpcy5wYW5lbHMuZWFjaChmdW5jdGlvbigpIHsNCgkJCQkkKCB0aGlzICkuaGVpZ2h0KCBNYXRoLm1heCggMCwgbWF4SGVpZ2h0IC0NCgkJCQkJJCggdGhpcyApLmlubmVySGVpZ2h0KCkgKyAkKCB0aGlzICkuaGVpZ2h0KCkgKSApOw0KCQkJfSkNCgkJCS5jc3MoICJvdmVyZmxvdyIsICJhdXRvIiApOw0KCQl9IGVsc2UgaWYgKCBoZWlnaHRTdHlsZSA9PT0gImF1dG8iICkgew0KCQkJbWF4SGVpZ2h0ID0gMDsNCgkJCXRoaXMucGFuZWxzLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJbWF4SGVpZ2h0ID0gTWF0aC5tYXgoIG1heEhlaWdodCwgJCggdGhpcyApLmhlaWdodCggIiIgKS5oZWlnaHQoKSApOw0KCQkJfSkuaGVpZ2h0KCBtYXhIZWlnaHQgKTsNCgkJfQ0KCX0sDQoNCglfZXZlbnRIYW5kbGVyOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCXZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zLA0KCQkJYWN0aXZlID0gdGhpcy5hY3RpdmUsDQoJCQlhbmNob3IgPSAkKCBldmVudC5jdXJyZW50VGFyZ2V0ICksDQoJCQl0YWIgPSBhbmNob3IuY2xvc2VzdCggImxpIiApLA0KCQkJY2xpY2tlZElzQWN0aXZlID0gdGFiWyAwIF0gPT09IGFjdGl2ZVsgMCBdLA0KCQkJY29sbGFwc2luZyA9IGNsaWNrZWRJc0FjdGl2ZSAmJiBvcHRpb25zLmNvbGxhcHNpYmxlLA0KCQkJdG9TaG93ID0gY29sbGFwc2luZyA/ICQoKSA6IHRoaXMuX2dldFBhbmVsRm9yVGFiKCB0YWIgKSwNCgkJCXRvSGlkZSA9ICFhY3RpdmUubGVuZ3RoID8gJCgpIDogdGhpcy5fZ2V0UGFuZWxGb3JUYWIoIGFjdGl2ZSApLA0KCQkJZXZlbnREYXRhID0gew0KCQkJCW9sZFRhYjogYWN0aXZlLA0KCQkJCW9sZFBhbmVsOiB0b0hpZGUsDQoJCQkJbmV3VGFiOiBjb2xsYXBzaW5nID8gJCgpIDogdGFiLA0KCQkJCW5ld1BhbmVsOiB0b1Nob3cNCgkJCX07DQoNCgkJZXZlbnQucHJldmVudERlZmF1bHQoKTsNCg0KCQlpZiAoIHRhYi5oYXNDbGFzcyggInVpLXN0YXRlLWRpc2FibGVkIiApIHx8DQoJCQkJLy8gdGFiIGlzIGFscmVhZHkgbG9hZGluZw0KCQkJCXRhYi5oYXNDbGFzcyggInVpLXRhYnMtbG9hZGluZyIgKSB8fA0KCQkJCS8vIGNhbid0IHN3aXRjaCBkdXJuaW5nIGFuIGFuaW1hdGlvbg0KCQkJCXRoaXMucnVubmluZyB8fA0KCQkJCS8vIGNsaWNrIG9uIGFjdGl2ZSBoZWFkZXIsIGJ1dCBub3QgY29sbGFwc2libGUNCgkJCQkoIGNsaWNrZWRJc0FjdGl2ZSAmJiAhb3B0aW9ucy5jb2xsYXBzaWJsZSApIHx8DQoJCQkJLy8gYWxsb3cgY2FuY2VsaW5nIGFjdGl2YXRpb24NCgkJCQkoIHRoaXMuX3RyaWdnZXIoICJiZWZvcmVBY3RpdmF0ZSIsIGV2ZW50LCBldmVudERhdGEgKSA9PT0gZmFsc2UgKSApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCW9wdGlvbnMuYWN0aXZlID0gY29sbGFwc2luZyA/IGZhbHNlIDogdGhpcy50YWJzLmluZGV4KCB0YWIgKTsNCg0KCQl0aGlzLmFjdGl2ZSA9IGNsaWNrZWRJc0FjdGl2ZSA/ICQoKSA6IHRhYjsNCgkJaWYgKCB0aGlzLnhociApIHsNCgkJCXRoaXMueGhyLmFib3J0KCk7DQoJCX0NCg0KCQlpZiAoICF0b0hpZGUubGVuZ3RoICYmICF0b1Nob3cubGVuZ3RoICkgew0KCQkJJC5lcnJvciggImpRdWVyeSBVSSBUYWJzOiBNaXNtYXRjaGluZyBmcmFnbWVudCBpZGVudGlmaWVyLiIgKTsNCgkJfQ0KDQoJCWlmICggdG9TaG93Lmxlbmd0aCApIHsNCgkJCXRoaXMubG9hZCggdGhpcy50YWJzLmluZGV4KCB0YWIgKSwgZXZlbnQgKTsNCgkJfQ0KCQl0aGlzLl90b2dnbGUoIGV2ZW50LCBldmVudERhdGEgKTsNCgl9LA0KDQoJLy8gaGFuZGxlcyBzaG93L2hpZGUgZm9yIHNlbGVjdGluZyB0YWJzDQoJX3RvZ2dsZTogZnVuY3Rpb24oIGV2ZW50LCBldmVudERhdGEgKSB7DQoJCXZhciB0aGF0ID0gdGhpcywNCgkJCXRvU2hvdyA9IGV2ZW50RGF0YS5uZXdQYW5lbCwNCgkJCXRvSGlkZSA9IGV2ZW50RGF0YS5vbGRQYW5lbDsNCg0KCQl0aGlzLnJ1bm5pbmcgPSB0cnVlOw0KDQoJCWZ1bmN0aW9uIGNvbXBsZXRlKCkgew0KCQkJdGhhdC5ydW5uaW5nID0gZmFsc2U7DQoJCQl0aGF0Ll90cmlnZ2VyKCAiYWN0aXZhdGUiLCBldmVudCwgZXZlbnREYXRhICk7DQoJCX0NCg0KCQlmdW5jdGlvbiBzaG93KCkgew0KCQkJZXZlbnREYXRhLm5ld1RhYi5jbG9zZXN0KCAibGkiICkuYWRkQ2xhc3MoICJ1aS10YWJzLWFjdGl2ZSB1aS1zdGF0ZS1hY3RpdmUiICk7DQoNCgkJCWlmICggdG9TaG93Lmxlbmd0aCAmJiB0aGF0Lm9wdGlvbnMuc2hvdyApIHsNCgkJCQl0aGF0Ll9zaG93KCB0b1Nob3csIHRoYXQub3B0aW9ucy5zaG93LCBjb21wbGV0ZSApOw0KCQkJfSBlbHNlIHsNCgkJCQl0b1Nob3cuc2hvdygpOw0KCQkJCWNvbXBsZXRlKCk7DQoJCQl9DQoJCX0NCg0KCQkvLyBzdGFydCBvdXQgYnkgaGlkaW5nLCB0aGVuIHNob3dpbmcsIHRoZW4gY29tcGxldGluZw0KCQlpZiAoIHRvSGlkZS5sZW5ndGggJiYgdGhpcy5vcHRpb25zLmhpZGUgKSB7DQoJCQl0aGlzLl9oaWRlKCB0b0hpZGUsIHRoaXMub3B0aW9ucy5oaWRlLCBmdW5jdGlvbigpIHsNCgkJCQlldmVudERhdGEub2xkVGFiLmNsb3Nlc3QoICJsaSIgKS5yZW1vdmVDbGFzcyggInVpLXRhYnMtYWN0aXZlIHVpLXN0YXRlLWFjdGl2ZSIgKTsNCgkJCQlzaG93KCk7DQoJCQl9KTsNCgkJfSBlbHNlIHsNCgkJCWV2ZW50RGF0YS5vbGRUYWIuY2xvc2VzdCggImxpIiApLnJlbW92ZUNsYXNzKCAidWktdGFicy1hY3RpdmUgdWktc3RhdGUtYWN0aXZlIiApOw0KCQkJdG9IaWRlLmhpZGUoKTsNCgkJCXNob3coKTsNCgkJfQ0KDQoJCXRvSGlkZS5hdHRyKCAiYXJpYS1oaWRkZW4iLCAidHJ1ZSIgKTsNCgkJZXZlbnREYXRhLm9sZFRhYi5hdHRyKHsNCgkJCSJhcmlhLXNlbGVjdGVkIjogImZhbHNlIiwNCgkJCSJhcmlhLWV4cGFuZGVkIjogImZhbHNlIg0KCQl9KTsNCgkJLy8gSWYgd2UncmUgc3dpdGNoaW5nIHRhYnMsIHJlbW92ZSB0aGUgb2xkIHRhYiBmcm9tIHRoZSB0YWIgb3JkZXIuDQoJCS8vIElmIHdlJ3JlIG9wZW5pbmcgZnJvbSBjb2xsYXBzZWQgc3RhdGUsIHJlbW92ZSB0aGUgcHJldmlvdXMgdGFiIGZyb20gdGhlIHRhYiBvcmRlci4NCgkJLy8gSWYgd2UncmUgY29sbGFwc2luZywgdGhlbiBrZWVwIHRoZSBjb2xsYXBzaW5nIHRhYiBpbiB0aGUgdGFiIG9yZGVyLg0KCQlpZiAoIHRvU2hvdy5sZW5ndGggJiYgdG9IaWRlLmxlbmd0aCApIHsNCgkJCWV2ZW50RGF0YS5vbGRUYWIuYXR0ciggInRhYkluZGV4IiwgLTEgKTsNCgkJfSBlbHNlIGlmICggdG9TaG93Lmxlbmd0aCApIHsNCgkJCXRoaXMudGFicy5maWx0ZXIoZnVuY3Rpb24oKSB7DQoJCQkJcmV0dXJuICQoIHRoaXMgKS5hdHRyKCAidGFiSW5kZXgiICkgPT09IDA7DQoJCQl9KQ0KCQkJLmF0dHIoICJ0YWJJbmRleCIsIC0xICk7DQoJCX0NCg0KCQl0b1Nob3cuYXR0ciggImFyaWEtaGlkZGVuIiwgImZhbHNlIiApOw0KCQlldmVudERhdGEubmV3VGFiLmF0dHIoew0KCQkJImFyaWEtc2VsZWN0ZWQiOiAidHJ1ZSIsDQoJCQkiYXJpYS1leHBhbmRlZCI6ICJ0cnVlIiwNCgkJCXRhYkluZGV4OiAwDQoJCX0pOw0KCX0sDQoNCglfYWN0aXZhdGU6IGZ1bmN0aW9uKCBpbmRleCApIHsNCgkJdmFyIGFuY2hvciwNCgkJCWFjdGl2ZSA9IHRoaXMuX2ZpbmRBY3RpdmUoIGluZGV4ICk7DQoNCgkJLy8gdHJ5aW5nIHRvIGFjdGl2YXRlIHRoZSBhbHJlYWR5IGFjdGl2ZSBwYW5lbA0KCQlpZiAoIGFjdGl2ZVsgMCBdID09PSB0aGlzLmFjdGl2ZVsgMCBdICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJLy8gdHJ5aW5nIHRvIGNvbGxhcHNlLCBzaW11bGF0ZSBhIGNsaWNrIG9uIHRoZSBjdXJyZW50IGFjdGl2ZSBoZWFkZXINCgkJaWYgKCAhYWN0aXZlLmxlbmd0aCApIHsNCgkJCWFjdGl2ZSA9IHRoaXMuYWN0aXZlOw0KCQl9DQoNCgkJYW5jaG9yID0gYWN0aXZlLmZpbmQoICIudWktdGFicy1hbmNob3IiIClbIDAgXTsNCgkJdGhpcy5fZXZlbnRIYW5kbGVyKHsNCgkJCXRhcmdldDogYW5jaG9yLA0KCQkJY3VycmVudFRhcmdldDogYW5jaG9yLA0KCQkJcHJldmVudERlZmF1bHQ6ICQubm9vcA0KCQl9KTsNCgl9LA0KDQoJX2ZpbmRBY3RpdmU6IGZ1bmN0aW9uKCBpbmRleCApIHsNCgkJcmV0dXJuIGluZGV4ID09PSBmYWxzZSA/ICQoKSA6IHRoaXMudGFicy5lcSggaW5kZXggKTsNCgl9LA0KDQoJX2dldEluZGV4OiBmdW5jdGlvbiggaW5kZXggKSB7DQoJCS8vIG1ldGEtZnVuY3Rpb24gdG8gZ2l2ZSB1c2VycyBvcHRpb24gdG8gcHJvdmlkZSBhIGhyZWYgc3RyaW5nIGluc3RlYWQgb2YgYSBudW1lcmljYWwgaW5kZXguDQoJCWlmICggdHlwZW9mIGluZGV4ID09PSAic3RyaW5nIiApIHsNCgkJCWluZGV4ID0gdGhpcy5hbmNob3JzLmluZGV4KCB0aGlzLmFuY2hvcnMuZmlsdGVyKCAiW2hyZWYkPSciICsgaW5kZXggKyAiJ10iICkgKTsNCgkJfQ0KDQoJCXJldHVybiBpbmRleDsNCgl9LA0KDQoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgew0KCQlpZiAoIHRoaXMueGhyICkgew0KCQkJdGhpcy54aHIuYWJvcnQoKTsNCgkJfQ0KDQoJCXRoaXMuZWxlbWVudC5yZW1vdmVDbGFzcyggInVpLXRhYnMgdWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWNvcm5lci1hbGwgdWktdGFicy1jb2xsYXBzaWJsZSIgKTsNCg0KCQl0aGlzLnRhYmxpc3QNCgkJCS5yZW1vdmVDbGFzcyggInVpLXRhYnMtbmF2IHVpLWhlbHBlci1yZXNldCB1aS1oZWxwZXItY2xlYXJmaXggdWktd2lkZ2V0LWhlYWRlciB1aS1jb3JuZXItYWxsIiApDQoJCQkucmVtb3ZlQXR0ciggInJvbGUiICk7DQoNCgkJdGhpcy5hbmNob3JzDQoJCQkucmVtb3ZlQ2xhc3MoICJ1aS10YWJzLWFuY2hvciIgKQ0KCQkJLnJlbW92ZUF0dHIoICJyb2xlIiApDQoJCQkucmVtb3ZlQXR0ciggInRhYkluZGV4IiApDQoJCQkucmVtb3ZlVW5pcXVlSWQoKTsNCg0KCQl0aGlzLnRhYmxpc3QudW5iaW5kKCB0aGlzLmV2ZW50TmFtZXNwYWNlICk7DQoNCgkJdGhpcy50YWJzLmFkZCggdGhpcy5wYW5lbHMgKS5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJaWYgKCAkLmRhdGEoIHRoaXMsICJ1aS10YWJzLWRlc3Ryb3kiICkgKSB7DQoJCQkJJCggdGhpcyApLnJlbW92ZSgpOw0KCQkJfSBlbHNlIHsNCgkJCQkkKCB0aGlzICkNCgkJCQkJLnJlbW92ZUNsYXNzKCAidWktc3RhdGUtZGVmYXVsdCB1aS1zdGF0ZS1hY3RpdmUgdWktc3RhdGUtZGlzYWJsZWQgIiArDQoJCQkJCQkidWktY29ybmVyLXRvcCB1aS1jb3JuZXItYm90dG9tIHVpLXdpZGdldC1jb250ZW50IHVpLXRhYnMtYWN0aXZlIHVpLXRhYnMtcGFuZWwiICkNCgkJCQkJLnJlbW92ZUF0dHIoICJ0YWJJbmRleCIgKQ0KCQkJCQkucmVtb3ZlQXR0ciggImFyaWEtbGl2ZSIgKQ0KCQkJCQkucmVtb3ZlQXR0ciggImFyaWEtYnVzeSIgKQ0KCQkJCQkucmVtb3ZlQXR0ciggImFyaWEtc2VsZWN0ZWQiICkNCgkJCQkJLnJlbW92ZUF0dHIoICJhcmlhLWxhYmVsbGVkYnkiICkNCgkJCQkJLnJlbW92ZUF0dHIoICJhcmlhLWhpZGRlbiIgKQ0KCQkJCQkucmVtb3ZlQXR0ciggImFyaWEtZXhwYW5kZWQiICkNCgkJCQkJLnJlbW92ZUF0dHIoICJyb2xlIiApOw0KCQkJfQ0KCQl9KTsNCg0KCQl0aGlzLnRhYnMuZWFjaChmdW5jdGlvbigpIHsNCgkJCXZhciBsaSA9ICQoIHRoaXMgKSwNCgkJCQlwcmV2ID0gbGkuZGF0YSggInVpLXRhYnMtYXJpYS1jb250cm9scyIgKTsNCgkJCWlmICggcHJldiApIHsNCgkJCQlsaQ0KCQkJCQkuYXR0ciggImFyaWEtY29udHJvbHMiLCBwcmV2ICkNCgkJCQkJLnJlbW92ZURhdGEoICJ1aS10YWJzLWFyaWEtY29udHJvbHMiICk7DQoJCQl9IGVsc2Ugew0KCQkJCWxpLnJlbW92ZUF0dHIoICJhcmlhLWNvbnRyb2xzIiApOw0KCQkJfQ0KCQl9KTsNCg0KCQl0aGlzLnBhbmVscy5zaG93KCk7DQoNCgkJaWYgKCB0aGlzLm9wdGlvbnMuaGVpZ2h0U3R5bGUgIT09ICJjb250ZW50IiApIHsNCgkJCXRoaXMucGFuZWxzLmNzcyggImhlaWdodCIsICIiICk7DQoJCX0NCgl9LA0KDQoJZW5hYmxlOiBmdW5jdGlvbiggaW5kZXggKSB7DQoJCXZhciBkaXNhYmxlZCA9IHRoaXMub3B0aW9ucy5kaXNhYmxlZDsNCgkJaWYgKCBkaXNhYmxlZCA9PT0gZmFsc2UgKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQlpZiAoIGluZGV4ID09PSB1bmRlZmluZWQgKSB7DQoJCQlkaXNhYmxlZCA9IGZhbHNlOw0KCQl9IGVsc2Ugew0KCQkJaW5kZXggPSB0aGlzLl9nZXRJbmRleCggaW5kZXggKTsNCgkJCWlmICggJC5pc0FycmF5KCBkaXNhYmxlZCApICkgew0KCQkJCWRpc2FibGVkID0gJC5tYXAoIGRpc2FibGVkLCBmdW5jdGlvbiggbnVtICkgew0KCQkJCQlyZXR1cm4gbnVtICE9PSBpbmRleCA/IG51bSA6IG51bGw7DQoJCQkJfSk7DQoJCQl9IGVsc2Ugew0KCQkJCWRpc2FibGVkID0gJC5tYXAoIHRoaXMudGFicywgZnVuY3Rpb24oIGxpLCBudW0gKSB7DQoJCQkJCXJldHVybiBudW0gIT09IGluZGV4ID8gbnVtIDogbnVsbDsNCgkJCQl9KTsNCgkJCX0NCgkJfQ0KCQl0aGlzLl9zZXR1cERpc2FibGVkKCBkaXNhYmxlZCApOw0KCX0sDQoNCglkaXNhYmxlOiBmdW5jdGlvbiggaW5kZXggKSB7DQoJCXZhciBkaXNhYmxlZCA9IHRoaXMub3B0aW9ucy5kaXNhYmxlZDsNCgkJaWYgKCBkaXNhYmxlZCA9PT0gdHJ1ZSApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCWlmICggaW5kZXggPT09IHVuZGVmaW5lZCApIHsNCgkJCWRpc2FibGVkID0gdHJ1ZTsNCgkJfSBlbHNlIHsNCgkJCWluZGV4ID0gdGhpcy5fZ2V0SW5kZXgoIGluZGV4ICk7DQoJCQlpZiAoICQuaW5BcnJheSggaW5kZXgsIGRpc2FibGVkICkgIT09IC0xICkgew0KCQkJCXJldHVybjsNCgkJCX0NCgkJCWlmICggJC5pc0FycmF5KCBkaXNhYmxlZCApICkgew0KCQkJCWRpc2FibGVkID0gJC5tZXJnZSggWyBpbmRleCBdLCBkaXNhYmxlZCApLnNvcnQoKTsNCgkJCX0gZWxzZSB7DQoJCQkJZGlzYWJsZWQgPSBbIGluZGV4IF07DQoJCQl9DQoJCX0NCgkJdGhpcy5fc2V0dXBEaXNhYmxlZCggZGlzYWJsZWQgKTsNCgl9LA0KDQoJbG9hZDogZnVuY3Rpb24oIGluZGV4LCBldmVudCApIHsNCgkJaW5kZXggPSB0aGlzLl9nZXRJbmRleCggaW5kZXggKTsNCgkJdmFyIHRoYXQgPSB0aGlzLA0KCQkJdGFiID0gdGhpcy50YWJzLmVxKCBpbmRleCApLA0KCQkJYW5jaG9yID0gdGFiLmZpbmQoICIudWktdGFicy1hbmNob3IiICksDQoJCQlwYW5lbCA9IHRoaXMuX2dldFBhbmVsRm9yVGFiKCB0YWIgKSwNCgkJCWV2ZW50RGF0YSA9IHsNCgkJCQl0YWI6IHRhYiwNCgkJCQlwYW5lbDogcGFuZWwNCgkJCX07DQoNCgkJLy8gbm90IHJlbW90ZQ0KCQlpZiAoIHRoaXMuX2lzTG9jYWwoIGFuY2hvclsgMCBdICkgKSB7DQoJCQlyZXR1cm47DQoJCX0NCg0KCQl0aGlzLnhociA9ICQuYWpheCggdGhpcy5fYWpheFNldHRpbmdzKCBhbmNob3IsIGV2ZW50LCBldmVudERhdGEgKSApOw0KDQoJCS8vIHN1cHBvcnQ6IGpRdWVyeSA8MS44DQoJCS8vIGpRdWVyeSA8MS44IHJldHVybnMgZmFsc2UgaWYgdGhlIHJlcXVlc3QgaXMgY2FuY2VsZWQgaW4gYmVmb3JlU2VuZCwNCgkJLy8gYnV0IGFzIG9mIDEuOCwgJC5hamF4KCkgYWx3YXlzIHJldHVybnMgYSBqcVhIUiBvYmplY3QuDQoJCWlmICggdGhpcy54aHIgJiYgdGhpcy54aHIuc3RhdHVzVGV4dCAhPT0gImNhbmNlbGVkIiApIHsNCgkJCXRhYi5hZGRDbGFzcyggInVpLXRhYnMtbG9hZGluZyIgKTsNCgkJCXBhbmVsLmF0dHIoICJhcmlhLWJ1c3kiLCAidHJ1ZSIgKTsNCg0KCQkJdGhpcy54aHINCgkJCQkuc3VjY2VzcyhmdW5jdGlvbiggcmVzcG9uc2UgKSB7DQoJCQkJCS8vIHN1cHBvcnQ6IGpRdWVyeSA8MS44DQoJCQkJCS8vIGh0dHA6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzExNzc4DQoJCQkJCXNldFRpbWVvdXQoZnVuY3Rpb24oKSB7DQoJCQkJCQlwYW5lbC5odG1sKCByZXNwb25zZSApOw0KCQkJCQkJdGhhdC5fdHJpZ2dlciggImxvYWQiLCBldmVudCwgZXZlbnREYXRhICk7DQoJCQkJCX0sIDEgKTsNCgkJCQl9KQ0KCQkJCS5jb21wbGV0ZShmdW5jdGlvbigganFYSFIsIHN0YXR1cyApIHsNCgkJCQkJLy8gc3VwcG9ydDogalF1ZXJ5IDwxLjgNCgkJCQkJLy8gaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTE3NzgNCgkJCQkJc2V0VGltZW91dChmdW5jdGlvbigpIHsNCgkJCQkJCWlmICggc3RhdHVzID09PSAiYWJvcnQiICkgew0KCQkJCQkJCXRoYXQucGFuZWxzLnN0b3AoIGZhbHNlLCB0cnVlICk7DQoJCQkJCQl9DQoNCgkJCQkJCXRhYi5yZW1vdmVDbGFzcyggInVpLXRhYnMtbG9hZGluZyIgKTsNCgkJCQkJCXBhbmVsLnJlbW92ZUF0dHIoICJhcmlhLWJ1c3kiICk7DQoNCgkJCQkJCWlmICgganFYSFIgPT09IHRoYXQueGhyICkgew0KCQkJCQkJCWRlbGV0ZSB0aGF0LnhocjsNCgkJCQkJCX0NCgkJCQkJfSwgMSApOw0KCQkJCX0pOw0KCQl9DQoJfSwNCg0KCV9hamF4U2V0dGluZ3M6IGZ1bmN0aW9uKCBhbmNob3IsIGV2ZW50LCBldmVudERhdGEgKSB7DQoJCXZhciB0aGF0ID0gdGhpczsNCgkJcmV0dXJuIHsNCgkJCXVybDogYW5jaG9yLmF0dHIoICJocmVmIiApLA0KCQkJYmVmb3JlU2VuZDogZnVuY3Rpb24oIGpxWEhSLCBzZXR0aW5ncyApIHsNCgkJCQlyZXR1cm4gdGhhdC5fdHJpZ2dlciggImJlZm9yZUxvYWQiLCBldmVudCwNCgkJCQkJJC5leHRlbmQoIHsganFYSFI6IGpxWEhSLCBhamF4U2V0dGluZ3M6IHNldHRpbmdzIH0sIGV2ZW50RGF0YSApICk7DQoJCQl9DQoJCX07DQoJfSwNCg0KCV9nZXRQYW5lbEZvclRhYjogZnVuY3Rpb24oIHRhYiApIHsNCgkJdmFyIGlkID0gJCggdGFiICkuYXR0ciggImFyaWEtY29udHJvbHMiICk7DQoJCXJldHVybiB0aGlzLmVsZW1lbnQuZmluZCggdGhpcy5fc2FuaXRpemVTZWxlY3RvciggIiMiICsgaWQgKSApOw0KCX0NCn0pOw0KDQoNCi8qIQ0KICogalF1ZXJ5IFVJIFRvb2x0aXAgMS4xMS4yDQogKiBodHRwOi8vanF1ZXJ5dWkuY29tDQogKg0KICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycw0KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLg0KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQ0KICoNCiAqIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3Rvb2x0aXAvDQogKi8NCg0KDQp2YXIgdG9vbHRpcCA9ICQud2lkZ2V0KCAidWkudG9vbHRpcCIsIHsNCgl2ZXJzaW9uOiAiMS4xMS4yIiwNCglvcHRpb25zOiB7DQoJCWNvbnRlbnQ6IGZ1bmN0aW9uKCkgew0KCQkJLy8gc3VwcG9ydDogSUU8OSwgT3BlcmEgaW4galF1ZXJ5IDwxLjcNCgkJCS8vIC50ZXh0KCkgY2FuJ3QgYWNjZXB0IHVuZGVmaW5lZCwgc28gY29lcmNlIHRvIGEgc3RyaW5nDQoJCQl2YXIgdGl0bGUgPSAkKCB0aGlzICkuYXR0ciggInRpdGxlIiApIHx8ICIiOw0KCQkJLy8gRXNjYXBlIHRpdGxlLCBzaW5jZSB3ZSdyZSBnb2luZyBmcm9tIGFuIGF0dHJpYnV0ZSB0byByYXcgSFRNTA0KCQkJcmV0dXJuICQoICI8YT4iICkudGV4dCggdGl0bGUgKS5odG1sKCk7DQoJCX0sDQoJCWhpZGU6IHRydWUsDQoJCS8vIERpc2FibGVkIGVsZW1lbnRzIGhhdmUgaW5jb25zaXN0ZW50IGJlaGF2aW9yIGFjcm9zcyBicm93c2VycyAoIzg2NjEpDQoJCWl0ZW1zOiAiW3RpdGxlXTpub3QoW2Rpc2FibGVkXSkiLA0KCQlwb3NpdGlvbjogew0KCQkJbXk6ICJsZWZ0IHRvcCsxNSIsDQoJCQlhdDogImxlZnQgYm90dG9tIiwNCgkJCWNvbGxpc2lvbjogImZsaXBmaXQgZmxpcCINCgkJfSwNCgkJc2hvdzogdHJ1ZSwNCgkJdG9vbHRpcENsYXNzOiBudWxsLA0KCQl0cmFjazogZmFsc2UsDQoNCgkJLy8gY2FsbGJhY2tzDQoJCWNsb3NlOiBudWxsLA0KCQlvcGVuOiBudWxsDQoJfSwNCg0KCV9hZGREZXNjcmliZWRCeTogZnVuY3Rpb24oIGVsZW0sIGlkICkgew0KCQl2YXIgZGVzY3JpYmVkYnkgPSAoZWxlbS5hdHRyKCAiYXJpYS1kZXNjcmliZWRieSIgKSB8fCAiIikuc3BsaXQoIC9ccysvICk7DQoJCWRlc2NyaWJlZGJ5LnB1c2goIGlkICk7DQoJCWVsZW0NCgkJCS5kYXRhKCAidWktdG9vbHRpcC1pZCIsIGlkICkNCgkJCS5hdHRyKCAiYXJpYS1kZXNjcmliZWRieSIsICQudHJpbSggZGVzY3JpYmVkYnkuam9pbiggIiAiICkgKSApOw0KCX0sDQoNCglfcmVtb3ZlRGVzY3JpYmVkQnk6IGZ1bmN0aW9uKCBlbGVtICkgew0KCQl2YXIgaWQgPSBlbGVtLmRhdGEoICJ1aS10b29sdGlwLWlkIiApLA0KCQkJZGVzY3JpYmVkYnkgPSAoZWxlbS5hdHRyKCAiYXJpYS1kZXNjcmliZWRieSIgKSB8fCAiIikuc3BsaXQoIC9ccysvICksDQoJCQlpbmRleCA9ICQuaW5BcnJheSggaWQsIGRlc2NyaWJlZGJ5ICk7DQoNCgkJaWYgKCBpbmRleCAhPT0gLTEgKSB7DQoJCQlkZXNjcmliZWRieS5zcGxpY2UoIGluZGV4LCAxICk7DQoJCX0NCg0KCQllbGVtLnJlbW92ZURhdGEoICJ1aS10b29sdGlwLWlkIiApOw0KCQlkZXNjcmliZWRieSA9ICQudHJpbSggZGVzY3JpYmVkYnkuam9pbiggIiAiICkgKTsNCgkJaWYgKCBkZXNjcmliZWRieSApIHsNCgkJCWVsZW0uYXR0ciggImFyaWEtZGVzY3JpYmVkYnkiLCBkZXNjcmliZWRieSApOw0KCQl9IGVsc2Ugew0KCQkJZWxlbS5yZW1vdmVBdHRyKCAiYXJpYS1kZXNjcmliZWRieSIgKTsNCgkJfQ0KCX0sDQoNCglfY3JlYXRlOiBmdW5jdGlvbigpIHsNCgkJdGhpcy5fb24oew0KCQkJbW91c2VvdmVyOiAib3BlbiIsDQoJCQlmb2N1c2luOiAib3BlbiINCgkJfSk7DQoNCgkJLy8gSURzIG9mIGdlbmVyYXRlZCB0b29sdGlwcywgbmVlZGVkIGZvciBkZXN0cm95DQoJCXRoaXMudG9vbHRpcHMgPSB7fTsNCg0KCQkvLyBJRHMgb2YgcGFyZW50IHRvb2x0aXBzIHdoZXJlIHdlIHJlbW92ZWQgdGhlIHRpdGxlIGF0dHJpYnV0ZQ0KCQl0aGlzLnBhcmVudHMgPSB7fTsNCg0KCQlpZiAoIHRoaXMub3B0aW9ucy5kaXNhYmxlZCApIHsNCgkJCXRoaXMuX2Rpc2FibGUoKTsNCgkJfQ0KDQoJCS8vIEFwcGVuZCB0aGUgYXJpYS1saXZlIHJlZ2lvbiBzbyB0b29sdGlwcyBhbm5vdW5jZSBjb3JyZWN0bHkNCgkJdGhpcy5saXZlUmVnaW9uID0gJCggIjxkaXY+IiApDQoJCQkuYXR0cih7DQoJCQkJcm9sZTogImxvZyIsDQoJCQkJImFyaWEtbGl2ZSI6ICJhc3NlcnRpdmUiLA0KCQkJCSJhcmlhLXJlbGV2YW50IjogImFkZGl0aW9ucyINCgkJCX0pDQoJCQkuYWRkQ2xhc3MoICJ1aS1oZWxwZXItaGlkZGVuLWFjY2Vzc2libGUiICkNCgkJCS5hcHBlbmRUbyggdGhpcy5kb2N1bWVudFsgMCBdLmJvZHkgKTsNCgl9LA0KDQoJX3NldE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7DQoJCXZhciB0aGF0ID0gdGhpczsNCg0KCQlpZiAoIGtleSA9PT0gImRpc2FibGVkIiApIHsNCgkJCXRoaXNbIHZhbHVlID8gIl9kaXNhYmxlIiA6ICJfZW5hYmxlIiBdKCk7DQoJCQl0aGlzLm9wdGlvbnNbIGtleSBdID0gdmFsdWU7DQoJCQkvLyBkaXNhYmxlIGVsZW1lbnQgc3R5bGUgY2hhbmdlcw0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsNCg0KCQlpZiAoIGtleSA9PT0gImNvbnRlbnQiICkgew0KCQkJJC5lYWNoKCB0aGlzLnRvb2x0aXBzLCBmdW5jdGlvbiggaWQsIHRvb2x0aXBEYXRhICkgew0KCQkJCXRoYXQuX3VwZGF0ZUNvbnRlbnQoIHRvb2x0aXBEYXRhLmVsZW1lbnQgKTsNCgkJCX0pOw0KCQl9DQoJfSwNCg0KCV9kaXNhYmxlOiBmdW5jdGlvbigpIHsNCgkJdmFyIHRoYXQgPSB0aGlzOw0KDQoJCS8vIGNsb3NlIG9wZW4gdG9vbHRpcHMNCgkJJC5lYWNoKCB0aGlzLnRvb2x0aXBzLCBmdW5jdGlvbiggaWQsIHRvb2x0aXBEYXRhICkgew0KCQkJdmFyIGV2ZW50ID0gJC5FdmVudCggImJsdXIiICk7DQoJCQlldmVudC50YXJnZXQgPSBldmVudC5jdXJyZW50VGFyZ2V0ID0gdG9vbHRpcERhdGEuZWxlbWVudFsgMCBdOw0KCQkJdGhhdC5jbG9zZSggZXZlbnQsIHRydWUgKTsNCgkJfSk7DQoNCgkJLy8gcmVtb3ZlIHRpdGxlIGF0dHJpYnV0ZXMgdG8gcHJldmVudCBuYXRpdmUgdG9vbHRpcHMNCgkJdGhpcy5lbGVtZW50LmZpbmQoIHRoaXMub3B0aW9ucy5pdGVtcyApLmFkZEJhY2soKS5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJdmFyIGVsZW1lbnQgPSAkKCB0aGlzICk7DQoJCQlpZiAoIGVsZW1lbnQuaXMoICJbdGl0bGVdIiApICkgew0KCQkJCWVsZW1lbnQNCgkJCQkJLmRhdGEoICJ1aS10b29sdGlwLXRpdGxlIiwgZWxlbWVudC5hdHRyKCAidGl0bGUiICkgKQ0KCQkJCQkucmVtb3ZlQXR0ciggInRpdGxlIiApOw0KCQkJfQ0KCQl9KTsNCgl9LA0KDQoJX2VuYWJsZTogZnVuY3Rpb24oKSB7DQoJCS8vIHJlc3RvcmUgdGl0bGUgYXR0cmlidXRlcw0KCQl0aGlzLmVsZW1lbnQuZmluZCggdGhpcy5vcHRpb25zLml0ZW1zICkuYWRkQmFjaygpLmVhY2goZnVuY3Rpb24oKSB7DQoJCQl2YXIgZWxlbWVudCA9ICQoIHRoaXMgKTsNCgkJCWlmICggZWxlbWVudC5kYXRhKCAidWktdG9vbHRpcC10aXRsZSIgKSApIHsNCgkJCQllbGVtZW50LmF0dHIoICJ0aXRsZSIsIGVsZW1lbnQuZGF0YSggInVpLXRvb2x0aXAtdGl0bGUiICkgKTsNCgkJCX0NCgkJfSk7DQoJfSwNCg0KCW9wZW46IGZ1bmN0aW9uKCBldmVudCApIHsNCgkJdmFyIHRoYXQgPSB0aGlzLA0KCQkJdGFyZ2V0ID0gJCggZXZlbnQgPyBldmVudC50YXJnZXQgOiB0aGlzLmVsZW1lbnQgKQ0KCQkJCS8vIHdlIG5lZWQgY2xvc2VzdCBoZXJlIGR1ZSB0byBtb3VzZW92ZXIgYnViYmxpbmcsDQoJCQkJLy8gYnV0IGFsd2F5cyBwb2ludGluZyBhdCB0aGUgc2FtZSBldmVudCB0YXJnZXQNCgkJCQkuY2xvc2VzdCggdGhpcy5vcHRpb25zLml0ZW1zICk7DQoNCgkJLy8gTm8gZWxlbWVudCB0byBzaG93IGEgdG9vbHRpcCBmb3Igb3IgdGhlIHRvb2x0aXAgaXMgYWxyZWFkeSBvcGVuDQoJCWlmICggIXRhcmdldC5sZW5ndGggfHwgdGFyZ2V0LmRhdGEoICJ1aS10b29sdGlwLWlkIiApICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJaWYgKCB0YXJnZXQuYXR0ciggInRpdGxlIiApICkgew0KCQkJdGFyZ2V0LmRhdGEoICJ1aS10b29sdGlwLXRpdGxlIiwgdGFyZ2V0LmF0dHIoICJ0aXRsZSIgKSApOw0KCQl9DQoNCgkJdGFyZ2V0LmRhdGEoICJ1aS10b29sdGlwLW9wZW4iLCB0cnVlICk7DQoNCgkJLy8ga2lsbCBwYXJlbnQgdG9vbHRpcHMsIGN1c3RvbSBvciBuYXRpdmUsIGZvciBob3Zlcg0KCQlpZiAoIGV2ZW50ICYmIGV2ZW50LnR5cGUgPT09ICJtb3VzZW92ZXIiICkgew0KCQkJdGFyZ2V0LnBhcmVudHMoKS5lYWNoKGZ1bmN0aW9uKCkgew0KCQkJCXZhciBwYXJlbnQgPSAkKCB0aGlzICksDQoJCQkJCWJsdXJFdmVudDsNCgkJCQlpZiAoIHBhcmVudC5kYXRhKCAidWktdG9vbHRpcC1vcGVuIiApICkgew0KCQkJCQlibHVyRXZlbnQgPSAkLkV2ZW50KCAiYmx1ciIgKTsNCgkJCQkJYmx1ckV2ZW50LnRhcmdldCA9IGJsdXJFdmVudC5jdXJyZW50VGFyZ2V0ID0gdGhpczsNCgkJCQkJdGhhdC5jbG9zZSggYmx1ckV2ZW50LCB0cnVlICk7DQoJCQkJfQ0KCQkJCWlmICggcGFyZW50LmF0dHIoICJ0aXRsZSIgKSApIHsNCgkJCQkJcGFyZW50LnVuaXF1ZUlkKCk7DQoJCQkJCXRoYXQucGFyZW50c1sgdGhpcy5pZCBdID0gew0KCQkJCQkJZWxlbWVudDogdGhpcywNCgkJCQkJCXRpdGxlOiBwYXJlbnQuYXR0ciggInRpdGxlIiApDQoJCQkJCX07DQoJCQkJCXBhcmVudC5hdHRyKCAidGl0bGUiLCAiIiApOw0KCQkJCX0NCgkJCX0pOw0KCQl9DQoNCgkJdGhpcy5fdXBkYXRlQ29udGVudCggdGFyZ2V0LCBldmVudCApOw0KCX0sDQoNCglfdXBkYXRlQ29udGVudDogZnVuY3Rpb24oIHRhcmdldCwgZXZlbnQgKSB7DQoJCXZhciBjb250ZW50LA0KCQkJY29udGVudE9wdGlvbiA9IHRoaXMub3B0aW9ucy5jb250ZW50LA0KCQkJdGhhdCA9IHRoaXMsDQoJCQlldmVudFR5cGUgPSBldmVudCA/IGV2ZW50LnR5cGUgOiBudWxsOw0KDQoJCWlmICggdHlwZW9mIGNvbnRlbnRPcHRpb24gPT09ICJzdHJpbmciICkgew0KCQkJcmV0dXJuIHRoaXMuX29wZW4oIGV2ZW50LCB0YXJnZXQsIGNvbnRlbnRPcHRpb24gKTsNCgkJfQ0KDQoJCWNvbnRlbnQgPSBjb250ZW50T3B0aW9uLmNhbGwoIHRhcmdldFswXSwgZnVuY3Rpb24oIHJlc3BvbnNlICkgew0KCQkJLy8gaWdub3JlIGFzeW5jIHJlc3BvbnNlIGlmIHRvb2x0aXAgd2FzIGNsb3NlZCBhbHJlYWR5DQoJCQlpZiAoICF0YXJnZXQuZGF0YSggInVpLXRvb2x0aXAtb3BlbiIgKSApIHsNCgkJCQlyZXR1cm47DQoJCQl9DQoJCQkvLyBJRSBtYXkgaW5zdGFudGx5IHNlcnZlIGEgY2FjaGVkIHJlc3BvbnNlIGZvciBhamF4IHJlcXVlc3RzDQoJCQkvLyBkZWxheSB0aGlzIGNhbGwgdG8gX29wZW4gc28gdGhlIG90aGVyIGNhbGwgdG8gX29wZW4gcnVucyBmaXJzdA0KCQkJdGhhdC5fZGVsYXkoZnVuY3Rpb24oKSB7DQoJCQkJLy8galF1ZXJ5IGNyZWF0ZXMgYSBzcGVjaWFsIGV2ZW50IGZvciBmb2N1c2luIHdoZW4gaXQgZG9lc24ndA0KCQkJCS8vIGV4aXN0IG5hdGl2ZWx5LiBUbyBpbXByb3ZlIHBlcmZvcm1hbmNlLCB0aGUgbmF0aXZlIGV2ZW50DQoJCQkJLy8gb2JqZWN0IGlzIHJldXNlZCBhbmQgdGhlIHR5cGUgaXMgY2hhbmdlZC4gVGhlcmVmb3JlLCB3ZSBjYW4ndA0KCQkJCS8vIHJlbHkgb24gdGhlIHR5cGUgYmVpbmcgY29ycmVjdCBhZnRlciB0aGUgZXZlbnQgZmluaXNoZWQNCgkJCQkvLyBidWJibGluZywgc28gd2Ugc2V0IGl0IGJhY2sgdG8gdGhlIHByZXZpb3VzIHZhbHVlLiAoIzg3NDApDQoJCQkJaWYgKCBldmVudCApIHsNCgkJCQkJZXZlbnQudHlwZSA9IGV2ZW50VHlwZTsNCgkJCQl9DQoJCQkJdGhpcy5fb3BlbiggZXZlbnQsIHRhcmdldCwgcmVzcG9uc2UgKTsNCgkJCX0pOw0KCQl9KTsNCgkJaWYgKCBjb250ZW50ICkgew0KCQkJdGhpcy5fb3BlbiggZXZlbnQsIHRhcmdldCwgY29udGVudCApOw0KCQl9DQoJfSwNCg0KCV9vcGVuOiBmdW5jdGlvbiggZXZlbnQsIHRhcmdldCwgY29udGVudCApIHsNCgkJdmFyIHRvb2x0aXBEYXRhLCB0b29sdGlwLCBldmVudHMsIGRlbGF5ZWRTaG93LCBhMTF5Q29udGVudCwNCgkJCXBvc2l0aW9uT3B0aW9uID0gJC5leHRlbmQoIHt9LCB0aGlzLm9wdGlvbnMucG9zaXRpb24gKTsNCg0KCQlpZiAoICFjb250ZW50ICkgew0KCQkJcmV0dXJuOw0KCQl9DQoNCgkJLy8gQ29udGVudCBjYW4gYmUgdXBkYXRlZCBtdWx0aXBsZSB0aW1lcy4gSWYgdGhlIHRvb2x0aXAgYWxyZWFkeQ0KCQkvLyBleGlzdHMsIHRoZW4ganVzdCB1cGRhdGUgdGhlIGNvbnRlbnQgYW5kIGJhaWwuDQoJCXRvb2x0aXBEYXRhID0gdGhpcy5fZmluZCggdGFyZ2V0ICk7DQoJCWlmICggdG9vbHRpcERhdGEgKSB7DQoJCQl0b29sdGlwRGF0YS50b29sdGlwLmZpbmQoICIudWktdG9vbHRpcC1jb250ZW50IiApLmh0bWwoIGNvbnRlbnQgKTsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCS8vIGlmIHdlIGhhdmUgYSB0aXRsZSwgY2xlYXIgaXQgdG8gcHJldmVudCB0aGUgbmF0aXZlIHRvb2x0aXANCgkJLy8gd2UgaGF2ZSB0byBjaGVjayBmaXJzdCB0byBhdm9pZCBkZWZpbmluZyBhIHRpdGxlIGlmIG5vbmUgZXhpc3RzDQoJCS8vICh3ZSBkb24ndCB3YW50IHRvIGNhdXNlIGFuIGVsZW1lbnQgdG8gc3RhcnQgbWF0Y2hpbmcgW3RpdGxlXSkNCgkJLy8NCgkJLy8gV2UgdXNlIHJlbW92ZUF0dHIgb25seSBmb3Iga2V5IGV2ZW50cywgdG8gYWxsb3cgSUUgdG8gZXhwb3J0IHRoZSBjb3JyZWN0DQoJCS8vIGFjY2Vzc2libGUgYXR0cmlidXRlcy4gRm9yIG1vdXNlIGV2ZW50cywgc2V0IHRvIGVtcHR5IHN0cmluZyB0byBhdm9pZA0KCQkvLyBuYXRpdmUgdG9vbHRpcCBzaG93aW5nIHVwIChoYXBwZW5zIG9ubHkgd2hlbiByZW1vdmluZyBpbnNpZGUgbW91c2VvdmVyKS4NCgkJaWYgKCB0YXJnZXQuaXMoICJbdGl0bGVdIiApICkgew0KCQkJaWYgKCBldmVudCAmJiBldmVudC50eXBlID09PSAibW91c2VvdmVyIiApIHsNCgkJCQl0YXJnZXQuYXR0ciggInRpdGxlIiwgIiIgKTsNCgkJCX0gZWxzZSB7DQoJCQkJdGFyZ2V0LnJlbW92ZUF0dHIoICJ0aXRsZSIgKTsNCgkJCX0NCgkJfQ0KDQoJCXRvb2x0aXBEYXRhID0gdGhpcy5fdG9vbHRpcCggdGFyZ2V0ICk7DQoJCXRvb2x0aXAgPSB0b29sdGlwRGF0YS50b29sdGlwOw0KCQl0aGlzLl9hZGREZXNjcmliZWRCeSggdGFyZ2V0LCB0b29sdGlwLmF0dHIoICJpZCIgKSApOw0KCQl0b29sdGlwLmZpbmQoICIudWktdG9vbHRpcC1jb250ZW50IiApLmh0bWwoIGNvbnRlbnQgKTsNCg0KCQkvLyBTdXBwb3J0OiBWb2ljZW92ZXIgb24gT1MgWCwgSkFXUyBvbiBJRSA8PSA5DQoJCS8vIEpBV1MgYW5ub3VuY2VzIGRlbGV0aW9ucyBldmVuIHdoZW4gYXJpYS1yZWxldmFudD0iYWRkaXRpb25zIg0KCQkvLyBWb2ljZW92ZXIgd2lsbCBzb21ldGltZXMgcmUtcmVhZCB0aGUgZW50aXJlIGxvZyByZWdpb24ncyBjb250ZW50cyBmcm9tIHRoZSBiZWdpbm5pbmcNCgkJdGhpcy5saXZlUmVnaW9uLmNoaWxkcmVuKCkuaGlkZSgpOw0KCQlpZiAoIGNvbnRlbnQuY2xvbmUgKSB7DQoJCQlhMTF5Q29udGVudCA9IGNvbnRlbnQuY2xvbmUoKTsNCgkJCWExMXlDb250ZW50LnJlbW92ZUF0dHIoICJpZCIgKS5maW5kKCAiW2lkXSIgKS5yZW1vdmVBdHRyKCAiaWQiICk7DQoJCX0gZWxzZSB7DQoJCQlhMTF5Q29udGVudCA9IGNvbnRlbnQ7DQoJCX0NCgkJJCggIjxkaXY+IiApLmh0bWwoIGExMXlDb250ZW50ICkuYXBwZW5kVG8oIHRoaXMubGl2ZVJlZ2lvbiApOw0KDQoJCWZ1bmN0aW9uIHBvc2l0aW9uKCBldmVudCApIHsNCgkJCXBvc2l0aW9uT3B0aW9uLm9mID0gZXZlbnQ7DQoJCQlpZiAoIHRvb2x0aXAuaXMoICI6aGlkZGVuIiApICkgew0KCQkJCXJldHVybjsNCgkJCX0NCgkJCXRvb2x0aXAucG9zaXRpb24oIHBvc2l0aW9uT3B0aW9uICk7DQoJCX0NCgkJaWYgKCB0aGlzLm9wdGlvbnMudHJhY2sgJiYgZXZlbnQgJiYgL15tb3VzZS8udGVzdCggZXZlbnQudHlwZSApICkgew0KCQkJdGhpcy5fb24oIHRoaXMuZG9jdW1lbnQsIHsNCgkJCQltb3VzZW1vdmU6IHBvc2l0aW9uDQoJCQl9KTsNCgkJCS8vIHRyaWdnZXIgb25jZSB0byBvdmVycmlkZSBlbGVtZW50LXJlbGF0aXZlIHBvc2l0aW9uaW5nDQoJCQlwb3NpdGlvbiggZXZlbnQgKTsNCgkJfSBlbHNlIHsNCgkJCXRvb2x0aXAucG9zaXRpb24oICQuZXh0ZW5kKHsNCgkJCQlvZjogdGFyZ2V0DQoJCQl9LCB0aGlzLm9wdGlvbnMucG9zaXRpb24gKSApOw0KCQl9DQoNCgkJdG9vbHRpcC5oaWRlKCk7DQoNCgkJdGhpcy5fc2hvdyggdG9vbHRpcCwgdGhpcy5vcHRpb25zLnNob3cgKTsNCgkJLy8gSGFuZGxlIHRyYWNraW5nIHRvb2x0aXBzIHRoYXQgYXJlIHNob3duIHdpdGggYSBkZWxheSAoIzg2NDQpLiBBcyBzb29uDQoJCS8vIGFzIHRoZSB0b29sdGlwIGlzIHZpc2libGUsIHBvc2l0aW9uIHRoZSB0b29sdGlwIHVzaW5nIHRoZSBtb3N0IHJlY2VudA0KCQkvLyBldmVudC4NCgkJaWYgKCB0aGlzLm9wdGlvbnMuc2hvdyAmJiB0aGlzLm9wdGlvbnMuc2hvdy5kZWxheSApIHsNCgkJCWRlbGF5ZWRTaG93ID0gdGhpcy5kZWxheWVkU2hvdyA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkgew0KCQkJCWlmICggdG9vbHRpcC5pcyggIjp2aXNpYmxlIiApICkgew0KCQkJCQlwb3NpdGlvbiggcG9zaXRpb25PcHRpb24ub2YgKTsNCgkJCQkJY2xlYXJJbnRlcnZhbCggZGVsYXllZFNob3cgKTsNCgkJCQl9DQoJCQl9LCAkLmZ4LmludGVydmFsICk7DQoJCX0NCg0KCQl0aGlzLl90cmlnZ2VyKCAib3BlbiIsIGV2ZW50LCB7IHRvb2x0aXA6IHRvb2x0aXAgfSApOw0KDQoJCWV2ZW50cyA9IHsNCgkJCWtleXVwOiBmdW5jdGlvbiggZXZlbnQgKSB7DQoJCQkJaWYgKCBldmVudC5rZXlDb2RlID09PSAkLnVpLmtleUNvZGUuRVNDQVBFICkgew0KCQkJCQl2YXIgZmFrZUV2ZW50ID0gJC5FdmVudChldmVudCk7DQoJCQkJCWZha2VFdmVudC5jdXJyZW50VGFyZ2V0ID0gdGFyZ2V0WzBdOw0KCQkJCQl0aGlzLmNsb3NlKCBmYWtlRXZlbnQsIHRydWUgKTsNCgkJCQl9DQoJCQl9DQoJCX07DQoNCgkJLy8gT25seSBiaW5kIHJlbW92ZSBoYW5kbGVyIGZvciBkZWxlZ2F0ZWQgdGFyZ2V0cy4gTm9uLWRlbGVnYXRlZA0KCQkvLyB0b29sdGlwcyB3aWxsIGhhbmRsZSB0aGlzIGluIGRlc3Ryb3kuDQoJCWlmICggdGFyZ2V0WyAwIF0gIT09IHRoaXMuZWxlbWVudFsgMCBdICkgew0KCQkJZXZlbnRzLnJlbW92ZSA9IGZ1bmN0aW9uKCkgew0KCQkJCXRoaXMuX3JlbW92ZVRvb2x0aXAoIHRvb2x0aXAgKTsNCgkJCX07DQoJCX0NCg0KCQlpZiAoICFldmVudCB8fCBldmVudC50eXBlID09PSAibW91c2VvdmVyIiApIHsNCgkJCWV2ZW50cy5tb3VzZWxlYXZlID0gImNsb3NlIjsNCgkJfQ0KCQlpZiAoICFldmVudCB8fCBldmVudC50eXBlID09PSAiZm9jdXNpbiIgKSB7DQoJCQlldmVudHMuZm9jdXNvdXQgPSAiY2xvc2UiOw0KCQl9DQoJCXRoaXMuX29uKCB0cnVlLCB0YXJnZXQsIGV2ZW50cyApOw0KCX0sDQoNCgljbG9zZTogZnVuY3Rpb24oIGV2ZW50ICkgew0KCQl2YXIgdG9vbHRpcCwNCgkJCXRoYXQgPSB0aGlzLA0KCQkJdGFyZ2V0ID0gJCggZXZlbnQgPyBldmVudC5jdXJyZW50VGFyZ2V0IDogdGhpcy5lbGVtZW50ICksDQoJCQl0b29sdGlwRGF0YSA9IHRoaXMuX2ZpbmQoIHRhcmdldCApOw0KDQoJCS8vIFRoZSB0b29sdGlwIG1heSBhbHJlYWR5IGJlIGNsb3NlZA0KCQlpZiAoICF0b29sdGlwRGF0YSApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCXRvb2x0aXAgPSB0b29sdGlwRGF0YS50b29sdGlwOw0KDQoJCS8vIGRpc2FibGluZyBjbG9zZXMgdGhlIHRvb2x0aXAsIHNvIHdlIG5lZWQgdG8gdHJhY2sgd2hlbiB3ZSdyZSBjbG9zaW5nDQoJCS8vIHRvIGF2b2lkIGFuIGluZmluaXRlIGxvb3AgaW4gY2FzZSB0aGUgdG9vbHRpcCBiZWNvbWVzIGRpc2FibGVkIG9uIGNsb3NlDQoJCWlmICggdG9vbHRpcERhdGEuY2xvc2luZyApIHsNCgkJCXJldHVybjsNCgkJfQ0KDQoJCS8vIENsZWFyIHRoZSBpbnRlcnZhbCBmb3IgZGVsYXllZCB0cmFja2luZyB0b29sdGlwcw0KCQljbGVhckludGVydmFsKCB0aGlzLmRlbGF5ZWRTaG93ICk7DQoNCgkJLy8gb25seSBzZXQgdGl0bGUgaWYgd2UgaGFkIG9uZSBiZWZvcmUgKHNlZSBjb21tZW50IGluIF9vcGVuKCkpDQoJCS8vIElmIHRoZSB0aXRsZSBhdHRyaWJ1dGUgaGFzIGNoYW5nZWQgc2luY2Ugb3BlbigpLCBkb24ndCByZXN0b3JlDQoJCWlmICggdGFyZ2V0LmRhdGEoICJ1aS10b29sdGlwLXRpdGxlIiApICYmICF0YXJnZXQuYXR0ciggInRpdGxlIiApICkgew0KCQkJdGFyZ2V0LmF0dHIoICJ0aXRsZSIsIHRhcmdldC5kYXRhKCAidWktdG9vbHRpcC10aXRsZSIgKSApOw0KCQl9DQoNCgkJdGhpcy5fcmVtb3ZlRGVzY3JpYmVkQnkoIHRhcmdldCApOw0KDQoJCXRvb2x0aXBEYXRhLmhpZGluZyA9IHRydWU7DQoJCXRvb2x0aXAuc3RvcCggdHJ1ZSApOw0KCQl0aGlzLl9oaWRlKCB0b29sdGlwLCB0aGlzLm9wdGlvbnMuaGlkZSwgZnVuY3Rpb24oKSB7DQoJCQl0aGF0Ll9yZW1vdmVUb29sdGlwKCAkKCB0aGlzICkgKTsNCgkJfSk7DQoNCgkJdGFyZ2V0LnJlbW92ZURhdGEoICJ1aS10b29sdGlwLW9wZW4iICk7DQoJCXRoaXMuX29mZiggdGFyZ2V0LCAibW91c2VsZWF2ZSBmb2N1c291dCBrZXl1cCIgKTsNCg0KCQkvLyBSZW1vdmUgJ3JlbW92ZScgYmluZGluZyBvbmx5IG9uIGRlbGVnYXRlZCB0YXJnZXRzDQoJCWlmICggdGFyZ2V0WyAwIF0gIT09IHRoaXMuZWxlbWVudFsgMCBdICkgew0KCQkJdGhpcy5fb2ZmKCB0YXJnZXQsICJyZW1vdmUiICk7DQoJCX0NCgkJdGhpcy5fb2ZmKCB0aGlzLmRvY3VtZW50LCAibW91c2Vtb3ZlIiApOw0KDQoJCWlmICggZXZlbnQgJiYgZXZlbnQudHlwZSA9PT0gIm1vdXNlbGVhdmUiICkgew0KCQkJJC5lYWNoKCB0aGlzLnBhcmVudHMsIGZ1bmN0aW9uKCBpZCwgcGFyZW50ICkgew0KCQkJCSQoIHBhcmVudC5lbGVtZW50ICkuYXR0ciggInRpdGxlIiwgcGFyZW50LnRpdGxlICk7DQoJCQkJZGVsZXRlIHRoYXQucGFyZW50c1sgaWQgXTsNCgkJCX0pOw0KCQl9DQoNCgkJdG9vbHRpcERhdGEuY2xvc2luZyA9IHRydWU7DQoJCXRoaXMuX3RyaWdnZXIoICJjbG9zZSIsIGV2ZW50LCB7IHRvb2x0aXA6IHRvb2x0aXAgfSApOw0KCQlpZiAoICF0b29sdGlwRGF0YS5oaWRpbmcgKSB7DQoJCQl0b29sdGlwRGF0YS5jbG9zaW5nID0gZmFsc2U7DQoJCX0NCgl9LA0KDQoJX3Rvb2x0aXA6IGZ1bmN0aW9uKCBlbGVtZW50ICkgew0KCQl2YXIgdG9vbHRpcCA9ICQoICI8ZGl2PiIgKQ0KCQkJCS5hdHRyKCAicm9sZSIsICJ0b29sdGlwIiApDQoJCQkJLmFkZENsYXNzKCAidWktdG9vbHRpcCB1aS13aWRnZXQgdWktY29ybmVyLWFsbCB1aS13aWRnZXQtY29udGVudCAiICsNCgkJCQkJKCB0aGlzLm9wdGlvbnMudG9vbHRpcENsYXNzIHx8ICIiICkgKSwNCgkJCWlkID0gdG9vbHRpcC51bmlxdWVJZCgpLmF0dHIoICJpZCIgKTsNCg0KCQkkKCAiPGRpdj4iICkNCgkJCS5hZGRDbGFzcyggInVpLXRvb2x0aXAtY29udGVudCIgKQ0KCQkJLmFwcGVuZFRvKCB0b29sdGlwICk7DQoNCgkJdG9vbHRpcC5hcHBlbmRUbyggdGhpcy5kb2N1bWVudFswXS5ib2R5ICk7DQoNCgkJcmV0dXJuIHRoaXMudG9vbHRpcHNbIGlkIF0gPSB7DQoJCQllbGVtZW50OiBlbGVtZW50LA0KCQkJdG9vbHRpcDogdG9vbHRpcA0KCQl9Ow0KCX0sDQoNCglfZmluZDogZnVuY3Rpb24oIHRhcmdldCApIHsNCgkJdmFyIGlkID0gdGFyZ2V0LmRhdGEoICJ1aS10b29sdGlwLWlkIiApOw0KCQlyZXR1cm4gaWQgPyB0aGlzLnRvb2x0aXBzWyBpZCBdIDogbnVsbDsNCgl9LA0KDQoJX3JlbW92ZVRvb2x0aXA6IGZ1bmN0aW9uKCB0b29sdGlwICkgew0KCQl0b29sdGlwLnJlbW92ZSgpOw0KCQlkZWxldGUgdGhpcy50b29sdGlwc1sgdG9vbHRpcC5hdHRyKCAiaWQiICkgXTsNCgl9LA0KDQoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgew0KCQl2YXIgdGhhdCA9IHRoaXM7DQoNCgkJLy8gY2xvc2Ugb3BlbiB0b29sdGlwcw0KCQkkLmVhY2goIHRoaXMudG9vbHRpcHMsIGZ1bmN0aW9uKCBpZCwgdG9vbHRpcERhdGEgKSB7DQoJCQkvLyBEZWxlZ2F0ZSB0byBjbG9zZSBtZXRob2QgdG8gaGFuZGxlIGNvbW1vbiBjbGVhbnVwDQoJCQl2YXIgZXZlbnQgPSAkLkV2ZW50KCAiYmx1ciIgKSwNCgkJCQllbGVtZW50ID0gdG9vbHRpcERhdGEuZWxlbWVudDsNCgkJCWV2ZW50LnRhcmdldCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQgPSBlbGVtZW50WyAwIF07DQoJCQl0aGF0LmNsb3NlKCBldmVudCwgdHJ1ZSApOw0KDQoJCQkvLyBSZW1vdmUgaW1tZWRpYXRlbHk7IGRlc3Ryb3lpbmcgYW4gb3BlbiB0b29sdGlwIGRvZXNuJ3QgdXNlIHRoZQ0KCQkJLy8gaGlkZSBhbmltYXRpb24NCgkJCSQoICIjIiArIGlkICkucmVtb3ZlKCk7DQoNCgkJCS8vIFJlc3RvcmUgdGhlIHRpdGxlDQoJCQlpZiAoIGVsZW1lbnQuZGF0YSggInVpLXRvb2x0aXAtdGl0bGUiICkgKSB7DQoJCQkJLy8gSWYgdGhlIHRpdGxlIGF0dHJpYnV0ZSBoYXMgY2hhbmdlZCBzaW5jZSBvcGVuKCksIGRvbid0IHJlc3RvcmUNCgkJCQlpZiAoICFlbGVtZW50LmF0dHIoICJ0aXRsZSIgKSApIHsNCgkJCQkJZWxlbWVudC5hdHRyKCAidGl0bGUiLCBlbGVtZW50LmRhdGEoICJ1aS10b29sdGlwLXRpdGxlIiApICk7DQoJCQkJfQ0KCQkJCWVsZW1lbnQucmVtb3ZlRGF0YSggInVpLXRvb2x0aXAtdGl0bGUiICk7DQoJCQl9DQoJCX0pOw0KCQl0aGlzLmxpdmVSZWdpb24ucmVtb3ZlKCk7DQoJfQ0KfSk7DQoNCg0KDQp9KSk7
- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 485937
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: "application/x-javascript"
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: js
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20220811T071626Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\Admin
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\Admin
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "6d90e95d-4be3-4675-adcf-f1c1194e3454"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\Admin
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20220811T071626Z
